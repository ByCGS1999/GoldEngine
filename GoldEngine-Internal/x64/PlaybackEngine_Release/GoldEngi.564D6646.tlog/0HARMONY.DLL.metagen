  exhelper_linux_x86_64.so - Embedded, ContainedInManifestFile, 
  exhelper_macos_x86_64.dylib - Embedded, ContainedInManifestFile, 
  FxResources.System.ValueTuple.SR.resources - Embedded, ContainedInManifestFile, 
  ILRepack.List - Embedded, ContainedInManifestFile, 
ImageRuntimeVersion: v4.0.30319
Assembly 0Harmony, Version=2.3.*, Culture=Todos los idiomas (todos los pa√≠ses): 
	hash=SHA1, flags=PublicKey
Assembly mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089: 
	hash=None, flags=None
Assembly System.Core, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089: 
	hash=None, flags=None
Assembly System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089: 
	hash=None, flags=None
Class Microsoft.CodeAnalysis.EmbeddedAttribute: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :System.Attribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class System.Runtime.CompilerServices.RefSafetyRulesAttribute: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :System.Attribute
    Void .ctor(Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int32 Version : Public, InitOnly
Class HarmonyLib.DelegateTypeFactory: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    CreateDelegateType(MethodInfo): PrivateScope, Public, HideBySig
Class HarmonyLib.GetterHandler`2[T,S]: AutoLayout, AnsiClass, Class, Public, Sealed (Obsolete)
  Type parameter: T,  Contravariant
  Type parameter: S,  Covariant
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(T): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(T, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class HarmonyLib.SetterHandler`2[T,S]: AutoLayout, AnsiClass, Class, Public, Sealed (Obsolete)
  Type parameter: T,  Contravariant
  Type parameter: S,  Contravariant
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(T, S): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(T, S, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class HarmonyLib.InstantiationHandler`1[T]: AutoLayout, AnsiClass, Class, Public, Sealed
  Type parameter: T,  Covariant
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class HarmonyLib.FastAccess: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit
  Methods:
    CreateInstantiationHandler(): PrivateScope, Public, Static, HideBySig
    CreateGetterHandler(PropertyInfo): PrivateScope, Public, Static, HideBySig (Obsolete)
    CreateGetterHandler(FieldInfo): PrivateScope, Public, Static, HideBySig (Obsolete)
    CreateFieldGetter(String[]): PrivateScope, Public, Static, HideBySig (Obsolete)
    CreateSetterHandler(PropertyInfo): PrivateScope, Public, Static, HideBySig (Obsolete)
    CreateSetterHandler(FieldInfo): PrivateScope, Public, Static, HideBySig (Obsolete)
Class HarmonyLib.FastInvokeHandler: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(Object, Object[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(Object, Object[], AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class HarmonyLib.MethodInvoker: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit
  Methods:
    GetHandler(MethodInfo, Boolean(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    Emit(ILGenerator, OpCode): PrivateScope, Assembly, Static, HideBySig
    Emit(ILGenerator, OpCode, Type): PrivateScope, Assembly, Static, HideBySig
    EmitCall(ILGenerator, OpCode, MethodInfo): PrivateScope, Assembly, Static, HideBySig
    EmitFastInt(ILGenerator, Int32): PrivateScope, Assembly, Static, HideBySig
Class HarmonyLib.RefResult`1[T]: AutoLayout, AnsiClass, Class, Public, Sealed
  Type parameter: T
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class HarmonyLib.AccessCache: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    GetFieldInfo(Type, String, MemberType(Optional, HasDefault), Boolean(Optional, HasDefault)): PrivateScope, Assembly, HideBySig
    GetPropertyInfo(Type, String, MemberType(Optional, HasDefault), Boolean(Optional, HasDefault)): PrivateScope, Assembly, HideBySig
    GetMethodInfo(Type, String, Type[], MemberType(Optional, HasDefault), Boolean(Optional, HasDefault)): PrivateScope, Assembly, HideBySig
Struct HarmonyLib.AccessCache+MemberType: AutoLayout, AnsiClass, Class, NestedAssembly, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    MemberType Any = 0 : Public, Static, Literal, HasDefault
    MemberType Static = 1 : Public, Static, Literal, HasDefault
    MemberType Instance = 2 : Public, Static, Literal, HasDefault
Class HarmonyLib.ByteBuffer: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(Byte[]): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Fields:
    Byte[] buffer : Assembly
    Int32 position : Assembly
  Methods:
    ReadByte(): PrivateScope, Assembly, HideBySig
    ReadBytes(Int32): PrivateScope, Assembly, HideBySig
    ReadInt16(): PrivateScope, Assembly, HideBySig
    ReadInt32(): PrivateScope, Assembly, HideBySig
    ReadInt64(): PrivateScope, Assembly, HideBySig
    ReadSingle(): PrivateScope, Assembly, HideBySig
    ReadDouble(): PrivateScope, Assembly, HideBySig
Class HarmonyLib.CodeTranspiler: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(System.Collections.Generic.List`1[HarmonyLib.ILInstruction]): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Methods:
    Add(MethodInfo): PrivateScope, Assembly, HideBySig
    ConvertInstruction(Type, Object, Dictionary`2&(Out)): PrivateScope, Assembly, Static, HideBySig
    ShouldAddExceptionInfo(Object, Int32, List`1, List`1, Dictionary`2): PrivateScope, Assembly, Static, HideBySig
    ConvertInstructionsAndUnassignedValues(Type, IEnumerable, Dictionary`2&(Out)): PrivateScope, Assembly, Static, HideBySig
    ConvertToOurInstructions(IEnumerable, Type, List`1, Dictionary`2): PrivateScope, Assembly, Static, HideBySig
    ConvertToGeneralInstructions(MethodInfo, IEnumerable, Dictionary`2&(Out)): PrivateScope, Assembly, Static, HideBySig
    GetTranspilerCallParameters(ILGenerator, MethodInfo, MethodBase, IEnumerable): PrivateScope, Assembly, Static, HideBySig
    GetResult(ILGenerator, MethodBase): PrivateScope, Assembly, HideBySig
Class HarmonyLib.LeaveTry: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    ToString(): PrivateScope, Public, Virtual, HideBySig
Class HarmonyLib.Emitter: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(System.Reflection.Emit.ILGenerator, Boolean): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Methods:
    GetInstructions(): PrivateScope, Assembly, HideBySig
    AddInstruction(OpCode, Object): PrivateScope, Assembly, HideBySig
    CurrentPos(): PrivateScope, Assembly, HideBySig
    CodePos(Int32): PrivateScope, Assembly, Static, HideBySig
    CodePos(): PrivateScope, Assembly, HideBySig
    LogComment(String): PrivateScope, Assembly, HideBySig
    LogIL(OpCode): PrivateScope, Assembly, HideBySig
    LogIL(OpCode, Object, String(Optional, HasDefault)): PrivateScope, Assembly, HideBySig
    LogAllLocalVariables(): PrivateScope, Assembly, HideBySig
    FormatArgument(Object, String(Optional, HasDefault)): PrivateScope, Assembly, Static, HideBySig
    MarkLabel(Label): PrivateScope, Assembly, HideBySig
    MarkBlockBefore(ExceptionBlock, Nullable`1&(Out)): PrivateScope, Assembly, HideBySig
    MarkBlockAfter(ExceptionBlock): PrivateScope, Assembly, HideBySig
    Emit(OpCode): PrivateScope, Assembly, HideBySig
    Emit(OpCode, LocalBuilder): PrivateScope, Assembly, HideBySig
    Emit(OpCode, FieldInfo): PrivateScope, Assembly, HideBySig
    Emit(OpCode, Label[]): PrivateScope, Assembly, HideBySig
    Emit(OpCode, Label): PrivateScope, Assembly, HideBySig
    Emit(OpCode, String): PrivateScope, Assembly, HideBySig
    Emit(OpCode, Single): PrivateScope, Assembly, HideBySig
    Emit(OpCode, Byte): PrivateScope, Assembly, HideBySig
    Emit(OpCode, SByte): PrivateScope, Assembly, HideBySig
    Emit(OpCode, Double): PrivateScope, Assembly, HideBySig
    Emit(OpCode, Int32): PrivateScope, Assembly, HideBySig
    Emit(OpCode, MethodInfo): PrivateScope, Assembly, HideBySig
    Emit(OpCode, Int16): PrivateScope, Assembly, HideBySig
    Emit(OpCode, SignatureHelper): PrivateScope, Assembly, HideBySig
    Emit(OpCode, ConstructorInfo): PrivateScope, Assembly, HideBySig
    Emit(OpCode, Type): PrivateScope, Assembly, HideBySig
    Emit(OpCode, Int64): PrivateScope, Assembly, HideBySig
    EmitCall(OpCode, MethodInfo, Type[]): PrivateScope, Assembly, HideBySig
    EmitCalli(OpCode, CallingConvention, Type, Type[]): PrivateScope, Assembly, HideBySig
    EmitCalli(OpCode, CallingConventions, Type, Type[], Type[]): PrivateScope, Assembly, HideBySig
Class HarmonyLib.HarmonySharedState: AutoLayout, AnsiClass, Class, Abstract, Sealed
  Fields:
    Int32 actualVersion : Assembly, Static, InitOnly
    Int32 internalVersion = 102 : Assembly, Static, Literal, HasDefault
  Methods:
    GetPatchInfo(MethodBase): PrivateScope, Assembly, Static, HideBySig
    GetPatchedMethods(): PrivateScope, Assembly, Static, HideBySig
    UpdatePatchInfo(MethodBase, MethodInfo, PatchInfo): PrivateScope, Assembly, Static, HideBySig
    GetRealMethod(MethodInfo, Boolean): PrivateScope, Assembly, Static, HideBySig
    GetStackFrameMethod(StackFrame, Boolean): PrivateScope, Assembly, Static, HideBySig
Class HarmonyLib.ILInstruction: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(System.Reflection.Emit.OpCode, System.Object): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int32 offset : Assembly
    System.Reflection.Emit.OpCode opcode : Assembly
    System.Object operand : Assembly
    System.Object argument : Assembly
    System.Collections.Generic.List`1[System.Reflection.Emit.Label] labels : Assembly
    System.Collections.Generic.List`1[HarmonyLib.ExceptionBlock] blocks : Assembly
  Methods:
    GetCodeInstruction(): PrivateScope, Assembly, HideBySig
    GetSize(): PrivateScope, Assembly, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
Class HarmonyLib.InlineSignatureParser: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Methods:
    ImportCallSite(Module, Byte[]): PrivateScope, Assembly, Static, HideBySig
Class HarmonyLib.MethodCopier: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(System.Reflection.MethodBase, System.Reflection.Emit.ILGenerator, System.Reflection.Emit.LocalBuilder[]): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Methods:
    SetDebugging(Boolean): PrivateScope, Assembly, HideBySig
    AddTranspiler(MethodInfo): PrivateScope, Assembly, HideBySig
    Finalize(Emitter, List`1, Boolean&(Out), Boolean&(Out)): PrivateScope, Assembly, HideBySig
    GetInstructions(ILGenerator, MethodBase, Int32): PrivateScope, Assembly, Static, HideBySig
Class HarmonyLib.MethodBodyReader: NotPublic
    Void .ctor(System.Reflection.MethodBase, System.Reflection.Emit.ILGenerator): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Methods:
    GetInstructions(ILGenerator, MethodBase): PrivateScope, Assembly, Static, HideBySig
    SetDebugging(Boolean): PrivateScope, Assembly, HideBySig
    GenerateInstructions(): PrivateScope, Assembly, HideBySig
    HandleNativeMethod(): PrivateScope, Assembly, HideBySig
    DeclareVariables(LocalBuilder[]): PrivateScope, Assembly, HideBySig
    FinalizeILCodes(Emitter, List`1, List`1, Boolean&(Out), Boolean&(Out)): PrivateScope, Assembly, HideBySig
Class HarmonyLib.MethodPatcher: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(System.Reflection.MethodBase, System.Reflection.MethodBase, System.Collections.Generic.List`1[System.Reflection.MethodInfo], System.Collections.Generic.List`1[System.Reflection.MethodInfo], System.Collections.Generic.List`1[System.Reflection.MethodInfo], System.Collections.Generic.List`1[System.Reflection.MethodInfo], Boolean): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Methods:
    CreateReplacement(Dictionary`2&(Out)): PrivateScope, Assembly, HideBySig
    CreateDynamicMethod(MethodBase, String, Boolean): PrivateScope, Assembly, Static, HideBySig
    DeclareOriginalLocalVariables(ILGenerator, MethodBase): PrivateScope, Assembly, Static, HideBySig
Class HarmonyLib.PatchArgumentExtensions: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Methods:
    GetArgumentIndex(MethodInfo, String[], ParameterInfo): PrivateScope, Assembly, Static, HideBySig
Class HarmonyLib.PatchFunctions: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Methods:
    GetSortedPatchMethods(MethodBase, Patch[], Boolean): PrivateScope, Assembly, Static, HideBySig
    UpdateWrapper(MethodBase, PatchInfo): PrivateScope, Assembly, Static, HideBySig
    ReversePatch(HarmonyMethod, MethodBase, MethodInfo): PrivateScope, Assembly, Static, HideBySig
Class HarmonyLib.PatchJobs`1[T]: AutoLayout, AnsiClass, Class, BeforeFieldInit
  Type parameter: T
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    System.Collections.Generic.Dictionary`2[System.Reflection.MethodBase,HarmonyLib.PatchJobs`1+Job[T]] state : Assembly
  Methods:
    GetJob(MethodBase): PrivateScope, Assembly, HideBySig
    GetJobs(): PrivateScope, Assembly, HideBySig
    GetReplacements(): PrivateScope, Assembly, HideBySig
Class HarmonyLib.PatchJobs`1+Job[T]: AutoLayout, AnsiClass, Class, NestedAssembly, BeforeFieldInit
  Type parameter: T
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    System.Reflection.MethodBase original : Assembly
    T replacement : Assembly
    System.Collections.Generic.List`1[HarmonyLib.HarmonyMethod] prefixes : Assembly
    System.Collections.Generic.List`1[HarmonyLib.HarmonyMethod] postfixes : Assembly
    System.Collections.Generic.List`1[HarmonyLib.HarmonyMethod] transpilers : Assembly
    System.Collections.Generic.List`1[HarmonyLib.HarmonyMethod] finalizers : Assembly
  Methods:
    AddPatch(AttributePatch): PrivateScope, Assembly, HideBySig
Class HarmonyLib.AttributePatch: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    HarmonyLib.HarmonyMethod info : Assembly
    System.Nullable`1[HarmonyLib.HarmonyPatchType] type : Assembly
  Methods:
    Create(MethodInfo): PrivateScope, Assembly, Static, HideBySig
Class HarmonyLib.PatchSorter: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(HarmonyLib.Patch[], Boolean): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Fields:
    HarmonyLib.Patch[] sortedPatchArray : Assembly
  Methods:
    Sort(MethodBase): PrivateScope, Assembly, HideBySig
    ComparePatchLists(Patch[]): PrivateScope, Assembly, HideBySig
Class HarmonyLib.PatchSorter+PatchDetailedComparer: AutoLayout, AnsiClass, Class, NestedAssembly, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Collections.Generic.IEqualityComparer`1[HarmonyLib.Patch]
  Methods:
    Equals(Patch, Patch): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetHashCode(Patch): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class HarmonyLib.PatchTools: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Fields:
    System.String harmonyMethodFullName : Assembly, Static, InitOnly
    System.String harmonyAttributeFullName : Assembly, Static, InitOnly
    System.String harmonyPatchAllFullName : Assembly, Static, InitOnly
    System.Reflection.MethodInfo m_GetExecutingAssemblyReplacementTranspiler : Assembly, Static, InitOnly
    System.Reflection.MethodInfo m_GetExecutingAssembly : Assembly, Static, InitOnly
    System.Reflection.MethodInfo m_GetExecutingAssemblyReplacement : Assembly, Static, InitOnly
  Methods:
    DetourMethod(MethodBase, MethodBase): PrivateScope, Assembly, Static, HideBySig
    GetExecutingAssemblyTranspiler(IEnumerable`1): PrivateScope, Assembly, Static, HideBySig
    CreateMethod(String, Type, List`1, Action`1): PrivateScope, Public, Static, HideBySig
    GetPatchMethod(Type, String): PrivateScope, Assembly, Static, HideBySig
    DefineDynamicAssembly(String): PrivateScope, Assembly, Static, HideBySig
    GetPatchMethods(Type): PrivateScope, Assembly, Static, HideBySig
    GetOriginalMethod(HarmonyMethod): PrivateScope, Assembly, Static, HideBySig
Struct HarmonyLib.MethodType: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    HarmonyLib.MethodType Normal = 0 : Public, Static, Literal, HasDefault
    HarmonyLib.MethodType Getter = 1 : Public, Static, Literal, HasDefault
    HarmonyLib.MethodType Setter = 2 : Public, Static, Literal, HasDefault
    HarmonyLib.MethodType Constructor = 3 : Public, Static, Literal, HasDefault
    HarmonyLib.MethodType StaticConstructor = 4 : Public, Static, Literal, HasDefault
    HarmonyLib.MethodType Enumerator = 5 : Public, Static, Literal, HasDefault
    HarmonyLib.MethodType Async = 6 : Public, Static, Literal, HasDefault
Struct HarmonyLib.ArgumentType: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    HarmonyLib.ArgumentType Normal = 0 : Public, Static, Literal, HasDefault
    HarmonyLib.ArgumentType Ref = 1 : Public, Static, Literal, HasDefault
    HarmonyLib.ArgumentType Out = 2 : Public, Static, Literal, HasDefault
    HarmonyLib.ArgumentType Pointer = 3 : Public, Static, Literal, HasDefault
Struct HarmonyLib.HarmonyPatchType: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    HarmonyLib.HarmonyPatchType All = 0 : Public, Static, Literal, HasDefault
    HarmonyLib.HarmonyPatchType Prefix = 1 : Public, Static, Literal, HasDefault
    HarmonyLib.HarmonyPatchType Postfix = 2 : Public, Static, Literal, HasDefault
    HarmonyLib.HarmonyPatchType Transpiler = 3 : Public, Static, Literal, HasDefault
    HarmonyLib.HarmonyPatchType Finalizer = 4 : Public, Static, Literal, HasDefault
    HarmonyLib.HarmonyPatchType ReversePatch = 5 : Public, Static, Literal, HasDefault
Struct HarmonyLib.HarmonyReversePatchType: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    HarmonyLib.HarmonyReversePatchType Original = 0 : Public, Static, Literal, HasDefault
    HarmonyLib.HarmonyReversePatchType Snapshot = 1 : Public, Static, Literal, HasDefault
Struct HarmonyLib.MethodDispatchType: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    HarmonyLib.MethodDispatchType VirtualCall = 0 : Public, Static, Literal, HasDefault
    HarmonyLib.MethodDispatchType Call = 1 : Public, Static, Literal, HasDefault
Class HarmonyLib.HarmonyAttribute: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.Attribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    HarmonyLib.HarmonyMethod info : Public
Class HarmonyLib.HarmonyPatchCategory: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :HarmonyLib.HarmonyAttribute
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class HarmonyLib.HarmonyPatch: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :HarmonyLib.HarmonyAttribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Type): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Type, System.Type[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Type, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Type, System.String, System.Type[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Type, System.String, System.Type[], HarmonyLib.ArgumentType[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Type, HarmonyLib.MethodType): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Type, HarmonyLib.MethodType, System.Type[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Type, HarmonyLib.MethodType, System.Type[], HarmonyLib.ArgumentType[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Type, System.String, HarmonyLib.MethodType): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Type[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Type[], HarmonyLib.ArgumentType[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, HarmonyLib.MethodType): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(HarmonyLib.MethodType): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(HarmonyLib.MethodType, System.Type[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(HarmonyLib.MethodType, System.Type[], HarmonyLib.ArgumentType[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Type[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Type[], HarmonyLib.ArgumentType[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.String, HarmonyLib.MethodType): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class HarmonyLib.HarmonyDelegate: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :HarmonyLib.HarmonyPatch
    Void .ctor(System.Type): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Type, System.Type[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Type, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Type, System.String, System.Type[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Type, System.String, System.Type[], HarmonyLib.ArgumentType[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Type, HarmonyLib.MethodDispatchType): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Type, HarmonyLib.MethodDispatchType, System.Type[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Type, HarmonyLib.MethodDispatchType, System.Type[], HarmonyLib.ArgumentType[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Type, System.String, HarmonyLib.MethodDispatchType): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Type[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Type[], HarmonyLib.ArgumentType[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, HarmonyLib.MethodDispatchType): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(HarmonyLib.MethodDispatchType): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(HarmonyLib.MethodDispatchType, System.Type[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(HarmonyLib.MethodDispatchType, System.Type[], HarmonyLib.ArgumentType[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Type[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Type[], HarmonyLib.ArgumentType[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class HarmonyLib.HarmonyReversePatch: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :HarmonyLib.HarmonyAttribute
    Void .ctor(HarmonyLib.HarmonyReversePatchType): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class HarmonyLib.HarmonyPatchAll: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :HarmonyLib.HarmonyAttribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class HarmonyLib.HarmonyPriority: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :HarmonyLib.HarmonyAttribute
    Void .ctor(Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class HarmonyLib.HarmonyBefore: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :HarmonyLib.HarmonyAttribute
    Void .ctor(System.String[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class HarmonyLib.HarmonyAfter: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :HarmonyLib.HarmonyAttribute
    Void .ctor(System.String[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class HarmonyLib.HarmonyDebug: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :HarmonyLib.HarmonyAttribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class HarmonyLib.HarmonyPrepare: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.Attribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class HarmonyLib.HarmonyCleanup: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.Attribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class HarmonyLib.HarmonyTargetMethod: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.Attribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class HarmonyLib.HarmonyTargetMethods: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.Attribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class HarmonyLib.HarmonyPrefix: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.Attribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class HarmonyLib.HarmonyPostfix: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.Attribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class HarmonyLib.HarmonyTranspiler: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.Attribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class HarmonyLib.HarmonyFinalizer: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.Attribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class HarmonyLib.HarmonyArgument: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.Attribute
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String OriginalName 'get set' : 
    Int32 Index 'get set' : 
    System.String NewName 'get set' : 
  Methods:
    get_OriginalName(): PrivateScope, Public, HideBySig, SpecialName
    get_Index(): PrivateScope, Public, HideBySig, SpecialName
    get_NewName(): PrivateScope, Public, HideBySig, SpecialName
Class HarmonyLib.CodeInstruction: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Reflection.Emit.OpCode, System.Object): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(HarmonyLib.CodeInstruction): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    System.Reflection.Emit.OpCode opcode : Public
    System.Object operand : Public
    System.Collections.Generic.List`1[System.Reflection.Emit.Label] labels : Public
    System.Collections.Generic.List`1[HarmonyLib.ExceptionBlock] blocks : Public
  Methods:
    Clone(): PrivateScope, Public, HideBySig
    Clone(OpCode): PrivateScope, Public, HideBySig
    Clone(Object): PrivateScope, Public, HideBySig
    Call(Type, String, Type[](Optional, HasDefault), Type[](Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    Call(String, Type[](Optional, HasDefault), Type[](Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    Call(Expression`1): PrivateScope, Public, Static, HideBySig
    Call(Expression`1): PrivateScope, Public, Static, HideBySig
    Call(Expression`1): PrivateScope, Public, Static, HideBySig
    Call(LambdaExpression): PrivateScope, Public, Static, HideBySig
    CallClosure(T): PrivateScope, Public, Static, HideBySig
    LoadField(Type, String, Boolean(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    StoreField(Type, String): PrivateScope, Public, Static, HideBySig
    LoadLocal(Int32, Boolean(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    StoreLocal(Int32): PrivateScope, Public, Static, HideBySig
    LoadArgument(Int32, Boolean(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    StoreArgument(Int32): PrivateScope, Public, Static, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
Class HarmonyLib.CodeInstruction+State: AutoLayout, AnsiClass, Class, NestedAssembly, Abstract, Sealed, BeforeFieldInit
  Fields:
    System.Collections.Generic.Dictionary`2[System.Int32,System.Delegate] closureCache : Assembly, Static, InitOnly
Struct HarmonyLib.ExceptionBlockType: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    HarmonyLib.ExceptionBlockType BeginExceptionBlock = 0 : Public, Static, Literal, HasDefault
    HarmonyLib.ExceptionBlockType BeginCatchBlock = 1 : Public, Static, Literal, HasDefault
    HarmonyLib.ExceptionBlockType BeginExceptFilterBlock = 2 : Public, Static, Literal, HasDefault
    HarmonyLib.ExceptionBlockType BeginFaultBlock = 3 : Public, Static, Literal, HasDefault
    HarmonyLib.ExceptionBlockType BeginFinallyBlock = 4 : Public, Static, Literal, HasDefault
    HarmonyLib.ExceptionBlockType EndExceptionBlock = 5 : Public, Static, Literal, HasDefault
Class HarmonyLib.ExceptionBlock: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(HarmonyLib.ExceptionBlockType, System.Type): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    HarmonyLib.ExceptionBlockType blockType : Public
    System.Type catchType : Public
Class HarmonyLib.Harmony: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Boolean DEBUG : Public, Static
  Properties:
    System.String Id 'get set' : 
  Methods:
    get_Id(): PrivateScope, Public, HideBySig, SpecialName
    PatchAll(): PrivateScope, Public, HideBySig
    CreateProcessor(MethodBase): PrivateScope, Public, HideBySig
    CreateClassProcessor(Type): PrivateScope, Public, HideBySig
    CreateReversePatcher(MethodBase, HarmonyMethod): PrivateScope, Public, HideBySig
    PatchAll(Assembly): PrivateScope, Public, HideBySig
    PatchAllUncategorized(): PrivateScope, Public, HideBySig
    PatchAllUncategorized(Assembly): PrivateScope, Public, HideBySig
    PatchCategory(String): PrivateScope, Public, HideBySig
    PatchCategory(Assembly, String): PrivateScope, Public, HideBySig
    Patch(MethodBase, HarmonyMethod(Optional, HasDefault), HarmonyMethod(Optional, HasDefault), HarmonyMethod(Optional, HasDefault), HarmonyMethod(Optional, HasDefault)): PrivateScope, Public, HideBySig
    ReversePatch(MethodBase, HarmonyMethod, MethodInfo(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    UnpatchAll(String(Optional, HasDefault)): PrivateScope, Public, HideBySig
    Unpatch(MethodBase, HarmonyPatchType, String(Optional, HasDefault)): PrivateScope, Public, HideBySig
    Unpatch(MethodBase, MethodInfo): PrivateScope, Public, HideBySig
    UnpatchCategory(String): PrivateScope, Public, HideBySig
    UnpatchCategory(Assembly, String): PrivateScope, Public, HideBySig
    HasAnyPatches(String): PrivateScope, Public, Static, HideBySig
    GetPatchInfo(MethodBase): PrivateScope, Public, Static, HideBySig
    GetPatchedMethods(): PrivateScope, Public, HideBySig
    GetAllPatchedMethods(): PrivateScope, Public, Static, HideBySig
    GetOriginalMethod(MethodInfo): PrivateScope, Public, Static, HideBySig
    GetMethodFromStackframe(StackFrame): PrivateScope, Public, Static, HideBySig
    GetOriginalMethodFromStackframe(StackFrame): PrivateScope, Public, Static, HideBySig
    VersionInfo(Version&(Out)): PrivateScope, Public, Static, HideBySig
Class HarmonyLib.HarmonyException: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
  :System.Exception
    Void .ctor(): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Exception): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Exception, System.Collections.Generic.Dictionary`2[System.Int32,HarmonyLib.CodeInstruction], Int32): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Methods:
    Create(Exception, Dictionary`2): PrivateScope, Assembly, Static, HideBySig
    GetInstructionsWithOffsets(): PrivateScope, Public, HideBySig
    GetInstructions(): PrivateScope, Public, HideBySig
    GetErrorOffset(): PrivateScope, Public, HideBySig
    GetErrorIndex(): PrivateScope, Public, HideBySig
Class HarmonyLib.HarmonyMethod: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Reflection.MethodInfo): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Delegate): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Reflection.MethodInfo, Int32, System.String[], System.String[], System.Nullable`1[System.Boolean]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Delegate, Int32, System.String[], System.String[], System.Nullable`1[System.Boolean]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Type, System.String, System.Type[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    System.Reflection.MethodInfo method : Public
    System.String category : Public
    System.Type declaringType : Public
    System.String methodName : Public
    System.Nullable`1[HarmonyLib.MethodType] methodType : Public
    System.Type[] argumentTypes : Public
    Int32 priority : Public
    System.String[] before : Public
    System.String[] after : Public
    System.Nullable`1[HarmonyLib.HarmonyReversePatchType] reversePatchType : Public
    System.Nullable`1[System.Boolean] debug : Public
    Boolean nonVirtualDelegate : Public
  Methods:
    HarmonyFields(): PrivateScope, Public, Static, HideBySig
    Merge(List`1): PrivateScope, Public, Static, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
    Description(): PrivateScope, Assembly, HideBySig
    op_Implicit(MethodInfo): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Implicit(Delegate): PrivateScope, Public, Static, HideBySig, SpecialName
Class HarmonyLib.HarmonyMethodExtensions: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit
  Methods:
    SetValue(Traverse, String, Object): PrivateScope, Assembly, Static, HideBySig
    CopyTo(HarmonyMethod, HarmonyMethod): PrivateScope, Public, Static, HideBySig
    Clone(HarmonyMethod): PrivateScope, Public, Static, HideBySig
    Merge(HarmonyMethod, HarmonyMethod): PrivateScope, Public, Static, HideBySig
    GetFromType(Type): PrivateScope, Public, Static, HideBySig
    GetMergedFromType(Type): PrivateScope, Public, Static, HideBySig
    GetFromMethod(MethodBase): PrivateScope, Public, Static, HideBySig
    GetMergedFromMethod(MethodBase): PrivateScope, Public, Static, HideBySig
Class HarmonyLib.InlineSignature: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    MonoMod.Utils.ICallSiteGenerator
  Properties:
    Boolean HasThis 'get set' : 
    Boolean ExplicitThis 'get set' : 
    System.Runtime.InteropServices.CallingConvention CallingConvention 'get set' : 
    System.Collections.Generic.List`1[System.Object] Parameters 'get set' : 
    System.Object ReturnType 'get set' : 
  Methods:
    get_HasThis(): PrivateScope, Public, HideBySig, SpecialName
    set_HasThis(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_ExplicitThis(): PrivateScope, Public, HideBySig, SpecialName
    set_ExplicitThis(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_CallingConvention(): PrivateScope, Public, HideBySig, SpecialName
    set_CallingConvention(CallingConvention): PrivateScope, Public, HideBySig, SpecialName
    get_Parameters(): PrivateScope, Public, HideBySig, SpecialName
    set_Parameters(List`1): PrivateScope, Public, HideBySig, SpecialName
    get_ReturnType(): PrivateScope, Public, HideBySig, SpecialName
    set_ReturnType(Object): PrivateScope, Public, HideBySig, SpecialName
    ToString(): PrivateScope, Public, Virtual, HideBySig
    GetTypeReference(ModuleDefinition, Object): PrivateScope, Assembly, Static, HideBySig
Class HarmonyLib.InlineSignature+ModifierType: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Boolean IsOptional : Public
    System.Type Modifier : Public
    System.Object Type : Public
  Methods:
    ToString(): PrivateScope, Public, Virtual, HideBySig
    ToTypeReference(ModuleDefinition): PrivateScope, Assembly, HideBySig
Class HarmonyLib.PatchInfoSerialization: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Fields:
    System.Runtime.Serialization.Formatters.Binary.BinaryFormatter binaryFormatter : Assembly, Static, InitOnly
  Methods:
    Serialize(PatchInfo): PrivateScope, Assembly, Static, HideBySig
    Deserialize(Byte[]): PrivateScope, Assembly, Static, HideBySig
    PriorityComparer(Object, Int32, Int32): PrivateScope, Assembly, Static, HideBySig
Class HarmonyLib.PatchInfo: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    HarmonyLib.Patch[] prefixes : Public
    HarmonyLib.Patch[] postfixes : Public
    HarmonyLib.Patch[] transpilers : Public
    HarmonyLib.Patch[] finalizers : Public
  Properties:
    Boolean Debugging 'get ' : 
  Methods:
    get_Debugging(): PrivateScope, Public, HideBySig, SpecialName
    AddPrefixes(String, HarmonyMethod[]): PrivateScope, Assembly, HideBySig
    AddPrefix(MethodInfo, String, Int32, String[], String[], Boolean): PrivateScope, Public, HideBySig (Obsolete)
    RemovePrefix(String): PrivateScope, Public, HideBySig
    AddPostfixes(String, HarmonyMethod[]): PrivateScope, Assembly, HideBySig
    AddPostfix(MethodInfo, String, Int32, String[], String[], Boolean): PrivateScope, Public, HideBySig (Obsolete)
    RemovePostfix(String): PrivateScope, Public, HideBySig
    AddTranspilers(String, HarmonyMethod[]): PrivateScope, Assembly, HideBySig
    AddTranspiler(MethodInfo, String, Int32, String[], String[], Boolean): PrivateScope, Public, HideBySig (Obsolete)
    RemoveTranspiler(String): PrivateScope, Public, HideBySig
    AddFinalizers(String, HarmonyMethod[]): PrivateScope, Assembly, HideBySig
    AddFinalizer(MethodInfo, String, Int32, String[], String[], Boolean): PrivateScope, Public, HideBySig (Obsolete)
    RemoveFinalizer(String): PrivateScope, Public, HideBySig
    RemovePatch(MethodInfo): PrivateScope, Public, HideBySig
Class HarmonyLib.Patch: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
    Void .ctor(System.Reflection.MethodInfo, Int32, System.String, Int32, System.String[], System.String[], Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(HarmonyLib.HarmonyMethod, Int32, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32, System.String, Int32, System.String[], System.String[], Boolean, Int32, System.String): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IComparable
  Fields:
    Int32 index : Public, InitOnly
    System.String owner : Public, InitOnly
    Int32 priority : Public, InitOnly
    System.String[] before : Public, InitOnly
    System.String[] after : Public, InitOnly
    Boolean debug : Public, InitOnly
  Properties:
    System.Reflection.MethodInfo PatchMethod 'get set' : 
  Methods:
    get_PatchMethod(): PrivateScope, Public, HideBySig, SpecialName
    set_PatchMethod(MethodInfo): PrivateScope, Public, HideBySig, SpecialName
    GetMethod(MethodBase): PrivateScope, Public, HideBySig
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    CompareTo(Object): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
Class HarmonyLib.PatchClassProcessor: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(HarmonyLib.Harmony, System.Type): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String Category 'get set' : 
  Methods:
    get_Category(): PrivateScope, Public, HideBySig, SpecialName
    set_Category(String): PrivateScope, Public, HideBySig, SpecialName
    Patch(): PrivateScope, Public, HideBySig
    Unpatch(): PrivateScope, Public, HideBySig
Class HarmonyLib.Patches: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(HarmonyLib.Patch[], HarmonyLib.Patch[], HarmonyLib.Patch[], HarmonyLib.Patch[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    System.Collections.ObjectModel.ReadOnlyCollection`1[HarmonyLib.Patch] Prefixes : Public, InitOnly
    System.Collections.ObjectModel.ReadOnlyCollection`1[HarmonyLib.Patch] Postfixes : Public, InitOnly
    System.Collections.ObjectModel.ReadOnlyCollection`1[HarmonyLib.Patch] Transpilers : Public, InitOnly
    System.Collections.ObjectModel.ReadOnlyCollection`1[HarmonyLib.Patch] Finalizers : Public, InitOnly
  Properties:
    System.Collections.ObjectModel.ReadOnlyCollection`1[System.String] Owners 'get ' : 
  Methods:
    get_Owners(): PrivateScope, Public, HideBySig, SpecialName
Class HarmonyLib.PatchProcessor: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(HarmonyLib.Harmony, System.Reflection.MethodBase): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    System.Object locker : Assembly, Static, InitOnly
  Methods:
    AddPrefix(HarmonyMethod): PrivateScope, Public, HideBySig
    AddPrefix(MethodInfo): PrivateScope, Public, HideBySig
    AddPostfix(HarmonyMethod): PrivateScope, Public, HideBySig
    AddPostfix(MethodInfo): PrivateScope, Public, HideBySig
    AddTranspiler(HarmonyMethod): PrivateScope, Public, HideBySig
    AddTranspiler(MethodInfo): PrivateScope, Public, HideBySig
    AddFinalizer(HarmonyMethod): PrivateScope, Public, HideBySig
    AddFinalizer(MethodInfo): PrivateScope, Public, HideBySig
    GetAllPatchedMethods(): PrivateScope, Public, Static, HideBySig
    Patch(): PrivateScope, Public, HideBySig
    Unpatch(HarmonyPatchType, String): PrivateScope, Public, HideBySig
    Unpatch(MethodInfo): PrivateScope, Public, HideBySig
    GetPatchInfo(MethodBase): PrivateScope, Public, Static, HideBySig
    GetSortedPatchMethods(MethodBase, Patch[]): PrivateScope, Public, Static, HideBySig
    VersionInfo(Version&(Out)): PrivateScope, Public, Static, HideBySig
    CreateILGenerator(): PrivateScope, Public, Static, HideBySig
    CreateILGenerator(MethodBase): PrivateScope, Public, Static, HideBySig
    GetOriginalInstructions(MethodBase, ILGenerator(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    GetOriginalInstructions(MethodBase, ILGenerator&(Out)): PrivateScope, Public, Static, HideBySig
    GetCurrentInstructions(MethodBase, Int32(Optional, HasDefault), ILGenerator(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    GetCurrentInstructions(MethodBase, ILGenerator&(Out), Int32(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    ReadMethodBody(MethodBase): PrivateScope, Public, Static, HideBySig
    ReadMethodBody(MethodBase, ILGenerator): PrivateScope, Public, Static, HideBySig
Class HarmonyLib.Priority: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit
  Fields:
    Int32 Last = 0 : Public, Static, Literal, HasDefault
    Int32 VeryLow = 100 : Public, Static, Literal, HasDefault
    Int32 Low = 200 : Public, Static, Literal, HasDefault
    Int32 LowerThanNormal = 300 : Public, Static, Literal, HasDefault
    Int32 Normal = 400 : Public, Static, Literal, HasDefault
    Int32 HigherThanNormal = 500 : Public, Static, Literal, HasDefault
    Int32 High = 600 : Public, Static, Literal, HasDefault
    Int32 VeryHigh = 700 : Public, Static, Literal, HasDefault
    Int32 First = 800 : Public, Static, Literal, HasDefault
Class HarmonyLib.ReversePatcher: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(HarmonyLib.Harmony, System.Reflection.MethodBase, HarmonyLib.HarmonyMethod): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Patch(HarmonyReversePatchType(Optional, HasDefault)): PrivateScope, Public, HideBySig
    GetTranspiler(MethodInfo): PrivateScope, Assembly, Static, HideBySig
Class HarmonyLib.Transpilers: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit
  Methods:
    MethodReplacer(IEnumerable`1, MethodBase, MethodBase): PrivateScope, Public, Static, HideBySig
    Manipulator(IEnumerable`1, Func`2, Action`1): PrivateScope, Public, Static, HideBySig
    DebugLogger(IEnumerable`1, String): PrivateScope, Public, Static, HideBySig
Class HarmonyLib.AccessTools: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit
  Fields:
    System.Reflection.BindingFlags all : Public, Static, InitOnly
    System.Reflection.BindingFlags allDeclared : Public, Static, InitOnly
  Properties:
    Boolean IsMonoRuntime 'get ' : 
    Boolean IsNetFrameworkRuntime 'get ' : 
    Boolean IsNetCoreRuntime 'get ' : 
  Methods:
    CombinedHashCode(IEnumerable`1): PrivateScope, Public, Static, HideBySig
    AllAssemblies(): PrivateScope, Public, Static, HideBySig
    TypeByName(String): PrivateScope, Public, Static, HideBySig
    GetTypesFromAssembly(Assembly): PrivateScope, Public, Static, HideBySig
    AllTypes(): PrivateScope, Public, Static, HideBySig
    InnerTypes(Type): PrivateScope, Public, Static, HideBySig
    FindIncludingBaseTypes(Type, Func`2): PrivateScope, Public, Static, HideBySig
    FindIncludingInnerTypes(Type, Func`2): PrivateScope, Public, Static, HideBySig
    Identifiable(MethodInfo): PrivateScope, Public, Static, HideBySig
    DeclaredField(Type, String): PrivateScope, Public, Static, HideBySig
    DeclaredField(String): PrivateScope, Public, Static, HideBySig
    Field(Type, String): PrivateScope, Public, Static, HideBySig
    Field(String): PrivateScope, Public, Static, HideBySig
    DeclaredField(Type, Int32): PrivateScope, Public, Static, HideBySig
    DeclaredProperty(Type, String): PrivateScope, Public, Static, HideBySig
    DeclaredProperty(String): PrivateScope, Public, Static, HideBySig
    DeclaredIndexer(Type, Type[](Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    DeclaredPropertyGetter(Type, String): PrivateScope, Public, Static, HideBySig
    DeclaredPropertyGetter(String): PrivateScope, Public, Static, HideBySig
    DeclaredIndexerGetter(Type, Type[](Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    DeclaredPropertySetter(Type, String): PrivateScope, Public, Static, HideBySig
    DeclaredPropertySetter(String): PrivateScope, Public, Static, HideBySig
    DeclaredIndexerSetter(Type, Type[]): PrivateScope, Public, Static, HideBySig
    Property(Type, String): PrivateScope, Public, Static, HideBySig
    Property(String): PrivateScope, Public, Static, HideBySig
    Indexer(Type, Type[](Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    PropertyGetter(Type, String): PrivateScope, Public, Static, HideBySig
    PropertyGetter(String): PrivateScope, Public, Static, HideBySig
    IndexerGetter(Type, Type[](Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    PropertySetter(Type, String): PrivateScope, Public, Static, HideBySig
    PropertySetter(String): PrivateScope, Public, Static, HideBySig
    IndexerSetter(Type, Type[](Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    DeclaredMethod(Type, String, Type[](Optional, HasDefault), Type[](Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    DeclaredMethod(String, Type[](Optional, HasDefault), Type[](Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    Method(Type, String, Type[](Optional, HasDefault), Type[](Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    Method(String, Type[](Optional, HasDefault), Type[](Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    EnumeratorMoveNext(MethodBase): PrivateScope, Public, Static, HideBySig
    AsyncMoveNext(MethodBase): PrivateScope, Public, Static, HideBySig
    GetMethodNames(Type): PrivateScope, Public, Static, HideBySig
    GetMethodNames(Object): PrivateScope, Public, Static, HideBySig
    GetFieldNames(Type): PrivateScope, Public, Static, HideBySig
    GetFieldNames(Object): PrivateScope, Public, Static, HideBySig
    GetPropertyNames(Type): PrivateScope, Public, Static, HideBySig
    GetPropertyNames(Object): PrivateScope, Public, Static, HideBySig
    GetUnderlyingType(MemberInfo): PrivateScope, Public, Static, HideBySig
    IsDeclaredMember(T): PrivateScope, Public, Static, HideBySig
    GetDeclaredMember(T): PrivateScope, Public, Static, HideBySig
    DeclaredConstructor(Type, Type[](Optional, HasDefault), Boolean(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    Constructor(Type, Type[](Optional, HasDefault), Boolean(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    GetDeclaredConstructors(Type, Nullable`1(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    GetDeclaredMethods(Type): PrivateScope, Public, Static, HideBySig
    GetDeclaredProperties(Type): PrivateScope, Public, Static, HideBySig
    GetDeclaredFields(Type): PrivateScope, Public, Static, HideBySig
    GetReturnedType(MethodBase): PrivateScope, Public, Static, HideBySig
    Inner(Type, String): PrivateScope, Public, Static, HideBySig
    FirstInner(Type, Func`2): PrivateScope, Public, Static, HideBySig
    FirstMethod(Type, Func`2): PrivateScope, Public, Static, HideBySig
    FirstConstructor(Type, Func`2): PrivateScope, Public, Static, HideBySig
    FirstProperty(Type, Func`2): PrivateScope, Public, Static, HideBySig
    GetTypes(Object[]): PrivateScope, Public, Static, HideBySig
    ActualParameters(MethodBase, Object[]): PrivateScope, Public, Static, HideBySig
    FieldRefAccess(String): PrivateScope, Public, Static, HideBySig
    FieldRefAccess(T, String): PrivateScope, Public, Static, HideBySig
    FieldRefAccess(Type, String): PrivateScope, Public, Static, HideBySig
    FieldRefAccess(String): PrivateScope, Public, Static, HideBySig
    FieldRefAccess(FieldInfo): PrivateScope, Public, Static, HideBySig
    FieldRefAccess(T, FieldInfo): PrivateScope, Public, Static, HideBySig
    StructFieldRefAccess(String): PrivateScope, Public, Static, HideBySig
    StructFieldRefAccess(T&, String): PrivateScope, Public, Static, HideBySig
    StructFieldRefAccess(FieldInfo): PrivateScope, Public, Static, HideBySig
    StructFieldRefAccess(T&, FieldInfo): PrivateScope, Public, Static, HideBySig
    StaticFieldRefAccess(String): PrivateScope, Public, Static, HideBySig
    StaticFieldRefAccess(Type, String): PrivateScope, Public, Static, HideBySig
    StaticFieldRefAccess(String): PrivateScope, Public, Static, HideBySig
    StaticFieldRefAccess(FieldInfo): PrivateScope, Public, Static, HideBySig
    StaticFieldRefAccess(FieldInfo): PrivateScope, Public, Static, HideBySig
    MethodDelegate(MethodInfo, Object(Optional, HasDefault), Boolean(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    MethodDelegate(String, Object(Optional, HasDefault), Boolean(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    HarmonyDelegate(Object(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    GetOutsideCaller(): PrivateScope, Public, Static, HideBySig
    RethrowException(Exception): PrivateScope, Public, Static, HideBySig
    get_IsMonoRuntime(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_IsNetFrameworkRuntime(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_IsNetCoreRuntime(): PrivateScope, Public, Static, HideBySig, SpecialName
    ThrowMissingMemberException(Type, String[]): PrivateScope, Public, Static, HideBySig
    GetDefaultValue(Type): PrivateScope, Public, Static, HideBySig
    CreateInstance(Type): PrivateScope, Public, Static, HideBySig
    CreateInstance(): PrivateScope, Public, Static, HideBySig
    MakeDeepCopy(Object): PrivateScope, Public, Static, HideBySig
    MakeDeepCopy(Object, T&(Out), Func`4(Optional, HasDefault), String(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    MakeDeepCopy(Object, Type, Func`4(Optional, HasDefault), String(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    IsStruct(Type): PrivateScope, Public, Static, HideBySig
    IsClass(Type): PrivateScope, Public, Static, HideBySig
    IsValue(Type): PrivateScope, Public, Static, HideBySig
    IsInteger(Type): PrivateScope, Public, Static, HideBySig
    IsFloatingPoint(Type): PrivateScope, Public, Static, HideBySig
    IsNumber(Type): PrivateScope, Public, Static, HideBySig
    IsVoid(Type): PrivateScope, Public, Static, HideBySig
    IsOfNullableType(T): PrivateScope, Public, Static, HideBySig
    IsStatic(MemberInfo): PrivateScope, Public, Static, HideBySig
    IsStatic(Type): PrivateScope, Public, Static, HideBySig
    IsStatic(PropertyInfo): PrivateScope, Public, Static, HideBySig
    IsStatic(EventInfo): PrivateScope, Public, Static, HideBySig
Class HarmonyLib.AccessTools+FieldRef`2[T,F]: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  Type parameter: T,  Contravariant
  Type parameter: F
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(T(Optional, HasDefault)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(T, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class HarmonyLib.AccessTools+StructFieldRef`2[T,F]: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  Type parameter: T, System.ValueType,  NotNullableValueType DefaultConstructor
  Type parameter: F
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(T&): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(T&, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(T&, IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class HarmonyLib.AccessTools+FieldRef`1[F]: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  Type parameter: F
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class HarmonyLib.AccessToolsExtensions: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit
  Methods:
    InnerTypes(Type): PrivateScope, Public, Static, HideBySig
    FindIncludingBaseTypes(Type, Func`2): PrivateScope, Public, Static, HideBySig
    FindIncludingInnerTypes(Type, Func`2): PrivateScope, Public, Static, HideBySig
    DeclaredField(Type, String): PrivateScope, Public, Static, HideBySig
    Field(Type, String): PrivateScope, Public, Static, HideBySig
    DeclaredField(Type, Int32): PrivateScope, Public, Static, HideBySig
    DeclaredProperty(Type, String): PrivateScope, Public, Static, HideBySig
    DeclaredIndexer(Type, Type[](Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    DeclaredPropertyGetter(Type, String): PrivateScope, Public, Static, HideBySig
    DeclaredIndexerGetter(Type, Type[](Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    DeclaredPropertySetter(Type, String): PrivateScope, Public, Static, HideBySig
    DeclaredIndexerSetter(Type, Type[]): PrivateScope, Public, Static, HideBySig
    Property(Type, String): PrivateScope, Public, Static, HideBySig
    Indexer(Type, Type[](Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    PropertyGetter(Type, String): PrivateScope, Public, Static, HideBySig
    IndexerGetter(Type, Type[](Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    PropertySetter(Type, String): PrivateScope, Public, Static, HideBySig
    IndexerSetter(Type, Type[](Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    DeclaredMethod(Type, String, Type[](Optional, HasDefault), Type[](Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    Method(Type, String, Type[](Optional, HasDefault), Type[](Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    GetMethodNames(Type): PrivateScope, Public, Static, HideBySig
    GetFieldNames(Type): PrivateScope, Public, Static, HideBySig
    GetPropertyNames(Type): PrivateScope, Public, Static, HideBySig
    DeclaredConstructor(Type, Type[](Optional, HasDefault), Boolean(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    Constructor(Type, Type[](Optional, HasDefault), Boolean(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    GetDeclaredConstructors(Type, Nullable`1(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    GetDeclaredMethods(Type): PrivateScope, Public, Static, HideBySig
    GetDeclaredProperties(Type): PrivateScope, Public, Static, HideBySig
    GetDeclaredFields(Type): PrivateScope, Public, Static, HideBySig
    Inner(Type, String): PrivateScope, Public, Static, HideBySig
    FirstInner(Type, Func`2): PrivateScope, Public, Static, HideBySig
    FirstMethod(Type, Func`2): PrivateScope, Public, Static, HideBySig
    FirstConstructor(Type, Func`2): PrivateScope, Public, Static, HideBySig
    FirstProperty(Type, Func`2): PrivateScope, Public, Static, HideBySig
    FieldRefAccess(Type, String): PrivateScope, Public, Static, HideBySig
    StaticFieldRefAccess(Type, String): PrivateScope, Public, Static, HideBySig
    ThrowMissingMemberException(Type, String[]): PrivateScope, Public, Static, HideBySig
    GetDefaultValue(Type): PrivateScope, Public, Static, HideBySig
    CreateInstance(Type): PrivateScope, Public, Static, HideBySig
    IsStruct(Type): PrivateScope, Public, Static, HideBySig
    IsClass(Type): PrivateScope, Public, Static, HideBySig
    IsValue(Type): PrivateScope, Public, Static, HideBySig
    IsInteger(Type): PrivateScope, Public, Static, HideBySig
    IsFloatingPoint(Type): PrivateScope, Public, Static, HideBySig
    IsNumber(Type): PrivateScope, Public, Static, HideBySig
    IsVoid(Type): PrivateScope, Public, Static, HideBySig
    IsStatic(Type): PrivateScope, Public, Static, HideBySig
Class HarmonyLib.Code: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit
  Properties:
    Operand_ Operand 'get ' : 
    Nop_ Nop   'get ' : 
    Break_ Break 'get ' : 
    Ldarg_0_ Ldarg_0 'get ' : 
    Ldarg_1_ Ldarg_1 'get ' : 
    Ldarg_2_ Ldarg_2 'get ' : 
    Ldarg_3_ Ldarg_3 'get ' : 
    Ldloc_0_ Ldloc_0 'get ' : 
    Ldloc_1_ Ldloc_1 'get ' : 
    Ldloc_2_ Ldloc_2 'get ' : 
    Ldloc_3_ Ldloc_3 'get ' : 
    Stloc_0_ Stloc_0 'get ' : 
    Stloc_1_ Stloc_1 'get ' : 
    Stloc_2_ Stloc_2 'get ' : 
    Stloc_3_ Stloc_3 'get ' : 
    Ldarg_S_ Ldarg_S 'get ' : 
    Ldarga_S_ Ldarga_S 'get ' : 
    Starg_S_ Starg_S 'get ' : 
    Ldloc_S_ Ldloc_S 'get ' : 
    Ldloca_S_ Ldloca_S 'get ' : 
    Stloc_S_ Stloc_S 'get ' : 
    Ldnull_ Ldnull 'get ' : 
    Ldc_I4_M1_ Ldc_I4_M1 'get ' : 
    Ldc_I4_0_ Ldc_I4_0 'get ' : 
    Ldc_I4_1_ Ldc_I4_1 'get ' : 
    Ldc_I4_2_ Ldc_I4_2 'get ' : 
    Ldc_I4_3_ Ldc_I4_3 'get ' : 
    Ldc_I4_4_ Ldc_I4_4 'get ' : 
    Ldc_I4_5_ Ldc_I4_5 'get ' : 
    Ldc_I4_6_ Ldc_I4_6 'get ' : 
    Ldc_I4_7_ Ldc_I4_7 'get ' : 
    Ldc_I4_8_ Ldc_I4_8 'get ' : 
    Ldc_I4_S_ Ldc_I4_S 'get ' : 
    Ldc_I4_ Ldc_I4 'get ' : 
    Ldc_I8_ Ldc_I8 'get ' : 
    Ldc_R4_ Ldc_R4 'get ' : 
    Ldc_R8_ Ldc_R8 'get ' : 
    Dup_ Dup   'get ' : 
    Pop_ Pop   'get ' : 
    Jmp_ Jmp   'get ' : 
    Call_ Call 'get ' : 
    Calli_ Calli 'get ' : 
    Ret_ Ret   'get ' : 
    Br_S_ Br_S 'get ' : 
    Brfalse_S_ Brfalse_S 'get ' : 
    Brtrue_S_ Brtrue_S 'get ' : 
    Beq_S_ Beq_S 'get ' : 
    Bge_S_ Bge_S 'get ' : 
    Bgt_S_ Bgt_S 'get ' : 
    Ble_S_ Ble_S 'get ' : 
    Blt_S_ Blt_S 'get ' : 
    Bne_Un_S_ Bne_Un_S 'get ' : 
    Bge_Un_S_ Bge_Un_S 'get ' : 
    Bgt_Un_S_ Bgt_Un_S 'get ' : 
    Ble_Un_S_ Ble_Un_S 'get ' : 
    Blt_Un_S_ Blt_Un_S 'get ' : 
    Br_ Br     'get ' : 
    Brfalse_ Brfalse 'get ' : 
    Brtrue_ Brtrue 'get ' : 
    Beq_ Beq   'get ' : 
    Bge_ Bge   'get ' : 
    Bgt_ Bgt   'get ' : 
    Ble_ Ble   'get ' : 
    Blt_ Blt   'get ' : 
    Bne_Un_ Bne_Un 'get ' : 
    Bge_Un_ Bge_Un 'get ' : 
    Bgt_Un_ Bgt_Un 'get ' : 
    Ble_Un_ Ble_Un 'get ' : 
    Blt_Un_ Blt_Un 'get ' : 
    Switch_ Switch 'get ' : 
    Ldind_I1_ Ldind_I1 'get ' : 
    Ldind_U1_ Ldind_U1 'get ' : 
    Ldind_I2_ Ldind_I2 'get ' : 
    Ldind_U2_ Ldind_U2 'get ' : 
    Ldind_I4_ Ldind_I4 'get ' : 
    Ldind_U4_ Ldind_U4 'get ' : 
    Ldind_I8_ Ldind_I8 'get ' : 
    Ldind_I_ Ldind_I 'get ' : 
    Ldind_R4_ Ldind_R4 'get ' : 
    Ldind_R8_ Ldind_R8 'get ' : 
    Ldind_Ref_ Ldind_Ref 'get ' : 
    Stind_Ref_ Stind_Ref 'get ' : 
    Stind_I1_ Stind_I1 'get ' : 
    Stind_I2_ Stind_I2 'get ' : 
    Stind_I4_ Stind_I4 'get ' : 
    Stind_I8_ Stind_I8 'get ' : 
    Stind_R4_ Stind_R4 'get ' : 
    Stind_R8_ Stind_R8 'get ' : 
    Add_ Add   'get ' : 
    Sub_ Sub   'get ' : 
    Mul_ Mul   'get ' : 
    Div_ Div   'get ' : 
    Div_Un_ Div_Un 'get ' : 
    Rem_ Rem   'get ' : 
    Rem_Un_ Rem_Un 'get ' : 
    And_ And   'get ' : 
    Or_ Or     'get ' : 
    Xor_ Xor   'get ' : 
    Shl_ Shl   'get ' : 
    Shr_ Shr   'get ' : 
    Shr_Un_ Shr_Un 'get ' : 
    Neg_ Neg   'get ' : 
    Not_ Not   'get ' : 
    Conv_I1_ Conv_I1 'get ' : 
    Conv_I2_ Conv_I2 'get ' : 
    Conv_I4_ Conv_I4 'get ' : 
    Conv_I8_ Conv_I8 'get ' : 
    Conv_R4_ Conv_R4 'get ' : 
    Conv_R8_ Conv_R8 'get ' : 
    Conv_U4_ Conv_U4 'get ' : 
    Conv_U8_ Conv_U8 'get ' : 
    Callvirt_ Callvirt 'get ' : 
    Cpobj_ Cpobj 'get ' : 
    Ldobj_ Ldobj 'get ' : 
    Ldstr_ Ldstr 'get ' : 
    Newobj_ Newobj 'get ' : 
    Castclass_ Castclass 'get ' : 
    Isinst_ Isinst 'get ' : 
    Conv_R_Un_ Conv_R_Un 'get ' : 
    Unbox_ Unbox 'get ' : 
    Throw_ Throw 'get ' : 
    Ldfld_ Ldfld 'get ' : 
    Ldflda_ Ldflda 'get ' : 
    Stfld_ Stfld 'get ' : 
    Ldsfld_ Ldsfld 'get ' : 
    Ldsflda_ Ldsflda 'get ' : 
    Stsfld_ Stsfld 'get ' : 
    Stobj_ Stobj 'get ' : 
    Conv_Ovf_I1_Un_ Conv_Ovf_I1_Un 'get ' : 
    Conv_Ovf_I2_Un_ Conv_Ovf_I2_Un 'get ' : 
    Conv_Ovf_I4_Un_ Conv_Ovf_I4_Un 'get ' : 
    Conv_Ovf_I8_Un_ Conv_Ovf_I8_Un 'get ' : 
    Conv_Ovf_U1_Un_ Conv_Ovf_U1_Un 'get ' : 
    Conv_Ovf_U2_Un_ Conv_Ovf_U2_Un 'get ' : 
    Conv_Ovf_U4_Un_ Conv_Ovf_U4_Un 'get ' : 
    Conv_Ovf_U8_Un_ Conv_Ovf_U8_Un 'get ' : 
    Conv_Ovf_I_Un_ Conv_Ovf_I_Un 'get ' : 
    Conv_Ovf_U_Un_ Conv_Ovf_U_Un 'get ' : 
    Box_ Box   'get ' : 
    Newarr_ Newarr 'get ' : 
    Ldlen_ Ldlen 'get ' : 
    Ldelema_ Ldelema 'get ' : 
    Ldelem_I1_ Ldelem_I1 'get ' : 
    Ldelem_U1_ Ldelem_U1 'get ' : 
    Ldelem_I2_ Ldelem_I2 'get ' : 
    Ldelem_U2_ Ldelem_U2 'get ' : 
    Ldelem_I4_ Ldelem_I4 'get ' : 
    Ldelem_U4_ Ldelem_U4 'get ' : 
    Ldelem_I8_ Ldelem_I8 'get ' : 
    Ldelem_I_ Ldelem_I 'get ' : 
    Ldelem_R4_ Ldelem_R4 'get ' : 
    Ldelem_R8_ Ldelem_R8 'get ' : 
    Ldelem_Ref_ Ldelem_Ref 'get ' : 
    Stelem_I_ Stelem_I 'get ' : 
    Stelem_I1_ Stelem_I1 'get ' : 
    Stelem_I2_ Stelem_I2 'get ' : 
    Stelem_I4_ Stelem_I4 'get ' : 
    Stelem_I8_ Stelem_I8 'get ' : 
    Stelem_R4_ Stelem_R4 'get ' : 
    Stelem_R8_ Stelem_R8 'get ' : 
    Stelem_Ref_ Stelem_Ref 'get ' : 
    Ldelem_ Ldelem 'get ' : 
    Stelem_ Stelem 'get ' : 
    Unbox_Any_ Unbox_Any 'get ' : 
    Conv_Ovf_I1_ Conv_Ovf_I1 'get ' : 
    Conv_Ovf_U1_ Conv_Ovf_U1 'get ' : 
    Conv_Ovf_I2_ Conv_Ovf_I2 'get ' : 
    Conv_Ovf_U2_ Conv_Ovf_U2 'get ' : 
    Conv_Ovf_I4_ Conv_Ovf_I4 'get ' : 
    Conv_Ovf_U4_ Conv_Ovf_U4 'get ' : 
    Conv_Ovf_I8_ Conv_Ovf_I8 'get ' : 
    Conv_Ovf_U8_ Conv_Ovf_U8 'get ' : 
    Refanyval_ Refanyval 'get ' : 
    Ckfinite_ Ckfinite 'get ' : 
    Mkrefany_ Mkrefany 'get ' : 
    Ldtoken_ Ldtoken 'get ' : 
    Conv_U2_ Conv_U2 'get ' : 
    Conv_U1_ Conv_U1 'get ' : 
    Conv_I_ Conv_I 'get ' : 
    Conv_Ovf_I_ Conv_Ovf_I 'get ' : 
    Conv_Ovf_U_ Conv_Ovf_U 'get ' : 
    Add_Ovf_ Add_Ovf 'get ' : 
    Add_Ovf_Un_ Add_Ovf_Un 'get ' : 
    Mul_Ovf_ Mul_Ovf 'get ' : 
    Mul_Ovf_Un_ Mul_Ovf_Un 'get ' : 
    Sub_Ovf_ Sub_Ovf 'get ' : 
    Sub_Ovf_Un_ Sub_Ovf_Un 'get ' : 
    Endfinally_ Endfinally 'get ' : 
    Leave_ Leave 'get ' : 
    Leave_S_ Leave_S 'get ' : 
    Stind_I_ Stind_I 'get ' : 
    Conv_U_ Conv_U 'get ' : 
    Prefix7_ Prefix7 'get ' : 
    Prefix6_ Prefix6 'get ' : 
    Prefix5_ Prefix5 'get ' : 
    Prefix4_ Prefix4 'get ' : 
    Prefix3_ Prefix3 'get ' : 
    Prefix2_ Prefix2 'get ' : 
    Prefix1_ Prefix1 'get ' : 
    Prefixref_ Prefixref 'get ' : 
    Arglist_ Arglist 'get ' : 
    Ceq_ Ceq   'get ' : 
    Cgt_ Cgt   'get ' : 
    Cgt_Un_ Cgt_Un 'get ' : 
    Clt_ Clt   'get ' : 
    Clt_Un_ Clt_Un 'get ' : 
    Ldftn_ Ldftn 'get ' : 
    Ldvirtftn_ Ldvirtftn 'get ' : 
    Ldarg_ Ldarg 'get ' : 
    Ldarga_ Ldarga 'get ' : 
    Starg_ Starg 'get ' : 
    Ldloc_ Ldloc 'get ' : 
    Ldloca_ Ldloca 'get ' : 
    Stloc_ Stloc 'get ' : 
    Localloc_ Localloc 'get ' : 
    Endfilter_ Endfilter 'get ' : 
    Unaligned_ Unaligned 'get ' : 
    Volatile_ Volatile 'get ' : 
    Tailcall_ Tailcall 'get ' : 
    Initobj_ Initobj 'get ' : 
    Constrained_ Constrained 'get ' : 
    Cpblk_ Cpblk 'get ' : 
    Initblk_ Initblk 'get ' : 
    Rethrow_ Rethrow 'get ' : 
    Sizeof_ Sizeof 'get ' : 
    Refanytype_ Refanytype 'get ' : 
    Readonly_ Readonly 'get ' : 
  Methods:
    get_Conv_Ovf_I1_Un(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Conv_Ovf_I2_Un(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Conv_Ovf_I4_Un(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Conv_Ovf_I8_Un(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Conv_Ovf_U1_Un(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Conv_Ovf_U2_Un(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Conv_Ovf_U4_Un(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Conv_Ovf_U8_Un(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Conv_Ovf_I_Un(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Conv_Ovf_U_Un(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Box(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Newarr(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Ldlen(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Ldelema(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Ldelem_I1(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Ldelem_U1(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Ldelem_I2(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Ldelem_U2(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Ldelem_I4(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Ldelem_U4(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Ldelem_I8(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Ldelem_I(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Ldelem_R4(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Ldelem_R8(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Ldelem_Ref(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Stelem_I(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Stelem_I1(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Stelem_I2(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Stelem_I4(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Stelem_I8(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Stelem_R4(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Stelem_R8(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Stelem_Ref(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Ldelem(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Stelem(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Unbox_Any(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Conv_Ovf_I1(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Conv_Ovf_U1(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Conv_Ovf_I2(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Conv_Ovf_U2(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Conv_Ovf_I4(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Conv_Ovf_U4(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Conv_Ovf_I8(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Conv_Ovf_U8(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Refanyval(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Ckfinite(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Mkrefany(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Ldtoken(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Conv_U2(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Conv_U1(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Conv_I(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Conv_Ovf_I(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Conv_Ovf_U(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Add_Ovf(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Add_Ovf_Un(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Mul_Ovf(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Mul_Ovf_Un(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Sub_Ovf(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Sub_Ovf_Un(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Endfinally(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Leave(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Leave_S(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Stind_I(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Conv_U(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Prefix7(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Prefix6(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Prefix5(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Prefix4(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Prefix3(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Prefix2(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Prefix1(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Prefixref(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Arglist(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Ceq(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Cgt(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Cgt_Un(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Clt(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Clt_Un(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Ldftn(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Ldvirtftn(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Ldarg(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Ldarga(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Starg(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Ldloc(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Ldloca(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Stloc(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Localloc(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Endfilter(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Unaligned(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Volatile(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Tailcall(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Initobj(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Constrained(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Cpblk(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Initblk(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Rethrow(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Sizeof(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Refanytype(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Readonly(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Operand(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Nop(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Break(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Ldarg_0(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Ldarg_1(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Ldarg_2(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Ldarg_3(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Ldloc_0(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Ldloc_1(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Ldloc_2(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Ldloc_3(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Stloc_0(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Stloc_1(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Stloc_2(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Stloc_3(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Ldarg_S(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Ldarga_S(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Starg_S(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Ldloc_S(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Ldloca_S(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Stloc_S(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Ldnull(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Ldc_I4_M1(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Ldc_I4_0(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Ldc_I4_1(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Ldc_I4_2(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Ldc_I4_3(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Ldc_I4_4(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Ldc_I4_5(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Ldc_I4_6(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Ldc_I4_7(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Ldc_I4_8(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Ldc_I4_S(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Ldc_I4(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Ldc_I8(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Ldc_R4(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Ldc_R8(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Dup(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Pop(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Jmp(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Call(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Calli(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Ret(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Br_S(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Brfalse_S(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Brtrue_S(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Beq_S(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Bge_S(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Bgt_S(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Ble_S(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Blt_S(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Bne_Un_S(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Bge_Un_S(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Bgt_Un_S(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Ble_Un_S(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Blt_Un_S(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Br(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Brfalse(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Brtrue(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Beq(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Bge(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Bgt(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Ble(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Blt(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Bne_Un(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Bge_Un(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Bgt_Un(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Ble_Un(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Blt_Un(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Switch(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Ldind_I1(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Ldind_U1(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Ldind_I2(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Ldind_U2(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Ldind_I4(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Ldind_U4(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Ldind_I8(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Ldind_I(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Ldind_R4(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Ldind_R8(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Ldind_Ref(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Stind_Ref(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Stind_I1(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Stind_I2(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Stind_I4(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Stind_I8(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Stind_R4(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Stind_R8(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Add(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Sub(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Mul(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Div(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Div_Un(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Rem(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Rem_Un(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_And(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Or(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Xor(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Shl(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Shr(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Shr_Un(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Neg(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Not(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Conv_I1(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Conv_I2(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Conv_I4(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Conv_I8(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Conv_R4(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Conv_R8(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Conv_U4(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Conv_U8(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Callvirt(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Cpobj(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Ldobj(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Ldstr(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Newobj(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Castclass(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Isinst(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Conv_R_Un(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Unbox(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Throw(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Ldfld(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Ldflda(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Stfld(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Ldsfld(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Ldsflda(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Stsfld(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Stobj(): PrivateScope, Public, Static, HideBySig, SpecialName
Class HarmonyLib.Code+Operand_: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :HarmonyLib.CodeMatch
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Operand_ Item [System.Object, System.String] 'get ' : 
  Methods:
    get_Item(Object(Optional, HasDefault), String(Optional, HasDefault)): PrivateScope, Public, HideBySig, SpecialName
Class HarmonyLib.Code+Nop_: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :HarmonyLib.CodeMatch
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Nop_ Item [System.Object, System.String] 'get ' : 
  Methods:
    get_Item(Object(Optional, HasDefault), String(Optional, HasDefault)): PrivateScope, Public, HideBySig, SpecialName
Class HarmonyLib.Code+Break_: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :HarmonyLib.CodeMatch
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Break_ Item [System.Object, System.String] 'get ' : 
  Methods:
    get_Item(Object(Optional, HasDefault), String(Optional, HasDefault)): PrivateScope, Public, HideBySig, SpecialName
Class HarmonyLib.Code+Ldarg_0_: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :HarmonyLib.CodeMatch
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Ldarg_0_ Item [System.Object, System.String] 'get ' : 
  Methods:
    get_Item(Object(Optional, HasDefault), String(Optional, HasDefault)): PrivateScope, Public, HideBySig, SpecialName
Class HarmonyLib.Code+Ldarg_1_: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :HarmonyLib.CodeMatch
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Ldarg_1_ Item [System.Object, System.String] 'get ' : 
  Methods:
    get_Item(Object(Optional, HasDefault), String(Optional, HasDefault)): PrivateScope, Public, HideBySig, SpecialName
Class HarmonyLib.Code+Ldarg_2_: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :HarmonyLib.CodeMatch
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Ldarg_2_ Item [System.Object, System.String] 'get ' : 
  Methods:
    get_Item(Object(Optional, HasDefault), String(Optional, HasDefault)): PrivateScope, Public, HideBySig, SpecialName
Class HarmonyLib.Code+Ldarg_3_: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :HarmonyLib.CodeMatch
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Ldarg_3_ Item [System.Object, System.String] 'get ' : 
  Methods:
    get_Item(Object(Optional, HasDefault), String(Optional, HasDefault)): PrivateScope, Public, HideBySig, SpecialName
Class HarmonyLib.Code+Ldloc_0_: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :HarmonyLib.CodeMatch
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Ldloc_0_ Item [System.Object, System.String] 'get ' : 
  Methods:
    get_Item(Object(Optional, HasDefault), String(Optional, HasDefault)): PrivateScope, Public, HideBySig, SpecialName
Class HarmonyLib.Code+Ldloc_1_: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :HarmonyLib.CodeMatch
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Ldloc_1_ Item [System.Object, System.String] 'get ' : 
  Methods:
    get_Item(Object(Optional, HasDefault), String(Optional, HasDefault)): PrivateScope, Public, HideBySig, SpecialName
Class HarmonyLib.Code+Ldloc_2_: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :HarmonyLib.CodeMatch
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Ldloc_2_ Item [System.Object, System.String] 'get ' : 
  Methods:
    get_Item(Object(Optional, HasDefault), String(Optional, HasDefault)): PrivateScope, Public, HideBySig, SpecialName
Class HarmonyLib.Code+Ldloc_3_: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :HarmonyLib.CodeMatch
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Ldloc_3_ Item [System.Object, System.String] 'get ' : 
  Methods:
    get_Item(Object(Optional, HasDefault), String(Optional, HasDefault)): PrivateScope, Public, HideBySig, SpecialName
Class HarmonyLib.Code+Stloc_0_: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :HarmonyLib.CodeMatch
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Stloc_0_ Item [System.Object, System.String] 'get ' : 
  Methods:
    get_Item(Object(Optional, HasDefault), String(Optional, HasDefault)): PrivateScope, Public, HideBySig, SpecialName
Class HarmonyLib.Code+Stloc_1_: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :HarmonyLib.CodeMatch
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Stloc_1_ Item [System.Object, System.String] 'get ' : 
  Methods:
    get_Item(Object(Optional, HasDefault), String(Optional, HasDefault)): PrivateScope, Public, HideBySig, SpecialName
Class HarmonyLib.Code+Stloc_2_: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :HarmonyLib.CodeMatch
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Stloc_2_ Item [System.Object, System.String] 'get ' : 
  Methods:
    get_Item(Object(Optional, HasDefault), String(Optional, HasDefault)): PrivateScope, Public, HideBySig, SpecialName
Class HarmonyLib.Code+Stloc_3_: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :HarmonyLib.CodeMatch
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Stloc_3_ Item [System.Object, System.String] 'get ' : 
  Methods:
    get_Item(Object(Optional, HasDefault), String(Optional, HasDefault)): PrivateScope, Public, HideBySig, SpecialName
Class HarmonyLib.Code+Ldarg_S_: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :HarmonyLib.CodeMatch
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Ldarg_S_ Item [System.Object, System.String] 'get ' : 
  Methods:
    get_Item(Object(Optional, HasDefault), String(Optional, HasDefault)): PrivateScope, Public, HideBySig, SpecialName
Class HarmonyLib.Code+Ldarga_S_: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :HarmonyLib.CodeMatch
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Ldarga_S_ Item [System.Object, System.String] 'get ' : 
  Methods:
    get_Item(Object(Optional, HasDefault), String(Optional, HasDefault)): PrivateScope, Public, HideBySig, SpecialName
Class HarmonyLib.Code+Starg_S_: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :HarmonyLib.CodeMatch
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Starg_S_ Item [System.Object, System.String] 'get ' : 
  Methods:
    get_Item(Object(Optional, HasDefault), String(Optional, HasDefault)): PrivateScope, Public, HideBySig, SpecialName
Class HarmonyLib.Code+Ldloc_S_: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :HarmonyLib.CodeMatch
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Ldloc_S_ Item [System.Object, System.String] 'get ' : 
  Methods:
    get_Item(Object(Optional, HasDefault), String(Optional, HasDefault)): PrivateScope, Public, HideBySig, SpecialName
Class HarmonyLib.Code+Ldloca_S_: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :HarmonyLib.CodeMatch
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Ldloca_S_ Item [System.Object, System.String] 'get ' : 
  Methods:
    get_Item(Object(Optional, HasDefault), String(Optional, HasDefault)): PrivateScope, Public, HideBySig, SpecialName
Class HarmonyLib.Code+Stloc_S_: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :HarmonyLib.CodeMatch
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Stloc_S_ Item [System.Object, System.String] 'get ' : 
  Methods:
    get_Item(Object(Optional, HasDefault), String(Optional, HasDefault)): PrivateScope, Public, HideBySig, SpecialName
Class HarmonyLib.Code+Ldnull_: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :HarmonyLib.CodeMatch
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Ldnull_ Item [System.Object, System.String] 'get ' : 
  Methods:
    get_Item(Object(Optional, HasDefault), String(Optional, HasDefault)): PrivateScope, Public, HideBySig, SpecialName
Class HarmonyLib.Code+Ldc_I4_M1_: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :HarmonyLib.CodeMatch
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Ldc_I4_M1_ Item [System.Object, System.String] 'get ' : 
  Methods:
    get_Item(Object(Optional, HasDefault), String(Optional, HasDefault)): PrivateScope, Public, HideBySig, SpecialName
Class HarmonyLib.Code+Ldc_I4_0_: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :HarmonyLib.CodeMatch
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Ldc_I4_0_ Item [System.Object, System.String] 'get ' : 
  Methods:
    get_Item(Object(Optional, HasDefault), String(Optional, HasDefault)): PrivateScope, Public, HideBySig, SpecialName
Class HarmonyLib.Code+Ldc_I4_1_: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :HarmonyLib.CodeMatch
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Ldc_I4_1_ Item [System.Object, System.String] 'get ' : 
  Methods:
    get_Item(Object(Optional, HasDefault), String(Optional, HasDefault)): PrivateScope, Public, HideBySig, SpecialName
Class HarmonyLib.Code+Ldc_I4_2_: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :HarmonyLib.CodeMatch
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Ldc_I4_2_ Item [System.Object, System.String] 'get ' : 
  Methods:
    get_Item(Object(Optional, HasDefault), String(Optional, HasDefault)): PrivateScope, Public, HideBySig, SpecialName
Class HarmonyLib.Code+Ldc_I4_3_: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :HarmonyLib.CodeMatch
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Ldc_I4_3_ Item [System.Object, System.String] 'get ' : 
  Methods:
    get_Item(Object(Optional, HasDefault), String(Optional, HasDefault)): PrivateScope, Public, HideBySig, SpecialName
Class HarmonyLib.Code+Ldc_I4_4_: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :HarmonyLib.CodeMatch
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Ldc_I4_4_ Item [System.Object, System.String] 'get ' : 
  Methods:
    get_Item(Object(Optional, HasDefault), String(Optional, HasDefault)): PrivateScope, Public, HideBySig, SpecialName
Class HarmonyLib.Code+Ldc_I4_5_: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :HarmonyLib.CodeMatch
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Ldc_I4_5_ Item [System.Object, System.String] 'get ' : 
  Methods:
    get_Item(Object(Optional, HasDefault), String(Optional, HasDefault)): PrivateScope, Public, HideBySig, SpecialName
Class HarmonyLib.Code+Ldc_I4_6_: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :HarmonyLib.CodeMatch
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Ldc_I4_6_ Item [System.Object, System.String] 'get ' : 
  Methods:
    get_Item(Object(Optional, HasDefault), String(Optional, HasDefault)): PrivateScope, Public, HideBySig, SpecialName
Class HarmonyLib.Code+Ldc_I4_7_: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :HarmonyLib.CodeMatch
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Ldc_I4_7_ Item [System.Object, System.String] 'get ' : 
  Methods:
    get_Item(Object(Optional, HasDefault), String(Optional, HasDefault)): PrivateScope, Public, HideBySig, SpecialName
Class HarmonyLib.Code+Ldc_I4_8_: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :HarmonyLib.CodeMatch
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Ldc_I4_8_ Item [System.Object, System.String] 'get ' : 
  Methods:
    get_Item(Object(Optional, HasDefault), String(Optional, HasDefault)): PrivateScope, Public, HideBySig, SpecialName
Class HarmonyLib.Code+Ldc_I4_S_: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :HarmonyLib.CodeMatch
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Ldc_I4_S_ Item [System.Object, System.String] 'get ' : 
  Methods:
    get_Item(Object(Optional, HasDefault), String(Optional, HasDefault)): PrivateScope, Public, HideBySig, SpecialName
Class HarmonyLib.Code+Ldc_I4_: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :HarmonyLib.CodeMatch
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Ldc_I4_ Item [System.Object, System.String] 'get ' : 
  Methods:
    get_Item(Object(Optional, HasDefault), String(Optional, HasDefault)): PrivateScope, Public, HideBySig, SpecialName
Class HarmonyLib.Code+Ldc_I8_: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :HarmonyLib.CodeMatch
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Ldc_I8_ Item [System.Object, System.String] 'get ' : 
  Methods:
    get_Item(Object(Optional, HasDefault), String(Optional, HasDefault)): PrivateScope, Public, HideBySig, SpecialName
Class HarmonyLib.Code+Ldc_R4_: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :HarmonyLib.CodeMatch
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Ldc_R4_ Item [System.Object, System.String] 'get ' : 
  Methods:
    get_Item(Object(Optional, HasDefault), String(Optional, HasDefault)): PrivateScope, Public, HideBySig, SpecialName
Class HarmonyLib.Code+Ldc_R8_: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :HarmonyLib.CodeMatch
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Ldc_R8_ Item [System.Object, System.String] 'get ' : 
  Methods:
    get_Item(Object(Optional, HasDefault), String(Optional, HasDefault)): PrivateScope, Public, HideBySig, SpecialName
Class HarmonyLib.Code+Dup_: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :HarmonyLib.CodeMatch
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Dup_ Item [System.Object, System.String] 'get ' : 
  Methods:
    get_Item(Object(Optional, HasDefault), String(Optional, HasDefault)): PrivateScope, Public, HideBySig, SpecialName
Class HarmonyLib.Code+Pop_: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :HarmonyLib.CodeMatch
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Pop_ Item [System.Object, System.String] 'get ' : 
  Methods:
    get_Item(Object(Optional, HasDefault), String(Optional, HasDefault)): PrivateScope, Public, HideBySig, SpecialName
Class HarmonyLib.Code+Jmp_: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :HarmonyLib.CodeMatch
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Jmp_ Item [System.Object, System.String] 'get ' : 
  Methods:
    get_Item(Object(Optional, HasDefault), String(Optional, HasDefault)): PrivateScope, Public, HideBySig, SpecialName
Class HarmonyLib.Code+Call_: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :HarmonyLib.CodeMatch
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Call_ Item [System.Object, System.String] 'get ' : 
  Methods:
    get_Item(Object(Optional, HasDefault), String(Optional, HasDefault)): PrivateScope, Public, HideBySig, SpecialName
Class HarmonyLib.Code+Calli_: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :HarmonyLib.CodeMatch
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Calli_ Item [System.Object, System.String] 'get ' : 
  Methods:
    get_Item(Object(Optional, HasDefault), String(Optional, HasDefault)): PrivateScope, Public, HideBySig, SpecialName
Class HarmonyLib.Code+Ret_: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :HarmonyLib.CodeMatch
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Ret_ Item [System.Object, System.String] 'get ' : 
  Methods:
    get_Item(Object(Optional, HasDefault), String(Optional, HasDefault)): PrivateScope, Public, HideBySig, SpecialName
Class HarmonyLib.Code+Br_S_: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :HarmonyLib.CodeMatch
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Br_S_ Item [System.Object, System.String] 'get ' : 
  Methods:
    get_Item(Object(Optional, HasDefault), String(Optional, HasDefault)): PrivateScope, Public, HideBySig, SpecialName
Class HarmonyLib.Code+Brfalse_S_: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :HarmonyLib.CodeMatch
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Brfalse_S_ Item [System.Object, System.String] 'get ' : 
  Methods:
    get_Item(Object(Optional, HasDefault), String(Optional, HasDefault)): PrivateScope, Public, HideBySig, SpecialName
Class HarmonyLib.Code+Brtrue_S_: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :HarmonyLib.CodeMatch
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Brtrue_S_ Item [System.Object, System.String] 'get ' : 
  Methods:
    get_Item(Object(Optional, HasDefault), String(Optional, HasDefault)): PrivateScope, Public, HideBySig, SpecialName
Class HarmonyLib.Code+Beq_S_: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :HarmonyLib.CodeMatch
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Beq_S_ Item [System.Object, System.String] 'get ' : 
  Methods:
    get_Item(Object(Optional, HasDefault), String(Optional, HasDefault)): PrivateScope, Public, HideBySig, SpecialName
Class HarmonyLib.Code+Bge_S_: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :HarmonyLib.CodeMatch
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Bge_S_ Item [System.Object, System.String] 'get ' : 
  Methods:
    get_Item(Object(Optional, HasDefault), String(Optional, HasDefault)): PrivateScope, Public, HideBySig, SpecialName
Class HarmonyLib.Code+Bgt_S_: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :HarmonyLib.CodeMatch
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Bgt_S_ Item [System.Object, System.String] 'get ' : 
  Methods:
    get_Item(Object(Optional, HasDefault), String(Optional, HasDefault)): PrivateScope, Public, HideBySig, SpecialName
Class HarmonyLib.Code+Ble_S_: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :HarmonyLib.CodeMatch
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Ble_S_ Item [System.Object, System.String] 'get ' : 
  Methods:
    get_Item(Object(Optional, HasDefault), String(Optional, HasDefault)): PrivateScope, Public, HideBySig, SpecialName
Class HarmonyLib.Code+Blt_S_: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :HarmonyLib.CodeMatch
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Blt_S_ Item [System.Object, System.String] 'get ' : 
  Methods:
    get_Item(Object(Optional, HasDefault), String(Optional, HasDefault)): PrivateScope, Public, HideBySig, SpecialName
Class HarmonyLib.Code+Bne_Un_S_: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :HarmonyLib.CodeMatch
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Bne_Un_S_ Item [System.Object, System.String] 'get ' : 
  Methods:
    get_Item(Object(Optional, HasDefault), String(Optional, HasDefault)): PrivateScope, Public, HideBySig, SpecialName
Class HarmonyLib.Code+Bge_Un_S_: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :HarmonyLib.CodeMatch
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Bge_Un_S_ Item [System.Object, System.String] 'get ' : 
  Methods:
    get_Item(Object(Optional, HasDefault), String(Optional, HasDefault)): PrivateScope, Public, HideBySig, SpecialName
Class HarmonyLib.Code+Bgt_Un_S_: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :HarmonyLib.CodeMatch
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Bgt_Un_S_ Item [System.Object, System.String] 'get ' : 
  Methods:
    get_Item(Object(Optional, HasDefault), String(Optional, HasDefault)): PrivateScope, Public, HideBySig, SpecialName
Class HarmonyLib.Code+Ble_Un_S_: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :HarmonyLib.CodeMatch
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Ble_Un_S_ Item [System.Object, System.String] 'get ' : 
  Methods:
    get_Item(Object(Optional, HasDefault), String(Optional, HasDefault)): PrivateScope, Public, HideBySig, SpecialName
Class HarmonyLib.Code+Blt_Un_S_: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :HarmonyLib.CodeMatch
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Blt_Un_S_ Item [System.Object, System.String] 'get ' : 
  Methods:
    get_Item(Object(Optional, HasDefault), String(Optional, HasDefault)): PrivateScope, Public, HideBySig, SpecialName
Class HarmonyLib.Code+Br_: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :HarmonyLib.CodeMatch
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Br_ Item [System.Object, System.String] 'get ' : 
  Methods:
    get_Item(Object(Optional, HasDefault), String(Optional, HasDefault)): PrivateScope, Public, HideBySig, SpecialName
Class HarmonyLib.Code+Brfalse_: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :HarmonyLib.CodeMatch
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Brfalse_ Item [System.Object, System.String] 'get ' : 
  Methods:
    get_Item(Object(Optional, HasDefault), String(Optional, HasDefault)): PrivateScope, Public, HideBySig, SpecialName
Class HarmonyLib.Code+Brtrue_: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :HarmonyLib.CodeMatch
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Brtrue_ Item [System.Object, System.String] 'get ' : 
  Methods:
    get_Item(Object(Optional, HasDefault), String(Optional, HasDefault)): PrivateScope, Public, HideBySig, SpecialName
Class HarmonyLib.Code+Beq_: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :HarmonyLib.CodeMatch
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Beq_ Item [System.Object, System.String] 'get ' : 
  Methods:
    get_Item(Object(Optional, HasDefault), String(Optional, HasDefault)): PrivateScope, Public, HideBySig, SpecialName
Class HarmonyLib.Code+Bge_: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :HarmonyLib.CodeMatch
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Bge_ Item [System.Object, System.String] 'get ' : 
  Methods:
    get_Item(Object(Optional, HasDefault), String(Optional, HasDefault)): PrivateScope, Public, HideBySig, SpecialName
Class HarmonyLib.Code+Bgt_: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :HarmonyLib.CodeMatch
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Bgt_ Item [System.Object, System.String] 'get ' : 
  Methods:
    get_Item(Object(Optional, HasDefault), String(Optional, HasDefault)): PrivateScope, Public, HideBySig, SpecialName
Class HarmonyLib.Code+Ble_: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :HarmonyLib.CodeMatch
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Ble_ Item [System.Object, System.String] 'get ' : 
  Methods:
    get_Item(Object(Optional, HasDefault), String(Optional, HasDefault)): PrivateScope, Public, HideBySig, SpecialName
Class HarmonyLib.Code+Blt_: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :HarmonyLib.CodeMatch
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Blt_ Item [System.Object, System.String] 'get ' : 
  Methods:
    get_Item(Object(Optional, HasDefault), String(Optional, HasDefault)): PrivateScope, Public, HideBySig, SpecialName
Class HarmonyLib.Code+Bne_Un_: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :HarmonyLib.CodeMatch
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Bne_Un_ Item [System.Object, System.String] 'get ' : 
  Methods:
    get_Item(Object(Optional, HasDefault), String(Optional, HasDefault)): PrivateScope, Public, HideBySig, SpecialName
Class HarmonyLib.Code+Bge_Un_: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :HarmonyLib.CodeMatch
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Bge_Un_ Item [System.Object, System.String] 'get ' : 
  Methods:
    get_Item(Object(Optional, HasDefault), String(Optional, HasDefault)): PrivateScope, Public, HideBySig, SpecialName
Class HarmonyLib.Code+Bgt_Un_: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :HarmonyLib.CodeMatch
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Bgt_Un_ Item [System.Object, System.String] 'get ' : 
  Methods:
    get_Item(Object(Optional, HasDefault), String(Optional, HasDefault)): PrivateScope, Public, HideBySig, SpecialName
Class HarmonyLib.Code+Ble_Un_: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :HarmonyLib.CodeMatch
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Ble_Un_ Item [System.Object, System.String] 'get ' : 
  Methods:
    get_Item(Object(Optional, HasDefault), String(Optional, HasDefault)): PrivateScope, Public, HideBySig, SpecialName
Class HarmonyLib.Code+Blt_Un_: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :HarmonyLib.CodeMatch
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Blt_Un_ Item [System.Object, System.String] 'get ' : 
  Methods:
    get_Item(Object(Optional, HasDefault), String(Optional, HasDefault)): PrivateScope, Public, HideBySig, SpecialName
Class HarmonyLib.Code+Switch_: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :HarmonyLib.CodeMatch
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Switch_ Item [System.Object, System.String] 'get ' : 
  Methods:
    get_Item(Object(Optional, HasDefault), String(Optional, HasDefault)): PrivateScope, Public, HideBySig, SpecialName
Class HarmonyLib.Code+Ldind_I1_: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :HarmonyLib.CodeMatch
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Ldind_I1_ Item [System.Object, System.String] 'get ' : 
  Methods:
    get_Item(Object(Optional, HasDefault), String(Optional, HasDefault)): PrivateScope, Public, HideBySig, SpecialName
Class HarmonyLib.Code+Ldind_U1_: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :HarmonyLib.CodeMatch
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Ldind_U1_ Item [System.Object, System.String] 'get ' : 
  Methods:
    get_Item(Object(Optional, HasDefault), String(Optional, HasDefault)): PrivateScope, Public, HideBySig, SpecialName
Class HarmonyLib.Code+Ldind_I2_: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :HarmonyLib.CodeMatch
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Ldind_I2_ Item [System.Object, System.String] 'get ' : 
  Methods:
    get_Item(Object(Optional, HasDefault), String(Optional, HasDefault)): PrivateScope, Public, HideBySig, SpecialName
Class HarmonyLib.Code+Ldind_U2_: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :HarmonyLib.CodeMatch
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Ldind_U2_ Item [System.Object, System.String] 'get ' : 
  Methods:
    get_Item(Object(Optional, HasDefault), String(Optional, HasDefault)): PrivateScope, Public, HideBySig, SpecialName
Class HarmonyLib.Code+Ldind_I4_: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :HarmonyLib.CodeMatch
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Ldind_I4_ Item [System.Object, System.String] 'get ' : 
  Methods:
    get_Item(Object(Optional, HasDefault), String(Optional, HasDefault)): PrivateScope, Public, HideBySig, SpecialName
Class HarmonyLib.Code+Ldind_U4_: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :HarmonyLib.CodeMatch
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Ldind_U4_ Item [System.Object, System.String] 'get ' : 
  Methods:
    get_Item(Object(Optional, HasDefault), String(Optional, HasDefault)): PrivateScope, Public, HideBySig, SpecialName
Class HarmonyLib.Code+Ldind_I8_: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :HarmonyLib.CodeMatch
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Ldind_I8_ Item [System.Object, System.String] 'get ' : 
  Methods:
    get_Item(Object(Optional, HasDefault), String(Optional, HasDefault)): PrivateScope, Public, HideBySig, SpecialName
Class HarmonyLib.Code+Ldind_I_: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :HarmonyLib.CodeMatch
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Ldind_I_ Item [System.Object, System.String] 'get ' : 
  Methods:
    get_Item(Object(Optional, HasDefault), String(Optional, HasDefault)): PrivateScope, Public, HideBySig, SpecialName
Class HarmonyLib.Code+Ldind_R4_: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :HarmonyLib.CodeMatch
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Ldind_R4_ Item [System.Object, System.String] 'get ' : 
  Methods:
    get_Item(Object(Optional, HasDefault), String(Optional, HasDefault)): PrivateScope, Public, HideBySig, SpecialName
Class HarmonyLib.Code+Ldind_R8_: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :HarmonyLib.CodeMatch
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Ldind_R8_ Item [System.Object, System.String] 'get ' : 
  Methods:
    get_Item(Object(Optional, HasDefault), String(Optional, HasDefault)): PrivateScope, Public, HideBySig, SpecialName
Class HarmonyLib.Code+Ldind_Ref_: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :HarmonyLib.CodeMatch
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Ldind_Ref_ Item [System.Object, System.String] 'get ' : 
  Methods:
    get_Item(Object(Optional, HasDefault), String(Optional, HasDefault)): PrivateScope, Public, HideBySig, SpecialName
Class HarmonyLib.Code+Stind_Ref_: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :HarmonyLib.CodeMatch
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Stind_Ref_ Item [System.Object, System.String] 'get ' : 
  Methods:
    get_Item(Object(Optional, HasDefault), String(Optional, HasDefault)): PrivateScope, Public, HideBySig, SpecialName
Class HarmonyLib.Code+Stind_I1_: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :HarmonyLib.CodeMatch
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Stind_I1_ Item [System.Object, System.String] 'get ' : 
  Methods:
    get_Item(Object(Optional, HasDefault), String(Optional, HasDefault)): PrivateScope, Public, HideBySig, SpecialName
Class HarmonyLib.Code+Stind_I2_: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :HarmonyLib.CodeMatch
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Stind_I2_ Item [System.Object, System.String] 'get ' : 
  Methods:
    get_Item(Object(Optional, HasDefault), String(Optional, HasDefault)): PrivateScope, Public, HideBySig, SpecialName
Class HarmonyLib.Code+Stind_I4_: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :HarmonyLib.CodeMatch
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Stind_I4_ Item [System.Object, System.String] 'get ' : 
  Methods:
    get_Item(Object(Optional, HasDefault), String(Optional, HasDefault)): PrivateScope, Public, HideBySig, SpecialName
Class HarmonyLib.Code+Stind_I8_: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :HarmonyLib.CodeMatch
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Stind_I8_ Item [System.Object, System.String] 'get ' : 
  Methods:
    get_Item(Object(Optional, HasDefault), String(Optional, HasDefault)): PrivateScope, Public, HideBySig, SpecialName
Class HarmonyLib.Code+Stind_R4_: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :HarmonyLib.CodeMatch
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Stind_R4_ Item [System.Object, System.String] 'get ' : 
  Methods:
    get_Item(Object(Optional, HasDefault), String(Optional, HasDefault)): PrivateScope, Public, HideBySig, SpecialName
Class HarmonyLib.Code+Stind_R8_: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :HarmonyLib.CodeMatch
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Stind_R8_ Item [System.Object, System.String] 'get ' : 
  Methods:
    get_Item(Object(Optional, HasDefault), String(Optional, HasDefault)): PrivateScope, Public, HideBySig, SpecialName
Class HarmonyLib.Code+Add_: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :HarmonyLib.CodeMatch
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Add_ Item [System.Object, System.String] 'get ' : 
  Methods:
    get_Item(Object(Optional, HasDefault), String(Optional, HasDefault)): PrivateScope, Public, HideBySig, SpecialName
Class HarmonyLib.Code+Sub_: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :HarmonyLib.CodeMatch
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Sub_ Item [System.Object, System.String] 'get ' : 
  Methods:
    get_Item(Object(Optional, HasDefault), String(Optional, HasDefault)): PrivateScope, Public, HideBySig, SpecialName
Class HarmonyLib.Code+Mul_: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :HarmonyLib.CodeMatch
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Mul_ Item [System.Object, System.String] 'get ' : 
  Methods:
    get_Item(Object(Optional, HasDefault), String(Optional, HasDefault)): PrivateScope, Public, HideBySig, SpecialName
Class HarmonyLib.Code+Div_: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :HarmonyLib.CodeMatch
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Div_ Item [System.Object, System.String] 'get ' : 
  Methods:
    get_Item(Object(Optional, HasDefault), String(Optional, HasDefault)): PrivateScope, Public, HideBySig, SpecialName
Class HarmonyLib.Code+Div_Un_: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :HarmonyLib.CodeMatch
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Div_Un_ Item [System.Object, System.String] 'get ' : 
  Methods:
    get_Item(Object(Optional, HasDefault), String(Optional, HasDefault)): PrivateScope, Public, HideBySig, SpecialName
Class HarmonyLib.Code+Rem_: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :HarmonyLib.CodeMatch
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Rem_ Item [System.Object, System.String] 'get ' : 
  Methods:
    get_Item(Object(Optional, HasDefault), String(Optional, HasDefault)): PrivateScope, Public, HideBySig, SpecialName
Class HarmonyLib.Code+Rem_Un_: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :HarmonyLib.CodeMatch
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Rem_Un_ Item [System.Object, System.String] 'get ' : 
  Methods:
    get_Item(Object(Optional, HasDefault), String(Optional, HasDefault)): PrivateScope, Public, HideBySig, SpecialName
Class HarmonyLib.Code+And_: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :HarmonyLib.CodeMatch
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    And_ Item [System.Object, System.String] 'get ' : 
  Methods:
    get_Item(Object(Optional, HasDefault), String(Optional, HasDefault)): PrivateScope, Public, HideBySig, SpecialName
Class HarmonyLib.Code+Or_: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :HarmonyLib.CodeMatch
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Or_ Item [System.Object, System.String] 'get ' : 
  Methods:
    get_Item(Object(Optional, HasDefault), String(Optional, HasDefault)): PrivateScope, Public, HideBySig, SpecialName
Class HarmonyLib.Code+Xor_: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :HarmonyLib.CodeMatch
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Xor_ Item [System.Object, System.String] 'get ' : 
  Methods:
    get_Item(Object(Optional, HasDefault), String(Optional, HasDefault)): PrivateScope, Public, HideBySig, SpecialName
Class HarmonyLib.Code+Shl_: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :HarmonyLib.CodeMatch
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Shl_ Item [System.Object, System.String] 'get ' : 
  Methods:
    get_Item(Object(Optional, HasDefault), String(Optional, HasDefault)): PrivateScope, Public, HideBySig, SpecialName
Class HarmonyLib.Code+Shr_: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :HarmonyLib.CodeMatch
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Shr_ Item [System.Object, System.String] 'get ' : 
  Methods:
    get_Item(Object(Optional, HasDefault), String(Optional, HasDefault)): PrivateScope, Public, HideBySig, SpecialName
Class HarmonyLib.Code+Shr_Un_: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :HarmonyLib.CodeMatch
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Shr_Un_ Item [System.Object, System.String] 'get ' : 
  Methods:
    get_Item(Object(Optional, HasDefault), String(Optional, HasDefault)): PrivateScope, Public, HideBySig, SpecialName
Class HarmonyLib.Code+Neg_: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :HarmonyLib.CodeMatch
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Neg_ Item [System.Object, System.String] 'get ' : 
  Methods:
    get_Item(Object(Optional, HasDefault), String(Optional, HasDefault)): PrivateScope, Public, HideBySig, SpecialName
Class HarmonyLib.Code+Not_: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :HarmonyLib.CodeMatch
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Not_ Item [System.Object, System.String] 'get ' : 
  Methods:
    get_Item(Object(Optional, HasDefault), String(Optional, HasDefault)): PrivateScope, Public, HideBySig, SpecialName
Class HarmonyLib.Code+Conv_I1_: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :HarmonyLib.CodeMatch
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Conv_I1_ Item [System.Object, System.String] 'get ' : 
  Methods:
    get_Item(Object(Optional, HasDefault), String(Optional, HasDefault)): PrivateScope, Public, HideBySig, SpecialName
Class HarmonyLib.Code+Conv_I2_: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :HarmonyLib.CodeMatch
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Conv_I2_ Item [System.Object, System.String] 'get ' : 
  Methods:
    get_Item(Object(Optional, HasDefault), String(Optional, HasDefault)): PrivateScope, Public, HideBySig, SpecialName
Class HarmonyLib.Code+Conv_I4_: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :HarmonyLib.CodeMatch
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Conv_I4_ Item [System.Object, System.String] 'get ' : 
  Methods:
    get_Item(Object(Optional, HasDefault), String(Optional, HasDefault)): PrivateScope, Public, HideBySig, SpecialName
Class HarmonyLib.Code+Conv_I8_: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :HarmonyLib.CodeMatch
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Conv_I8_ Item [System.Object, System.String] 'get ' : 
  Methods:
    get_Item(Object(Optional, HasDefault), String(Optional, HasDefault)): PrivateScope, Public, HideBySig, SpecialName
Class HarmonyLib.Code+Conv_R4_: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :HarmonyLib.CodeMatch
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Conv_R4_ Item [System.Object, System.String] 'get ' : 
  Methods:
    get_Item(Object(Optional, HasDefault), String(Optional, HasDefault)): PrivateScope, Public, HideBySig, SpecialName
Class HarmonyLib.Code+Conv_R8_: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :HarmonyLib.CodeMatch
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Conv_R8_ Item [System.Object, System.String] 'get ' : 
  Methods:
    get_Item(Object(Optional, HasDefault), String(Optional, HasDefault)): PrivateScope, Public, HideBySig, SpecialName
Class HarmonyLib.Code+Conv_U4_: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :HarmonyLib.CodeMatch
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Conv_U4_ Item [System.Object, System.String] 'get ' : 
  Methods:
    get_Item(Object(Optional, HasDefault), String(Optional, HasDefault)): PrivateScope, Public, HideBySig, SpecialName
Class HarmonyLib.Code+Conv_U8_: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :HarmonyLib.CodeMatch
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Conv_U8_ Item [System.Object, System.String] 'get ' : 
  Methods:
    get_Item(Object(Optional, HasDefault), String(Optional, HasDefault)): PrivateScope, Public, HideBySig, SpecialName
Class HarmonyLib.Code+Callvirt_: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :HarmonyLib.CodeMatch
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Callvirt_ Item [System.Object, System.String] 'get ' : 
  Methods:
    get_Item(Object(Optional, HasDefault), String(Optional, HasDefault)): PrivateScope, Public, HideBySig, SpecialName
Class HarmonyLib.Code+Cpobj_: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :HarmonyLib.CodeMatch
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Cpobj_ Item [System.Object, System.String] 'get ' : 
  Methods:
    get_Item(Object(Optional, HasDefault), String(Optional, HasDefault)): PrivateScope, Public, HideBySig, SpecialName
Class HarmonyLib.Code+Ldobj_: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :HarmonyLib.CodeMatch
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Ldobj_ Item [System.Object, System.String] 'get ' : 
  Methods:
    get_Item(Object(Optional, HasDefault), String(Optional, HasDefault)): PrivateScope, Public, HideBySig, SpecialName
Class HarmonyLib.Code+Ldstr_: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :HarmonyLib.CodeMatch
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Ldstr_ Item [System.Object, System.String] 'get ' : 
  Methods:
    get_Item(Object(Optional, HasDefault), String(Optional, HasDefault)): PrivateScope, Public, HideBySig, SpecialName
Class HarmonyLib.Code+Newobj_: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :HarmonyLib.CodeMatch
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Newobj_ Item [System.Object, System.String] 'get ' : 
  Methods:
    get_Item(Object(Optional, HasDefault), String(Optional, HasDefault)): PrivateScope, Public, HideBySig, SpecialName
Class HarmonyLib.Code+Castclass_: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :HarmonyLib.CodeMatch
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Castclass_ Item [System.Object, System.String] 'get ' : 
  Methods:
    get_Item(Object(Optional, HasDefault), String(Optional, HasDefault)): PrivateScope, Public, HideBySig, SpecialName
Class HarmonyLib.Code+Isinst_: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :HarmonyLib.CodeMatch
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Isinst_ Item [System.Object, System.String] 'get ' : 
  Methods:
    get_Item(Object(Optional, HasDefault), String(Optional, HasDefault)): PrivateScope, Public, HideBySig, SpecialName
Class HarmonyLib.Code+Conv_R_Un_: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :HarmonyLib.CodeMatch
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Conv_R_Un_ Item [System.Object, System.String] 'get ' : 
  Methods:
    get_Item(Object(Optional, HasDefault), String(Optional, HasDefault)): PrivateScope, Public, HideBySig, SpecialName
Class HarmonyLib.Code+Unbox_: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :HarmonyLib.CodeMatch
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Unbox_ Item [System.Object, System.String] 'get ' : 
  Methods:
    get_Item(Object(Optional, HasDefault), String(Optional, HasDefault)): PrivateScope, Public, HideBySig, SpecialName
Class HarmonyLib.Code+Throw_: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :HarmonyLib.CodeMatch
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Throw_ Item [System.Object, System.String] 'get ' : 
  Methods:
    get_Item(Object(Optional, HasDefault), String(Optional, HasDefault)): PrivateScope, Public, HideBySig, SpecialName
Class HarmonyLib.Code+Ldfld_: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :HarmonyLib.CodeMatch
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Ldfld_ Item [System.Object, System.String] 'get ' : 
  Methods:
    get_Item(Object(Optional, HasDefault), String(Optional, HasDefault)): PrivateScope, Public, HideBySig, SpecialName
Class HarmonyLib.Code+Ldflda_: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :HarmonyLib.CodeMatch
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Ldflda_ Item [System.Object, System.String] 'get ' : 
  Methods:
    get_Item(Object(Optional, HasDefault), String(Optional, HasDefault)): PrivateScope, Public, HideBySig, SpecialName
Class HarmonyLib.Code+Stfld_: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :HarmonyLib.CodeMatch
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Stfld_ Item [System.Object, System.String] 'get ' : 
  Methods:
    get_Item(Object(Optional, HasDefault), String(Optional, HasDefault)): PrivateScope, Public, HideBySig, SpecialName
Class HarmonyLib.Code+Ldsfld_: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :HarmonyLib.CodeMatch
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Ldsfld_ Item [System.Object, System.String] 'get ' : 
  Methods:
    get_Item(Object(Optional, HasDefault), String(Optional, HasDefault)): PrivateScope, Public, HideBySig, SpecialName
Class HarmonyLib.Code+Ldsflda_: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :HarmonyLib.CodeMatch
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Ldsflda_ Item [System.Object, System.String] 'get ' : 
  Methods:
    get_Item(Object(Optional, HasDefault), String(Optional, HasDefault)): PrivateScope, Public, HideBySig, SpecialName
Class HarmonyLib.Code+Stsfld_: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :HarmonyLib.CodeMatch
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Stsfld_ Item [System.Object, System.String] 'get ' : 
  Methods:
    get_Item(Object(Optional, HasDefault), String(Optional, HasDefault)): PrivateScope, Public, HideBySig, SpecialName
Class HarmonyLib.Code+Stobj_: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :HarmonyLib.CodeMatch
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Stobj_ Item [System.Object, System.String] 'get ' : 
  Methods:
    get_Item(Object(Optional, HasDefault), String(Optional, HasDefault)): PrivateScope, Public, HideBySig, SpecialName
Class HarmonyLib.Code+Conv_Ovf_I1_Un_: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :HarmonyLib.CodeMatch
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Conv_Ovf_I1_Un_ Item [System.Object, System.String] 'get ' : 
  Methods:
    get_Item(Object(Optional, HasDefault), String(Optional, HasDefault)): PrivateScope, Public, HideBySig, SpecialName
Class HarmonyLib.Code+Conv_Ovf_I2_Un_: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :HarmonyLib.CodeMatch
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Conv_Ovf_I2_Un_ Item [System.Object, System.String] 'get ' : 
  Methods:
    get_Item(Object(Optional, HasDefault), String(Optional, HasDefault)): PrivateScope, Public, HideBySig, SpecialName
Class HarmonyLib.Code+Conv_Ovf_I4_Un_: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :HarmonyLib.CodeMatch
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Conv_Ovf_I4_Un_ Item [System.Object, System.String] 'get ' : 
  Methods:
    get_Item(Object(Optional, HasDefault), String(Optional, HasDefault)): PrivateScope, Public, HideBySig, SpecialName
Class HarmonyLib.Code+Conv_Ovf_I8_Un_: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :HarmonyLib.CodeMatch
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Conv_Ovf_I8_Un_ Item [System.Object, System.String] 'get ' : 
  Methods:
    get_Item(Object(Optional, HasDefault), String(Optional, HasDefault)): PrivateScope, Public, HideBySig, SpecialName
Class HarmonyLib.Code+Conv_Ovf_U1_Un_: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :HarmonyLib.CodeMatch
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Conv_Ovf_U1_Un_ Item [System.Object, System.String] 'get ' : 
  Methods:
    get_Item(Object(Optional, HasDefault), String(Optional, HasDefault)): PrivateScope, Public, HideBySig, SpecialName
Class HarmonyLib.Code+Conv_Ovf_U2_Un_: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :HarmonyLib.CodeMatch
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Conv_Ovf_U2_Un_ Item [System.Object, System.String] 'get ' : 
  Methods:
    get_Item(Object(Optional, HasDefault), String(Optional, HasDefault)): PrivateScope, Public, HideBySig, SpecialName
Class HarmonyLib.Code+Conv_Ovf_U4_Un_: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :HarmonyLib.CodeMatch
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Conv_Ovf_U4_Un_ Item [System.Object, System.String] 'get ' : 
  Methods:
    get_Item(Object(Optional, HasDefault), String(Optional, HasDefault)): PrivateScope, Public, HideBySig, SpecialName
Class HarmonyLib.Code+Conv_Ovf_U8_Un_: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :HarmonyLib.CodeMatch
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Conv_Ovf_U8_Un_ Item [System.Object, System.String] 'get ' : 
  Methods:
    get_Item(Object(Optional, HasDefault), String(Optional, HasDefault)): PrivateScope, Public, HideBySig, SpecialName
Class HarmonyLib.Code+Conv_Ovf_I_Un_: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :HarmonyLib.CodeMatch
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Conv_Ovf_I_Un_ Item [System.Object, System.String] 'get ' : 
  Methods:
    get_Item(Object(Optional, HasDefault), String(Optional, HasDefault)): PrivateScope, Public, HideBySig, SpecialName
Class HarmonyLib.Code+Conv_Ovf_U_Un_: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :HarmonyLib.CodeMatch
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Conv_Ovf_U_Un_ Item [System.Object, System.String] 'get ' : 
  Methods:
    get_Item(Object(Optional, HasDefault), String(Optional, HasDefault)): PrivateScope, Public, HideBySig, SpecialName
Class HarmonyLib.Code+Box_: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :HarmonyLib.CodeMatch
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Box_ Item [System.Object, System.String] 'get ' : 
  Methods:
    get_Item(Object(Optional, HasDefault), String(Optional, HasDefault)): PrivateScope, Public, HideBySig, SpecialName
Class HarmonyLib.Code+Newarr_: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :HarmonyLib.CodeMatch
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Newarr_ Item [System.Object, System.String] 'get ' : 
  Methods:
    get_Item(Object(Optional, HasDefault), String(Optional, HasDefault)): PrivateScope, Public, HideBySig, SpecialName
Class HarmonyLib.Code+Ldlen_: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :HarmonyLib.CodeMatch
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Ldlen_ Item [System.Object, System.String] 'get ' : 
  Methods:
    get_Item(Object(Optional, HasDefault), String(Optional, HasDefault)): PrivateScope, Public, HideBySig, SpecialName
Class HarmonyLib.Code+Ldelema_: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :HarmonyLib.CodeMatch
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Ldelema_ Item [System.Object, System.String] 'get ' : 
  Methods:
    get_Item(Object(Optional, HasDefault), String(Optional, HasDefault)): PrivateScope, Public, HideBySig, SpecialName
Class HarmonyLib.Code+Ldelem_I1_: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :HarmonyLib.CodeMatch
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Ldelem_I1_ Item [System.Object, System.String] 'get ' : 
  Methods:
    get_Item(Object(Optional, HasDefault), String(Optional, HasDefault)): PrivateScope, Public, HideBySig, SpecialName
Class HarmonyLib.Code+Ldelem_U1_: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :HarmonyLib.CodeMatch
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Ldelem_U1_ Item [System.Object, System.String] 'get ' : 
  Methods:
    get_Item(Object(Optional, HasDefault), String(Optional, HasDefault)): PrivateScope, Public, HideBySig, SpecialName
Class HarmonyLib.Code+Ldelem_I2_: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :HarmonyLib.CodeMatch
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Ldelem_I2_ Item [System.Object, System.String] 'get ' : 
  Methods:
    get_Item(Object(Optional, HasDefault), String(Optional, HasDefault)): PrivateScope, Public, HideBySig, SpecialName
Class HarmonyLib.Code+Ldelem_U2_: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :HarmonyLib.CodeMatch
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Ldelem_U2_ Item [System.Object, System.String] 'get ' : 
  Methods:
    get_Item(Object(Optional, HasDefault), String(Optional, HasDefault)): PrivateScope, Public, HideBySig, SpecialName
Class HarmonyLib.Code+Ldelem_I4_: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :HarmonyLib.CodeMatch
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Ldelem_I4_ Item [System.Object, System.String] 'get ' : 
  Methods:
    get_Item(Object(Optional, HasDefault), String(Optional, HasDefault)): PrivateScope, Public, HideBySig, SpecialName
Class HarmonyLib.Code+Ldelem_U4_: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :HarmonyLib.CodeMatch
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Ldelem_U4_ Item [System.Object, System.String] 'get ' : 
  Methods:
    get_Item(Object(Optional, HasDefault), String(Optional, HasDefault)): PrivateScope, Public, HideBySig, SpecialName
Class HarmonyLib.Code+Ldelem_I8_: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :HarmonyLib.CodeMatch
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Ldelem_I8_ Item [System.Object, System.String] 'get ' : 
  Methods:
    get_Item(Object(Optional, HasDefault), String(Optional, HasDefault)): PrivateScope, Public, HideBySig, SpecialName
Class HarmonyLib.Code+Ldelem_I_: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :HarmonyLib.CodeMatch
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Ldelem_I_ Item [System.Object, System.String] 'get ' : 
  Methods:
    get_Item(Object(Optional, HasDefault), String(Optional, HasDefault)): PrivateScope, Public, HideBySig, SpecialName
Class HarmonyLib.Code+Ldelem_R4_: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :HarmonyLib.CodeMatch
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Ldelem_R4_ Item [System.Object, System.String] 'get ' : 
  Methods:
    get_Item(Object(Optional, HasDefault), String(Optional, HasDefault)): PrivateScope, Public, HideBySig, SpecialName
Class HarmonyLib.Code+Ldelem_R8_: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :HarmonyLib.CodeMatch
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Ldelem_R8_ Item [System.Object, System.String] 'get ' : 
  Methods:
    get_Item(Object(Optional, HasDefault), String(Optional, HasDefault)): PrivateScope, Public, HideBySig, SpecialName
Class HarmonyLib.Code+Ldelem_Ref_: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :HarmonyLib.CodeMatch
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Ldelem_Ref_ Item [System.Object, System.String] 'get ' : 
  Methods:
    get_Item(Object(Optional, HasDefault), String(Optional, HasDefault)): PrivateScope, Public, HideBySig, SpecialName
Class HarmonyLib.Code+Stelem_I_: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :HarmonyLib.CodeMatch
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Stelem_I_ Item [System.Object, System.String] 'get ' : 
  Methods:
    get_Item(Object(Optional, HasDefault), String(Optional, HasDefault)): PrivateScope, Public, HideBySig, SpecialName
Class HarmonyLib.Code+Stelem_I1_: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :HarmonyLib.CodeMatch
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Stelem_I1_ Item [System.Object, System.String] 'get ' : 
  Methods:
    get_Item(Object(Optional, HasDefault), String(Optional, HasDefault)): PrivateScope, Public, HideBySig, SpecialName
Class HarmonyLib.Code+Stelem_I2_: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :HarmonyLib.CodeMatch
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Stelem_I2_ Item [System.Object, System.String] 'get ' : 
  Methods:
    get_Item(Object(Optional, HasDefault), String(Optional, HasDefault)): PrivateScope, Public, HideBySig, SpecialName
Class HarmonyLib.Code+Stelem_I4_: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :HarmonyLib.CodeMatch
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Stelem_I4_ Item [System.Object, System.String] 'get ' : 
  Methods:
    get_Item(Object(Optional, HasDefault), String(Optional, HasDefault)): PrivateScope, Public, HideBySig, SpecialName
Class HarmonyLib.Code+Stelem_I8_: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :HarmonyLib.CodeMatch
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Stelem_I8_ Item [System.Object, System.String] 'get ' : 
  Methods:
    get_Item(Object(Optional, HasDefault), String(Optional, HasDefault)): PrivateScope, Public, HideBySig, SpecialName
Class HarmonyLib.Code+Stelem_R4_: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :HarmonyLib.CodeMatch
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Stelem_R4_ Item [System.Object, System.String] 'get ' : 
  Methods:
    get_Item(Object(Optional, HasDefault), String(Optional, HasDefault)): PrivateScope, Public, HideBySig, SpecialName
Class HarmonyLib.Code+Stelem_R8_: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :HarmonyLib.CodeMatch
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Stelem_R8_ Item [System.Object, System.String] 'get ' : 
  Methods:
    get_Item(Object(Optional, HasDefault), String(Optional, HasDefault)): PrivateScope, Public, HideBySig, SpecialName
Class HarmonyLib.Code+Stelem_Ref_: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :HarmonyLib.CodeMatch
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Stelem_Ref_ Item [System.Object, System.String] 'get ' : 
  Methods:
    get_Item(Object(Optional, HasDefault), String(Optional, HasDefault)): PrivateScope, Public, HideBySig, SpecialName
Class HarmonyLib.Code+Ldelem_: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :HarmonyLib.CodeMatch
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Ldelem_ Item [System.Object, System.String] 'get ' : 
  Methods:
    get_Item(Object(Optional, HasDefault), String(Optional, HasDefault)): PrivateScope, Public, HideBySig, SpecialName
Class HarmonyLib.Code+Stelem_: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :HarmonyLib.CodeMatch
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Stelem_ Item [System.Object, System.String] 'get ' : 
  Methods:
    get_Item(Object(Optional, HasDefault), String(Optional, HasDefault)): PrivateScope, Public, HideBySig, SpecialName
Class HarmonyLib.Code+Unbox_Any_: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :HarmonyLib.CodeMatch
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Unbox_Any_ Item [System.Object, System.String] 'get ' : 
  Methods:
    get_Item(Object(Optional, HasDefault), String(Optional, HasDefault)): PrivateScope, Public, HideBySig, SpecialName
Class HarmonyLib.Code+Conv_Ovf_I1_: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :HarmonyLib.CodeMatch
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Conv_Ovf_I1_ Item [System.Object, System.String] 'get ' : 
  Methods:
    get_Item(Object(Optional, HasDefault), String(Optional, HasDefault)): PrivateScope, Public, HideBySig, SpecialName
Class HarmonyLib.Code+Conv_Ovf_U1_: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :HarmonyLib.CodeMatch
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Conv_Ovf_U1_ Item [System.Object, System.String] 'get ' : 
  Methods:
    get_Item(Object(Optional, HasDefault), String(Optional, HasDefault)): PrivateScope, Public, HideBySig, SpecialName
Class HarmonyLib.Code+Conv_Ovf_I2_: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :HarmonyLib.CodeMatch
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Conv_Ovf_I2_ Item [System.Object, System.String] 'get ' : 
  Methods:
    get_Item(Object(Optional, HasDefault), String(Optional, HasDefault)): PrivateScope, Public, HideBySig, SpecialName
Class HarmonyLib.Code+Conv_Ovf_U2_: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :HarmonyLib.CodeMatch
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Conv_Ovf_U2_ Item [System.Object, System.String] 'get ' : 
  Methods:
    get_Item(Object(Optional, HasDefault), String(Optional, HasDefault)): PrivateScope, Public, HideBySig, SpecialName
Class HarmonyLib.Code+Conv_Ovf_I4_: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :HarmonyLib.CodeMatch
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Conv_Ovf_I4_ Item [System.Object, System.String] 'get ' : 
  Methods:
    get_Item(Object(Optional, HasDefault), String(Optional, HasDefault)): PrivateScope, Public, HideBySig, SpecialName
Class HarmonyLib.Code+Conv_Ovf_U4_: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :HarmonyLib.CodeMatch
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Conv_Ovf_U4_ Item [System.Object, System.String] 'get ' : 
  Methods:
    get_Item(Object(Optional, HasDefault), String(Optional, HasDefault)): PrivateScope, Public, HideBySig, SpecialName
Class HarmonyLib.Code+Conv_Ovf_I8_: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :HarmonyLib.CodeMatch
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Conv_Ovf_I8_ Item [System.Object, System.String] 'get ' : 
  Methods:
    get_Item(Object(Optional, HasDefault), String(Optional, HasDefault)): PrivateScope, Public, HideBySig, SpecialName
Class HarmonyLib.Code+Conv_Ovf_U8_: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :HarmonyLib.CodeMatch
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Conv_Ovf_U8_ Item [System.Object, System.String] 'get ' : 
  Methods:
    get_Item(Object(Optional, HasDefault), String(Optional, HasDefault)): PrivateScope, Public, HideBySig, SpecialName
Class HarmonyLib.Code+Refanyval_: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :HarmonyLib.CodeMatch
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Refanyval_ Item [System.Object, System.String] 'get ' : 
  Methods:
    get_Item(Object(Optional, HasDefault), String(Optional, HasDefault)): PrivateScope, Public, HideBySig, SpecialName
Class HarmonyLib.Code+Ckfinite_: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :HarmonyLib.CodeMatch
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Ckfinite_ Item [System.Object, System.String] 'get ' : 
  Methods:
    get_Item(Object(Optional, HasDefault), String(Optional, HasDefault)): PrivateScope, Public, HideBySig, SpecialName
Class HarmonyLib.Code+Mkrefany_: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :HarmonyLib.CodeMatch
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Mkrefany_ Item [System.Object, System.String] 'get ' : 
  Methods:
    get_Item(Object(Optional, HasDefault), String(Optional, HasDefault)): PrivateScope, Public, HideBySig, SpecialName
Class HarmonyLib.Code+Ldtoken_: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :HarmonyLib.CodeMatch
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Ldtoken_ Item [System.Object, System.String] 'get ' : 
  Methods:
    get_Item(Object(Optional, HasDefault), String(Optional, HasDefault)): PrivateScope, Public, HideBySig, SpecialName
Class HarmonyLib.Code+Conv_U2_: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :HarmonyLib.CodeMatch
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Conv_U2_ Item [System.Object, System.String] 'get ' : 
  Methods:
    get_Item(Object(Optional, HasDefault), String(Optional, HasDefault)): PrivateScope, Public, HideBySig, SpecialName
Class HarmonyLib.Code+Conv_U1_: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :HarmonyLib.CodeMatch
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Conv_U1_ Item [System.Object, System.String] 'get ' : 
  Methods:
    get_Item(Object(Optional, HasDefault), String(Optional, HasDefault)): PrivateScope, Public, HideBySig, SpecialName
Class HarmonyLib.Code+Conv_I_: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :HarmonyLib.CodeMatch
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Conv_I_ Item [System.Object, System.String] 'get ' : 
  Methods:
    get_Item(Object(Optional, HasDefault), String(Optional, HasDefault)): PrivateScope, Public, HideBySig, SpecialName
Class HarmonyLib.Code+Conv_Ovf_I_: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :HarmonyLib.CodeMatch
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Conv_Ovf_I_ Item [System.Object, System.String] 'get ' : 
  Methods:
    get_Item(Object(Optional, HasDefault), String(Optional, HasDefault)): PrivateScope, Public, HideBySig, SpecialName
Class HarmonyLib.Code+Conv_Ovf_U_: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :HarmonyLib.CodeMatch
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Conv_Ovf_U_ Item [System.Object, System.String] 'get ' : 
  Methods:
    get_Item(Object(Optional, HasDefault), String(Optional, HasDefault)): PrivateScope, Public, HideBySig, SpecialName
Class HarmonyLib.Code+Add_Ovf_: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :HarmonyLib.CodeMatch
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Add_Ovf_ Item [System.Object, System.String] 'get ' : 
  Methods:
    get_Item(Object(Optional, HasDefault), String(Optional, HasDefault)): PrivateScope, Public, HideBySig, SpecialName
Class HarmonyLib.Code+Add_Ovf_Un_: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :HarmonyLib.CodeMatch
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Add_Ovf_Un_ Item [System.Object, System.String] 'get ' : 
  Methods:
    get_Item(Object(Optional, HasDefault), String(Optional, HasDefault)): PrivateScope, Public, HideBySig, SpecialName
Class HarmonyLib.Code+Mul_Ovf_: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :HarmonyLib.CodeMatch
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Mul_Ovf_ Item [System.Object, System.String] 'get ' : 
  Methods:
    get_Item(Object(Optional, HasDefault), String(Optional, HasDefault)): PrivateScope, Public, HideBySig, SpecialName
Class HarmonyLib.Code+Mul_Ovf_Un_: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :HarmonyLib.CodeMatch
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Mul_Ovf_Un_ Item [System.Object, System.String] 'get ' : 
  Methods:
    get_Item(Object(Optional, HasDefault), String(Optional, HasDefault)): PrivateScope, Public, HideBySig, SpecialName
Class HarmonyLib.Code+Sub_Ovf_: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :HarmonyLib.CodeMatch
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Sub_Ovf_ Item [System.Object, System.String] 'get ' : 
  Methods:
    get_Item(Object(Optional, HasDefault), String(Optional, HasDefault)): PrivateScope, Public, HideBySig, SpecialName
Class HarmonyLib.Code+Sub_Ovf_Un_: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :HarmonyLib.CodeMatch
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Sub_Ovf_Un_ Item [System.Object, System.String] 'get ' : 
  Methods:
    get_Item(Object(Optional, HasDefault), String(Optional, HasDefault)): PrivateScope, Public, HideBySig, SpecialName
Class HarmonyLib.Code+Endfinally_: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :HarmonyLib.CodeMatch
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Endfinally_ Item [System.Object, System.String] 'get ' : 
  Methods:
    get_Item(Object(Optional, HasDefault), String(Optional, HasDefault)): PrivateScope, Public, HideBySig, SpecialName
Class HarmonyLib.Code+Leave_: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :HarmonyLib.CodeMatch
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Leave_ Item [System.Object, System.String] 'get ' : 
  Methods:
    get_Item(Object(Optional, HasDefault), String(Optional, HasDefault)): PrivateScope, Public, HideBySig, SpecialName
Class HarmonyLib.Code+Leave_S_: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :HarmonyLib.CodeMatch
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Leave_S_ Item [System.Object, System.String] 'get ' : 
  Methods:
    get_Item(Object(Optional, HasDefault), String(Optional, HasDefault)): PrivateScope, Public, HideBySig, SpecialName
Class HarmonyLib.Code+Stind_I_: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :HarmonyLib.CodeMatch
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Stind_I_ Item [System.Object, System.String] 'get ' : 
  Methods:
    get_Item(Object(Optional, HasDefault), String(Optional, HasDefault)): PrivateScope, Public, HideBySig, SpecialName
Class HarmonyLib.Code+Conv_U_: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :HarmonyLib.CodeMatch
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Conv_U_ Item [System.Object, System.String] 'get ' : 
  Methods:
    get_Item(Object(Optional, HasDefault), String(Optional, HasDefault)): PrivateScope, Public, HideBySig, SpecialName
Class HarmonyLib.Code+Prefix7_: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :HarmonyLib.CodeMatch
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Prefix7_ Item [System.Object, System.String] 'get ' : 
  Methods:
    get_Item(Object(Optional, HasDefault), String(Optional, HasDefault)): PrivateScope, Public, HideBySig, SpecialName
Class HarmonyLib.Code+Prefix6_: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :HarmonyLib.CodeMatch
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Prefix6_ Item [System.Object, System.String] 'get ' : 
  Methods:
    get_Item(Object(Optional, HasDefault), String(Optional, HasDefault)): PrivateScope, Public, HideBySig, SpecialName
Class HarmonyLib.Code+Prefix5_: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :HarmonyLib.CodeMatch
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Prefix5_ Item [System.Object, System.String] 'get ' : 
  Methods:
    get_Item(Object(Optional, HasDefault), String(Optional, HasDefault)): PrivateScope, Public, HideBySig, SpecialName
Class HarmonyLib.Code+Prefix4_: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :HarmonyLib.CodeMatch
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Prefix4_ Item [System.Object, System.String] 'get ' : 
  Methods:
    get_Item(Object(Optional, HasDefault), String(Optional, HasDefault)): PrivateScope, Public, HideBySig, SpecialName
Class HarmonyLib.Code+Prefix3_: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :HarmonyLib.CodeMatch
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Prefix3_ Item [System.Object, System.String] 'get ' : 
  Methods:
    get_Item(Object(Optional, HasDefault), String(Optional, HasDefault)): PrivateScope, Public, HideBySig, SpecialName
Class HarmonyLib.Code+Prefix2_: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :HarmonyLib.CodeMatch
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Prefix2_ Item [System.Object, System.String] 'get ' : 
  Methods:
    get_Item(Object(Optional, HasDefault), String(Optional, HasDefault)): PrivateScope, Public, HideBySig, SpecialName
Class HarmonyLib.Code+Prefix1_: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :HarmonyLib.CodeMatch
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Prefix1_ Item [System.Object, System.String] 'get ' : 
  Methods:
    get_Item(Object(Optional, HasDefault), String(Optional, HasDefault)): PrivateScope, Public, HideBySig, SpecialName
Class HarmonyLib.Code+Prefixref_: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :HarmonyLib.CodeMatch
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Prefixref_ Item [System.Object, System.String] 'get ' : 
  Methods:
    get_Item(Object(Optional, HasDefault), String(Optional, HasDefault)): PrivateScope, Public, HideBySig, SpecialName
Class HarmonyLib.Code+Arglist_: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :HarmonyLib.CodeMatch
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Arglist_ Item [System.Object, System.String] 'get ' : 
  Methods:
    get_Item(Object(Optional, HasDefault), String(Optional, HasDefault)): PrivateScope, Public, HideBySig, SpecialName
Class HarmonyLib.Code+Ceq_: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :HarmonyLib.CodeMatch
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Ceq_ Item [System.Object, System.String] 'get ' : 
  Methods:
    get_Item(Object(Optional, HasDefault), String(Optional, HasDefault)): PrivateScope, Public, HideBySig, SpecialName
Class HarmonyLib.Code+Cgt_: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :HarmonyLib.CodeMatch
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Cgt_ Item [System.Object, System.String] 'get ' : 
  Methods:
    get_Item(Object(Optional, HasDefault), String(Optional, HasDefault)): PrivateScope, Public, HideBySig, SpecialName
Class HarmonyLib.Code+Cgt_Un_: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :HarmonyLib.CodeMatch
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Cgt_Un_ Item [System.Object, System.String] 'get ' : 
  Methods:
    get_Item(Object(Optional, HasDefault), String(Optional, HasDefault)): PrivateScope, Public, HideBySig, SpecialName
Class HarmonyLib.Code+Clt_: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :HarmonyLib.CodeMatch
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Clt_ Item [System.Object, System.String] 'get ' : 
  Methods:
    get_Item(Object(Optional, HasDefault), String(Optional, HasDefault)): PrivateScope, Public, HideBySig, SpecialName
Class HarmonyLib.Code+Clt_Un_: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :HarmonyLib.CodeMatch
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Clt_Un_ Item [System.Object, System.String] 'get ' : 
  Methods:
    get_Item(Object(Optional, HasDefault), String(Optional, HasDefault)): PrivateScope, Public, HideBySig, SpecialName
Class HarmonyLib.Code+Ldftn_: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :HarmonyLib.CodeMatch
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Ldftn_ Item [System.Object, System.String] 'get ' : 
  Methods:
    get_Item(Object(Optional, HasDefault), String(Optional, HasDefault)): PrivateScope, Public, HideBySig, SpecialName
Class HarmonyLib.Code+Ldvirtftn_: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :HarmonyLib.CodeMatch
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Ldvirtftn_ Item [System.Object, System.String] 'get ' : 
  Methods:
    get_Item(Object(Optional, HasDefault), String(Optional, HasDefault)): PrivateScope, Public, HideBySig, SpecialName
Class HarmonyLib.Code+Ldarg_: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :HarmonyLib.CodeMatch
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Ldarg_ Item [System.Object, System.String] 'get ' : 
  Methods:
    get_Item(Object(Optional, HasDefault), String(Optional, HasDefault)): PrivateScope, Public, HideBySig, SpecialName
Class HarmonyLib.Code+Ldarga_: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :HarmonyLib.CodeMatch
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Ldarga_ Item [System.Object, System.String] 'get ' : 
  Methods:
    get_Item(Object(Optional, HasDefault), String(Optional, HasDefault)): PrivateScope, Public, HideBySig, SpecialName
Class HarmonyLib.Code+Starg_: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :HarmonyLib.CodeMatch
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Starg_ Item [System.Object, System.String] 'get ' : 
  Methods:
    get_Item(Object(Optional, HasDefault), String(Optional, HasDefault)): PrivateScope, Public, HideBySig, SpecialName
Class HarmonyLib.Code+Ldloc_: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :HarmonyLib.CodeMatch
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Ldloc_ Item [System.Object, System.String] 'get ' : 
  Methods:
    get_Item(Object(Optional, HasDefault), String(Optional, HasDefault)): PrivateScope, Public, HideBySig, SpecialName
Class HarmonyLib.Code+Ldloca_: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :HarmonyLib.CodeMatch
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Ldloca_ Item [System.Object, System.String] 'get ' : 
  Methods:
    get_Item(Object(Optional, HasDefault), String(Optional, HasDefault)): PrivateScope, Public, HideBySig, SpecialName
Class HarmonyLib.Code+Stloc_: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :HarmonyLib.CodeMatch
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Stloc_ Item [System.Object, System.String] 'get ' : 
  Methods:
    get_Item(Object(Optional, HasDefault), String(Optional, HasDefault)): PrivateScope, Public, HideBySig, SpecialName
Class HarmonyLib.Code+Localloc_: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :HarmonyLib.CodeMatch
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Localloc_ Item [System.Object, System.String] 'get ' : 
  Methods:
    get_Item(Object(Optional, HasDefault), String(Optional, HasDefault)): PrivateScope, Public, HideBySig, SpecialName
Class HarmonyLib.Code+Endfilter_: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :HarmonyLib.CodeMatch
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Endfilter_ Item [System.Object, System.String] 'get ' : 
  Methods:
    get_Item(Object(Optional, HasDefault), String(Optional, HasDefault)): PrivateScope, Public, HideBySig, SpecialName
Class HarmonyLib.Code+Unaligned_: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :HarmonyLib.CodeMatch
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Unaligned_ Item [System.Object, System.String] 'get ' : 
  Methods:
    get_Item(Object(Optional, HasDefault), String(Optional, HasDefault)): PrivateScope, Public, HideBySig, SpecialName
Class HarmonyLib.Code+Volatile_: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :HarmonyLib.CodeMatch
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Volatile_ Item [System.Object, System.String] 'get ' : 
  Methods:
    get_Item(Object(Optional, HasDefault), String(Optional, HasDefault)): PrivateScope, Public, HideBySig, SpecialName
Class HarmonyLib.Code+Tailcall_: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :HarmonyLib.CodeMatch
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Tailcall_ Item [System.Object, System.String] 'get ' : 
  Methods:
    get_Item(Object(Optional, HasDefault), String(Optional, HasDefault)): PrivateScope, Public, HideBySig, SpecialName
Class HarmonyLib.Code+Initobj_: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :HarmonyLib.CodeMatch
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Initobj_ Item [System.Object, System.String] 'get ' : 
  Methods:
    get_Item(Object(Optional, HasDefault), String(Optional, HasDefault)): PrivateScope, Public, HideBySig, SpecialName
Class HarmonyLib.Code+Constrained_: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :HarmonyLib.CodeMatch
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Constrained_ Item [System.Object, System.String] 'get ' : 
  Methods:
    get_Item(Object(Optional, HasDefault), String(Optional, HasDefault)): PrivateScope, Public, HideBySig, SpecialName
Class HarmonyLib.Code+Cpblk_: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :HarmonyLib.CodeMatch
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Cpblk_ Item [System.Object, System.String] 'get ' : 
  Methods:
    get_Item(Object(Optional, HasDefault), String(Optional, HasDefault)): PrivateScope, Public, HideBySig, SpecialName
Class HarmonyLib.Code+Initblk_: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :HarmonyLib.CodeMatch
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Initblk_ Item [System.Object, System.String] 'get ' : 
  Methods:
    get_Item(Object(Optional, HasDefault), String(Optional, HasDefault)): PrivateScope, Public, HideBySig, SpecialName
Class HarmonyLib.Code+Rethrow_: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :HarmonyLib.CodeMatch
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Rethrow_ Item [System.Object, System.String] 'get ' : 
  Methods:
    get_Item(Object(Optional, HasDefault), String(Optional, HasDefault)): PrivateScope, Public, HideBySig, SpecialName
Class HarmonyLib.Code+Sizeof_: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :HarmonyLib.CodeMatch
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Sizeof_ Item [System.Object, System.String] 'get ' : 
  Methods:
    get_Item(Object(Optional, HasDefault), String(Optional, HasDefault)): PrivateScope, Public, HideBySig, SpecialName
Class HarmonyLib.Code+Refanytype_: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :HarmonyLib.CodeMatch
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Refanytype_ Item [System.Object, System.String] 'get ' : 
  Methods:
    get_Item(Object(Optional, HasDefault), String(Optional, HasDefault)): PrivateScope, Public, HideBySig, SpecialName
Class HarmonyLib.Code+Readonly_: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :HarmonyLib.CodeMatch
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Readonly_ Item [System.Object, System.String] 'get ' : 
  Methods:
    get_Item(Object(Optional, HasDefault), String(Optional, HasDefault)): PrivateScope, Public, HideBySig, SpecialName
Class HarmonyLib.CodeMatch: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :HarmonyLib.CodeInstruction
    Void .ctor(System.Nullable`1[System.Reflection.Emit.OpCode], System.Object, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Linq.Expressions.Expression`1[System.Action], System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Linq.Expressions.LambdaExpression, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(HarmonyLib.CodeInstruction, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Func`2[HarmonyLib.CodeInstruction,System.Boolean], System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    System.String name : Public
    System.Collections.Generic.HashSet`1[System.Reflection.Emit.OpCode] opcodeSet : Public
    System.Collections.Generic.List`1[System.Object] operands : Public
    System.Collections.Generic.List`1[System.Int32] jumpsFrom : Public
    System.Collections.Generic.List`1[System.Int32] jumpsTo : Public
    System.Func`2[HarmonyLib.CodeInstruction,System.Boolean] predicate : Public
  Properties:
    System.Collections.Generic.List`1[System.Reflection.Emit.OpCode] opcodes 'get set' :  (Obsolete)
  Methods:
    get_opcodes(): PrivateScope, Public, HideBySig, SpecialName
    set_opcodes(List`1): PrivateScope, Public, HideBySig, SpecialName
    Set(Object, String): PrivateScope, Assembly, HideBySig
    Set(OpCode, Object, String): PrivateScope, Assembly, HideBySig
    WithOpcodes(HashSet`1, Object(Optional, HasDefault), String(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    Matches(List`1, CodeInstruction): PrivateScope, Assembly, HideBySig
    IsLdarg(Nullable`1(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    IsLdarga(Nullable`1(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    IsStarg(Nullable`1(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    IsLdloc(LocalBuilder(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    IsStloc(LocalBuilder(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    Calls(MethodInfo): PrivateScope, Public, Static, HideBySig
    LoadsConstant(): PrivateScope, Public, Static, HideBySig
    LoadsConstant(Int64): PrivateScope, Public, Static, HideBySig
    LoadsConstant(Double): PrivateScope, Public, Static, HideBySig
    LoadsConstant(Enum): PrivateScope, Public, Static, HideBySig
    LoadsConstant(String): PrivateScope, Public, Static, HideBySig
    LoadsField(FieldInfo, Boolean(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    StoresField(FieldInfo): PrivateScope, Public, Static, HideBySig
    Calls(Expression`1): PrivateScope, Public, Static, HideBySig
    Calls(LambdaExpression): PrivateScope, Public, Static, HideBySig
    LoadsLocal(Boolean(Optional, HasDefault), String(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    StoresLocal(String(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    LoadsArgument(Boolean(Optional, HasDefault), String(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    StoresArgument(String(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    Branches(String(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
Class HarmonyLib.CodeMatcher: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Collections.Generic.IEnumerable`1[HarmonyLib.CodeInstruction], System.Reflection.Emit.ILGenerator): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 Pos  'get set' : 
    Int32 Length 'get ' : 
    Boolean IsValid 'get ' : 
    Boolean IsInvalid 'get ' : 
    Int32 Remaining 'get ' : 
    System.Reflection.Emit.OpCode& Opcode 'get ' : 
    System.Object& Operand 'get ' : 
    System.Collections.Generic.List`1[System.Reflection.Emit.Label]& Labels 'get ' : 
    System.Collections.Generic.List`1[HarmonyLib.ExceptionBlock]& Blocks 'get ' : 
    HarmonyLib.CodeInstruction Instruction 'get ' : 
  Methods:
    get_Pos(): PrivateScope, Public, HideBySig, SpecialName
    get_Length(): PrivateScope, Public, HideBySig, SpecialName
    get_IsValid(): PrivateScope, Public, HideBySig, SpecialName
    get_IsInvalid(): PrivateScope, Public, HideBySig, SpecialName
    get_Remaining(): PrivateScope, Public, HideBySig, SpecialName
    get_Opcode(): PrivateScope, Public, HideBySig, SpecialName
    get_Operand(): PrivateScope, Public, HideBySig, SpecialName
    get_Labels(): PrivateScope, Public, HideBySig, SpecialName
    get_Blocks(): PrivateScope, Public, HideBySig, SpecialName
    Clone(): PrivateScope, Public, HideBySig
    get_Instruction(): PrivateScope, Public, HideBySig, SpecialName
    InstructionAt(Int32): PrivateScope, Public, HideBySig
    Instructions(): PrivateScope, Public, HideBySig
    InstructionEnumeration(): PrivateScope, Public, HideBySig
    Instructions(Int32): PrivateScope, Public, HideBySig
    InstructionsInRange(Int32, Int32): PrivateScope, Public, HideBySig
    InstructionsWithOffsets(Int32, Int32): PrivateScope, Public, HideBySig
    DistinctLabels(IEnumerable`1): PrivateScope, Public, HideBySig
    ReportFailure(MethodBase, Action`1): PrivateScope, Public, HideBySig
    ThrowIfInvalid(String): PrivateScope, Public, HideBySig
    ThrowIfNotMatch(String, CodeMatch[]): PrivateScope, Public, HideBySig
    ThrowIfNotMatchForward(String, CodeMatch[]): PrivateScope, Public, HideBySig
    ThrowIfNotMatchBack(String, CodeMatch[]): PrivateScope, Public, HideBySig
    ThrowIfFalse(String, Func`2): PrivateScope, Public, HideBySig
    SetInstruction(CodeInstruction): PrivateScope, Public, HideBySig
    SetInstructionAndAdvance(CodeInstruction): PrivateScope, Public, HideBySig
    Set(OpCode, Object): PrivateScope, Public, HideBySig
    SetAndAdvance(OpCode, Object): PrivateScope, Public, HideBySig
    SetOpcodeAndAdvance(OpCode): PrivateScope, Public, HideBySig
    SetOperandAndAdvance(Object): PrivateScope, Public, HideBySig
    DeclareLocal(Type, LocalBuilder&(Out)): PrivateScope, Public, HideBySig
    DefineLabel(Label&(Out)): PrivateScope, Public, HideBySig
    CreateLabel(Label&(Out)): PrivateScope, Public, HideBySig
    CreateLabelAt(Int32, Label&(Out)): PrivateScope, Public, HideBySig
    CreateLabelWithOffsets(Int32, Label&(Out)): PrivateScope, Public, HideBySig
    AddLabels(IEnumerable`1): PrivateScope, Public, HideBySig
    AddLabelsAt(Int32, IEnumerable`1): PrivateScope, Public, HideBySig
    SetJumpTo(OpCode, Int32, Label&(Out)): PrivateScope, Public, HideBySig
    Insert(CodeInstruction[]): PrivateScope, Public, HideBySig
    Insert(IEnumerable`1): PrivateScope, Public, HideBySig
    InsertBranch(OpCode, Int32): PrivateScope, Public, HideBySig
    InsertAndAdvance(CodeInstruction[]): PrivateScope, Public, HideBySig
    InsertAndAdvance(IEnumerable`1): PrivateScope, Public, HideBySig
    InsertBranchAndAdvance(OpCode, Int32): PrivateScope, Public, HideBySig
    RemoveInstruction(): PrivateScope, Public, HideBySig
    RemoveInstructions(Int32): PrivateScope, Public, HideBySig
    RemoveInstructionsInRange(Int32, Int32): PrivateScope, Public, HideBySig
    RemoveInstructionsWithOffsets(Int32, Int32): PrivateScope, Public, HideBySig
    Advance(Int32): PrivateScope, Public, HideBySig
    Start(): PrivateScope, Public, HideBySig
    End(): PrivateScope, Public, HideBySig
    SearchForward(Func`2): PrivateScope, Public, HideBySig
    SearchBackwards(Func`2): PrivateScope, Public, HideBySig
    MatchStartForward(CodeMatch[]): PrivateScope, Public, HideBySig
    MatchEndForward(CodeMatch[]): PrivateScope, Public, HideBySig
    MatchStartBackwards(CodeMatch[]): PrivateScope, Public, HideBySig
    MatchEndBackwards(CodeMatch[]): PrivateScope, Public, HideBySig
    Repeat(Action`1, Action`1(Optional, HasDefault)): PrivateScope, Public, HideBySig
    NamedMatch(String): PrivateScope, Public, HideBySig
Class HarmonyLib.GeneralExtensions: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit
  Methods:
    Join(IEnumerable`1, Func`2(Optional, HasDefault), String(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    Description(Type[]): PrivateScope, Public, Static, HideBySig
    FullDescription(Type): PrivateScope, Public, Static, HideBySig
    FullDescription(MethodBase): PrivateScope, Public, Static, HideBySig
    Types(ParameterInfo[]): PrivateScope, Public, Static, HideBySig
    GetValueSafe(Dictionary`2, S): PrivateScope, Public, Static, HideBySig
    GetTypedValue(Dictionary`2, String): PrivateScope, Public, Static, HideBySig
    ToLiteral(String, String(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
Class HarmonyLib.CodeInstructionExtensions: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit
  Fields:
    System.Collections.Generic.HashSet`1[System.Reflection.Emit.OpCode] opcodesCalling : Assembly, Static, InitOnly
    System.Collections.Generic.HashSet`1[System.Reflection.Emit.OpCode] opcodesLoadingLocalByAddress : Assembly, Static, InitOnly
    System.Collections.Generic.HashSet`1[System.Reflection.Emit.OpCode] opcodesLoadingLocalNormal : Assembly, Static, InitOnly
    System.Collections.Generic.HashSet`1[System.Reflection.Emit.OpCode] opcodesStoringLocal : Assembly, Static, InitOnly
    System.Collections.Generic.HashSet`1[System.Reflection.Emit.OpCode] opcodesLoadingArgumentByAddress : Assembly, Static, InitOnly
    System.Collections.Generic.HashSet`1[System.Reflection.Emit.OpCode] opcodesLoadingArgumentNormal : Assembly, Static, InitOnly
    System.Collections.Generic.HashSet`1[System.Reflection.Emit.OpCode] opcodesStoringArgument : Assembly, Static, InitOnly
    System.Collections.Generic.HashSet`1[System.Reflection.Emit.OpCode] opcodesBranching : Assembly, Static, InitOnly
  Methods:
    IsValid(OpCode): PrivateScope, Public, Static, HideBySig
    OperandIs(CodeInstruction, Object): PrivateScope, Public, Static, HideBySig
    OperandIs(CodeInstruction, MemberInfo): PrivateScope, Public, Static, HideBySig
    Is(CodeInstruction, OpCode, Object): PrivateScope, Public, Static, HideBySig
    Is(CodeInstruction, OpCode, MemberInfo): PrivateScope, Public, Static, HideBySig
    IsLdarg(CodeInstruction, Nullable`1(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    IsLdarga(CodeInstruction, Nullable`1(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    IsStarg(CodeInstruction, Nullable`1(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    IsLdloc(CodeInstruction, LocalBuilder(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    IsStloc(CodeInstruction, LocalBuilder(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    Branches(CodeInstruction, Nullable`1&(Out)): PrivateScope, Public, Static, HideBySig
    Calls(CodeInstruction, MethodInfo): PrivateScope, Public, Static, HideBySig
    LoadsConstant(CodeInstruction): PrivateScope, Public, Static, HideBySig
    LoadsConstant(CodeInstruction, Int64): PrivateScope, Public, Static, HideBySig
    LoadsConstant(CodeInstruction, Double): PrivateScope, Public, Static, HideBySig
    LoadsConstant(CodeInstruction, Enum): PrivateScope, Public, Static, HideBySig
    LoadsConstant(CodeInstruction, String): PrivateScope, Public, Static, HideBySig
    LoadsField(CodeInstruction, FieldInfo, Boolean(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    StoresField(CodeInstruction, FieldInfo): PrivateScope, Public, Static, HideBySig
    LocalIndex(CodeInstruction): PrivateScope, Public, Static, HideBySig
    ArgumentIndex(CodeInstruction): PrivateScope, Public, Static, HideBySig
    WithLabels(CodeInstruction, Label[]): PrivateScope, Public, Static, HideBySig
    WithLabels(CodeInstruction, IEnumerable`1): PrivateScope, Public, Static, HideBySig
    ExtractLabels(CodeInstruction): PrivateScope, Public, Static, HideBySig
    MoveLabelsTo(CodeInstruction, CodeInstruction): PrivateScope, Public, Static, HideBySig
    MoveLabelsFrom(CodeInstruction, CodeInstruction): PrivateScope, Public, Static, HideBySig
    WithBlocks(CodeInstruction, ExceptionBlock[]): PrivateScope, Public, Static, HideBySig
    WithBlocks(CodeInstruction, IEnumerable`1): PrivateScope, Public, Static, HideBySig
    ExtractBlocks(CodeInstruction): PrivateScope, Public, Static, HideBySig
    MoveBlocksTo(CodeInstruction, CodeInstruction): PrivateScope, Public, Static, HideBySig
    MoveBlocksFrom(CodeInstruction, CodeInstruction): PrivateScope, Public, Static, HideBySig
Class HarmonyLib.CodeInstructionsExtensions: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit
  Methods:
    Matches(IEnumerable`1, CodeMatch[]): PrivateScope, Public, Static, HideBySig
Class HarmonyLib.CollectionExtensions: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit
  Methods:
    Do(IEnumerable`1, Action`1): PrivateScope, Public, Static, HideBySig
    DoIf(IEnumerable`1, Func`2, Action`1): PrivateScope, Public, Static, HideBySig
    AddItem(IEnumerable`1, T): PrivateScope, Public, Static, HideBySig
    AddToArray(T[], T): PrivateScope, Public, Static, HideBySig
    AddRangeToArray(T[], T[]): PrivateScope, Public, Static, HideBySig
    Merge(IEnumerable`1, IEnumerable`1[]): PrivateScope, Assembly, Static, HideBySig
    TransformKeys(Dictionary`2, Func`2): PrivateScope, Assembly, Static, HideBySig
Class HarmonyLib.MethodBaseExtensions: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit
  Methods:
    HasMethodBody(MethodBase): PrivateScope, Public, Static, HideBySig
Class HarmonyLib.FileLog: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit
  Fields:
    Char indentChar : Public, Static
    Int32 indentLevel : Public, Static
  Properties:
    System.IO.StreamWriter LogWriter 'get set' : 
    System.String LogPath 'get ' : 
  Methods:
    get_LogWriter(): PrivateScope, Public, Static, HideBySig, SpecialName
    set_LogWriter(StreamWriter): PrivateScope, Public, Static, HideBySig, SpecialName
    get_LogPath(): PrivateScope, Public, Static, HideBySig, SpecialName
    ChangeIndent(Int32): PrivateScope, Public, Static, HideBySig
    LogBuffered(String): PrivateScope, Public, Static, HideBySig
    LogBuffered(List`1): PrivateScope, Public, Static, HideBySig
    GetBuffer(Boolean): PrivateScope, Public, Static, HideBySig
    SetBuffer(List`1): PrivateScope, Public, Static, HideBySig
    FlushBuffer(): PrivateScope, Public, Static, HideBySig
    Log(String): PrivateScope, Public, Static, HideBySig
    Debug(String): PrivateScope, Public, Static, HideBySig
    Reset(): PrivateScope, Public, Static, HideBySig
    LogBytes(Int64, Int32): PrivateScope, Public, Static, HideBySig
Class HarmonyLib.SymbolExtensions: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit
  Methods:
    GetMethodInfo(Expression`1): PrivateScope, Public, Static, HideBySig
    GetMethodInfo(Expression`1): PrivateScope, Public, Static, HideBySig
    GetMethodInfo(Expression`1): PrivateScope, Public, Static, HideBySig
    GetMethodInfo(LambdaExpression): PrivateScope, Public, Static, HideBySig
Class HarmonyLib.Tools: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Boolean isWindows : Assembly, Static, InitOnly
  Methods:
    TypColonName(String): PrivateScope, Assembly, Static, HideBySig
    ValidateFieldType(FieldInfo): PrivateScope, Assembly, Static, HideBySig
    FieldRefAccess(FieldInfo, Boolean): PrivateScope, Assembly, Static, HideBySig
    StructFieldRefAccess(FieldInfo): PrivateScope, Assembly, Static, HideBySig
    StaticFieldRefAccess(FieldInfo): PrivateScope, Assembly, Static, HideBySig
    GetInstanceField(Type, String): PrivateScope, Assembly, Static, HideBySig
    FieldRefNeedsClasscast(Type, Type): PrivateScope, Assembly, Static, HideBySig
    ValidateStructField(FieldInfo): PrivateScope, Assembly, Static, HideBySig
Struct HarmonyLib.Tools+TypeAndName: AutoLayout, AnsiClass, Class, NestedAssembly, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    System.Type type : Assembly
    System.String name : Assembly
Class HarmonyLib.Traverse`1[T]: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  Type parameter: T
    Void .ctor(HarmonyLib.Traverse): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    T Value    'get set' : 
  Methods:
    get_Value(): PrivateScope, Public, HideBySig, SpecialName
    set_Value(T): PrivateScope, Public, HideBySig, SpecialName
Class HarmonyLib.Traverse: AutoLayout, AnsiClass, Class, Public
    Void .ctor(System.Type): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Object): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    System.Action`2[HarmonyLib.Traverse,HarmonyLib.Traverse] CopyFields : Public, Static
  Methods:
    Create(Type): PrivateScope, Public, Static, HideBySig
    Create(): PrivateScope, Public, Static, HideBySig
    Create(Object): PrivateScope, Public, Static, HideBySig
    CreateWithType(String): PrivateScope, Public, Static, HideBySig
    GetValue(): PrivateScope, Public, HideBySig
    GetValue(): PrivateScope, Public, HideBySig
    GetValue(Object[]): PrivateScope, Public, HideBySig
    GetValue(Object[]): PrivateScope, Public, HideBySig
    SetValue(Object): PrivateScope, Public, HideBySig
    GetValueType(): PrivateScope, Public, HideBySig
    Type(String): PrivateScope, Public, HideBySig
    Field(String): PrivateScope, Public, HideBySig
    Field(String): PrivateScope, Public, HideBySig
    Fields(): PrivateScope, Public, HideBySig
    Property(String, Object[](Optional, HasDefault)): PrivateScope, Public, HideBySig
    Property(String, Object[](Optional, HasDefault)): PrivateScope, Public, HideBySig
    Properties(): PrivateScope, Public, HideBySig
    Method(String, Object[]): PrivateScope, Public, HideBySig
    Method(String, Type[], Object[](Optional, HasDefault)): PrivateScope, Public, HideBySig
    Methods(): PrivateScope, Public, HideBySig
    FieldExists(): PrivateScope, Public, HideBySig
    PropertyExists(): PrivateScope, Public, HideBySig
    MethodExists(): PrivateScope, Public, HideBySig
    TypeExists(): PrivateScope, Public, HideBySig
    IterateFields(Object, Action`1): PrivateScope, Public, Static, HideBySig
    IterateFields(Object, Object, Action`2): PrivateScope, Public, Static, HideBySig
    IterateFields(Object, Object, Action`3): PrivateScope, Public, Static, HideBySig
    IterateProperties(Object, Action`1): PrivateScope, Public, Static, HideBySig
    IterateProperties(Object, Object, Action`2): PrivateScope, Public, Static, HideBySig
    IterateProperties(Object, Object, Action`3): PrivateScope, Public, Static, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
Class Consts: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Fields:
    System.String AssemblyName = Mono.Cecil : Public, Static, Literal, HasDefault
    System.String PublicKey = 00240000048000009400000006020000002400005253413100040000010001002b5c9f7f04346c324a3176f8d3ee823bbf2d60efdbc35f86fd9e65ea3e6cd11bcdcba3a353e55133c8ac5c4caaba581b2c6dfff2cc2d0edc43959ddb86b973300a479a82419ef489c3225f1fe429a708507bd515835160e10bc743d20ca33ab9570cfd68d479fcf0bc797a763bec5d1000f0159ef619e709d915975e87beebaf : Public, Static, Literal, HasDefault
Class Mono.Disposable: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Methods:
    Owned(T): PrivateScope, Public, Static, HideBySig
    NotOwned(T): PrivateScope, Public, Static, HideBySig
Struct Mono.Disposable`1[T]: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  Type parameter: T, System.IDisposable,  ReferenceType
  :System.ValueType
    Void .ctor(T, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Fields:
    T value : Assembly, InitOnly
  Methods:
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Mono.Empty`1[T]: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Type parameter: T
  Fields:
    T[] Array : Public, Static, InitOnly
Class Mono.ArgumentNullOrEmptyException: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :System.ArgumentException
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Mono.MergeSort`1[T]: AutoLayout, AnsiClass, Class, BeforeFieldInit
  Type parameter: T
  Methods:
    Sort(T[], IComparer`1): PrivateScope, Public, Static, HideBySig
    Sort(T[], Int32, Int32, IComparer`1): PrivateScope, Public, Static, HideBySig
Class Mono.Security.Cryptography.CryptoConvert: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Methods:
    FromCapiKeyBlob(Byte[]): PrivateScope, Public, Static, HideBySig
    FromCapiKeyBlob(Byte[], Int32): PrivateScope, Public, Static, HideBySig
    ToCapiPublicKeyBlob(RSA): PrivateScope, Public, Static, HideBySig
Class Mono.Collections.Generic.Collection`1[T]: AutoLayout, AnsiClass, Class, BeforeFieldInit
  Type parameter: T
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Collections.Generic.ICollection`1[T]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Collections.Generic.IList`1[T]
    System.Collections.Generic.ICollection`1[T]
    System.Collections.Generic.IEnumerable`1[T]
    System.Collections.IEnumerable
    System.Collections.IList
    System.Collections.ICollection
  Fields:
    T[] items : Assembly
    Int32 size : Assembly
  Properties:
    Int32 Count 'get ' : 
    T Item [Int32] 'get set' : 
    Int32 Capacity 'get set' : 
  Methods:
    get_Count(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Item(Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Item(Int32, T): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Capacity(): PrivateScope, Public, HideBySig, SpecialName
    set_Capacity(Int32): PrivateScope, Public, HideBySig, SpecialName
    Add(T): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Contains(T): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    IndexOf(T): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Insert(Int32, T): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    RemoveAt(Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Remove(T): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Clear(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CopyTo(T[], Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ToArray(): PrivateScope, Public, HideBySig
    Grow(Int32): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride
    GetEnumerator(): PrivateScope, Public, HideBySig
Struct Mono.Collections.Generic.Collection`1+Enumerator[T]: AutoLayout, AnsiClass, Class, NestedPublic, SequentialLayout, Sealed, BeforeFieldInit
  Type parameter: T
  :System.ValueType
    Void .ctor(Mono.Collections.Generic.Collection`1[T]): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Collections.Generic.IEnumerator`1[T]
    System.IDisposable
    System.Collections.IEnumerator
  Properties:
    T Current  'get ' : 
  Methods:
    get_Current(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    MoveNext(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Reset(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Mono.Collections.Generic.ReadOnlyCollection`1[T]: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  Type parameter: T
  :Mono.Collections.Generic.Collection`1[T]
    Void .ctor(T[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Mono.Collections.Generic.Collection`1[T]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Mono.Collections.Generic.ReadOnlyCollection`1[T] Empty 'get ' : 
  Methods:
    get_Empty(): PrivateScope, Public, Static, HideBySig, SpecialName
    Grow(Int32): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
Class Mono.Cecil.Mixin: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Fields:
    System.Version ZeroVersion : Public, Static
    System.Object NoValue : Assembly, Static
    System.Object NotResolved : Assembly, Static
    Int32 NotResolvedMarker = -2 : Public, Static, Literal, HasDefault
    Int32 NoDataMarker = -1 : Public, Static, Literal, HasDefault
    System.String mscorlib = mscorlib : Public, Static, Literal, HasDefault
    System.String system_runtime = System.Runtime : Public, Static, Literal, HasDefault
    System.String system_private_corelib = System.Private.CoreLib : Public, Static, Literal, HasDefault
    System.String netstandard = netstandard : Public, Static, Literal, HasDefault
    Int32 TableCount = 58 : Public, Static, Literal, HasDefault
    Int32 CodedIndexCount = 14 : Public, Static, Literal, HasDefault
  Methods:
    IsNullOrEmpty(T[]): PrivateScope, Public, Static, HideBySig
    IsNullOrEmpty(Collection`1): PrivateScope, Public, Static, HideBySig
    Resize(T[], Int32): PrivateScope, Public, Static, HideBySig
    Add(T[], T): PrivateScope, Public, Static, HideBySig
    CheckVersion(Version): PrivateScope, Public, Static, HideBySig
    TryGetUniqueDocument(MethodDebugInformation, Document&(Out)): PrivateScope, Public, Static, HideBySig
    ResolveConstant(IConstantProvider, Object&, ModuleDefinition): PrivateScope, Public, Static, HideBySig
    GetHasCustomAttributes(ICustomAttributeProvider, ModuleDefinition): PrivateScope, Public, Static, HideBySig
    GetCustomAttributes(ICustomAttributeProvider, Collection`1&, ModuleDefinition): PrivateScope, Public, Static, HideBySig
    ContainsGenericParameter(IGenericInstance): PrivateScope, Public, Static, HideBySig
    GenericInstanceFullName(IGenericInstance, StringBuilder): PrivateScope, Public, Static, HideBySig
    GetHasGenericParameters(IGenericParameterProvider, ModuleDefinition): PrivateScope, Public, Static, HideBySig
    GetGenericParameters(IGenericParameterProvider, Collection`1&, ModuleDefinition): PrivateScope, Public, Static, HideBySig
    GetHasMarshalInfo(IMarshalInfoProvider, ModuleDefinition): PrivateScope, Public, Static, HideBySig
    GetMarshalInfo(IMarshalInfoProvider, MarshalInfo&, ModuleDefinition): PrivateScope, Public, Static, HideBySig
    GetAttributes(UInt32, UInt32): PrivateScope, Public, Static, HideBySig
    SetAttributes(UInt32, UInt32, Boolean): PrivateScope, Public, Static, HideBySig
    GetMaskedAttributes(UInt32, UInt32, UInt32): PrivateScope, Public, Static, HideBySig
    SetMaskedAttributes(UInt32, UInt32, UInt32, Boolean): PrivateScope, Public, Static, HideBySig
    GetAttributes(UInt16, UInt16): PrivateScope, Public, Static, HideBySig
    SetAttributes(UInt16, UInt16, Boolean): PrivateScope, Public, Static, HideBySig
    GetMaskedAttributes(UInt16, UInt16, UInt32): PrivateScope, Public, Static, HideBySig
    SetMaskedAttributes(UInt16, UInt16, UInt32, Boolean): PrivateScope, Public, Static, HideBySig
    HasImplicitThis(IMethodSignature): PrivateScope, Public, Static, HideBySig
    MethodSignatureFullName(IMethodSignature, StringBuilder): PrivateScope, Public, Static, HideBySig
    CheckModule(ModuleDefinition): PrivateScope, Public, Static, HideBySig
    TryGetAssemblyNameReference(ModuleDefinition, AssemblyNameReference, AssemblyNameReference&(Out)): PrivateScope, Public, Static, HideBySig
    GetParameter(MethodBody, Int32): PrivateScope, Public, Static, HideBySig
    GetVariable(MethodBody, Int32): PrivateScope, Public, Static, HideBySig
    GetSemantics(MethodDefinition, MethodSemanticsAttributes): PrivateScope, Public, Static, HideBySig
    SetSemantics(MethodDefinition, MethodSemanticsAttributes, Boolean): PrivateScope, Public, Static, HideBySig
    IsVarArg(IMethodSignature): PrivateScope, Public, Static, HideBySig
    GetSentinelPosition(IMethodSignature): PrivateScope, Public, Static, HideBySig
    CheckName(Object): PrivateScope, Public, Static, HideBySig
    CheckName(String): PrivateScope, Public, Static, HideBySig
    CheckFileName(String): PrivateScope, Public, Static, HideBySig
    CheckFullName(String): PrivateScope, Public, Static, HideBySig
    CheckStream(Object): PrivateScope, Public, Static, HideBySig
    CheckWriteSeek(Stream): PrivateScope, Public, Static, HideBySig
    CheckReadSeek(Stream): PrivateScope, Public, Static, HideBySig
    CheckType(Object): PrivateScope, Public, Static, HideBySig
    CheckType(Object, Argument): PrivateScope, Public, Static, HideBySig
    CheckField(Object): PrivateScope, Public, Static, HideBySig
    CheckMethod(Object): PrivateScope, Public, Static, HideBySig
    CheckParameters(Object): PrivateScope, Public, Static, HideBySig
    GetTimestamp(): PrivateScope, Public, Static, HideBySig
    HasImage(ModuleDefinition): PrivateScope, Public, Static, HideBySig
    GetFileName(Stream): PrivateScope, Public, Static, HideBySig
    ParseRuntime(String): PrivateScope, Public, Static, HideBySig
    RuntimeVersionString(TargetRuntime): PrivateScope, Public, Static, HideBySig
    IsWindowsMetadata(ModuleDefinition): PrivateScope, Public, Static, HideBySig
    ReadAll(Stream): PrivateScope, Public, Static, HideBySig
    Read(Object): PrivateScope, Public, Static, HideBySig
    GetHasSecurityDeclarations(ISecurityDeclarationProvider, ModuleDefinition): PrivateScope, Public, Static, HideBySig
    GetSecurityDeclarations(ISecurityDeclarationProvider, Collection`1&, ModuleDefinition): PrivateScope, Public, Static, HideBySig
    GetEnumUnderlyingType(TypeDefinition): PrivateScope, Public, Static, HideBySig
    GetNestedType(TypeDefinition, String): PrivateScope, Public, Static, HideBySig
    IsPrimitive(ElementType): PrivateScope, Public, Static, HideBySig
    TypeFullName(TypeReference): PrivateScope, Public, Static, HideBySig
    IsTypeOf(TypeReference, String, String): PrivateScope, Public, Static, HideBySig
    IsTypeSpecification(TypeReference): PrivateScope, Public, Static, HideBySig
    CheckedResolve(TypeReference): PrivateScope, Public, Static, HideBySig
    TryGetCoreLibraryReference(ModuleDefinition, AssemblyNameReference&(Out)): PrivateScope, Public, Static, HideBySig
    IsCoreLibrary(ModuleDefinition): PrivateScope, Public, Static, HideBySig
    KnownValueType(TypeReference): PrivateScope, Public, Static, HideBySig
    GetCodeViewEntry(ImageDebugHeader): PrivateScope, Public, Static, HideBySig
    GetDeterministicEntry(ImageDebugHeader): PrivateScope, Public, Static, HideBySig
    AddDeterministicEntry(ImageDebugHeader): PrivateScope, Public, Static, HideBySig
    GetEmbeddedPortablePdbEntry(ImageDebugHeader): PrivateScope, Public, Static, HideBySig
    GetPdbChecksumEntry(ImageDebugHeader): PrivateScope, Public, Static, HideBySig
    GetPdbFileName(String): PrivateScope, Public, Static, HideBySig
    GetMdbFileName(String): PrivateScope, Public, Static, HideBySig
    IsPortablePdb(String): PrivateScope, Public, Static, HideBySig
    IsPortablePdb(Stream): PrivateScope, Public, Static, HideBySig
    ReadCompressedUInt32(Byte[], Int32&): PrivateScope, Public, Static, HideBySig
    GetMetadataToken(CodedIndex, UInt32): PrivateScope, Public, Static, HideBySig
    CompressMetadataToken(CodedIndex, MetadataToken): PrivateScope, Public, Static, HideBySig
    GetSize(CodedIndex, Func`2): PrivateScope, Public, Static, HideBySig
    CreateRSA(WriterParameters): PrivateScope, Public, Static, HideBySig
Struct Mono.Cecil.Mixin+Argument: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Argument name = 0 : Public, Static, Literal, HasDefault
    Argument fileName = 1 : Public, Static, Literal, HasDefault
    Argument fullName = 2 : Public, Static, Literal, HasDefault
    Argument stream = 3 : Public, Static, Literal, HasDefault
    Argument type = 4 : Public, Static, Literal, HasDefault
    Argument method = 5 : Public, Static, Literal, HasDefault
    Argument field = 6 : Public, Static, Literal, HasDefault
    Argument parameters = 7 : Public, Static, Literal, HasDefault
    Argument module = 8 : Public, Static, Literal, HasDefault
    Argument modifierType = 9 : Public, Static, Literal, HasDefault
    Argument eventType = 10 : Public, Static, Literal, HasDefault
    Argument fieldType = 11 : Public, Static, Literal, HasDefault
    Argument declaringType = 12 : Public, Static, Literal, HasDefault
    Argument returnType = 13 : Public, Static, Literal, HasDefault
    Argument propertyType = 14 : Public, Static, Literal, HasDefault
    Argument interfaceType = 15 : Public, Static, Literal, HasDefault
    Argument constraintType = 16 : Public, Static, Literal, HasDefault
Struct Mono.Cecil.ArrayDimension: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Nullable`1[System.Int32] LowerBound 'get set' : 
    System.Nullable`1[System.Int32] UpperBound 'get set' : 
    Boolean IsSized 'get ' : 
  Methods:
    get_LowerBound(): PrivateScope, Public, HideBySig, SpecialName
    set_LowerBound(Nullable`1): PrivateScope, Public, HideBySig, SpecialName
    get_UpperBound(): PrivateScope, Public, HideBySig, SpecialName
    set_UpperBound(Nullable`1): PrivateScope, Public, HideBySig, SpecialName
    get_IsSized(): PrivateScope, Public, HideBySig, SpecialName
    ToString(): PrivateScope, Public, Virtual, HideBySig
Class Mono.Cecil.ArrayType: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Mono.Cecil.TypeSpecification
    Void .ctor(Mono.Cecil.TypeReference): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Mono.Cecil.TypeReference, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Mono.Collections.Generic.Collection`1[Mono.Cecil.ArrayDimension] Dimensions 'get ' : 
    Int32 Rank 'get ' : 
    Boolean IsVector 'get ' : 
    Boolean IsValueType 'get set' : 
    System.String Name 'get ' : 
    System.String FullName 'get ' : 
    Boolean IsArray 'get ' : 
  Methods:
    get_Dimensions(): PrivateScope, Public, HideBySig, SpecialName
    get_Rank(): PrivateScope, Public, HideBySig, SpecialName
    get_IsVector(): PrivateScope, Public, HideBySig, SpecialName
    get_IsValueType(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_IsValueType(Boolean): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Name(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_FullName(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_IsArray(): PrivateScope, Public, Virtual, HideBySig, SpecialName
Class Mono.Cecil.AssemblyDefinition: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
    Void .ctor(): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Mono.Cecil.ICustomAttributeProvider
    Mono.Cecil.IMetadataTokenProvider
    Mono.Cecil.ISecurityDeclarationProvider
    System.IDisposable
  Fields:
    Mono.Cecil.ModuleDefinition main_module : Assembly
  Properties:
    Mono.Cecil.AssemblyNameDefinition Name 'get set' : 
    System.String FullName 'get ' : 
    Mono.Cecil.MetadataToken MetadataToken 'get set' : 
    Mono.Collections.Generic.Collection`1[Mono.Cecil.ModuleDefinition] Modules 'get ' : 
    Mono.Cecil.ModuleDefinition MainModule 'get ' : 
    Mono.Cecil.MethodDefinition EntryPoint 'get set' : 
    Boolean HasCustomAttributes 'get ' : 
    Mono.Collections.Generic.Collection`1[Mono.Cecil.CustomAttribute] CustomAttributes 'get ' : 
    Boolean HasSecurityDeclarations 'get ' : 
    Mono.Collections.Generic.Collection`1[Mono.Cecil.SecurityDeclaration] SecurityDeclarations 'get ' : 
  Methods:
    get_Name(): PrivateScope, Public, HideBySig, SpecialName
    set_Name(AssemblyNameDefinition): PrivateScope, Public, HideBySig, SpecialName
    get_FullName(): PrivateScope, Public, HideBySig, SpecialName
    get_MetadataToken(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_MetadataToken(MetadataToken): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Modules(): PrivateScope, Public, HideBySig, SpecialName
    get_MainModule(): PrivateScope, Public, HideBySig, SpecialName
    get_EntryPoint(): PrivateScope, Public, HideBySig, SpecialName
    set_EntryPoint(MethodDefinition): PrivateScope, Public, HideBySig, SpecialName
    get_HasCustomAttributes(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_CustomAttributes(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_HasSecurityDeclarations(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_SecurityDeclarations(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CreateAssembly(AssemblyNameDefinition, String, ModuleKind): PrivateScope, Public, Static, HideBySig
    CreateAssembly(AssemblyNameDefinition, String, ModuleParameters): PrivateScope, Public, Static, HideBySig
    ReadAssembly(String): PrivateScope, Public, Static, HideBySig
    ReadAssembly(String, ReaderParameters): PrivateScope, Public, Static, HideBySig
    ReadAssembly(Stream): PrivateScope, Public, Static, HideBySig
    ReadAssembly(Stream, ReaderParameters): PrivateScope, Public, Static, HideBySig
    Write(String): PrivateScope, Public, HideBySig
    Write(String, WriterParameters): PrivateScope, Public, HideBySig
    Write(): PrivateScope, Public, HideBySig
    Write(WriterParameters): PrivateScope, Public, HideBySig
    Write(Stream): PrivateScope, Public, HideBySig
    Write(Stream, WriterParameters): PrivateScope, Public, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
Struct Mono.Cecil.AssemblyAttributes: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    UInt32 value__ : Public, SpecialName, RTSpecialName
    Mono.Cecil.AssemblyAttributes PublicKey = 1 : Public, Static, Literal, HasDefault
    Mono.Cecil.AssemblyAttributes SideBySideCompatible = 0 : Public, Static, Literal, HasDefault
    Mono.Cecil.AssemblyAttributes Retargetable = 256 : Public, Static, Literal, HasDefault
    Mono.Cecil.AssemblyAttributes WindowsRuntime = 512 : Public, Static, Literal, HasDefault
    Mono.Cecil.AssemblyAttributes DisableJITCompileOptimizer = 16384 : Public, Static, Literal, HasDefault
    Mono.Cecil.AssemblyAttributes EnableJITCompileTracking = 32768 : Public, Static, Literal, HasDefault
Struct Mono.Cecil.AssemblyHashAlgorithm: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    UInt32 value__ : Public, SpecialName, RTSpecialName
    Mono.Cecil.AssemblyHashAlgorithm None = 0 : Public, Static, Literal, HasDefault
    Mono.Cecil.AssemblyHashAlgorithm MD5 = 32771 : Public, Static, Literal, HasDefault
    Mono.Cecil.AssemblyHashAlgorithm SHA1 = 32772 : Public, Static, Literal, HasDefault
    Mono.Cecil.AssemblyHashAlgorithm SHA256 = 32780 : Public, Static, Literal, HasDefault
    Mono.Cecil.AssemblyHashAlgorithm SHA384 = 32781 : Public, Static, Literal, HasDefault
    Mono.Cecil.AssemblyHashAlgorithm SHA512 = 32782 : Public, Static, Literal, HasDefault
    Mono.Cecil.AssemblyHashAlgorithm Reserved = 32771 : Public, Static, Literal, HasDefault
Class Mono.Cecil.AssemblyLinkedResource: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Mono.Cecil.Resource
    Void .ctor(System.String, Mono.Cecil.ManifestResourceAttributes): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, Mono.Cecil.ManifestResourceAttributes, Mono.Cecil.AssemblyNameReference): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Mono.Cecil.AssemblyNameReference Assembly 'get set' : 
    Mono.Cecil.ResourceType ResourceType 'get ' : 
  Methods:
    get_Assembly(): PrivateScope, Public, HideBySig, SpecialName
    set_Assembly(AssemblyNameReference): PrivateScope, Public, HideBySig, SpecialName
    get_ResourceType(): PrivateScope, Public, Virtual, HideBySig, SpecialName
Class Mono.Cecil.AssemblyNameDefinition: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Mono.Cecil.AssemblyNameReference
    Void .ctor(): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Version): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Byte[] Hash 'get ' : 
  Methods:
    get_Hash(): PrivateScope, Public, Virtual, HideBySig, SpecialName
Class Mono.Cecil.AssemblyNameReference: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Version): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Mono.Cecil.IMetadataScope
    Mono.Cecil.IMetadataTokenProvider
  Fields:
    Mono.Cecil.MetadataToken token : Assembly
  Properties:
    System.String Name 'get set' : 
    System.String Culture 'get set' : 
    System.Version Version 'get set' : 
    Mono.Cecil.AssemblyAttributes Attributes 'get set' : 
    Boolean HasPublicKey 'get set' : 
    Boolean IsSideBySideCompatible 'get set' : 
    Boolean IsRetargetable 'get set' : 
    Boolean IsWindowsRuntime 'get set' : 
    Byte[] PublicKey 'get set' : 
    Byte[] PublicKeyToken 'get set' : 
    Mono.Cecil.MetadataScopeType MetadataScopeType 'get ' : 
    System.String FullName 'get ' : 
    Mono.Cecil.AssemblyHashAlgorithm HashAlgorithm 'get set' : 
    Byte[] Hash 'get set' : 
    Mono.Cecil.MetadataToken MetadataToken 'get set' : 
  Methods:
    get_Name(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Name(String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Culture(): PrivateScope, Public, HideBySig, SpecialName
    set_Culture(String): PrivateScope, Public, HideBySig, SpecialName
    get_Version(): PrivateScope, Public, HideBySig, SpecialName
    set_Version(Version): PrivateScope, Public, HideBySig, SpecialName
    get_Attributes(): PrivateScope, Public, HideBySig, SpecialName
    set_Attributes(AssemblyAttributes): PrivateScope, Public, HideBySig, SpecialName
    get_HasPublicKey(): PrivateScope, Public, HideBySig, SpecialName
    set_HasPublicKey(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_IsSideBySideCompatible(): PrivateScope, Public, HideBySig, SpecialName
    set_IsSideBySideCompatible(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_IsRetargetable(): PrivateScope, Public, HideBySig, SpecialName
    set_IsRetargetable(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_IsWindowsRuntime(): PrivateScope, Public, HideBySig, SpecialName
    set_IsWindowsRuntime(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_PublicKey(): PrivateScope, Public, HideBySig, SpecialName
    set_PublicKey(Byte[]): PrivateScope, Public, HideBySig, SpecialName
    get_PublicKeyToken(): PrivateScope, Public, HideBySig, SpecialName
    set_PublicKeyToken(Byte[]): PrivateScope, Public, HideBySig, SpecialName
    get_MetadataScopeType(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_FullName(): PrivateScope, Public, HideBySig, SpecialName
    Parse(String): PrivateScope, Public, Static, HideBySig
    get_HashAlgorithm(): PrivateScope, Public, HideBySig, SpecialName
    set_HashAlgorithm(AssemblyHashAlgorithm): PrivateScope, Public, HideBySig, SpecialName
    get_Hash(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Hash(Byte[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_MetadataToken(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_MetadataToken(MetadataToken): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    ToString(): PrivateScope, Public, Virtual, HideBySig
Class Mono.Cecil.ModuleReader: AutoLayout, AnsiClass, Class, Abstract, BeforeFieldInit
  Methods:
    ReadSymbols(ModuleDefinition): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    CreateModule(Image, ReaderParameters): PrivateScope, Public, Static, HideBySig
Class Mono.Cecil.ImmediateModuleReader: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Mono.Cecil.ModuleReader
    Void .ctor(Mono.Cecil.PE.Image): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    ReadModule(ModuleDefinition, Boolean): PrivateScope, Public, HideBySig
    ReadSymbols(ModuleDefinition): PrivateScope, Public, Virtual, HideBySig
Class Mono.Cecil.DeferredModuleReader: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Mono.Cecil.ModuleReader
    Void .ctor(Mono.Cecil.PE.Image): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    ReadSymbols(ModuleDefinition): PrivateScope, Public, Virtual, HideBySig
Class Mono.Cecil.MetadataReader: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Mono.Cecil.PE.ByteBuffer
    Void .ctor(Mono.Cecil.ModuleDefinition): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Mono.Cecil.PE.Image, Mono.Cecil.ModuleDefinition, Mono.Cecil.MetadataReader): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Mono.Cecil.PE.Image image : Assembly, InitOnly
    Mono.Cecil.ModuleDefinition module : Assembly, InitOnly
    Mono.Cecil.MetadataSystem metadata : Assembly, InitOnly
    Mono.Cecil.Cil.CodeReader code : Assembly
    Mono.Cecil.IGenericContext context : Assembly
  Methods:
    GetMemberReferences(): PrivateScope, Public, HideBySig
    ReadConstantSignature(MetadataToken): PrivateScope, Public, HideBySig
    ReadConstant(IConstantProvider): PrivateScope, Public, HideBySig
    InitializeCustomAttributes(): PrivateScope, Assembly, HideBySig
    HasCustomAttributes(ICustomAttributeProvider): PrivateScope, Public, HideBySig
    ReadCustomAttributes(ICustomAttributeProvider): PrivateScope, Public, HideBySig
    GetCustomAttributes(): PrivateScope, Public, HideBySig
    ReadCustomAttributeBlob(UInt32): PrivateScope, Public, HideBySig
    ReadCustomAttributeSignature(CustomAttribute): PrivateScope, Public, HideBySig
    HasMarshalInfo(IMarshalInfoProvider): PrivateScope, Public, HideBySig
    ReadMarshalInfo(IMarshalInfoProvider): PrivateScope, Public, HideBySig
    HasSecurityDeclarations(ISecurityDeclarationProvider): PrivateScope, Public, HideBySig
    ReadSecurityDeclarations(ISecurityDeclarationProvider): PrivateScope, Public, HideBySig
    ReadSecurityDeclarationBlob(UInt32): PrivateScope, Public, HideBySig
    ReadSecurityDeclarationSignature(SecurityDeclaration): PrivateScope, Public, HideBySig
    ReadExportedTypes(): PrivateScope, Public, HideBySig
    ReadSequencePoints(MethodDefinition): PrivateScope, Public, HideBySig
    GetDocument(UInt32): PrivateScope, Public, HideBySig
    ReadScope(MethodDefinition): PrivateScope, Public, HideBySig
    ReadUTF8StringBlob(UInt32): PrivateScope, Public, HideBySig
    ReadStateMachineKickoffMethod(MethodDefinition): PrivateScope, Public, HideBySig
    GetCustomDebugInformation(ICustomDebugInformationProvider): PrivateScope, Public, HideBySig
    ReadRawEmbeddedSourceDebugInformation(UInt32): PrivateScope, Public, HideBySig
    ReadEmbeddedSourceDebugInformation(UInt32): PrivateScope, Public, HideBySig
    ReadAssemblyNameDefinition(): PrivateScope, Public, HideBySig
    Populate(ModuleDefinition): PrivateScope, Public, HideBySig
    ReadAssemblyReferences(): PrivateScope, Public, HideBySig
    ReadEntryPoint(): PrivateScope, Public, HideBySig
    ReadModules(): PrivateScope, Public, HideBySig
    ReadModuleReferences(): PrivateScope, Public, HideBySig
    HasFileResource(): PrivateScope, Public, HideBySig
    ReadResources(): PrivateScope, Public, HideBySig
    GetManagedResource(UInt32): PrivateScope, Public, HideBySig
    ReadTypes(): PrivateScope, Public, HideBySig
    HasNestedTypes(TypeDefinition): PrivateScope, Public, HideBySig
    ReadNestedTypes(TypeDefinition): PrivateScope, Public, HideBySig
    ReadTypeLayout(TypeDefinition): PrivateScope, Public, HideBySig
    GetTypeDefOrRef(MetadataToken): PrivateScope, Public, HideBySig
    GetTypeDefinition(UInt32): PrivateScope, Public, HideBySig
    GetTypeReference(String, String): PrivateScope, Public, HideBySig
    GetTypeReferences(): PrivateScope, Public, HideBySig
    HasInterfaces(TypeDefinition): PrivateScope, Public, HideBySig
    ReadInterfaces(TypeDefinition): PrivateScope, Public, HideBySig
    ReadFields(TypeDefinition): PrivateScope, Public, HideBySig
    ReadFieldRVA(FieldDefinition): PrivateScope, Public, HideBySig
    ReadFieldLayout(FieldDefinition): PrivateScope, Public, HideBySig
    HasEvents(TypeDefinition): PrivateScope, Public, HideBySig
    ReadEvents(TypeDefinition): PrivateScope, Public, HideBySig
    HasProperties(TypeDefinition): PrivateScope, Public, HideBySig
    ReadProperties(TypeDefinition): PrivateScope, Public, HideBySig
    ReadMethods(PropertyDefinition): PrivateScope, Public, HideBySig
    ReadMethods(EventDefinition): PrivateScope, Public, HideBySig
    ReadAllSemantics(MethodDefinition): PrivateScope, Public, HideBySig
    ReadMethods(TypeDefinition): PrivateScope, Public, HideBySig
    ReadPInvokeInfo(MethodDefinition): PrivateScope, Public, HideBySig
    HasGenericParameters(IGenericParameterProvider): PrivateScope, Public, HideBySig
    ReadGenericParameters(IGenericParameterProvider): PrivateScope, Public, HideBySig
    HasGenericConstraints(GenericParameter): PrivateScope, Public, HideBySig
    ReadGenericConstraints(GenericParameter): PrivateScope, Public, HideBySig
    HasOverrides(MethodDefinition): PrivateScope, Public, HideBySig
    ReadOverrides(MethodDefinition): PrivateScope, Public, HideBySig
    ReadMethodBody(MethodDefinition): PrivateScope, Public, HideBySig
    ReadCodeSize(MethodDefinition): PrivateScope, Public, HideBySig
    ReadCallSite(MetadataToken): PrivateScope, Public, HideBySig
    ReadVariables(MetadataToken, MethodDefinition(Optional, HasDefault)): PrivateScope, Public, HideBySig
    LookupToken(MetadataToken): PrivateScope, Public, HideBySig
    GetFieldDefinition(UInt32): PrivateScope, Public, HideBySig
    GetMethodDefinition(UInt32): PrivateScope, Public, HideBySig
Class Mono.Cecil.SignatureReader: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Mono.Cecil.PE.ByteBuffer
    Void .ctor(UInt32, Mono.Cecil.MetadataReader): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    UInt32 start : Assembly, InitOnly
    UInt32 sig_length : Assembly, InitOnly
  Methods:
    ReadGenericInstanceSignature(IGenericParameterProvider, IGenericInstance, UInt32): PrivateScope, Public, HideBySig
    ReadTypeSignature(): PrivateScope, Public, HideBySig
    ReadTypeToken(): PrivateScope, Public, HideBySig
    ReadMethodSignature(IMethodSignature): PrivateScope, Public, HideBySig
    ReadConstantSignature(ElementType): PrivateScope, Public, HideBySig
    ReadCustomAttributeConstructorArguments(CustomAttribute, Collection`1): PrivateScope, Public, HideBySig
    ReadCustomAttributeNamedArguments(UInt16, Collection`1&, Collection`1&): PrivateScope, Public, HideBySig
    ReadTypeReference(): PrivateScope, Public, HideBySig
    ReadSecurityAttribute(): PrivateScope, Public, HideBySig
    ReadMarshalInfo(): PrivateScope, Public, HideBySig
    ReadDocumentName(): PrivateScope, Public, HideBySig
    ReadSequencePoints(Document): PrivateScope, Public, HideBySig
    CanReadMore(): PrivateScope, Public, HideBySig
Class Mono.Cecil.ModuleWriter: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Methods:
    WriteModule(ModuleDefinition, Disposable`1, WriterParameters): PrivateScope, Public, Static, HideBySig
Class Mono.Cecil.MetadataTable: AutoLayout, AnsiClass, Class, Abstract, BeforeFieldInit
  Properties:
    Int32 Length 'get ' : 
    Boolean IsLarge 'get ' : 
  Methods:
    get_Length(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_IsLarge(): PrivateScope, Public, HideBySig, SpecialName
    Write(TableHeapBuffer): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Sort(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class Mono.Cecil.OneRowTable`1[TRow]: AutoLayout, AnsiClass, Class, Abstract, BeforeFieldInit
  Type parameter: TRow, System.ValueType,  NotNullableValueType DefaultConstructor
  :Mono.Cecil.MetadataTable
  Fields:
    TRow row : Assembly
  Properties:
    Int32 Length 'get ' : 
  Methods:
    get_Length(): PrivateScope, Public, Final, Virtual, HideBySig, SpecialName
    Sort(): PrivateScope, Public, Final, Virtual, HideBySig
Class Mono.Cecil.MetadataTable`1[TRow]: AutoLayout, AnsiClass, Class, Abstract, BeforeFieldInit
  Type parameter: TRow, System.ValueType,  NotNullableValueType DefaultConstructor
  :Mono.Cecil.MetadataTable
  Fields:
    TRow[] rows : Assembly
    Int32 length : Assembly
  Properties:
    Int32 Length 'get ' : 
  Methods:
    get_Length(): PrivateScope, Public, Final, Virtual, HideBySig, SpecialName
    AddRow(TRow): PrivateScope, Public, HideBySig
    Sort(): PrivateScope, Public, Virtual, HideBySig
Class Mono.Cecil.SortedTable`1[TRow]: AutoLayout, AnsiClass, Class, Abstract, BeforeFieldInit
  Type parameter: TRow, System.ValueType,  NotNullableValueType DefaultConstructor
  :Mono.Cecil.MetadataTable`1[TRow]
  Interfaces:
    System.Collections.Generic.IComparer`1[TRow]
  Methods:
    Sort(): PrivateScope, Public, Final, Virtual, HideBySig
    Compare(TRow, TRow): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class Mono.Cecil.ModuleTable: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Mono.Cecil.OneRowTable`1[Mono.Cecil.Metadata.Row`2[System.UInt32,System.UInt32]]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Write(TableHeapBuffer): PrivateScope, Public, Virtual, HideBySig
Class Mono.Cecil.TypeRefTable: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Mono.Cecil.MetadataTable`1[Mono.Cecil.Metadata.Row`3[System.UInt32,System.UInt32,System.UInt32]]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Write(TableHeapBuffer): PrivateScope, Public, Virtual, HideBySig
Class Mono.Cecil.TypeDefTable: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Mono.Cecil.MetadataTable`1[Mono.Cecil.Metadata.Row`6[Mono.Cecil.TypeAttributes,System.UInt32,System.UInt32,System.UInt32,System.UInt32,System.UInt32]]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Write(TableHeapBuffer): PrivateScope, Public, Virtual, HideBySig
Class Mono.Cecil.FieldTable: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Mono.Cecil.MetadataTable`1[Mono.Cecil.Metadata.Row`3[Mono.Cecil.FieldAttributes,System.UInt32,System.UInt32]]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Write(TableHeapBuffer): PrivateScope, Public, Virtual, HideBySig
Class Mono.Cecil.MethodTable: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Mono.Cecil.MetadataTable`1[Mono.Cecil.Metadata.Row`6[System.UInt32,Mono.Cecil.MethodImplAttributes,Mono.Cecil.MethodAttributes,System.UInt32,System.UInt32,System.UInt32]]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Write(TableHeapBuffer): PrivateScope, Public, Virtual, HideBySig
Class Mono.Cecil.ParamTable: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Mono.Cecil.MetadataTable`1[Mono.Cecil.Metadata.Row`3[Mono.Cecil.ParameterAttributes,System.UInt16,System.UInt32]]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Write(TableHeapBuffer): PrivateScope, Public, Virtual, HideBySig
Class Mono.Cecil.InterfaceImplTable: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Mono.Cecil.MetadataTable`1[Mono.Cecil.Metadata.Row`2[System.UInt32,System.UInt32]]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Write(TableHeapBuffer): PrivateScope, Public, Virtual, HideBySig
Class Mono.Cecil.MemberRefTable: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Mono.Cecil.MetadataTable`1[Mono.Cecil.Metadata.Row`3[System.UInt32,System.UInt32,System.UInt32]]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Write(TableHeapBuffer): PrivateScope, Public, Virtual, HideBySig
Class Mono.Cecil.ConstantTable: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Mono.Cecil.SortedTable`1[Mono.Cecil.Metadata.Row`3[Mono.Cecil.Metadata.ElementType,System.UInt32,System.UInt32]]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Write(TableHeapBuffer): PrivateScope, Public, Virtual, HideBySig
    Compare(Row`3, Row`3): PrivateScope, Public, Virtual, HideBySig
Class Mono.Cecil.CustomAttributeTable: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Mono.Cecil.SortedTable`1[Mono.Cecil.Metadata.Row`3[System.UInt32,System.UInt32,System.UInt32]]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Write(TableHeapBuffer): PrivateScope, Public, Virtual, HideBySig
    Compare(Row`3, Row`3): PrivateScope, Public, Virtual, HideBySig
Class Mono.Cecil.FieldMarshalTable: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Mono.Cecil.SortedTable`1[Mono.Cecil.Metadata.Row`2[System.UInt32,System.UInt32]]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Write(TableHeapBuffer): PrivateScope, Public, Virtual, HideBySig
    Compare(Row`2, Row`2): PrivateScope, Public, Virtual, HideBySig
Class Mono.Cecil.DeclSecurityTable: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Mono.Cecil.SortedTable`1[Mono.Cecil.Metadata.Row`3[Mono.Cecil.SecurityAction,System.UInt32,System.UInt32]]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Write(TableHeapBuffer): PrivateScope, Public, Virtual, HideBySig
    Compare(Row`3, Row`3): PrivateScope, Public, Virtual, HideBySig
Class Mono.Cecil.ClassLayoutTable: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Mono.Cecil.SortedTable`1[Mono.Cecil.Metadata.Row`3[System.UInt16,System.UInt32,System.UInt32]]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Write(TableHeapBuffer): PrivateScope, Public, Virtual, HideBySig
    Compare(Row`3, Row`3): PrivateScope, Public, Virtual, HideBySig
Class Mono.Cecil.FieldLayoutTable: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Mono.Cecil.SortedTable`1[Mono.Cecil.Metadata.Row`2[System.UInt32,System.UInt32]]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Write(TableHeapBuffer): PrivateScope, Public, Virtual, HideBySig
    Compare(Row`2, Row`2): PrivateScope, Public, Virtual, HideBySig
Class Mono.Cecil.StandAloneSigTable: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Mono.Cecil.MetadataTable`1[System.UInt32]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Write(TableHeapBuffer): PrivateScope, Public, Virtual, HideBySig
Class Mono.Cecil.EventMapTable: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Mono.Cecil.MetadataTable`1[Mono.Cecil.Metadata.Row`2[System.UInt32,System.UInt32]]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Write(TableHeapBuffer): PrivateScope, Public, Virtual, HideBySig
Class Mono.Cecil.EventTable: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Mono.Cecil.MetadataTable`1[Mono.Cecil.Metadata.Row`3[Mono.Cecil.EventAttributes,System.UInt32,System.UInt32]]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Write(TableHeapBuffer): PrivateScope, Public, Virtual, HideBySig
Class Mono.Cecil.PropertyMapTable: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Mono.Cecil.MetadataTable`1[Mono.Cecil.Metadata.Row`2[System.UInt32,System.UInt32]]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Write(TableHeapBuffer): PrivateScope, Public, Virtual, HideBySig
Class Mono.Cecil.PropertyTable: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Mono.Cecil.MetadataTable`1[Mono.Cecil.Metadata.Row`3[Mono.Cecil.PropertyAttributes,System.UInt32,System.UInt32]]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Write(TableHeapBuffer): PrivateScope, Public, Virtual, HideBySig
Class Mono.Cecil.MethodSemanticsTable: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Mono.Cecil.SortedTable`1[Mono.Cecil.Metadata.Row`3[Mono.Cecil.MethodSemanticsAttributes,System.UInt32,System.UInt32]]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Write(TableHeapBuffer): PrivateScope, Public, Virtual, HideBySig
    Compare(Row`3, Row`3): PrivateScope, Public, Virtual, HideBySig
Class Mono.Cecil.MethodImplTable: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Mono.Cecil.MetadataTable`1[Mono.Cecil.Metadata.Row`3[System.UInt32,System.UInt32,System.UInt32]]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Write(TableHeapBuffer): PrivateScope, Public, Virtual, HideBySig
Class Mono.Cecil.ModuleRefTable: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Mono.Cecil.MetadataTable`1[System.UInt32]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Write(TableHeapBuffer): PrivateScope, Public, Virtual, HideBySig
Class Mono.Cecil.TypeSpecTable: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Mono.Cecil.MetadataTable`1[System.UInt32]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Write(TableHeapBuffer): PrivateScope, Public, Virtual, HideBySig
Class Mono.Cecil.ImplMapTable: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Mono.Cecil.SortedTable`1[Mono.Cecil.Metadata.Row`4[Mono.Cecil.PInvokeAttributes,System.UInt32,System.UInt32,System.UInt32]]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Write(TableHeapBuffer): PrivateScope, Public, Virtual, HideBySig
    Compare(Row`4, Row`4): PrivateScope, Public, Virtual, HideBySig
Class Mono.Cecil.FieldRVATable: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Mono.Cecil.SortedTable`1[Mono.Cecil.Metadata.Row`2[System.UInt32,System.UInt32]]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int32 position : Assembly
  Methods:
    Write(TableHeapBuffer): PrivateScope, Public, Virtual, HideBySig
    Compare(Row`2, Row`2): PrivateScope, Public, Virtual, HideBySig
Class Mono.Cecil.AssemblyTable: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Mono.Cecil.OneRowTable`1[Mono.Cecil.Metadata.Row`9[Mono.Cecil.AssemblyHashAlgorithm,System.UInt16,System.UInt16,System.UInt16,System.UInt16,Mono.Cecil.AssemblyAttributes,System.UInt32,System.UInt32,System.UInt32]]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Write(TableHeapBuffer): PrivateScope, Public, Virtual, HideBySig
Class Mono.Cecil.AssemblyRefTable: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Mono.Cecil.MetadataTable`1[Mono.Cecil.Metadata.Row`9[System.UInt16,System.UInt16,System.UInt16,System.UInt16,Mono.Cecil.AssemblyAttributes,System.UInt32,System.UInt32,System.UInt32,System.UInt32]]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Write(TableHeapBuffer): PrivateScope, Public, Virtual, HideBySig
Class Mono.Cecil.FileTable: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Mono.Cecil.MetadataTable`1[Mono.Cecil.Metadata.Row`3[Mono.Cecil.FileAttributes,System.UInt32,System.UInt32]]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Write(TableHeapBuffer): PrivateScope, Public, Virtual, HideBySig
Class Mono.Cecil.ExportedTypeTable: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Mono.Cecil.MetadataTable`1[Mono.Cecil.Metadata.Row`5[Mono.Cecil.TypeAttributes,System.UInt32,System.UInt32,System.UInt32,System.UInt32]]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Write(TableHeapBuffer): PrivateScope, Public, Virtual, HideBySig
Class Mono.Cecil.ManifestResourceTable: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Mono.Cecil.MetadataTable`1[Mono.Cecil.Metadata.Row`4[System.UInt32,Mono.Cecil.ManifestResourceAttributes,System.UInt32,System.UInt32]]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Write(TableHeapBuffer): PrivateScope, Public, Virtual, HideBySig
Class Mono.Cecil.NestedClassTable: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Mono.Cecil.SortedTable`1[Mono.Cecil.Metadata.Row`2[System.UInt32,System.UInt32]]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Write(TableHeapBuffer): PrivateScope, Public, Virtual, HideBySig
    Compare(Row`2, Row`2): PrivateScope, Public, Virtual, HideBySig
Class Mono.Cecil.GenericParamTable: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Mono.Cecil.MetadataTable`1[Mono.Cecil.Metadata.Row`4[System.UInt16,Mono.Cecil.GenericParameterAttributes,System.UInt32,System.UInt32]]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Write(TableHeapBuffer): PrivateScope, Public, Virtual, HideBySig
Class Mono.Cecil.MethodSpecTable: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Mono.Cecil.MetadataTable`1[Mono.Cecil.Metadata.Row`2[System.UInt32,System.UInt32]]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Write(TableHeapBuffer): PrivateScope, Public, Virtual, HideBySig
Class Mono.Cecil.GenericParamConstraintTable: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Mono.Cecil.MetadataTable`1[Mono.Cecil.Metadata.Row`2[System.UInt32,System.UInt32]]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Write(TableHeapBuffer): PrivateScope, Public, Virtual, HideBySig
Class Mono.Cecil.DocumentTable: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Mono.Cecil.MetadataTable`1[Mono.Cecil.Metadata.Row`4[System.UInt32,System.UInt32,System.UInt32,System.UInt32]]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Write(TableHeapBuffer): PrivateScope, Public, Virtual, HideBySig
Class Mono.Cecil.MethodDebugInformationTable: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Mono.Cecil.MetadataTable`1[Mono.Cecil.Metadata.Row`2[System.UInt32,System.UInt32]]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Write(TableHeapBuffer): PrivateScope, Public, Virtual, HideBySig
Class Mono.Cecil.LocalScopeTable: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Mono.Cecil.MetadataTable`1[Mono.Cecil.Metadata.Row`6[System.UInt32,System.UInt32,System.UInt32,System.UInt32,System.UInt32,System.UInt32]]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Write(TableHeapBuffer): PrivateScope, Public, Virtual, HideBySig
Class Mono.Cecil.LocalVariableTable: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Mono.Cecil.MetadataTable`1[Mono.Cecil.Metadata.Row`3[Mono.Cecil.Cil.VariableAttributes,System.UInt16,System.UInt32]]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Write(TableHeapBuffer): PrivateScope, Public, Virtual, HideBySig
Class Mono.Cecil.LocalConstantTable: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Mono.Cecil.MetadataTable`1[Mono.Cecil.Metadata.Row`2[System.UInt32,System.UInt32]]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Write(TableHeapBuffer): PrivateScope, Public, Virtual, HideBySig
Class Mono.Cecil.ImportScopeTable: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Mono.Cecil.MetadataTable`1[Mono.Cecil.Metadata.Row`2[System.UInt32,System.UInt32]]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Write(TableHeapBuffer): PrivateScope, Public, Virtual, HideBySig
Class Mono.Cecil.StateMachineMethodTable: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Mono.Cecil.MetadataTable`1[Mono.Cecil.Metadata.Row`2[System.UInt32,System.UInt32]]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Write(TableHeapBuffer): PrivateScope, Public, Virtual, HideBySig
Class Mono.Cecil.CustomDebugInformationTable: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Mono.Cecil.SortedTable`1[Mono.Cecil.Metadata.Row`3[System.UInt32,System.UInt32,System.UInt32]]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Write(TableHeapBuffer): PrivateScope, Public, Virtual, HideBySig
    Compare(Row`3, Row`3): PrivateScope, Public, Virtual, HideBySig
Class Mono.Cecil.MetadataBuilder: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
    Void .ctor(Mono.Cecil.ModuleDefinition, System.String, UInt32, Mono.Cecil.Cil.ISymbolWriterProvider): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Mono.Cecil.ModuleDefinition, Mono.Cecil.Cil.PortablePdbWriterProvider): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Mono.Cecil.ModuleDefinition module : Assembly, InitOnly
    Mono.Cecil.Cil.ISymbolWriterProvider symbol_writer_provider : Assembly, InitOnly
    Mono.Cecil.Cil.ISymbolWriter symbol_writer : Assembly
    Mono.Cecil.PE.TextMap text_map : Assembly, InitOnly
    System.String fq_name : Assembly, InitOnly
    UInt32 timestamp : Assembly, InitOnly
    Mono.Cecil.Cil.CodeWriter code : Assembly, InitOnly
    Mono.Cecil.Metadata.DataBuffer data : Assembly, InitOnly
    Mono.Cecil.Metadata.ResourceBuffer resources : Assembly, InitOnly
    Mono.Cecil.Metadata.StringHeapBuffer string_heap : Assembly, InitOnly
    Mono.Cecil.Metadata.GuidHeapBuffer guid_heap : Assembly, InitOnly
    Mono.Cecil.Metadata.UserStringHeapBuffer user_string_heap : Assembly, InitOnly
    Mono.Cecil.Metadata.BlobHeapBuffer blob_heap : Assembly, InitOnly
    Mono.Cecil.Metadata.TableHeapBuffer table_heap : Assembly, InitOnly
    Mono.Cecil.Metadata.PdbHeapBuffer pdb_heap : Assembly, InitOnly
    Mono.Cecil.MetadataToken entry_point : Assembly
    UInt32 type_rid : Assembly
    UInt32 field_rid : Assembly
    UInt32 method_rid : Assembly
    UInt32 param_rid : Assembly
    UInt32 property_rid : Assembly
    UInt32 event_rid : Assembly
    UInt32 local_variable_rid : Assembly
    UInt32 local_constant_rid : Assembly
    Mono.Cecil.MetadataBuilder metadata_builder : Assembly
  Methods:
    SetSymbolWriter(ISymbolWriter): PrivateScope, Public, HideBySig
    BuildMetadata(): PrivateScope, Public, HideBySig
    AddStandAloneSignature(UInt32): PrivateScope, Public, HideBySig
    GetLocalVariableBlobIndex(Collection`1): PrivateScope, Public, HideBySig
    GetCallSiteBlobIndex(CallSite): PrivateScope, Public, HideBySig
    GetConstantTypeBlobIndex(TypeReference): PrivateScope, Public, HideBySig
    LookupToken(IMetadataTokenProvider): PrivateScope, Public, HideBySig
    AddMethodDebugInformation(MethodDebugInformation): PrivateScope, Public, HideBySig
    AddCustomDebugInformations(ICustomDebugInformationProvider): PrivateScope, Public, HideBySig
    GetDocumentToken(Document): PrivateScope, Public, HideBySig
Class Mono.Cecil.SignatureWriter: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Mono.Cecil.PE.ByteBuffer
    Void .ctor(Mono.Cecil.MetadataBuilder): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    WriteElementType(ElementType): PrivateScope, Public, HideBySig
    WriteUTF8String(String): PrivateScope, Public, HideBySig
    WriteMethodSignature(IMethodSignature): PrivateScope, Public, HideBySig
    WriteTypeToken(TypeReference): PrivateScope, Public, HideBySig
    WriteTypeSignature(TypeReference): PrivateScope, Public, HideBySig
    WriteGenericInstanceSignature(IGenericInstance): PrivateScope, Public, HideBySig
    WriteConstantString(String): PrivateScope, Public, HideBySig
    WriteConstantPrimitive(Object): PrivateScope, Public, HideBySig
    WriteCustomAttributeConstructorArguments(CustomAttribute): PrivateScope, Public, HideBySig
    WriteCustomAttributeNamedArguments(CustomAttribute): PrivateScope, Public, HideBySig
    WriteSecurityDeclaration(SecurityDeclaration): PrivateScope, Public, HideBySig
    WriteXmlSecurityDeclaration(SecurityDeclaration): PrivateScope, Public, HideBySig
    WriteMarshalInfo(MarshalInfo): PrivateScope, Public, HideBySig
    WriteSequencePoints(MethodDebugInformation): PrivateScope, Public, HideBySig
Class Mono.Cecil.AssemblyResolveEventHandler: AutoLayout, AnsiClass, Class, Sealed
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(Object, AssemblyNameReference): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(Object, AssemblyNameReference, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class Mono.Cecil.AssemblyResolveEventArgs: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :System.EventArgs
    Void .ctor(Mono.Cecil.AssemblyNameReference): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Mono.Cecil.AssemblyNameReference AssemblyReference 'get ' : 
  Methods:
    get_AssemblyReference(): PrivateScope, Public, HideBySig, SpecialName
Class Mono.Cecil.AssemblyResolutionException: AutoLayout, AnsiClass, Class, Sealed, Serializable, BeforeFieldInit
  :System.IO.FileNotFoundException
    Void .ctor(Mono.Cecil.AssemblyNameReference): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Mono.Cecil.AssemblyNameReference, System.Exception): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Mono.Cecil.AssemblyNameReference AssemblyReference 'get ' : 
  Methods:
    get_AssemblyReference(): PrivateScope, Public, HideBySig, SpecialName
Class Mono.Cecil.BaseAssemblyResolver: AutoLayout, AnsiClass, Class, Abstract, BeforeFieldInit
  Interfaces:
    Mono.Cecil.IAssemblyResolver
    System.IDisposable
  Events:
    Mono.Cecil.AssemblyResolveEventHandler ResolveFailure: 
  Methods:
    AddSearchDirectory(String): PrivateScope, Public, HideBySig
    RemoveSearchDirectory(String): PrivateScope, Public, HideBySig
    GetSearchDirectories(): PrivateScope, Public, HideBySig
    add_ResolveFailure(AssemblyResolveEventHandler): PrivateScope, Public, HideBySig, SpecialName
    remove_ResolveFailure(AssemblyResolveEventHandler): PrivateScope, Public, HideBySig, SpecialName
    Resolve(AssemblyNameReference): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Resolve(AssemblyNameReference, ReaderParameters): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Mono.Cecil.CallSite: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
    Void .ctor(): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Mono.Cecil.TypeReference): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Mono.Cecil.IMethodSignature
    Mono.Cecil.IMetadataTokenProvider
  Properties:
    Boolean HasThis 'get set' : 
    Boolean ExplicitThis 'get set' : 
    Mono.Cecil.MethodCallingConvention CallingConvention 'get set' : 
    Boolean HasParameters 'get ' : 
    Mono.Collections.Generic.Collection`1[Mono.Cecil.ParameterDefinition] Parameters 'get ' : 
    Mono.Cecil.TypeReference ReturnType 'get set' : 
    Mono.Cecil.MethodReturnType MethodReturnType 'get ' : 
    System.String Name 'get set' : 
    System.String Namespace 'get set' : 
    Mono.Cecil.ModuleDefinition Module 'get ' : 
    Mono.Cecil.IMetadataScope Scope 'get ' : 
    Mono.Cecil.MetadataToken MetadataToken 'get set' : 
    System.String FullName 'get ' : 
  Methods:
    get_HasThis(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_HasThis(Boolean): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_ExplicitThis(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_ExplicitThis(Boolean): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_CallingConvention(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_CallingConvention(MethodCallingConvention): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_HasParameters(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Parameters(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_ReturnType(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_ReturnType(TypeReference): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_MethodReturnType(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Name(): PrivateScope, Public, HideBySig, SpecialName
    set_Name(String): PrivateScope, Public, HideBySig, SpecialName
    get_Namespace(): PrivateScope, Public, HideBySig, SpecialName
    set_Namespace(String): PrivateScope, Public, HideBySig, SpecialName
    get_Module(): PrivateScope, Public, HideBySig, SpecialName
    get_Scope(): PrivateScope, Public, HideBySig, SpecialName
    get_MetadataToken(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_MetadataToken(MetadataToken): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_FullName(): PrivateScope, Public, HideBySig, SpecialName
    ToString(): PrivateScope, Public, Virtual, HideBySig
Struct Mono.Cecil.CustomAttributeArgument: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Mono.Cecil.TypeReference, System.Object): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Mono.Cecil.TypeReference Type 'get ' : 
    System.Object Value 'get ' : 
  Methods:
    get_Type(): PrivateScope, Public, HideBySig, SpecialName
    get_Value(): PrivateScope, Public, HideBySig, SpecialName
Struct Mono.Cecil.CustomAttributeNamedArgument: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(System.String, Mono.Cecil.CustomAttributeArgument): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String Name 'get ' : 
    Mono.Cecil.CustomAttributeArgument Argument 'get ' : 
  Methods:
    get_Name(): PrivateScope, Public, HideBySig, SpecialName
    get_Argument(): PrivateScope, Public, HideBySig, SpecialName
Interface Mono.Cecil.ICustomAttribute: AutoLayout, AnsiClass, Class, ClassSemanticsMask, Abstract
  Properties:
    Mono.Cecil.TypeReference AttributeType 'get ' : 
    Boolean HasFields 'get ' : 
    Boolean HasProperties 'get ' : 
    Boolean HasConstructorArguments 'get ' : 
    Mono.Collections.Generic.Collection`1[Mono.Cecil.CustomAttributeNamedArgument] Fields 'get ' : 
    Mono.Collections.Generic.Collection`1[Mono.Cecil.CustomAttributeNamedArgument] Properties 'get ' : 
    Mono.Collections.Generic.Collection`1[Mono.Cecil.CustomAttributeArgument] ConstructorArguments 'get ' : 
  Methods:
    get_AttributeType(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_HasFields(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_HasProperties(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_HasConstructorArguments(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Fields(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Properties(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_ConstructorArguments(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
Class Mono.Cecil.CustomAttribute: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
    Void .ctor(UInt32, Mono.Cecil.MethodReference): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Mono.Cecil.MethodReference): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Mono.Cecil.MethodReference, Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Mono.Cecil.ICustomAttribute
  Fields:
    Mono.Cecil.CustomAttributeValueProjection projection : Assembly
    UInt32 signature : Assembly, InitOnly
    Boolean resolved : Assembly
    Mono.Collections.Generic.Collection`1[Mono.Cecil.CustomAttributeArgument] arguments : Assembly
    Mono.Collections.Generic.Collection`1[Mono.Cecil.CustomAttributeNamedArgument] fields : Assembly
    Mono.Collections.Generic.Collection`1[Mono.Cecil.CustomAttributeNamedArgument] properties : Assembly
  Properties:
    Mono.Cecil.MethodReference Constructor 'get set' : 
    Mono.Cecil.TypeReference AttributeType 'get ' : 
    Boolean IsResolved 'get ' : 
    Boolean HasConstructorArguments 'get ' : 
    Mono.Collections.Generic.Collection`1[Mono.Cecil.CustomAttributeArgument] ConstructorArguments 'get ' : 
    Boolean HasFields 'get ' : 
    Mono.Collections.Generic.Collection`1[Mono.Cecil.CustomAttributeNamedArgument] Fields 'get ' : 
    Boolean HasProperties 'get ' : 
    Mono.Collections.Generic.Collection`1[Mono.Cecil.CustomAttributeNamedArgument] Properties 'get ' : 
    Boolean HasImage 'get ' : 
    Mono.Cecil.ModuleDefinition Module 'get ' : 
  Methods:
    get_Constructor(): PrivateScope, Public, HideBySig, SpecialName
    set_Constructor(MethodReference): PrivateScope, Public, HideBySig, SpecialName
    get_AttributeType(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsResolved(): PrivateScope, Public, HideBySig, SpecialName
    get_HasConstructorArguments(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_ConstructorArguments(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_HasFields(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Fields(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_HasProperties(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Properties(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_HasImage(): PrivateScope, Assembly, HideBySig, SpecialName
    get_Module(): PrivateScope, Assembly, HideBySig, SpecialName
    GetBlob(): PrivateScope, Public, HideBySig
Class Mono.Cecil.DefaultAssemblyResolver: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :Mono.Cecil.BaseAssemblyResolver
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Resolve(AssemblyNameReference): PrivateScope, Public, Virtual, HideBySig
Class Mono.Cecil.EmbeddedResource: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Mono.Cecil.Resource
    Void .ctor(System.String, Mono.Cecil.ManifestResourceAttributes, Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, Mono.Cecil.ManifestResourceAttributes, System.IO.Stream): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, Mono.Cecil.ManifestResourceAttributes, UInt32, Mono.Cecil.MetadataReader): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    Mono.Cecil.ResourceType ResourceType 'get ' : 
  Methods:
    get_ResourceType(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    GetResourceStream(): PrivateScope, Public, HideBySig
    GetResourceData(): PrivateScope, Public, HideBySig
Struct Mono.Cecil.EventAttributes: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    UInt16 value__ : Public, SpecialName, RTSpecialName
    Mono.Cecil.EventAttributes None = 0 : Public, Static, Literal, HasDefault
    Mono.Cecil.EventAttributes SpecialName = 512 : Public, Static, Literal, HasDefault
    Mono.Cecil.EventAttributes RTSpecialName = 1024 : Public, Static, Literal, HasDefault
Class Mono.Cecil.EventDefinition: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Mono.Cecil.EventReference
    Void .ctor(System.String, Mono.Cecil.EventAttributes, Mono.Cecil.TypeReference): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Mono.Cecil.IMemberDefinition
    Mono.Cecil.ICustomAttributeProvider
  Fields:
    Mono.Cecil.MethodDefinition add_method : Assembly
    Mono.Cecil.MethodDefinition invoke_method : Assembly
    Mono.Cecil.MethodDefinition remove_method : Assembly
    Mono.Collections.Generic.Collection`1[Mono.Cecil.MethodDefinition] other_methods : Assembly
  Properties:
    Mono.Cecil.EventAttributes Attributes 'get set' : 
    Mono.Cecil.MethodDefinition AddMethod 'get set' : 
    Mono.Cecil.MethodDefinition InvokeMethod 'get set' : 
    Mono.Cecil.MethodDefinition RemoveMethod 'get set' : 
    Boolean HasOtherMethods 'get ' : 
    Mono.Collections.Generic.Collection`1[Mono.Cecil.MethodDefinition] OtherMethods 'get ' : 
    Boolean HasCustomAttributes 'get ' : 
    Mono.Collections.Generic.Collection`1[Mono.Cecil.CustomAttribute] CustomAttributes 'get ' : 
    Boolean IsSpecialName 'get set' : 
    Boolean IsRuntimeSpecialName 'get set' : 
    Mono.Cecil.TypeDefinition DeclaringType 'get set' : 
    Boolean IsDefinition 'get ' : 
  Methods:
    get_Attributes(): PrivateScope, Public, HideBySig, SpecialName
    set_Attributes(EventAttributes): PrivateScope, Public, HideBySig, SpecialName
    get_AddMethod(): PrivateScope, Public, HideBySig, SpecialName
    set_AddMethod(MethodDefinition): PrivateScope, Public, HideBySig, SpecialName
    get_InvokeMethod(): PrivateScope, Public, HideBySig, SpecialName
    set_InvokeMethod(MethodDefinition): PrivateScope, Public, HideBySig, SpecialName
    get_RemoveMethod(): PrivateScope, Public, HideBySig, SpecialName
    set_RemoveMethod(MethodDefinition): PrivateScope, Public, HideBySig, SpecialName
    get_HasOtherMethods(): PrivateScope, Public, HideBySig, SpecialName
    get_OtherMethods(): PrivateScope, Public, HideBySig, SpecialName
    get_HasCustomAttributes(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_CustomAttributes(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsSpecialName(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_IsSpecialName(Boolean): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsRuntimeSpecialName(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_IsRuntimeSpecialName(Boolean): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_DeclaringType(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_DeclaringType(TypeDefinition): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsDefinition(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    Resolve(): PrivateScope, Public, Virtual, HideBySig
Class Mono.Cecil.EventReference: AutoLayout, AnsiClass, Class, Abstract, BeforeFieldInit
  :Mono.Cecil.MemberReference
  Properties:
    Mono.Cecil.TypeReference EventType 'get set' : 
    System.String FullName 'get ' : 
  Methods:
    get_EventType(): PrivateScope, Public, HideBySig, SpecialName
    set_EventType(TypeReference): PrivateScope, Public, HideBySig, SpecialName
    get_FullName(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    Resolve(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class Mono.Cecil.ExportedType: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
    Void .ctor(System.String, System.String, Mono.Cecil.ModuleDefinition, Mono.Cecil.IMetadataScope): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Mono.Cecil.IMetadataTokenProvider
  Fields:
    Mono.Cecil.MetadataToken token : Assembly
  Properties:
    System.String Namespace 'get set' : 
    System.String Name 'get set' : 
    Mono.Cecil.TypeAttributes Attributes 'get set' : 
    Mono.Cecil.IMetadataScope Scope 'get set' : 
    Mono.Cecil.ExportedType DeclaringType 'get set' : 
    Mono.Cecil.MetadataToken MetadataToken 'get set' : 
    Int32 Identifier 'get set' : 
    Boolean IsNotPublic 'get set' : 
    Boolean IsPublic 'get set' : 
    Boolean IsNestedPublic 'get set' : 
    Boolean IsNestedPrivate 'get set' : 
    Boolean IsNestedFamily 'get set' : 
    Boolean IsNestedAssembly 'get set' : 
    Boolean IsNestedFamilyAndAssembly 'get set' : 
    Boolean IsNestedFamilyOrAssembly 'get set' : 
    Boolean IsAutoLayout 'get set' : 
    Boolean IsSequentialLayout 'get set' : 
    Boolean IsExplicitLayout 'get set' : 
    Boolean IsClass 'get set' : 
    Boolean IsInterface 'get set' : 
    Boolean IsAbstract 'get set' : 
    Boolean IsSealed 'get set' : 
    Boolean IsSpecialName 'get set' : 
    Boolean IsImport 'get set' : 
    Boolean IsSerializable 'get set' : 
    Boolean IsAnsiClass 'get set' : 
    Boolean IsUnicodeClass 'get set' : 
    Boolean IsAutoClass 'get set' : 
    Boolean IsBeforeFieldInit 'get set' : 
    Boolean IsRuntimeSpecialName 'get set' : 
    Boolean HasSecurity 'get set' : 
    Boolean IsForwarder 'get set' : 
    System.String FullName 'get ' : 
  Methods:
    get_Namespace(): PrivateScope, Public, HideBySig, SpecialName
    set_Namespace(String): PrivateScope, Public, HideBySig, SpecialName
    get_Name(): PrivateScope, Public, HideBySig, SpecialName
    set_Name(String): PrivateScope, Public, HideBySig, SpecialName
    get_Attributes(): PrivateScope, Public, HideBySig, SpecialName
    set_Attributes(TypeAttributes): PrivateScope, Public, HideBySig, SpecialName
    get_Scope(): PrivateScope, Public, HideBySig, SpecialName
    set_Scope(IMetadataScope): PrivateScope, Public, HideBySig, SpecialName
    get_DeclaringType(): PrivateScope, Public, HideBySig, SpecialName
    set_DeclaringType(ExportedType): PrivateScope, Public, HideBySig, SpecialName
    get_MetadataToken(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_MetadataToken(MetadataToken): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Identifier(): PrivateScope, Public, HideBySig, SpecialName
    set_Identifier(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_IsNotPublic(): PrivateScope, Public, HideBySig, SpecialName
    set_IsNotPublic(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_IsPublic(): PrivateScope, Public, HideBySig, SpecialName
    set_IsPublic(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_IsNestedPublic(): PrivateScope, Public, HideBySig, SpecialName
    set_IsNestedPublic(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_IsNestedPrivate(): PrivateScope, Public, HideBySig, SpecialName
    set_IsNestedPrivate(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_IsNestedFamily(): PrivateScope, Public, HideBySig, SpecialName
    set_IsNestedFamily(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_IsNestedAssembly(): PrivateScope, Public, HideBySig, SpecialName
    set_IsNestedAssembly(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_IsNestedFamilyAndAssembly(): PrivateScope, Public, HideBySig, SpecialName
    set_IsNestedFamilyAndAssembly(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_IsNestedFamilyOrAssembly(): PrivateScope, Public, HideBySig, SpecialName
    set_IsNestedFamilyOrAssembly(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_IsAutoLayout(): PrivateScope, Public, HideBySig, SpecialName
    set_IsAutoLayout(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_IsSequentialLayout(): PrivateScope, Public, HideBySig, SpecialName
    set_IsSequentialLayout(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_IsExplicitLayout(): PrivateScope, Public, HideBySig, SpecialName
    set_IsExplicitLayout(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_IsClass(): PrivateScope, Public, HideBySig, SpecialName
    set_IsClass(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_IsInterface(): PrivateScope, Public, HideBySig, SpecialName
    set_IsInterface(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_IsAbstract(): PrivateScope, Public, HideBySig, SpecialName
    set_IsAbstract(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_IsSealed(): PrivateScope, Public, HideBySig, SpecialName
    set_IsSealed(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_IsSpecialName(): PrivateScope, Public, HideBySig, SpecialName
    set_IsSpecialName(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_IsImport(): PrivateScope, Public, HideBySig, SpecialName
    set_IsImport(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_IsSerializable(): PrivateScope, Public, HideBySig, SpecialName
    set_IsSerializable(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_IsAnsiClass(): PrivateScope, Public, HideBySig, SpecialName
    set_IsAnsiClass(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_IsUnicodeClass(): PrivateScope, Public, HideBySig, SpecialName
    set_IsUnicodeClass(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_IsAutoClass(): PrivateScope, Public, HideBySig, SpecialName
    set_IsAutoClass(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_IsBeforeFieldInit(): PrivateScope, Public, HideBySig, SpecialName
    set_IsBeforeFieldInit(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_IsRuntimeSpecialName(): PrivateScope, Public, HideBySig, SpecialName
    set_IsRuntimeSpecialName(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_HasSecurity(): PrivateScope, Public, HideBySig, SpecialName
    set_HasSecurity(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_IsForwarder(): PrivateScope, Public, HideBySig, SpecialName
    set_IsForwarder(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_FullName(): PrivateScope, Public, HideBySig, SpecialName
    ToString(): PrivateScope, Public, Virtual, HideBySig
    Resolve(): PrivateScope, Public, HideBySig
    CreateReference(): PrivateScope, Assembly, HideBySig
Struct Mono.Cecil.FieldAttributes: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    UInt16 value__ : Public, SpecialName, RTSpecialName
    Mono.Cecil.FieldAttributes FieldAccessMask = 7 : Public, Static, Literal, HasDefault
    Mono.Cecil.FieldAttributes CompilerControlled = 0 : Public, Static, Literal, HasDefault
    Mono.Cecil.FieldAttributes Private = 1 : Public, Static, Literal, HasDefault
    Mono.Cecil.FieldAttributes FamANDAssem = 2 : Public, Static, Literal, HasDefault
    Mono.Cecil.FieldAttributes Assembly = 3 : Public, Static, Literal, HasDefault
    Mono.Cecil.FieldAttributes Family = 4 : Public, Static, Literal, HasDefault
    Mono.Cecil.FieldAttributes FamORAssem = 5 : Public, Static, Literal, HasDefault
    Mono.Cecil.FieldAttributes Public = 6 : Public, Static, Literal, HasDefault
    Mono.Cecil.FieldAttributes Static = 16 : Public, Static, Literal, HasDefault
    Mono.Cecil.FieldAttributes InitOnly = 32 : Public, Static, Literal, HasDefault
    Mono.Cecil.FieldAttributes Literal = 64 : Public, Static, Literal, HasDefault
    Mono.Cecil.FieldAttributes NotSerialized = 128 : Public, Static, Literal, HasDefault
    Mono.Cecil.FieldAttributes SpecialName = 512 : Public, Static, Literal, HasDefault
    Mono.Cecil.FieldAttributes PInvokeImpl = 8192 : Public, Static, Literal, HasDefault
    Mono.Cecil.FieldAttributes RTSpecialName = 1024 : Public, Static, Literal, HasDefault
    Mono.Cecil.FieldAttributes HasFieldMarshal = 4096 : Public, Static, Literal, HasDefault
    Mono.Cecil.FieldAttributes HasDefault = 32768 : Public, Static, Literal, HasDefault
    Mono.Cecil.FieldAttributes HasFieldRVA = 256 : Public, Static, Literal, HasDefault
Class Mono.Cecil.FieldDefinition: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Mono.Cecil.FieldReference
    Void .ctor(System.String, Mono.Cecil.FieldAttributes, Mono.Cecil.TypeReference): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Mono.Cecil.IMemberDefinition
    Mono.Cecil.ICustomAttributeProvider
    Mono.Cecil.IConstantProvider
    Mono.Cecil.IMarshalInfoProvider
  Fields:
    Int32 rva : Assembly
  Properties:
    Boolean HasLayoutInfo 'get ' : 
    Int32 Offset 'get set' : 
    Mono.Cecil.FieldDefinitionProjection WindowsRuntimeProjection 'get set' : 
    Int32 RVA  'get ' : 
    Byte[] InitialValue 'get set' : 
    Mono.Cecil.FieldAttributes Attributes 'get set' : 
    Boolean HasConstant 'get set' : 
    System.Object Constant 'get set' : 
    Boolean HasCustomAttributes 'get ' : 
    Mono.Collections.Generic.Collection`1[Mono.Cecil.CustomAttribute] CustomAttributes 'get ' : 
    Boolean HasMarshalInfo 'get ' : 
    Mono.Cecil.MarshalInfo MarshalInfo 'get set' : 
    Boolean IsCompilerControlled 'get set' : 
    Boolean IsPrivate 'get set' : 
    Boolean IsFamilyAndAssembly 'get set' : 
    Boolean IsAssembly 'get set' : 
    Boolean IsFamily 'get set' : 
    Boolean IsFamilyOrAssembly 'get set' : 
    Boolean IsPublic 'get set' : 
    Boolean IsStatic 'get set' : 
    Boolean IsInitOnly 'get set' : 
    Boolean IsLiteral 'get set' : 
    Boolean IsNotSerialized 'get set' : 
    Boolean IsSpecialName 'get set' : 
    Boolean IsPInvokeImpl 'get set' : 
    Boolean IsRuntimeSpecialName 'get set' : 
    Boolean HasDefault 'get set' : 
    Boolean HasFieldRVA 'get set' : 
    Boolean IsDefinition 'get ' : 
    Mono.Cecil.TypeDefinition DeclaringType 'get set' : 
  Methods:
    get_HasLayoutInfo(): PrivateScope, Public, HideBySig, SpecialName
    get_Offset(): PrivateScope, Public, HideBySig, SpecialName
    set_Offset(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_WindowsRuntimeProjection(): PrivateScope, Assembly, HideBySig, SpecialName
    set_WindowsRuntimeProjection(FieldDefinitionProjection): PrivateScope, Assembly, HideBySig, SpecialName
    get_RVA(): PrivateScope, Public, HideBySig, SpecialName
    get_InitialValue(): PrivateScope, Public, HideBySig, SpecialName
    set_InitialValue(Byte[]): PrivateScope, Public, HideBySig, SpecialName
    get_Attributes(): PrivateScope, Public, HideBySig, SpecialName
    set_Attributes(FieldAttributes): PrivateScope, Public, HideBySig, SpecialName
    get_HasConstant(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_HasConstant(Boolean): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Constant(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Constant(Object): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_HasCustomAttributes(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_CustomAttributes(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_HasMarshalInfo(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_MarshalInfo(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_MarshalInfo(MarshalInfo): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsCompilerControlled(): PrivateScope, Public, HideBySig, SpecialName
    set_IsCompilerControlled(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_IsPrivate(): PrivateScope, Public, HideBySig, SpecialName
    set_IsPrivate(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_IsFamilyAndAssembly(): PrivateScope, Public, HideBySig, SpecialName
    set_IsFamilyAndAssembly(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_IsAssembly(): PrivateScope, Public, HideBySig, SpecialName
    set_IsAssembly(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_IsFamily(): PrivateScope, Public, HideBySig, SpecialName
    set_IsFamily(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_IsFamilyOrAssembly(): PrivateScope, Public, HideBySig, SpecialName
    set_IsFamilyOrAssembly(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_IsPublic(): PrivateScope, Public, HideBySig, SpecialName
    set_IsPublic(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_IsStatic(): PrivateScope, Public, HideBySig, SpecialName
    set_IsStatic(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_IsInitOnly(): PrivateScope, Public, HideBySig, SpecialName
    set_IsInitOnly(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_IsLiteral(): PrivateScope, Public, HideBySig, SpecialName
    set_IsLiteral(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_IsNotSerialized(): PrivateScope, Public, HideBySig, SpecialName
    set_IsNotSerialized(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_IsSpecialName(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_IsSpecialName(Boolean): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsPInvokeImpl(): PrivateScope, Public, HideBySig, SpecialName
    set_IsPInvokeImpl(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_IsRuntimeSpecialName(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_IsRuntimeSpecialName(Boolean): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_HasDefault(): PrivateScope, Public, HideBySig, SpecialName
    set_HasDefault(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_HasFieldRVA(): PrivateScope, Public, HideBySig, SpecialName
    set_HasFieldRVA(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_IsDefinition(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_DeclaringType(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_DeclaringType(TypeDefinition): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Resolve(): PrivateScope, Public, Virtual, HideBySig
Class Mono.Cecil.FieldReference: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :Mono.Cecil.MemberReference
    Void .ctor(): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, Mono.Cecil.TypeReference): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, Mono.Cecil.TypeReference, Mono.Cecil.TypeReference): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Mono.Cecil.TypeReference FieldType 'get set' : 
    System.String FullName 'get ' : 
    Boolean ContainsGenericParameter 'get ' : 
  Methods:
    get_FieldType(): PrivateScope, Public, HideBySig, SpecialName
    set_FieldType(TypeReference): PrivateScope, Public, HideBySig, SpecialName
    get_FullName(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_ContainsGenericParameter(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    Resolve(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Struct Mono.Cecil.FileAttributes: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    UInt32 value__ : Public, SpecialName, RTSpecialName
    Mono.Cecil.FileAttributes ContainsMetaData = 0 : Public, Static, Literal, HasDefault
    Mono.Cecil.FileAttributes ContainsNoMetaData = 1 : Public, Static, Literal, HasDefault
Class Mono.Cecil.FunctionPointerType: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Mono.Cecil.TypeSpecification
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Mono.Cecil.IMethodSignature
  Properties:
    Boolean HasThis 'get set' : 
    Boolean ExplicitThis 'get set' : 
    Mono.Cecil.MethodCallingConvention CallingConvention 'get set' : 
    Boolean HasParameters 'get ' : 
    Mono.Collections.Generic.Collection`1[Mono.Cecil.ParameterDefinition] Parameters 'get ' : 
    Mono.Cecil.TypeReference ReturnType 'get set' : 
    Mono.Cecil.MethodReturnType MethodReturnType 'get ' : 
    System.String Name 'get set' : 
    System.String Namespace 'get set' : 
    Mono.Cecil.ModuleDefinition Module 'get ' : 
    Mono.Cecil.IMetadataScope Scope 'get set' : 
    Boolean IsFunctionPointer 'get ' : 
    Boolean ContainsGenericParameter 'get ' : 
    System.String FullName 'get ' : 
  Methods:
    get_HasThis(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_HasThis(Boolean): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_ExplicitThis(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_ExplicitThis(Boolean): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_CallingConvention(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_CallingConvention(MethodCallingConvention): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_HasParameters(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Parameters(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_ReturnType(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_ReturnType(TypeReference): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_MethodReturnType(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Name(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Name(String): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Namespace(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Namespace(String): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Module(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Scope(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Scope(IMetadataScope): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_IsFunctionPointer(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_ContainsGenericParameter(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_FullName(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    Resolve(): PrivateScope, Public, Virtual, HideBySig
    GetElementType(): PrivateScope, Public, Virtual, HideBySig
Class Mono.Cecil.GenericInstanceMethod: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Mono.Cecil.MethodSpecification
    Void .ctor(Mono.Cecil.MethodReference): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Mono.Cecil.MethodReference, Int32): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Mono.Cecil.IGenericInstance
  Properties:
    Boolean HasGenericArguments 'get ' : 
    Mono.Collections.Generic.Collection`1[Mono.Cecil.TypeReference] GenericArguments 'get ' : 
    Boolean IsGenericInstance 'get ' : 
    Boolean ContainsGenericParameter 'get ' : 
    System.String FullName 'get ' : 
  Methods:
    get_HasGenericArguments(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_GenericArguments(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsGenericInstance(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_ContainsGenericParameter(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_FullName(): PrivateScope, Public, Virtual, HideBySig, SpecialName
Class Mono.Cecil.GenericInstanceType: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Mono.Cecil.TypeSpecification
    Void .ctor(Mono.Cecil.TypeReference): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Mono.Cecil.TypeReference, Int32): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Mono.Cecil.IGenericInstance
  Properties:
    Boolean HasGenericArguments 'get ' : 
    Mono.Collections.Generic.Collection`1[Mono.Cecil.TypeReference] GenericArguments 'get ' : 
    Mono.Cecil.TypeReference DeclaringType 'get set' : 
    System.String FullName 'get ' : 
    Boolean IsGenericInstance 'get ' : 
    Boolean ContainsGenericParameter 'get ' : 
  Methods:
    get_HasGenericArguments(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_GenericArguments(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_DeclaringType(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_DeclaringType(TypeReference): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_FullName(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_IsGenericInstance(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_ContainsGenericParameter(): PrivateScope, Public, Virtual, HideBySig, SpecialName
Class Mono.Cecil.GenericParameter: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Mono.Cecil.TypeReference
    Void .ctor(Mono.Cecil.IGenericParameterProvider): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, Mono.Cecil.IGenericParameterProvider): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32, Mono.Cecil.GenericParameterType, Mono.Cecil.ModuleDefinition): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Mono.Cecil.ICustomAttributeProvider
  Fields:
    Int32 position : Assembly
    Mono.Cecil.GenericParameterType type : Assembly
    Mono.Cecil.IGenericParameterProvider owner : Assembly
  Properties:
    Mono.Cecil.GenericParameterAttributes Attributes 'get set' : 
    Int32 Position 'get ' : 
    Mono.Cecil.GenericParameterType Type 'get ' : 
    Mono.Cecil.IGenericParameterProvider Owner 'get ' : 
    Boolean HasConstraints 'get ' : 
    Mono.Collections.Generic.Collection`1[Mono.Cecil.GenericParameterConstraint] Constraints 'get ' : 
    Boolean HasCustomAttributes 'get ' : 
    Mono.Collections.Generic.Collection`1[Mono.Cecil.CustomAttribute] CustomAttributes 'get ' : 
    Mono.Cecil.IMetadataScope Scope 'get set' : 
    Mono.Cecil.TypeReference DeclaringType 'get set' : 
    Mono.Cecil.MethodReference DeclaringMethod 'get ' : 
    Mono.Cecil.ModuleDefinition Module 'get ' : 
    System.String Name 'get ' : 
    System.String Namespace 'get set' : 
    System.String FullName 'get ' : 
    Boolean IsGenericParameter 'get ' : 
    Boolean ContainsGenericParameter 'get ' : 
    Mono.Cecil.MetadataType MetadataType 'get ' : 
    Boolean IsNonVariant 'get set' : 
    Boolean IsCovariant 'get set' : 
    Boolean IsContravariant 'get set' : 
    Boolean HasReferenceTypeConstraint 'get set' : 
    Boolean HasNotNullableValueTypeConstraint 'get set' : 
    Boolean HasDefaultConstructorConstraint 'get set' : 
  Methods:
    get_Attributes(): PrivateScope, Public, HideBySig, SpecialName
    set_Attributes(GenericParameterAttributes): PrivateScope, Public, HideBySig, SpecialName
    get_Position(): PrivateScope, Public, HideBySig, SpecialName
    get_Type(): PrivateScope, Public, HideBySig, SpecialName
    get_Owner(): PrivateScope, Public, HideBySig, SpecialName
    get_HasConstraints(): PrivateScope, Public, HideBySig, SpecialName
    get_Constraints(): PrivateScope, Public, HideBySig, SpecialName
    get_HasCustomAttributes(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_CustomAttributes(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Scope(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Scope(IMetadataScope): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_DeclaringType(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_DeclaringType(TypeReference): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_DeclaringMethod(): PrivateScope, Public, HideBySig, SpecialName
    get_Module(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Name(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Namespace(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Namespace(String): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_FullName(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_IsGenericParameter(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_ContainsGenericParameter(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_MetadataType(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_IsNonVariant(): PrivateScope, Public, HideBySig, SpecialName
    set_IsNonVariant(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_IsCovariant(): PrivateScope, Public, HideBySig, SpecialName
    set_IsCovariant(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_IsContravariant(): PrivateScope, Public, HideBySig, SpecialName
    set_IsContravariant(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_HasReferenceTypeConstraint(): PrivateScope, Public, HideBySig, SpecialName
    set_HasReferenceTypeConstraint(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_HasNotNullableValueTypeConstraint(): PrivateScope, Public, HideBySig, SpecialName
    set_HasNotNullableValueTypeConstraint(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_HasDefaultConstructorConstraint(): PrivateScope, Public, HideBySig, SpecialName
    set_HasDefaultConstructorConstraint(Boolean): PrivateScope, Public, HideBySig, SpecialName
    Resolve(): PrivateScope, Public, Virtual, HideBySig
Class Mono.Cecil.GenericParameterCollection: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Mono.Collections.Generic.Collection`1[Mono.Cecil.GenericParameter]
    Void .ctor(Mono.Cecil.IGenericParameterProvider): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Mono.Cecil.IGenericParameterProvider, Int32): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
Class Mono.Cecil.GenericParameterConstraint: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
    Void .ctor(Mono.Cecil.TypeReference, Mono.Cecil.MetadataToken): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Mono.Cecil.TypeReference): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Mono.Cecil.ICustomAttributeProvider
    Mono.Cecil.IMetadataTokenProvider
  Fields:
    Mono.Cecil.GenericParameter generic_parameter : Assembly
    Mono.Cecil.MetadataToken token : Assembly
  Properties:
    Mono.Cecil.TypeReference ConstraintType 'get set' : 
    Boolean HasCustomAttributes 'get ' : 
    Mono.Collections.Generic.Collection`1[Mono.Cecil.CustomAttribute] CustomAttributes 'get ' : 
    Mono.Cecil.MetadataToken MetadataToken 'get set' : 
  Methods:
    get_ConstraintType(): PrivateScope, Public, HideBySig, SpecialName
    set_ConstraintType(TypeReference): PrivateScope, Public, HideBySig, SpecialName
    get_HasCustomAttributes(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_CustomAttributes(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_MetadataToken(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_MetadataToken(MetadataToken): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
Class Mono.Cecil.GenericParameterConstraintCollection: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :Mono.Collections.Generic.Collection`1[Mono.Cecil.GenericParameterConstraint]
    Void .ctor(Mono.Cecil.GenericParameter): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Mono.Cecil.GenericParameter, Int32): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
Struct Mono.Cecil.GenericParameterAttributes: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    UInt16 value__ : Public, SpecialName, RTSpecialName
    Mono.Cecil.GenericParameterAttributes VarianceMask = 3 : Public, Static, Literal, HasDefault
    Mono.Cecil.GenericParameterAttributes NonVariant = 0 : Public, Static, Literal, HasDefault
    Mono.Cecil.GenericParameterAttributes Covariant = 1 : Public, Static, Literal, HasDefault
    Mono.Cecil.GenericParameterAttributes Contravariant = 2 : Public, Static, Literal, HasDefault
    Mono.Cecil.GenericParameterAttributes SpecialConstraintMask = 28 : Public, Static, Literal, HasDefault
    Mono.Cecil.GenericParameterAttributes ReferenceTypeConstraint = 4 : Public, Static, Literal, HasDefault
    Mono.Cecil.GenericParameterAttributes NotNullableValueTypeConstraint = 8 : Public, Static, Literal, HasDefault
    Mono.Cecil.GenericParameterAttributes DefaultConstructorConstraint = 16 : Public, Static, Literal, HasDefault
Class Mono.Cecil.GenericParameterResolver: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    ResolveReturnTypeIfNeeded(MethodReference): PrivateScope, Assembly, Static, HideBySig
    ResolveFieldTypeIfNeeded(FieldReference): PrivateScope, Assembly, Static, HideBySig
    ResolveParameterTypeIfNeeded(MethodReference, ParameterReference): PrivateScope, Assembly, Static, HideBySig
    ResolveVariableTypeIfNeeded(MethodReference, VariableReference): PrivateScope, Assembly, Static, HideBySig
Interface Mono.Cecil.IConstantProvider: AutoLayout, AnsiClass, Class, ClassSemanticsMask, Abstract
  Interfaces:
    Mono.Cecil.IMetadataTokenProvider
  Properties:
    Boolean HasConstant 'get set' : 
    System.Object Constant 'get set' : 
  Methods:
    get_HasConstant(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_HasConstant(Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Constant(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_Constant(Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
Interface Mono.Cecil.ICustomAttributeProvider: AutoLayout, AnsiClass, Class, ClassSemanticsMask, Abstract
  Interfaces:
    Mono.Cecil.IMetadataTokenProvider
  Properties:
    Mono.Collections.Generic.Collection`1[Mono.Cecil.CustomAttribute] CustomAttributes 'get ' : 
    Boolean HasCustomAttributes 'get ' : 
  Methods:
    get_CustomAttributes(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_HasCustomAttributes(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
Interface Mono.Cecil.IGenericInstance: AutoLayout, AnsiClass, Class, ClassSemanticsMask, Abstract
  Interfaces:
    Mono.Cecil.IMetadataTokenProvider
  Properties:
    Boolean HasGenericArguments 'get ' : 
    Mono.Collections.Generic.Collection`1[Mono.Cecil.TypeReference] GenericArguments 'get ' : 
  Methods:
    get_HasGenericArguments(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_GenericArguments(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
Interface Mono.Cecil.IGenericParameterProvider: AutoLayout, AnsiClass, Class, ClassSemanticsMask, Abstract
  Interfaces:
    Mono.Cecil.IMetadataTokenProvider
  Properties:
    Boolean HasGenericParameters 'get ' : 
    Boolean IsDefinition 'get ' : 
    Mono.Cecil.ModuleDefinition Module 'get ' : 
    Mono.Collections.Generic.Collection`1[Mono.Cecil.GenericParameter] GenericParameters 'get ' : 
    Mono.Cecil.GenericParameterType GenericParameterType 'get ' : 
  Methods:
    get_HasGenericParameters(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_IsDefinition(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Module(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_GenericParameters(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_GenericParameterType(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
Struct Mono.Cecil.GenericParameterType: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Mono.Cecil.GenericParameterType Type = 0 : Public, Static, Literal, HasDefault
    Mono.Cecil.GenericParameterType Method = 1 : Public, Static, Literal, HasDefault
Interface Mono.Cecil.IGenericContext: AutoLayout, AnsiClass, Class, ClassSemanticsMask, Abstract
  Properties:
    Boolean IsDefinition 'get ' : 
    Mono.Cecil.IGenericParameterProvider Type 'get ' : 
    Mono.Cecil.IGenericParameterProvider Method 'get ' : 
  Methods:
    get_IsDefinition(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Type(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Method(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
Interface Mono.Cecil.IMarshalInfoProvider: AutoLayout, AnsiClass, Class, ClassSemanticsMask, Abstract
  Interfaces:
    Mono.Cecil.IMetadataTokenProvider
  Properties:
    Boolean HasMarshalInfo 'get ' : 
    Mono.Cecil.MarshalInfo MarshalInfo 'get set' : 
  Methods:
    get_HasMarshalInfo(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_MarshalInfo(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_MarshalInfo(MarshalInfo): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
Interface Mono.Cecil.IMemberDefinition: AutoLayout, AnsiClass, Class, ClassSemanticsMask, Abstract
  Interfaces:
    Mono.Cecil.ICustomAttributeProvider
    Mono.Cecil.IMetadataTokenProvider
  Properties:
    System.String Name 'get set' : 
    System.String FullName 'get ' : 
    Boolean IsSpecialName 'get set' : 
    Boolean IsRuntimeSpecialName 'get set' : 
    Mono.Cecil.TypeDefinition DeclaringType 'get set' : 
  Methods:
    get_Name(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_Name(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_FullName(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_IsSpecialName(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_IsSpecialName(Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_IsRuntimeSpecialName(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_IsRuntimeSpecialName(Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_DeclaringType(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_DeclaringType(TypeDefinition): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
Struct Mono.Cecil.MetadataScopeType: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Mono.Cecil.MetadataScopeType AssemblyNameReference = 0 : Public, Static, Literal, HasDefault
    Mono.Cecil.MetadataScopeType ModuleReference = 1 : Public, Static, Literal, HasDefault
    Mono.Cecil.MetadataScopeType ModuleDefinition = 2 : Public, Static, Literal, HasDefault
Interface Mono.Cecil.IMetadataScope: AutoLayout, AnsiClass, Class, ClassSemanticsMask, Abstract
  Interfaces:
    Mono.Cecil.IMetadataTokenProvider
  Properties:
    Mono.Cecil.MetadataScopeType MetadataScopeType 'get ' : 
    System.String Name 'get set' : 
  Methods:
    get_MetadataScopeType(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Name(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_Name(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
Interface Mono.Cecil.IMetadataTokenProvider: AutoLayout, AnsiClass, Class, ClassSemanticsMask, Abstract
  Properties:
    Mono.Cecil.MetadataToken MetadataToken 'get set' : 
  Methods:
    get_MetadataToken(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_MetadataToken(MetadataToken): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
Interface Mono.Cecil.IMethodSignature: AutoLayout, AnsiClass, Class, ClassSemanticsMask, Abstract
  Interfaces:
    Mono.Cecil.IMetadataTokenProvider
  Properties:
    Boolean HasThis 'get set' : 
    Boolean ExplicitThis 'get set' : 
    Mono.Cecil.MethodCallingConvention CallingConvention 'get set' : 
    Boolean HasParameters 'get ' : 
    Mono.Collections.Generic.Collection`1[Mono.Cecil.ParameterDefinition] Parameters 'get ' : 
    Mono.Cecil.TypeReference ReturnType 'get set' : 
    Mono.Cecil.MethodReturnType MethodReturnType 'get ' : 
  Methods:
    get_HasThis(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_HasThis(Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_ExplicitThis(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_ExplicitThis(Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_CallingConvention(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_CallingConvention(MethodCallingConvention): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_HasParameters(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Parameters(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_ReturnType(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_ReturnType(TypeReference): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_MethodReturnType(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
Interface Mono.Cecil.IMetadataImporterProvider: AutoLayout, AnsiClass, Class, ClassSemanticsMask, Abstract
  Methods:
    GetMetadataImporter(ModuleDefinition): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Interface Mono.Cecil.IMetadataImporter: AutoLayout, AnsiClass, Class, ClassSemanticsMask, Abstract
  Methods:
    ImportReference(AssemblyNameReference): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    ImportReference(TypeReference, IGenericParameterProvider): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    ImportReference(FieldReference, IGenericParameterProvider): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    ImportReference(MethodReference, IGenericParameterProvider): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Interface Mono.Cecil.IReflectionImporterProvider: AutoLayout, AnsiClass, Class, ClassSemanticsMask, Abstract
  Methods:
    GetReflectionImporter(ModuleDefinition): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Interface Mono.Cecil.IReflectionImporter: AutoLayout, AnsiClass, Class, ClassSemanticsMask, Abstract
  Methods:
    ImportReference(AssemblyName): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    ImportReference(Type, IGenericParameterProvider): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    ImportReference(FieldInfo, IGenericParameterProvider): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    ImportReference(MethodBase, IGenericParameterProvider): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Struct Mono.Cecil.ImportGenericContext: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Mono.Cecil.IGenericParameterProvider): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean IsEmpty 'get ' : 
  Methods:
    get_IsEmpty(): PrivateScope, Public, HideBySig, SpecialName
    Push(IGenericParameterProvider): PrivateScope, Public, HideBySig
    Pop(): PrivateScope, Public, HideBySig
    MethodParameter(String, Int32): PrivateScope, Public, HideBySig
    NormalizeMethodName(MethodReference): PrivateScope, Public, HideBySig
    TypeParameter(String, Int32): PrivateScope, Public, HideBySig
    For(IGenericParameterProvider): PrivateScope, Public, Static, HideBySig
Class Mono.Cecil.DefaultReflectionImporter: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(Mono.Cecil.ModuleDefinition): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Mono.Cecil.IReflectionImporter
  Methods:
    ImportReference(AssemblyName): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ImportReference(Type, IGenericParameterProvider): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ImportReference(FieldInfo, IGenericParameterProvider): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ImportReference(MethodBase, IGenericParameterProvider): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class Mono.Cecil.DefaultMetadataImporter: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(Mono.Cecil.ModuleDefinition): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Mono.Cecil.IMetadataImporter
  Methods:
    ImportReference(AssemblyNameReference): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ImportReference(TypeReference, IGenericParameterProvider): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ImportReference(FieldReference, IGenericParameterProvider): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ImportReference(MethodReference, IGenericParameterProvider): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class Mono.Cecil.LinkedResource: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Mono.Cecil.Resource
    Void .ctor(System.String, Mono.Cecil.ManifestResourceAttributes): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, Mono.Cecil.ManifestResourceAttributes, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Byte[] hash : Assembly
  Properties:
    Byte[] Hash 'get ' : 
    System.String File 'get set' : 
    Mono.Cecil.ResourceType ResourceType 'get ' : 
  Methods:
    get_Hash(): PrivateScope, Public, HideBySig, SpecialName
    get_File(): PrivateScope, Public, HideBySig, SpecialName
    set_File(String): PrivateScope, Public, HideBySig, SpecialName
    get_ResourceType(): PrivateScope, Public, Virtual, HideBySig, SpecialName
Struct Mono.Cecil.ManifestResourceAttributes: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    UInt32 value__ : Public, SpecialName, RTSpecialName
    Mono.Cecil.ManifestResourceAttributes VisibilityMask = 7 : Public, Static, Literal, HasDefault
    Mono.Cecil.ManifestResourceAttributes Public = 1 : Public, Static, Literal, HasDefault
    Mono.Cecil.ManifestResourceAttributes Private = 2 : Public, Static, Literal, HasDefault
Class Mono.Cecil.MarshalInfo: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(Mono.Cecil.NativeType): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Mono.Cecil.NativeType native : Assembly
  Properties:
    Mono.Cecil.NativeType NativeType 'get set' : 
  Methods:
    get_NativeType(): PrivateScope, Public, HideBySig, SpecialName
    set_NativeType(NativeType): PrivateScope, Public, HideBySig, SpecialName
Class Mono.Cecil.ArrayMarshalInfo: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Mono.Cecil.MarshalInfo
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Mono.Cecil.NativeType element_type : Assembly
    Int32 size_parameter_index : Assembly
    Int32 size : Assembly
    Int32 size_parameter_multiplier : Assembly
  Properties:
    Mono.Cecil.NativeType ElementType 'get set' : 
    Int32 SizeParameterIndex 'get set' : 
    Int32 Size 'get set' : 
    Int32 SizeParameterMultiplier 'get set' : 
  Methods:
    get_ElementType(): PrivateScope, Public, HideBySig, SpecialName
    set_ElementType(NativeType): PrivateScope, Public, HideBySig, SpecialName
    get_SizeParameterIndex(): PrivateScope, Public, HideBySig, SpecialName
    set_SizeParameterIndex(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Size(): PrivateScope, Public, HideBySig, SpecialName
    set_Size(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_SizeParameterMultiplier(): PrivateScope, Public, HideBySig, SpecialName
    set_SizeParameterMultiplier(Int32): PrivateScope, Public, HideBySig, SpecialName
Class Mono.Cecil.CustomMarshalInfo: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Mono.Cecil.MarshalInfo
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    System.Guid guid : Assembly
    System.String unmanaged_type : Assembly
    Mono.Cecil.TypeReference managed_type : Assembly
    System.String cookie : Assembly
  Properties:
    System.Guid Guid 'get set' : 
    System.String UnmanagedType 'get set' : 
    Mono.Cecil.TypeReference ManagedType 'get set' : 
    System.String Cookie 'get set' : 
  Methods:
    get_Guid(): PrivateScope, Public, HideBySig, SpecialName
    set_Guid(Guid): PrivateScope, Public, HideBySig, SpecialName
    get_UnmanagedType(): PrivateScope, Public, HideBySig, SpecialName
    set_UnmanagedType(String): PrivateScope, Public, HideBySig, SpecialName
    get_ManagedType(): PrivateScope, Public, HideBySig, SpecialName
    set_ManagedType(TypeReference): PrivateScope, Public, HideBySig, SpecialName
    get_Cookie(): PrivateScope, Public, HideBySig, SpecialName
    set_Cookie(String): PrivateScope, Public, HideBySig, SpecialName
Class Mono.Cecil.SafeArrayMarshalInfo: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Mono.Cecil.MarshalInfo
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Mono.Cecil.VariantType element_type : Assembly
  Properties:
    Mono.Cecil.VariantType ElementType 'get set' : 
  Methods:
    get_ElementType(): PrivateScope, Public, HideBySig, SpecialName
    set_ElementType(VariantType): PrivateScope, Public, HideBySig, SpecialName
Class Mono.Cecil.FixedArrayMarshalInfo: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Mono.Cecil.MarshalInfo
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Mono.Cecil.NativeType element_type : Assembly
    Int32 size : Assembly
  Properties:
    Mono.Cecil.NativeType ElementType 'get set' : 
    Int32 Size 'get set' : 
  Methods:
    get_ElementType(): PrivateScope, Public, HideBySig, SpecialName
    set_ElementType(NativeType): PrivateScope, Public, HideBySig, SpecialName
    get_Size(): PrivateScope, Public, HideBySig, SpecialName
    set_Size(Int32): PrivateScope, Public, HideBySig, SpecialName
Class Mono.Cecil.FixedSysStringMarshalInfo: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Mono.Cecil.MarshalInfo
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int32 size : Assembly
  Properties:
    Int32 Size 'get set' : 
  Methods:
    get_Size(): PrivateScope, Public, HideBySig, SpecialName
    set_Size(Int32): PrivateScope, Public, HideBySig, SpecialName
Class Mono.Cecil.MemberDefinitionCollection`1[T]: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  Type parameter: T, Mono.Cecil.IMemberDefinition
  :Mono.Collections.Generic.Collection`1[T]
    Void .ctor(Mono.Cecil.TypeDefinition): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Mono.Cecil.TypeDefinition, Int32): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
Class Mono.Cecil.MemberReference: AutoLayout, AnsiClass, Class, Abstract, BeforeFieldInit
    Void .ctor(): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Mono.Cecil.IMetadataTokenProvider
  Fields:
    Mono.Cecil.MetadataToken token : Assembly
    System.Object projection : Assembly
  Properties:
    System.String Name 'get set' : 
    System.String FullName 'get ' : 
    Mono.Cecil.TypeReference DeclaringType 'get set' : 
    Mono.Cecil.MetadataToken MetadataToken 'get set' : 
    Boolean IsWindowsRuntimeProjection 'get ' : 
    Boolean HasImage 'get ' : 
    Mono.Cecil.ModuleDefinition Module 'get ' : 
    Boolean IsDefinition 'get ' : 
    Boolean ContainsGenericParameter 'get ' : 
  Methods:
    get_Name(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Name(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_FullName(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_DeclaringType(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_DeclaringType(TypeReference): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_MetadataToken(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_MetadataToken(MetadataToken): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsWindowsRuntimeProjection(): PrivateScope, Public, HideBySig, SpecialName
    get_HasImage(): PrivateScope, Assembly, HideBySig, SpecialName
    get_Module(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsDefinition(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_ContainsGenericParameter(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    MemberFullName(): PrivateScope, Assembly, HideBySig
    Resolve(): PrivateScope, Public, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
Interface Mono.Cecil.IAssemblyResolver: AutoLayout, AnsiClass, Class, ClassSemanticsMask, Abstract
  Interfaces:
    System.IDisposable
  Methods:
    Resolve(AssemblyNameReference): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Resolve(AssemblyNameReference, ReaderParameters): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Interface Mono.Cecil.IMetadataResolver: AutoLayout, AnsiClass, Class, ClassSemanticsMask, Abstract
  Methods:
    Resolve(TypeReference): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Resolve(FieldReference): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Resolve(MethodReference): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class Mono.Cecil.ResolutionException: AutoLayout, AnsiClass, Class, Sealed, Serializable, BeforeFieldInit
  :System.Exception
    Void .ctor(Mono.Cecil.MemberReference): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Mono.Cecil.MemberReference, System.Exception): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Mono.Cecil.MemberReference Member 'get ' : 
    Mono.Cecil.IMetadataScope Scope 'get ' : 
  Methods:
    get_Member(): PrivateScope, Public, HideBySig, SpecialName
    get_Scope(): PrivateScope, Public, HideBySig, SpecialName
Class Mono.Cecil.MetadataResolver: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(Mono.Cecil.IAssemblyResolver): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Mono.Cecil.IMetadataResolver
  Properties:
    Mono.Cecil.IAssemblyResolver AssemblyResolver 'get ' : 
  Methods:
    get_AssemblyResolver(): PrivateScope, Public, HideBySig, SpecialName
    Resolve(TypeReference): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Resolve(FieldReference): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Resolve(MethodReference): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetMethod(Collection`1, MethodReference): PrivateScope, Public, Static, HideBySig
Struct Mono.Cecil.Range: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(UInt32, UInt32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    UInt32 Start : Public
    UInt32 Length : Public
Class Mono.Cecil.MetadataSystem: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Mono.Cecil.AssemblyNameReference[] AssemblyReferences : Assembly
    Mono.Cecil.ModuleReference[] ModuleReferences : Assembly
    Mono.Cecil.TypeDefinition[] Types : Assembly
    Mono.Cecil.TypeReference[] TypeReferences : Assembly
    Mono.Cecil.FieldDefinition[] Fields : Assembly
    Mono.Cecil.MethodDefinition[] Methods : Assembly
    Mono.Cecil.MemberReference[] MemberReferences : Assembly
    System.Collections.Generic.Dictionary`2[System.UInt32,Mono.Collections.Generic.Collection`1[System.UInt32]] NestedTypes : Assembly
    System.Collections.Generic.Dictionary`2[System.UInt32,System.UInt32] ReverseNestedTypes : Assembly
    System.Collections.Generic.Dictionary`2[System.UInt32,Mono.Collections.Generic.Collection`1[Mono.Cecil.Metadata.Row`2[System.UInt32,Mono.Cecil.MetadataToken]]] Interfaces : Assembly
    System.Collections.Generic.Dictionary`2[System.UInt32,Mono.Cecil.Metadata.Row`2[System.UInt16,System.UInt32]] ClassLayouts : Assembly
    System.Collections.Generic.Dictionary`2[System.UInt32,System.UInt32] FieldLayouts : Assembly
    System.Collections.Generic.Dictionary`2[System.UInt32,System.UInt32] FieldRVAs : Assembly
    System.Collections.Generic.Dictionary`2[Mono.Cecil.MetadataToken,System.UInt32] FieldMarshals : Assembly
    System.Collections.Generic.Dictionary`2[Mono.Cecil.MetadataToken,Mono.Cecil.Metadata.Row`2[Mono.Cecil.Metadata.ElementType,System.UInt32]] Constants : Assembly
    System.Collections.Generic.Dictionary`2[System.UInt32,Mono.Collections.Generic.Collection`1[Mono.Cecil.MetadataToken]] Overrides : Assembly
    System.Collections.Generic.Dictionary`2[Mono.Cecil.MetadataToken,Mono.Cecil.Range[]] CustomAttributes : Assembly
    System.Collections.Generic.Dictionary`2[Mono.Cecil.MetadataToken,Mono.Cecil.Range[]] SecurityDeclarations : Assembly
    System.Collections.Generic.Dictionary`2[System.UInt32,Mono.Cecil.Range] Events : Assembly
    System.Collections.Generic.Dictionary`2[System.UInt32,Mono.Cecil.Range] Properties : Assembly
    System.Collections.Generic.Dictionary`2[System.UInt32,Mono.Cecil.Metadata.Row`2[Mono.Cecil.MethodSemanticsAttributes,Mono.Cecil.MetadataToken]] Semantics : Assembly
    System.Collections.Generic.Dictionary`2[System.UInt32,Mono.Cecil.Metadata.Row`3[Mono.Cecil.PInvokeAttributes,System.UInt32,System.UInt32]] PInvokes : Assembly
    System.Collections.Generic.Dictionary`2[Mono.Cecil.MetadataToken,Mono.Cecil.Range[]] GenericParameters : Assembly
    System.Collections.Generic.Dictionary`2[System.UInt32,Mono.Collections.Generic.Collection`1[Mono.Cecil.Metadata.Row`2[System.UInt32,Mono.Cecil.MetadataToken]]] GenericConstraints : Assembly
    Mono.Cecil.Cil.Document[] Documents : Assembly
    System.Collections.Generic.Dictionary`2[System.UInt32,Mono.Collections.Generic.Collection`1[Mono.Cecil.Metadata.Row`6[System.UInt32,Mono.Cecil.Range,Mono.Cecil.Range,System.UInt32,System.UInt32,System.UInt32]]] LocalScopes : Assembly
    Mono.Cecil.Cil.ImportDebugInformation[] ImportScopes : Assembly
    System.Collections.Generic.Dictionary`2[System.UInt32,System.UInt32] StateMachineMethods : Assembly
    System.Collections.Generic.Dictionary`2[Mono.Cecil.MetadataToken,Mono.Cecil.Metadata.Row`3[System.Guid,System.UInt32,System.UInt32][]] CustomDebugInformations : Assembly
  Methods:
    TryProcessPrimitiveTypeReference(TypeReference): PrivateScope, Public, Static, HideBySig
    TryGetPrimitiveElementType(TypeDefinition, ElementType&(Out)): PrivateScope, Public, Static, HideBySig
    Clear(): PrivateScope, Public, HideBySig
    GetAssemblyNameReference(UInt32): PrivateScope, Public, HideBySig
    GetTypeDefinition(UInt32): PrivateScope, Public, HideBySig
    AddTypeDefinition(TypeDefinition): PrivateScope, Public, HideBySig
    GetTypeReference(UInt32): PrivateScope, Public, HideBySig
    AddTypeReference(TypeReference): PrivateScope, Public, HideBySig
    GetFieldDefinition(UInt32): PrivateScope, Public, HideBySig
    AddFieldDefinition(FieldDefinition): PrivateScope, Public, HideBySig
    GetMethodDefinition(UInt32): PrivateScope, Public, HideBySig
    AddMethodDefinition(MethodDefinition): PrivateScope, Public, HideBySig
    GetMemberReference(UInt32): PrivateScope, Public, HideBySig
    AddMemberReference(MemberReference): PrivateScope, Public, HideBySig
    TryGetNestedTypeMapping(TypeDefinition, Collection`1&(Out)): PrivateScope, Public, HideBySig
    SetNestedTypeMapping(UInt32, Collection`1): PrivateScope, Public, HideBySig
    TryGetReverseNestedTypeMapping(TypeDefinition, UInt32&(Out)): PrivateScope, Public, HideBySig
    SetReverseNestedTypeMapping(UInt32, UInt32): PrivateScope, Public, HideBySig
    TryGetInterfaceMapping(TypeDefinition, Collection`1&(Out)): PrivateScope, Public, HideBySig
    SetInterfaceMapping(UInt32, Collection`1): PrivateScope, Public, HideBySig
    AddPropertiesRange(UInt32, Range): PrivateScope, Public, HideBySig
    TryGetPropertiesRange(TypeDefinition, Range&(Out)): PrivateScope, Public, HideBySig
    AddEventsRange(UInt32, Range): PrivateScope, Public, HideBySig
    TryGetEventsRange(TypeDefinition, Range&(Out)): PrivateScope, Public, HideBySig
    TryGetGenericParameterRanges(IGenericParameterProvider, Range[]&(Out)): PrivateScope, Public, HideBySig
    TryGetCustomAttributeRanges(ICustomAttributeProvider, Range[]&(Out)): PrivateScope, Public, HideBySig
    TryGetSecurityDeclarationRanges(ISecurityDeclarationProvider, Range[]&(Out)): PrivateScope, Public, HideBySig
    TryGetGenericConstraintMapping(GenericParameter, Collection`1&(Out)): PrivateScope, Public, HideBySig
    SetGenericConstraintMapping(UInt32, Collection`1): PrivateScope, Public, HideBySig
    TryGetOverrideMapping(MethodDefinition, Collection`1&(Out)): PrivateScope, Public, HideBySig
    SetOverrideMapping(UInt32, Collection`1): PrivateScope, Public, HideBySig
    GetDocument(UInt32): PrivateScope, Public, HideBySig
    TryGetLocalScopes(MethodDefinition, Collection`1&(Out)): PrivateScope, Public, HideBySig
    SetLocalScopes(UInt32, Collection`1): PrivateScope, Public, HideBySig
    GetImportScope(UInt32): PrivateScope, Public, HideBySig
    TryGetStateMachineKickOffMethod(MethodDefinition, UInt32&(Out)): PrivateScope, Public, HideBySig
    GetFieldDeclaringType(UInt32): PrivateScope, Public, HideBySig
    GetMethodDeclaringType(UInt32): PrivateScope, Public, HideBySig
Struct Mono.Cecil.MethodAttributes: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    UInt16 value__ : Public, SpecialName, RTSpecialName
    Mono.Cecil.MethodAttributes MemberAccessMask = 7 : Public, Static, Literal, HasDefault
    Mono.Cecil.MethodAttributes CompilerControlled = 0 : Public, Static, Literal, HasDefault
    Mono.Cecil.MethodAttributes Private = 1 : Public, Static, Literal, HasDefault
    Mono.Cecil.MethodAttributes FamANDAssem = 2 : Public, Static, Literal, HasDefault
    Mono.Cecil.MethodAttributes Assembly = 3 : Public, Static, Literal, HasDefault
    Mono.Cecil.MethodAttributes Family = 4 : Public, Static, Literal, HasDefault
    Mono.Cecil.MethodAttributes FamORAssem = 5 : Public, Static, Literal, HasDefault
    Mono.Cecil.MethodAttributes Public = 6 : Public, Static, Literal, HasDefault
    Mono.Cecil.MethodAttributes Static = 16 : Public, Static, Literal, HasDefault
    Mono.Cecil.MethodAttributes Final = 32 : Public, Static, Literal, HasDefault
    Mono.Cecil.MethodAttributes Virtual = 64 : Public, Static, Literal, HasDefault
    Mono.Cecil.MethodAttributes HideBySig = 128 : Public, Static, Literal, HasDefault
    Mono.Cecil.MethodAttributes VtableLayoutMask = 256 : Public, Static, Literal, HasDefault
    Mono.Cecil.MethodAttributes ReuseSlot = 0 : Public, Static, Literal, HasDefault
    Mono.Cecil.MethodAttributes NewSlot = 256 : Public, Static, Literal, HasDefault
    Mono.Cecil.MethodAttributes CheckAccessOnOverride = 512 : Public, Static, Literal, HasDefault
    Mono.Cecil.MethodAttributes Abstract = 1024 : Public, Static, Literal, HasDefault
    Mono.Cecil.MethodAttributes SpecialName = 2048 : Public, Static, Literal, HasDefault
    Mono.Cecil.MethodAttributes PInvokeImpl = 8192 : Public, Static, Literal, HasDefault
    Mono.Cecil.MethodAttributes UnmanagedExport = 8 : Public, Static, Literal, HasDefault
    Mono.Cecil.MethodAttributes RTSpecialName = 4096 : Public, Static, Literal, HasDefault
    Mono.Cecil.MethodAttributes HasSecurity = 16384 : Public, Static, Literal, HasDefault
    Mono.Cecil.MethodAttributes RequireSecObject = 32768 : Public, Static, Literal, HasDefault
Struct Mono.Cecil.MethodCallingConvention: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Byte value__ : Public, SpecialName, RTSpecialName
    Mono.Cecil.MethodCallingConvention Default = 0 : Public, Static, Literal, HasDefault
    Mono.Cecil.MethodCallingConvention C = 1 : Public, Static, Literal, HasDefault
    Mono.Cecil.MethodCallingConvention StdCall = 2 : Public, Static, Literal, HasDefault
    Mono.Cecil.MethodCallingConvention ThisCall = 3 : Public, Static, Literal, HasDefault
    Mono.Cecil.MethodCallingConvention FastCall = 4 : Public, Static, Literal, HasDefault
    Mono.Cecil.MethodCallingConvention VarArg = 5 : Public, Static, Literal, HasDefault
    Mono.Cecil.MethodCallingConvention Unmanaged = 9 : Public, Static, Literal, HasDefault
    Mono.Cecil.MethodCallingConvention Generic = 16 : Public, Static, Literal, HasDefault
Class Mono.Cecil.MethodDefinition: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Mono.Cecil.MethodReference
    Void .ctor(): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, Mono.Cecil.MethodAttributes, Mono.Cecil.TypeReference): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Mono.Cecil.IMemberDefinition
    Mono.Cecil.ICustomAttributeProvider
    Mono.Cecil.ISecurityDeclarationProvider
    Mono.Cecil.Cil.ICustomDebugInformationProvider
  Fields:
    Boolean sem_attrs_ready IsVolatile : Assembly
    Mono.Cecil.MethodSemanticsAttributes sem_attrs : Assembly
    UInt32 rva : Assembly
    Mono.Cecil.PInvokeInfo pinvoke : Assembly
    Mono.Cecil.Cil.MethodBody body : Assembly
    Mono.Cecil.Cil.MethodDebugInformation debug_info : Assembly
    Mono.Collections.Generic.Collection`1[Mono.Cecil.Cil.CustomDebugInformation] custom_infos : Assembly
  Properties:
    System.String Name 'get set' : 
    Mono.Cecil.MethodAttributes Attributes 'get set' : 
    Mono.Cecil.MethodImplAttributes ImplAttributes 'get set' : 
    Mono.Cecil.MethodSemanticsAttributes SemanticsAttributes 'get set' : 
    Mono.Cecil.MethodDefinitionProjection WindowsRuntimeProjection 'get set' : 
    Boolean HasSecurityDeclarations 'get ' : 
    Mono.Collections.Generic.Collection`1[Mono.Cecil.SecurityDeclaration] SecurityDeclarations 'get ' : 
    Boolean HasCustomAttributes 'get ' : 
    Mono.Collections.Generic.Collection`1[Mono.Cecil.CustomAttribute] CustomAttributes 'get ' : 
    Int32 RVA  'get ' : 
    Boolean HasBody 'get ' : 
    Mono.Cecil.Cil.MethodBody Body 'get set' : 
    Mono.Cecil.Cil.MethodDebugInformation DebugInformation 'get set' : 
    Boolean HasPInvokeInfo 'get ' : 
    Mono.Cecil.PInvokeInfo PInvokeInfo 'get set' : 
    Boolean HasOverrides 'get ' : 
    Mono.Collections.Generic.Collection`1[Mono.Cecil.MethodReference] Overrides 'get ' : 
    Boolean HasGenericParameters 'get ' : 
    Mono.Collections.Generic.Collection`1[Mono.Cecil.GenericParameter] GenericParameters 'get ' : 
    Boolean HasCustomDebugInformations 'get ' : 
    Mono.Collections.Generic.Collection`1[Mono.Cecil.Cil.CustomDebugInformation] CustomDebugInformations 'get ' : 
    Boolean IsCompilerControlled 'get set' : 
    Boolean IsPrivate 'get set' : 
    Boolean IsFamilyAndAssembly 'get set' : 
    Boolean IsAssembly 'get set' : 
    Boolean IsFamily 'get set' : 
    Boolean IsFamilyOrAssembly 'get set' : 
    Boolean IsPublic 'get set' : 
    Boolean IsStatic 'get set' : 
    Boolean IsFinal 'get set' : 
    Boolean IsVirtual 'get set' : 
    Boolean IsHideBySig 'get set' : 
    Boolean IsReuseSlot 'get set' : 
    Boolean IsNewSlot 'get set' : 
    Boolean IsCheckAccessOnOverride 'get set' : 
    Boolean IsAbstract 'get set' : 
    Boolean IsSpecialName 'get set' : 
    Boolean IsPInvokeImpl 'get set' : 
    Boolean IsUnmanagedExport 'get set' : 
    Boolean IsRuntimeSpecialName 'get set' : 
    Boolean HasSecurity 'get set' : 
    Boolean IsIL 'get set' : 
    Boolean IsNative 'get set' : 
    Boolean IsRuntime 'get set' : 
    Boolean IsUnmanaged 'get set' : 
    Boolean IsManaged 'get set' : 
    Boolean IsForwardRef 'get set' : 
    Boolean IsPreserveSig 'get set' : 
    Boolean IsInternalCall 'get set' : 
    Boolean IsSynchronized 'get set' : 
    Boolean NoInlining 'get set' : 
    Boolean NoOptimization 'get set' : 
    Boolean AggressiveInlining 'get set' : 
    Boolean AggressiveOptimization 'get set' : 
    Boolean IsSetter 'get set' : 
    Boolean IsGetter 'get set' : 
    Boolean IsOther 'get set' : 
    Boolean IsAddOn 'get set' : 
    Boolean IsRemoveOn 'get set' : 
    Boolean IsFire 'get set' : 
    Mono.Cecil.TypeDefinition DeclaringType 'get set' : 
    Boolean IsConstructor 'get ' : 
    Boolean IsDefinition 'get ' : 
  Methods:
    get_Name(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Name(String): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Attributes(): PrivateScope, Public, HideBySig, SpecialName
    set_Attributes(MethodAttributes): PrivateScope, Public, HideBySig, SpecialName
    get_ImplAttributes(): PrivateScope, Public, HideBySig, SpecialName
    set_ImplAttributes(MethodImplAttributes): PrivateScope, Public, HideBySig, SpecialName
    get_SemanticsAttributes(): PrivateScope, Public, HideBySig, SpecialName
    set_SemanticsAttributes(MethodSemanticsAttributes): PrivateScope, Public, HideBySig, SpecialName
    get_WindowsRuntimeProjection(): PrivateScope, Assembly, HideBySig, SpecialName
    set_WindowsRuntimeProjection(MethodDefinitionProjection): PrivateScope, Assembly, HideBySig, SpecialName
    ReadSemantics(): PrivateScope, Assembly, HideBySig
    get_HasSecurityDeclarations(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_SecurityDeclarations(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_HasCustomAttributes(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_CustomAttributes(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_RVA(): PrivateScope, Public, HideBySig, SpecialName
    get_HasBody(): PrivateScope, Public, HideBySig, SpecialName
    get_Body(): PrivateScope, Public, HideBySig, SpecialName
    set_Body(MethodBody): PrivateScope, Public, HideBySig, SpecialName
    get_DebugInformation(): PrivateScope, Public, HideBySig, SpecialName
    set_DebugInformation(MethodDebugInformation): PrivateScope, Public, HideBySig, SpecialName
    get_HasPInvokeInfo(): PrivateScope, Public, HideBySig, SpecialName
    get_PInvokeInfo(): PrivateScope, Public, HideBySig, SpecialName
    set_PInvokeInfo(PInvokeInfo): PrivateScope, Public, HideBySig, SpecialName
    get_HasOverrides(): PrivateScope, Public, HideBySig, SpecialName
    get_Overrides(): PrivateScope, Public, HideBySig, SpecialName
    get_HasGenericParameters(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_GenericParameters(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_HasCustomDebugInformations(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_CustomDebugInformations(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsCompilerControlled(): PrivateScope, Public, HideBySig, SpecialName
    set_IsCompilerControlled(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_IsPrivate(): PrivateScope, Public, HideBySig, SpecialName
    set_IsPrivate(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_IsFamilyAndAssembly(): PrivateScope, Public, HideBySig, SpecialName
    set_IsFamilyAndAssembly(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_IsAssembly(): PrivateScope, Public, HideBySig, SpecialName
    set_IsAssembly(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_IsFamily(): PrivateScope, Public, HideBySig, SpecialName
    set_IsFamily(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_IsFamilyOrAssembly(): PrivateScope, Public, HideBySig, SpecialName
    set_IsFamilyOrAssembly(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_IsPublic(): PrivateScope, Public, HideBySig, SpecialName
    set_IsPublic(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_IsStatic(): PrivateScope, Public, HideBySig, SpecialName
    set_IsStatic(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_IsFinal(): PrivateScope, Public, HideBySig, SpecialName
    set_IsFinal(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_IsVirtual(): PrivateScope, Public, HideBySig, SpecialName
    set_IsVirtual(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_IsHideBySig(): PrivateScope, Public, HideBySig, SpecialName
    set_IsHideBySig(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_IsReuseSlot(): PrivateScope, Public, HideBySig, SpecialName
    set_IsReuseSlot(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_IsNewSlot(): PrivateScope, Public, HideBySig, SpecialName
    set_IsNewSlot(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_IsCheckAccessOnOverride(): PrivateScope, Public, HideBySig, SpecialName
    set_IsCheckAccessOnOverride(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_IsAbstract(): PrivateScope, Public, HideBySig, SpecialName
    set_IsAbstract(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_IsSpecialName(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_IsSpecialName(Boolean): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsPInvokeImpl(): PrivateScope, Public, HideBySig, SpecialName
    set_IsPInvokeImpl(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_IsUnmanagedExport(): PrivateScope, Public, HideBySig, SpecialName
    set_IsUnmanagedExport(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_IsRuntimeSpecialName(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_IsRuntimeSpecialName(Boolean): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_HasSecurity(): PrivateScope, Public, HideBySig, SpecialName
    set_HasSecurity(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_IsIL(): PrivateScope, Public, HideBySig, SpecialName
    set_IsIL(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_IsNative(): PrivateScope, Public, HideBySig, SpecialName
    set_IsNative(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_IsRuntime(): PrivateScope, Public, HideBySig, SpecialName
    set_IsRuntime(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_IsUnmanaged(): PrivateScope, Public, HideBySig, SpecialName
    set_IsUnmanaged(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_IsManaged(): PrivateScope, Public, HideBySig, SpecialName
    set_IsManaged(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_IsForwardRef(): PrivateScope, Public, HideBySig, SpecialName
    set_IsForwardRef(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_IsPreserveSig(): PrivateScope, Public, HideBySig, SpecialName
    set_IsPreserveSig(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_IsInternalCall(): PrivateScope, Public, HideBySig, SpecialName
    set_IsInternalCall(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_IsSynchronized(): PrivateScope, Public, HideBySig, SpecialName
    set_IsSynchronized(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_NoInlining(): PrivateScope, Public, HideBySig, SpecialName
    set_NoInlining(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_NoOptimization(): PrivateScope, Public, HideBySig, SpecialName
    set_NoOptimization(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_AggressiveInlining(): PrivateScope, Public, HideBySig, SpecialName
    set_AggressiveInlining(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_AggressiveOptimization(): PrivateScope, Public, HideBySig, SpecialName
    set_AggressiveOptimization(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_IsSetter(): PrivateScope, Public, HideBySig, SpecialName
    set_IsSetter(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_IsGetter(): PrivateScope, Public, HideBySig, SpecialName
    set_IsGetter(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_IsOther(): PrivateScope, Public, HideBySig, SpecialName
    set_IsOther(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_IsAddOn(): PrivateScope, Public, HideBySig, SpecialName
    set_IsAddOn(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_IsRemoveOn(): PrivateScope, Public, HideBySig, SpecialName
    set_IsRemoveOn(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_IsFire(): PrivateScope, Public, HideBySig, SpecialName
    set_IsFire(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_DeclaringType(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_DeclaringType(TypeDefinition): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsConstructor(): PrivateScope, Public, HideBySig, SpecialName
    get_IsDefinition(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    Resolve(): PrivateScope, Public, Virtual, HideBySig
Struct Mono.Cecil.MethodImplAttributes: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    UInt16 value__ : Public, SpecialName, RTSpecialName
    Mono.Cecil.MethodImplAttributes CodeTypeMask = 3 : Public, Static, Literal, HasDefault
    Mono.Cecil.MethodImplAttributes IL = 0 : Public, Static, Literal, HasDefault
    Mono.Cecil.MethodImplAttributes Native = 1 : Public, Static, Literal, HasDefault
    Mono.Cecil.MethodImplAttributes OPTIL = 2 : Public, Static, Literal, HasDefault
    Mono.Cecil.MethodImplAttributes Runtime = 3 : Public, Static, Literal, HasDefault
    Mono.Cecil.MethodImplAttributes ManagedMask = 4 : Public, Static, Literal, HasDefault
    Mono.Cecil.MethodImplAttributes Unmanaged = 4 : Public, Static, Literal, HasDefault
    Mono.Cecil.MethodImplAttributes Managed = 0 : Public, Static, Literal, HasDefault
    Mono.Cecil.MethodImplAttributes ForwardRef = 16 : Public, Static, Literal, HasDefault
    Mono.Cecil.MethodImplAttributes PreserveSig = 128 : Public, Static, Literal, HasDefault
    Mono.Cecil.MethodImplAttributes InternalCall = 4096 : Public, Static, Literal, HasDefault
    Mono.Cecil.MethodImplAttributes Synchronized = 32 : Public, Static, Literal, HasDefault
    Mono.Cecil.MethodImplAttributes NoOptimization = 64 : Public, Static, Literal, HasDefault
    Mono.Cecil.MethodImplAttributes NoInlining = 8 : Public, Static, Literal, HasDefault
    Mono.Cecil.MethodImplAttributes AggressiveInlining = 256 : Public, Static, Literal, HasDefault
    Mono.Cecil.MethodImplAttributes AggressiveOptimization = 512 : Public, Static, Literal, HasDefault
Class Mono.Cecil.MethodReference: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :Mono.Cecil.MemberReference
    Void .ctor(): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, Mono.Cecil.TypeReference): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, Mono.Cecil.TypeReference, Mono.Cecil.TypeReference): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Mono.Cecil.IMethodSignature
    Mono.Cecil.IGenericParameterProvider
    Mono.Cecil.IGenericContext
  Fields:
    Mono.Cecil.ParameterDefinitionCollection parameters : Assembly
    Mono.Collections.Generic.Collection`1[Mono.Cecil.GenericParameter] generic_parameters : Assembly
  Properties:
    Boolean HasThis 'get set' : 
    Boolean ExplicitThis 'get set' : 
    Mono.Cecil.MethodCallingConvention CallingConvention 'get set' : 
    Boolean HasParameters 'get ' : 
    Mono.Collections.Generic.Collection`1[Mono.Cecil.ParameterDefinition] Parameters 'get ' : 
    Boolean HasGenericParameters 'get ' : 
    Mono.Collections.Generic.Collection`1[Mono.Cecil.GenericParameter] GenericParameters 'get ' : 
    Mono.Cecil.TypeReference ReturnType 'get set' : 
    Mono.Cecil.MethodReturnType MethodReturnType 'get set' : 
    System.String FullName 'get ' : 
    Boolean IsGenericInstance 'get ' : 
    Boolean ContainsGenericParameter 'get ' : 
  Methods:
    get_HasThis(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_HasThis(Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_ExplicitThis(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_ExplicitThis(Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_CallingConvention(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_CallingConvention(MethodCallingConvention): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_HasParameters(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Parameters(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_HasGenericParameters(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_GenericParameters(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_ReturnType(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_ReturnType(TypeReference): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_MethodReturnType(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_MethodReturnType(MethodReturnType): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_FullName(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_IsGenericInstance(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_ContainsGenericParameter(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    GetElementMethod(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Resolve(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class Mono.Cecil.MethodReferenceComparer: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :System.Collections.Generic.EqualityComparer`1[Mono.Cecil.MethodReference]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Equals(MethodReference, MethodReference): PrivateScope, Public, Virtual, HideBySig
    GetHashCode(MethodReference): PrivateScope, Public, Virtual, HideBySig
    AreEqual(MethodReference, MethodReference): PrivateScope, Public, Static, HideBySig
    AreSignaturesEqual(MethodReference, MethodReference, TypeComparisonMode(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    GetHashCodeFor(MethodReference): PrivateScope, Public, Static, HideBySig
Class Mono.Cecil.MethodReturnType: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
    Void .ctor(Mono.Cecil.IMethodSignature): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Mono.Cecil.IConstantProvider
    Mono.Cecil.IMetadataTokenProvider
    Mono.Cecil.ICustomAttributeProvider
    Mono.Cecil.IMarshalInfoProvider
  Fields:
    Mono.Cecil.IMethodSignature method : Assembly
    Mono.Cecil.ParameterDefinition parameter : Assembly
  Properties:
    Mono.Cecil.IMethodSignature Method 'get ' : 
    Mono.Cecil.TypeReference ReturnType 'get set' : 
    Mono.Cecil.ParameterDefinition Parameter 'get ' : 
    Mono.Cecil.MetadataToken MetadataToken 'get set' : 
    Mono.Cecil.ParameterAttributes Attributes 'get set' : 
    System.String Name 'get set' : 
    Boolean HasCustomAttributes 'get ' : 
    Mono.Collections.Generic.Collection`1[Mono.Cecil.CustomAttribute] CustomAttributes 'get ' : 
    Boolean HasDefault 'get set' : 
    Boolean HasConstant 'get set' : 
    System.Object Constant 'get set' : 
    Boolean HasFieldMarshal 'get set' : 
    Boolean HasMarshalInfo 'get ' : 
    Mono.Cecil.MarshalInfo MarshalInfo 'get set' : 
  Methods:
    get_Method(): PrivateScope, Public, HideBySig, SpecialName
    get_ReturnType(): PrivateScope, Public, HideBySig, SpecialName
    set_ReturnType(TypeReference): PrivateScope, Public, HideBySig, SpecialName
    get_Parameter(): PrivateScope, Assembly, HideBySig, SpecialName
    get_MetadataToken(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_MetadataToken(MetadataToken): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Attributes(): PrivateScope, Public, HideBySig, SpecialName
    set_Attributes(ParameterAttributes): PrivateScope, Public, HideBySig, SpecialName
    get_Name(): PrivateScope, Public, HideBySig, SpecialName
    set_Name(String): PrivateScope, Public, HideBySig, SpecialName
    get_HasCustomAttributes(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_CustomAttributes(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_HasDefault(): PrivateScope, Public, HideBySig, SpecialName
    set_HasDefault(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_HasConstant(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_HasConstant(Boolean): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Constant(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Constant(Object): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_HasFieldMarshal(): PrivateScope, Public, HideBySig, SpecialName
    set_HasFieldMarshal(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_HasMarshalInfo(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_MarshalInfo(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_MarshalInfo(MarshalInfo): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
Struct Mono.Cecil.MethodSemanticsAttributes: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    UInt16 value__ : Public, SpecialName, RTSpecialName
    Mono.Cecil.MethodSemanticsAttributes None = 0 : Public, Static, Literal, HasDefault
    Mono.Cecil.MethodSemanticsAttributes Setter = 1 : Public, Static, Literal, HasDefault
    Mono.Cecil.MethodSemanticsAttributes Getter = 2 : Public, Static, Literal, HasDefault
    Mono.Cecil.MethodSemanticsAttributes Other = 4 : Public, Static, Literal, HasDefault
    Mono.Cecil.MethodSemanticsAttributes AddOn = 8 : Public, Static, Literal, HasDefault
    Mono.Cecil.MethodSemanticsAttributes RemoveOn = 16 : Public, Static, Literal, HasDefault
    Mono.Cecil.MethodSemanticsAttributes Fire = 32 : Public, Static, Literal, HasDefault
Class Mono.Cecil.MethodSpecification: AutoLayout, AnsiClass, Class, Abstract, BeforeFieldInit
  :Mono.Cecil.MethodReference
    Void .ctor(Mono.Cecil.MethodReference): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    Mono.Cecil.MethodReference ElementMethod 'get ' : 
    System.String Name 'get set' : 
    Mono.Cecil.MethodCallingConvention CallingConvention 'get set' : 
    Boolean HasThis 'get set' : 
    Boolean ExplicitThis 'get set' : 
    Mono.Cecil.MethodReturnType MethodReturnType 'get set' : 
    Mono.Cecil.TypeReference DeclaringType 'get set' : 
    Mono.Cecil.ModuleDefinition Module 'get ' : 
    Boolean HasParameters 'get ' : 
    Mono.Collections.Generic.Collection`1[Mono.Cecil.ParameterDefinition] Parameters 'get ' : 
    Boolean ContainsGenericParameter 'get ' : 
  Methods:
    get_ElementMethod(): PrivateScope, Public, HideBySig, SpecialName
    get_Name(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Name(String): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_CallingConvention(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_CallingConvention(MethodCallingConvention): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_HasThis(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_HasThis(Boolean): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_ExplicitThis(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_ExplicitThis(Boolean): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_MethodReturnType(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_MethodReturnType(MethodReturnType): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_DeclaringType(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_DeclaringType(TypeReference): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Module(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_HasParameters(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Parameters(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_ContainsGenericParameter(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    GetElementMethod(): PrivateScope, Public, Final, Virtual, HideBySig
Interface Mono.Cecil.IModifierType: AutoLayout, AnsiClass, Class, ClassSemanticsMask, Abstract
  Properties:
    Mono.Cecil.TypeReference ModifierType 'get ' : 
    Mono.Cecil.TypeReference ElementType 'get ' : 
  Methods:
    get_ModifierType(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_ElementType(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
Class Mono.Cecil.OptionalModifierType: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Mono.Cecil.TypeSpecification
    Void .ctor(Mono.Cecil.TypeReference, Mono.Cecil.TypeReference): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Mono.Cecil.IModifierType
  Properties:
    Mono.Cecil.TypeReference ModifierType 'get set' : 
    System.String Name 'get ' : 
    System.String FullName 'get ' : 
    Boolean IsValueType 'get set' : 
    Boolean IsOptionalModifier 'get ' : 
    Boolean ContainsGenericParameter 'get ' : 
  Methods:
    get_ModifierType(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_ModifierType(TypeReference): PrivateScope, Public, HideBySig, SpecialName
    get_Name(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_FullName(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_IsValueType(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_IsValueType(Boolean): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_IsOptionalModifier(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_ContainsGenericParameter(): PrivateScope, Public, Virtual, HideBySig, SpecialName
Class Mono.Cecil.RequiredModifierType: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Mono.Cecil.TypeSpecification
    Void .ctor(Mono.Cecil.TypeReference, Mono.Cecil.TypeReference): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Mono.Cecil.IModifierType
  Properties:
    Mono.Cecil.TypeReference ModifierType 'get set' : 
    System.String Name 'get ' : 
    System.String FullName 'get ' : 
    Boolean IsValueType 'get set' : 
    Boolean IsRequiredModifier 'get ' : 
    Boolean ContainsGenericParameter 'get ' : 
  Methods:
    get_ModifierType(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_ModifierType(TypeReference): PrivateScope, Public, HideBySig, SpecialName
    get_Name(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_FullName(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_IsValueType(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_IsValueType(Boolean): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_IsRequiredModifier(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_ContainsGenericParameter(): PrivateScope, Public, Virtual, HideBySig, SpecialName
Struct Mono.Cecil.ReadingMode: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Mono.Cecil.ReadingMode Immediate = 1 : Public, Static, Literal, HasDefault
    Mono.Cecil.ReadingMode Deferred = 2 : Public, Static, Literal, HasDefault
Class Mono.Cecil.ReaderParameters: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Mono.Cecil.ReadingMode): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Mono.Cecil.IAssemblyResolver assembly_resolver : Assembly
    Mono.Cecil.IMetadataResolver metadata_resolver : Assembly
    Mono.Cecil.IMetadataImporterProvider metadata_importer_provider : Assembly
    Mono.Cecil.IReflectionImporterProvider reflection_importer_provider : Assembly
  Properties:
    Mono.Cecil.ReadingMode ReadingMode 'get set' : 
    Boolean InMemory 'get set' : 
    Mono.Cecil.IAssemblyResolver AssemblyResolver 'get set' : 
    Mono.Cecil.IMetadataResolver MetadataResolver 'get set' : 
    Mono.Cecil.IMetadataImporterProvider MetadataImporterProvider 'get set' : 
    Mono.Cecil.IReflectionImporterProvider ReflectionImporterProvider 'get set' : 
    System.IO.Stream SymbolStream 'get set' : 
    Mono.Cecil.Cil.ISymbolReaderProvider SymbolReaderProvider 'get set' : 
    Boolean ReadSymbols 'get set' : 
    Boolean ThrowIfSymbolsAreNotMatching 'get set' : 
    Boolean ReadWrite 'get set' : 
    Boolean ApplyWindowsRuntimeProjections 'get set' : 
  Methods:
    get_ReadingMode(): PrivateScope, Public, HideBySig, SpecialName
    set_ReadingMode(ReadingMode): PrivateScope, Public, HideBySig, SpecialName
    get_InMemory(): PrivateScope, Public, HideBySig, SpecialName
    set_InMemory(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_AssemblyResolver(): PrivateScope, Public, HideBySig, SpecialName
    set_AssemblyResolver(IAssemblyResolver): PrivateScope, Public, HideBySig, SpecialName
    get_MetadataResolver(): PrivateScope, Public, HideBySig, SpecialName
    set_MetadataResolver(IMetadataResolver): PrivateScope, Public, HideBySig, SpecialName
    get_MetadataImporterProvider(): PrivateScope, Public, HideBySig, SpecialName
    set_MetadataImporterProvider(IMetadataImporterProvider): PrivateScope, Public, HideBySig, SpecialName
    get_ReflectionImporterProvider(): PrivateScope, Public, HideBySig, SpecialName
    set_ReflectionImporterProvider(IReflectionImporterProvider): PrivateScope, Public, HideBySig, SpecialName
    get_SymbolStream(): PrivateScope, Public, HideBySig, SpecialName
    set_SymbolStream(Stream): PrivateScope, Public, HideBySig, SpecialName
    get_SymbolReaderProvider(): PrivateScope, Public, HideBySig, SpecialName
    set_SymbolReaderProvider(ISymbolReaderProvider): PrivateScope, Public, HideBySig, SpecialName
    get_ReadSymbols(): PrivateScope, Public, HideBySig, SpecialName
    set_ReadSymbols(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_ThrowIfSymbolsAreNotMatching(): PrivateScope, Public, HideBySig, SpecialName
    set_ThrowIfSymbolsAreNotMatching(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_ReadWrite(): PrivateScope, Public, HideBySig, SpecialName
    set_ReadWrite(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_ApplyWindowsRuntimeProjections(): PrivateScope, Public, HideBySig, SpecialName
    set_ApplyWindowsRuntimeProjections(Boolean): PrivateScope, Public, HideBySig, SpecialName
Class Mono.Cecil.ModuleParameters: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Mono.Cecil.ModuleKind Kind 'get set' : 
    Mono.Cecil.TargetRuntime Runtime 'get set' : 
    System.Nullable`1[System.UInt32] Timestamp 'get set' : 
    Mono.Cecil.TargetArchitecture Architecture 'get set' : 
    Mono.Cecil.IAssemblyResolver AssemblyResolver 'get set' : 
    Mono.Cecil.IMetadataResolver MetadataResolver 'get set' : 
    Mono.Cecil.IMetadataImporterProvider MetadataImporterProvider 'get set' : 
    Mono.Cecil.IReflectionImporterProvider ReflectionImporterProvider 'get set' : 
  Methods:
    get_Kind(): PrivateScope, Public, HideBySig, SpecialName
    set_Kind(ModuleKind): PrivateScope, Public, HideBySig, SpecialName
    get_Runtime(): PrivateScope, Public, HideBySig, SpecialName
    set_Runtime(TargetRuntime): PrivateScope, Public, HideBySig, SpecialName
    get_Timestamp(): PrivateScope, Public, HideBySig, SpecialName
    set_Timestamp(Nullable`1): PrivateScope, Public, HideBySig, SpecialName
    get_Architecture(): PrivateScope, Public, HideBySig, SpecialName
    set_Architecture(TargetArchitecture): PrivateScope, Public, HideBySig, SpecialName
    get_AssemblyResolver(): PrivateScope, Public, HideBySig, SpecialName
    set_AssemblyResolver(IAssemblyResolver): PrivateScope, Public, HideBySig, SpecialName
    get_MetadataResolver(): PrivateScope, Public, HideBySig, SpecialName
    set_MetadataResolver(IMetadataResolver): PrivateScope, Public, HideBySig, SpecialName
    get_MetadataImporterProvider(): PrivateScope, Public, HideBySig, SpecialName
    set_MetadataImporterProvider(IMetadataImporterProvider): PrivateScope, Public, HideBySig, SpecialName
    get_ReflectionImporterProvider(): PrivateScope, Public, HideBySig, SpecialName
    set_ReflectionImporterProvider(IReflectionImporterProvider): PrivateScope, Public, HideBySig, SpecialName
Class Mono.Cecil.WriterParameters: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Nullable`1[System.UInt32] Timestamp 'get set' : 
    System.IO.Stream SymbolStream 'get set' : 
    Mono.Cecil.Cil.ISymbolWriterProvider SymbolWriterProvider 'get set' : 
    Boolean WriteSymbols 'get set' : 
    Boolean HasStrongNameKey 'get ' : 
    Byte[] StrongNameKeyBlob 'get set' : 
    System.String StrongNameKeyContainer 'get set' : 
    System.Reflection.StrongNameKeyPair StrongNameKeyPair 'get set' : 
    Boolean DeterministicMvid 'get set' : 
  Methods:
    get_Timestamp(): PrivateScope, Public, HideBySig, SpecialName
    set_Timestamp(Nullable`1): PrivateScope, Public, HideBySig, SpecialName
    get_SymbolStream(): PrivateScope, Public, HideBySig, SpecialName
    set_SymbolStream(Stream): PrivateScope, Public, HideBySig, SpecialName
    get_SymbolWriterProvider(): PrivateScope, Public, HideBySig, SpecialName
    set_SymbolWriterProvider(ISymbolWriterProvider): PrivateScope, Public, HideBySig, SpecialName
    get_WriteSymbols(): PrivateScope, Public, HideBySig, SpecialName
    set_WriteSymbols(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_HasStrongNameKey(): PrivateScope, Public, HideBySig, SpecialName
    get_StrongNameKeyBlob(): PrivateScope, Public, HideBySig, SpecialName
    set_StrongNameKeyBlob(Byte[]): PrivateScope, Public, HideBySig, SpecialName
    get_StrongNameKeyContainer(): PrivateScope, Public, HideBySig, SpecialName
    set_StrongNameKeyContainer(String): PrivateScope, Public, HideBySig, SpecialName
    get_StrongNameKeyPair(): PrivateScope, Public, HideBySig, SpecialName
    set_StrongNameKeyPair(StrongNameKeyPair): PrivateScope, Public, HideBySig, SpecialName
    get_DeterministicMvid(): PrivateScope, Public, HideBySig, SpecialName
    set_DeterministicMvid(Boolean): PrivateScope, Public, HideBySig, SpecialName
Class Mono.Cecil.ModuleDefinition: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Mono.Cecil.ModuleReference
    Void .ctor(): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Mono.Cecil.PE.Image): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Mono.Cecil.ICustomAttributeProvider
    Mono.Cecil.Cil.ICustomDebugInformationProvider
    System.IDisposable
  Fields:
    Mono.Cecil.PE.Image Image : Assembly
    Mono.Cecil.MetadataSystem MetadataSystem : Assembly
    Mono.Cecil.ReadingMode ReadingMode : Assembly
    Mono.Cecil.Cil.ISymbolReaderProvider SymbolReaderProvider : Assembly
    Mono.Cecil.Cil.ISymbolReader symbol_reader : Assembly
    Mono.Disposable`1[Mono.Cecil.IAssemblyResolver] assembly_resolver : Assembly
    Mono.Cecil.IMetadataResolver metadata_resolver : Assembly
    Mono.Cecil.TypeSystem type_system : Assembly
    Mono.Cecil.MetadataReader reader : Assembly, InitOnly
    System.String runtime_version : Assembly
    Mono.Cecil.ModuleKind kind : Assembly
    UInt16 linker_version : Assembly
    UInt16 subsystem_major : Assembly
    UInt16 subsystem_minor : Assembly
    UInt32 timestamp : Assembly
    Mono.Cecil.AssemblyDefinition assembly : Assembly
    Mono.Cecil.IReflectionImporter reflection_importer : Assembly
    Mono.Cecil.IMetadataImporter metadata_importer : Assembly
    Mono.Collections.Generic.Collection`1[Mono.Cecil.Cil.CustomDebugInformation] custom_infos : Assembly
    Mono.Cecil.MetadataBuilder metadata_builder : Assembly
  Properties:
    Boolean IsMain 'get ' : 
    Mono.Cecil.ModuleKind Kind 'get set' : 
    Mono.Cecil.MetadataKind MetadataKind 'get set' : 
    Mono.Cecil.WindowsRuntimeProjections Projections 'get ' : 
    Mono.Cecil.TargetRuntime Runtime 'get set' : 
    System.String RuntimeVersion 'get set' : 
    Mono.Cecil.TargetArchitecture Architecture 'get set' : 
    Mono.Cecil.ModuleAttributes Attributes 'get set' : 
    Mono.Cecil.ModuleCharacteristics Characteristics 'get set' : 
    System.String FullyQualifiedName 'get ' :  (Obsolete)
    System.String FileName 'get ' : 
    System.Guid Mvid 'get set' : 
    Boolean HasImage 'get ' : 
    Boolean HasSymbols 'get ' : 
    Mono.Cecil.Cil.ISymbolReader SymbolReader 'get ' : 
    Mono.Cecil.MetadataScopeType MetadataScopeType 'get ' : 
    Mono.Cecil.AssemblyDefinition Assembly 'get ' : 
    Mono.Cecil.IReflectionImporter ReflectionImporter 'get ' : 
    Mono.Cecil.IMetadataImporter MetadataImporter 'get ' : 
    Mono.Cecil.IAssemblyResolver AssemblyResolver 'get ' : 
    Mono.Cecil.IMetadataResolver MetadataResolver 'get ' : 
    Mono.Cecil.TypeSystem TypeSystem 'get ' : 
    Boolean HasAssemblyReferences 'get ' : 
    Mono.Collections.Generic.Collection`1[Mono.Cecil.AssemblyNameReference] AssemblyReferences 'get ' : 
    Boolean HasModuleReferences 'get ' : 
    Mono.Collections.Generic.Collection`1[Mono.Cecil.ModuleReference] ModuleReferences 'get ' : 
    Boolean HasResources 'get ' : 
    Mono.Collections.Generic.Collection`1[Mono.Cecil.Resource] Resources 'get ' : 
    Boolean HasCustomAttributes 'get ' : 
    Mono.Collections.Generic.Collection`1[Mono.Cecil.CustomAttribute] CustomAttributes 'get ' : 
    Boolean HasTypes 'get ' : 
    Mono.Collections.Generic.Collection`1[Mono.Cecil.TypeDefinition] Types 'get ' : 
    Boolean HasExportedTypes 'get ' : 
    Mono.Collections.Generic.Collection`1[Mono.Cecil.ExportedType] ExportedTypes 'get ' : 
    Mono.Cecil.MethodDefinition EntryPoint 'get set' : 
    Boolean HasCustomDebugInformations 'get ' : 
    Mono.Collections.Generic.Collection`1[Mono.Cecil.Cil.CustomDebugInformation] CustomDebugInformations 'get ' : 
    System.Object SyncRoot 'get ' : 
    Boolean HasDebugHeader 'get ' : 
  Methods:
    get_IsMain(): PrivateScope, Public, HideBySig, SpecialName
    get_Kind(): PrivateScope, Public, HideBySig, SpecialName
    set_Kind(ModuleKind): PrivateScope, Public, HideBySig, SpecialName
    get_MetadataKind(): PrivateScope, Public, HideBySig, SpecialName
    set_MetadataKind(MetadataKind): PrivateScope, Public, HideBySig, SpecialName
    get_Projections(): PrivateScope, Assembly, HideBySig, SpecialName
    get_Runtime(): PrivateScope, Public, HideBySig, SpecialName
    set_Runtime(TargetRuntime): PrivateScope, Public, HideBySig, SpecialName
    get_RuntimeVersion(): PrivateScope, Public, HideBySig, SpecialName
    set_RuntimeVersion(String): PrivateScope, Public, HideBySig, SpecialName
    get_Architecture(): PrivateScope, Public, HideBySig, SpecialName
    set_Architecture(TargetArchitecture): PrivateScope, Public, HideBySig, SpecialName
    get_Attributes(): PrivateScope, Public, HideBySig, SpecialName
    set_Attributes(ModuleAttributes): PrivateScope, Public, HideBySig, SpecialName
    get_Characteristics(): PrivateScope, Public, HideBySig, SpecialName
    set_Characteristics(ModuleCharacteristics): PrivateScope, Public, HideBySig, SpecialName
    get_FullyQualifiedName(): PrivateScope, Public, HideBySig, SpecialName
    get_FileName(): PrivateScope, Public, HideBySig, SpecialName
    get_Mvid(): PrivateScope, Public, HideBySig, SpecialName
    set_Mvid(Guid): PrivateScope, Public, HideBySig, SpecialName
    get_HasImage(): PrivateScope, Assembly, HideBySig, SpecialName
    get_HasSymbols(): PrivateScope, Public, HideBySig, SpecialName
    get_SymbolReader(): PrivateScope, Public, HideBySig, SpecialName
    get_MetadataScopeType(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Assembly(): PrivateScope, Public, HideBySig, SpecialName
    get_ReflectionImporter(): PrivateScope, Assembly, HideBySig, SpecialName
    get_MetadataImporter(): PrivateScope, Assembly, HideBySig, SpecialName
    get_AssemblyResolver(): PrivateScope, Public, HideBySig, SpecialName
    get_MetadataResolver(): PrivateScope, Public, HideBySig, SpecialName
    get_TypeSystem(): PrivateScope, Public, HideBySig, SpecialName
    get_HasAssemblyReferences(): PrivateScope, Public, HideBySig, SpecialName
    get_AssemblyReferences(): PrivateScope, Public, HideBySig, SpecialName
    get_HasModuleReferences(): PrivateScope, Public, HideBySig, SpecialName
    get_ModuleReferences(): PrivateScope, Public, HideBySig, SpecialName
    get_HasResources(): PrivateScope, Public, HideBySig, SpecialName
    get_Resources(): PrivateScope, Public, HideBySig, SpecialName
    get_HasCustomAttributes(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_CustomAttributes(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_HasTypes(): PrivateScope, Public, HideBySig, SpecialName
    get_Types(): PrivateScope, Public, HideBySig, SpecialName
    get_HasExportedTypes(): PrivateScope, Public, HideBySig, SpecialName
    get_ExportedTypes(): PrivateScope, Public, HideBySig, SpecialName
    get_EntryPoint(): PrivateScope, Public, HideBySig, SpecialName
    set_EntryPoint(MethodDefinition): PrivateScope, Public, HideBySig, SpecialName
    get_HasCustomDebugInformations(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_CustomDebugInformations(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    HasTypeReference(String): PrivateScope, Public, HideBySig
    HasTypeReference(String, String): PrivateScope, Public, HideBySig
    TryGetTypeReference(String, TypeReference&(Out)): PrivateScope, Public, HideBySig
    TryGetTypeReference(String, String, TypeReference&(Out)): PrivateScope, Public, HideBySig
    GetTypeReferences(): PrivateScope, Public, HideBySig
    GetMemberReferences(): PrivateScope, Public, HideBySig
    GetCustomAttributes(): PrivateScope, Public, HideBySig
    GetType(String, Boolean): PrivateScope, Public, HideBySig
    GetType(String): PrivateScope, Public, HideBySig
    GetType(String, String): PrivateScope, Public, HideBySig
    GetTypes(): PrivateScope, Public, HideBySig
    Resolve(FieldReference): PrivateScope, Assembly, HideBySig
    Resolve(MethodReference): PrivateScope, Assembly, HideBySig
    Resolve(TypeReference): PrivateScope, Assembly, HideBySig
    Import(Type): PrivateScope, Public, HideBySig (Obsolete)
    ImportReference(Type): PrivateScope, Public, HideBySig
    Import(Type, IGenericParameterProvider): PrivateScope, Public, HideBySig (Obsolete)
    ImportReference(Type, IGenericParameterProvider): PrivateScope, Public, HideBySig
    Import(FieldInfo): PrivateScope, Public, HideBySig (Obsolete)
    Import(FieldInfo, IGenericParameterProvider): PrivateScope, Public, HideBySig (Obsolete)
    ImportReference(FieldInfo): PrivateScope, Public, HideBySig
    ImportReference(FieldInfo, IGenericParameterProvider): PrivateScope, Public, HideBySig
    Import(MethodBase): PrivateScope, Public, HideBySig (Obsolete)
    Import(MethodBase, IGenericParameterProvider): PrivateScope, Public, HideBySig (Obsolete)
    ImportReference(MethodBase): PrivateScope, Public, HideBySig
    ImportReference(MethodBase, IGenericParameterProvider): PrivateScope, Public, HideBySig
    Import(TypeReference): PrivateScope, Public, HideBySig (Obsolete)
    Import(TypeReference, IGenericParameterProvider): PrivateScope, Public, HideBySig (Obsolete)
    ImportReference(TypeReference): PrivateScope, Public, HideBySig
    ImportReference(TypeReference, IGenericParameterProvider): PrivateScope, Public, HideBySig
    Import(FieldReference): PrivateScope, Public, HideBySig (Obsolete)
    Import(FieldReference, IGenericParameterProvider): PrivateScope, Public, HideBySig (Obsolete)
    ImportReference(FieldReference): PrivateScope, Public, HideBySig
    ImportReference(FieldReference, IGenericParameterProvider): PrivateScope, Public, HideBySig
    Import(MethodReference): PrivateScope, Public, HideBySig (Obsolete)
    Import(MethodReference, IGenericParameterProvider): PrivateScope, Public, HideBySig (Obsolete)
    ImportReference(MethodReference): PrivateScope, Public, HideBySig
    ImportReference(MethodReference, IGenericParameterProvider): PrivateScope, Public, HideBySig
    LookupToken(Int32): PrivateScope, Public, HideBySig
    LookupToken(MetadataToken): PrivateScope, Public, HideBySig
    ImmediateRead(): PrivateScope, Public, HideBySig
    get_SyncRoot(): PrivateScope, Assembly, HideBySig, SpecialName
    Read(TItem, Action`2): PrivateScope, Assembly, HideBySig
    Read(TItem, Func`3): PrivateScope, Assembly, HideBySig
    Read(TRet&, TItem, Func`3): PrivateScope, Assembly, HideBySig
    get_HasDebugHeader(): PrivateScope, Public, HideBySig, SpecialName
    GetDebugHeader(): PrivateScope, Public, HideBySig
    CreateModule(String, ModuleKind): PrivateScope, Public, Static, HideBySig
    CreateModule(String, ModuleParameters): PrivateScope, Public, Static, HideBySig
    ReadSymbols(): PrivateScope, Public, HideBySig
    ReadSymbols(ISymbolReader): PrivateScope, Public, HideBySig
    ReadSymbols(ISymbolReader, Boolean): PrivateScope, Public, HideBySig
    ReadModule(String): PrivateScope, Public, Static, HideBySig
    ReadModule(String, ReaderParameters): PrivateScope, Public, Static, HideBySig
    ReadModule(Stream): PrivateScope, Public, Static, HideBySig
    ReadModule(Stream, ReaderParameters): PrivateScope, Public, Static, HideBySig
    Write(String): PrivateScope, Public, HideBySig
    Write(String, WriterParameters): PrivateScope, Public, HideBySig
    Write(): PrivateScope, Public, HideBySig
    Write(WriterParameters): PrivateScope, Public, HideBySig
    Write(Stream): PrivateScope, Public, HideBySig
    Write(Stream, WriterParameters): PrivateScope, Public, HideBySig
Struct Mono.Cecil.ModuleKind: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Mono.Cecil.ModuleKind Dll = 0 : Public, Static, Literal, HasDefault
    Mono.Cecil.ModuleKind Console = 1 : Public, Static, Literal, HasDefault
    Mono.Cecil.ModuleKind Windows = 2 : Public, Static, Literal, HasDefault
    Mono.Cecil.ModuleKind NetModule = 3 : Public, Static, Literal, HasDefault
Struct Mono.Cecil.MetadataKind: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Mono.Cecil.MetadataKind Ecma335 = 0 : Public, Static, Literal, HasDefault
    Mono.Cecil.MetadataKind WindowsMetadata = 1 : Public, Static, Literal, HasDefault
    Mono.Cecil.MetadataKind ManagedWindowsMetadata = 2 : Public, Static, Literal, HasDefault
Struct Mono.Cecil.TargetArchitecture: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Mono.Cecil.TargetArchitecture I386 = 332 : Public, Static, Literal, HasDefault
    Mono.Cecil.TargetArchitecture AMD64 = 34404 : Public, Static, Literal, HasDefault
    Mono.Cecil.TargetArchitecture IA64 = 512 : Public, Static, Literal, HasDefault
    Mono.Cecil.TargetArchitecture ARM = 448 : Public, Static, Literal, HasDefault
    Mono.Cecil.TargetArchitecture ARMv7 = 452 : Public, Static, Literal, HasDefault
    Mono.Cecil.TargetArchitecture ARM64 = 43620 : Public, Static, Literal, HasDefault
Struct Mono.Cecil.ModuleAttributes: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Mono.Cecil.ModuleAttributes ILOnly = 1 : Public, Static, Literal, HasDefault
    Mono.Cecil.ModuleAttributes Required32Bit = 2 : Public, Static, Literal, HasDefault
    Mono.Cecil.ModuleAttributes ILLibrary = 4 : Public, Static, Literal, HasDefault
    Mono.Cecil.ModuleAttributes StrongNameSigned = 8 : Public, Static, Literal, HasDefault
    Mono.Cecil.ModuleAttributes Preferred32Bit = 131072 : Public, Static, Literal, HasDefault
Struct Mono.Cecil.ModuleCharacteristics: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Mono.Cecil.ModuleCharacteristics HighEntropyVA = 32 : Public, Static, Literal, HasDefault
    Mono.Cecil.ModuleCharacteristics DynamicBase = 64 : Public, Static, Literal, HasDefault
    Mono.Cecil.ModuleCharacteristics NoSEH = 1024 : Public, Static, Literal, HasDefault
    Mono.Cecil.ModuleCharacteristics NXCompat = 256 : Public, Static, Literal, HasDefault
    Mono.Cecil.ModuleCharacteristics AppContainer = 4096 : Public, Static, Literal, HasDefault
    Mono.Cecil.ModuleCharacteristics TerminalServerAware = 32768 : Public, Static, Literal, HasDefault
Class Mono.Cecil.ModuleReference: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Mono.Cecil.IMetadataScope
    Mono.Cecil.IMetadataTokenProvider
  Fields:
    Mono.Cecil.MetadataToken token : Assembly
  Properties:
    System.String Name 'get set' : 
    Mono.Cecil.MetadataScopeType MetadataScopeType 'get ' : 
    Mono.Cecil.MetadataToken MetadataToken 'get set' : 
  Methods:
    get_Name(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Name(String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_MetadataScopeType(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_MetadataToken(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_MetadataToken(MetadataToken): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    ToString(): PrivateScope, Public, Virtual, HideBySig
Struct Mono.Cecil.NativeType: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Mono.Cecil.NativeType None = 102 : Public, Static, Literal, HasDefault
    Mono.Cecil.NativeType Boolean = 2 : Public, Static, Literal, HasDefault
    Mono.Cecil.NativeType I1 = 3 : Public, Static, Literal, HasDefault
    Mono.Cecil.NativeType U1 = 4 : Public, Static, Literal, HasDefault
    Mono.Cecil.NativeType I2 = 5 : Public, Static, Literal, HasDefault
    Mono.Cecil.NativeType U2 = 6 : Public, Static, Literal, HasDefault
    Mono.Cecil.NativeType I4 = 7 : Public, Static, Literal, HasDefault
    Mono.Cecil.NativeType U4 = 8 : Public, Static, Literal, HasDefault
    Mono.Cecil.NativeType I8 = 9 : Public, Static, Literal, HasDefault
    Mono.Cecil.NativeType U8 = 10 : Public, Static, Literal, HasDefault
    Mono.Cecil.NativeType R4 = 11 : Public, Static, Literal, HasDefault
    Mono.Cecil.NativeType R8 = 12 : Public, Static, Literal, HasDefault
    Mono.Cecil.NativeType LPStr = 20 : Public, Static, Literal, HasDefault
    Mono.Cecil.NativeType Int = 31 : Public, Static, Literal, HasDefault
    Mono.Cecil.NativeType UInt = 32 : Public, Static, Literal, HasDefault
    Mono.Cecil.NativeType Func = 38 : Public, Static, Literal, HasDefault
    Mono.Cecil.NativeType Array = 42 : Public, Static, Literal, HasDefault
    Mono.Cecil.NativeType Currency = 15 : Public, Static, Literal, HasDefault
    Mono.Cecil.NativeType BStr = 19 : Public, Static, Literal, HasDefault
    Mono.Cecil.NativeType LPWStr = 21 : Public, Static, Literal, HasDefault
    Mono.Cecil.NativeType LPTStr = 22 : Public, Static, Literal, HasDefault
    Mono.Cecil.NativeType FixedSysString = 23 : Public, Static, Literal, HasDefault
    Mono.Cecil.NativeType IUnknown = 25 : Public, Static, Literal, HasDefault
    Mono.Cecil.NativeType IDispatch = 26 : Public, Static, Literal, HasDefault
    Mono.Cecil.NativeType Struct = 27 : Public, Static, Literal, HasDefault
    Mono.Cecil.NativeType IntF = 28 : Public, Static, Literal, HasDefault
    Mono.Cecil.NativeType SafeArray = 29 : Public, Static, Literal, HasDefault
    Mono.Cecil.NativeType FixedArray = 30 : Public, Static, Literal, HasDefault
    Mono.Cecil.NativeType ByValStr = 34 : Public, Static, Literal, HasDefault
    Mono.Cecil.NativeType ANSIBStr = 35 : Public, Static, Literal, HasDefault
    Mono.Cecil.NativeType TBStr = 36 : Public, Static, Literal, HasDefault
    Mono.Cecil.NativeType VariantBool = 37 : Public, Static, Literal, HasDefault
    Mono.Cecil.NativeType ASAny = 40 : Public, Static, Literal, HasDefault
    Mono.Cecil.NativeType LPStruct = 43 : Public, Static, Literal, HasDefault
    Mono.Cecil.NativeType CustomMarshaler = 44 : Public, Static, Literal, HasDefault
    Mono.Cecil.NativeType Error = 45 : Public, Static, Literal, HasDefault
    Mono.Cecil.NativeType Max = 80 : Public, Static, Literal, HasDefault
Struct Mono.Cecil.ParameterAttributes: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    UInt16 value__ : Public, SpecialName, RTSpecialName
    Mono.Cecil.ParameterAttributes None = 0 : Public, Static, Literal, HasDefault
    Mono.Cecil.ParameterAttributes In = 1 : Public, Static, Literal, HasDefault
    Mono.Cecil.ParameterAttributes Out = 2 : Public, Static, Literal, HasDefault
    Mono.Cecil.ParameterAttributes Lcid = 4 : Public, Static, Literal, HasDefault
    Mono.Cecil.ParameterAttributes Retval = 8 : Public, Static, Literal, HasDefault
    Mono.Cecil.ParameterAttributes Optional = 16 : Public, Static, Literal, HasDefault
    Mono.Cecil.ParameterAttributes HasDefault = 4096 : Public, Static, Literal, HasDefault
    Mono.Cecil.ParameterAttributes HasFieldMarshal = 8192 : Public, Static, Literal, HasDefault
    Mono.Cecil.ParameterAttributes Unused = 53216 : Public, Static, Literal, HasDefault
Class Mono.Cecil.ParameterDefinition: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Mono.Cecil.ParameterReference
    Void .ctor(Mono.Cecil.TypeReference, Mono.Cecil.IMethodSignature): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Mono.Cecil.TypeReference): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, Mono.Cecil.ParameterAttributes, Mono.Cecil.TypeReference): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Mono.Cecil.ICustomAttributeProvider
    Mono.Cecil.IConstantProvider
    Mono.Cecil.IMarshalInfoProvider
  Fields:
    Mono.Cecil.IMethodSignature method : Assembly
  Properties:
    Mono.Cecil.ParameterAttributes Attributes 'get set' : 
    Mono.Cecil.IMethodSignature Method 'get ' : 
    Int32 Sequence 'get ' : 
    Boolean HasConstant 'get set' : 
    System.Object Constant 'get set' : 
    Boolean HasCustomAttributes 'get ' : 
    Mono.Collections.Generic.Collection`1[Mono.Cecil.CustomAttribute] CustomAttributes 'get ' : 
    Boolean HasMarshalInfo 'get ' : 
    Mono.Cecil.MarshalInfo MarshalInfo 'get set' : 
    Boolean IsIn 'get set' : 
    Boolean IsOut 'get set' : 
    Boolean IsLcid 'get set' : 
    Boolean IsReturnValue 'get set' : 
    Boolean IsOptional 'get set' : 
    Boolean HasDefault 'get set' : 
    Boolean HasFieldMarshal 'get set' : 
  Methods:
    get_Attributes(): PrivateScope, Public, HideBySig, SpecialName
    set_Attributes(ParameterAttributes): PrivateScope, Public, HideBySig, SpecialName
    get_Method(): PrivateScope, Public, HideBySig, SpecialName
    get_Sequence(): PrivateScope, Public, HideBySig, SpecialName
    get_HasConstant(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_HasConstant(Boolean): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Constant(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Constant(Object): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_HasCustomAttributes(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_CustomAttributes(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_HasMarshalInfo(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_MarshalInfo(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_MarshalInfo(MarshalInfo): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsIn(): PrivateScope, Public, HideBySig, SpecialName
    set_IsIn(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_IsOut(): PrivateScope, Public, HideBySig, SpecialName
    set_IsOut(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_IsLcid(): PrivateScope, Public, HideBySig, SpecialName
    set_IsLcid(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_IsReturnValue(): PrivateScope, Public, HideBySig, SpecialName
    set_IsReturnValue(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_IsOptional(): PrivateScope, Public, HideBySig, SpecialName
    set_IsOptional(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_HasDefault(): PrivateScope, Public, HideBySig, SpecialName
    set_HasDefault(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_HasFieldMarshal(): PrivateScope, Public, HideBySig, SpecialName
    set_HasFieldMarshal(Boolean): PrivateScope, Public, HideBySig, SpecialName
    Resolve(): PrivateScope, Public, Virtual, HideBySig
Class Mono.Cecil.ParameterDefinitionCollection: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Mono.Collections.Generic.Collection`1[Mono.Cecil.ParameterDefinition]
    Void .ctor(Mono.Cecil.IMethodSignature): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Mono.Cecil.IMethodSignature, Int32): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
Class Mono.Cecil.ParameterReference: AutoLayout, AnsiClass, Class, Abstract, BeforeFieldInit
    Void .ctor(System.String, Mono.Cecil.TypeReference): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Mono.Cecil.IMetadataTokenProvider
  Fields:
    Int32 index : Assembly
    Mono.Cecil.MetadataToken token : Assembly
  Properties:
    System.String Name 'get set' : 
    Int32 Index 'get ' : 
    Mono.Cecil.TypeReference ParameterType 'get set' : 
    Mono.Cecil.MetadataToken MetadataToken 'get set' : 
  Methods:
    get_Name(): PrivateScope, Public, HideBySig, SpecialName
    set_Name(String): PrivateScope, Public, HideBySig, SpecialName
    get_Index(): PrivateScope, Public, HideBySig, SpecialName
    get_ParameterType(): PrivateScope, Public, HideBySig, SpecialName
    set_ParameterType(TypeReference): PrivateScope, Public, HideBySig, SpecialName
    get_MetadataToken(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_MetadataToken(MetadataToken): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    ToString(): PrivateScope, Public, Virtual, HideBySig
    Resolve(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class Mono.Cecil.PinnedType: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Mono.Cecil.TypeSpecification
    Void .ctor(Mono.Cecil.TypeReference): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean IsValueType 'get set' : 
    Boolean IsPinned 'get ' : 
  Methods:
    get_IsValueType(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_IsValueType(Boolean): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_IsPinned(): PrivateScope, Public, Virtual, HideBySig, SpecialName
Struct Mono.Cecil.PInvokeAttributes: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    UInt16 value__ : Public, SpecialName, RTSpecialName
    Mono.Cecil.PInvokeAttributes NoMangle = 1 : Public, Static, Literal, HasDefault
    Mono.Cecil.PInvokeAttributes CharSetMask = 6 : Public, Static, Literal, HasDefault
    Mono.Cecil.PInvokeAttributes CharSetNotSpec = 0 : Public, Static, Literal, HasDefault
    Mono.Cecil.PInvokeAttributes CharSetAnsi = 2 : Public, Static, Literal, HasDefault
    Mono.Cecil.PInvokeAttributes CharSetUnicode = 4 : Public, Static, Literal, HasDefault
    Mono.Cecil.PInvokeAttributes CharSetAuto = 6 : Public, Static, Literal, HasDefault
    Mono.Cecil.PInvokeAttributes SupportsLastError = 64 : Public, Static, Literal, HasDefault
    Mono.Cecil.PInvokeAttributes CallConvMask = 1792 : Public, Static, Literal, HasDefault
    Mono.Cecil.PInvokeAttributes CallConvWinapi = 256 : Public, Static, Literal, HasDefault
    Mono.Cecil.PInvokeAttributes CallConvCdecl = 512 : Public, Static, Literal, HasDefault
    Mono.Cecil.PInvokeAttributes CallConvStdCall = 768 : Public, Static, Literal, HasDefault
    Mono.Cecil.PInvokeAttributes CallConvThiscall = 1024 : Public, Static, Literal, HasDefault
    Mono.Cecil.PInvokeAttributes CallConvFastcall = 1280 : Public, Static, Literal, HasDefault
    Mono.Cecil.PInvokeAttributes BestFitMask = 48 : Public, Static, Literal, HasDefault
    Mono.Cecil.PInvokeAttributes BestFitEnabled = 16 : Public, Static, Literal, HasDefault
    Mono.Cecil.PInvokeAttributes BestFitDisabled = 32 : Public, Static, Literal, HasDefault
    Mono.Cecil.PInvokeAttributes ThrowOnUnmappableCharMask = 12288 : Public, Static, Literal, HasDefault
    Mono.Cecil.PInvokeAttributes ThrowOnUnmappableCharEnabled = 4096 : Public, Static, Literal, HasDefault
    Mono.Cecil.PInvokeAttributes ThrowOnUnmappableCharDisabled = 8192 : Public, Static, Literal, HasDefault
Class Mono.Cecil.PInvokeInfo: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
    Void .ctor(Mono.Cecil.PInvokeAttributes, System.String, Mono.Cecil.ModuleReference): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Mono.Cecil.PInvokeAttributes Attributes 'get set' : 
    System.String EntryPoint 'get set' : 
    Mono.Cecil.ModuleReference Module 'get set' : 
    Boolean IsNoMangle 'get set' : 
    Boolean IsCharSetNotSpec 'get set' : 
    Boolean IsCharSetAnsi 'get set' : 
    Boolean IsCharSetUnicode 'get set' : 
    Boolean IsCharSetAuto 'get set' : 
    Boolean SupportsLastError 'get set' : 
    Boolean IsCallConvWinapi 'get set' : 
    Boolean IsCallConvCdecl 'get set' : 
    Boolean IsCallConvStdCall 'get set' : 
    Boolean IsCallConvThiscall 'get set' : 
    Boolean IsCallConvFastcall 'get set' : 
    Boolean IsBestFitEnabled 'get set' : 
    Boolean IsBestFitDisabled 'get set' : 
    Boolean IsThrowOnUnmappableCharEnabled 'get set' : 
    Boolean IsThrowOnUnmappableCharDisabled 'get set' : 
  Methods:
    get_Attributes(): PrivateScope, Public, HideBySig, SpecialName
    set_Attributes(PInvokeAttributes): PrivateScope, Public, HideBySig, SpecialName
    get_EntryPoint(): PrivateScope, Public, HideBySig, SpecialName
    set_EntryPoint(String): PrivateScope, Public, HideBySig, SpecialName
    get_Module(): PrivateScope, Public, HideBySig, SpecialName
    set_Module(ModuleReference): PrivateScope, Public, HideBySig, SpecialName
    get_IsNoMangle(): PrivateScope, Public, HideBySig, SpecialName
    set_IsNoMangle(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_IsCharSetNotSpec(): PrivateScope, Public, HideBySig, SpecialName
    set_IsCharSetNotSpec(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_IsCharSetAnsi(): PrivateScope, Public, HideBySig, SpecialName
    set_IsCharSetAnsi(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_IsCharSetUnicode(): PrivateScope, Public, HideBySig, SpecialName
    set_IsCharSetUnicode(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_IsCharSetAuto(): PrivateScope, Public, HideBySig, SpecialName
    set_IsCharSetAuto(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_SupportsLastError(): PrivateScope, Public, HideBySig, SpecialName
    set_SupportsLastError(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_IsCallConvWinapi(): PrivateScope, Public, HideBySig, SpecialName
    set_IsCallConvWinapi(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_IsCallConvCdecl(): PrivateScope, Public, HideBySig, SpecialName
    set_IsCallConvCdecl(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_IsCallConvStdCall(): PrivateScope, Public, HideBySig, SpecialName
    set_IsCallConvStdCall(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_IsCallConvThiscall(): PrivateScope, Public, HideBySig, SpecialName
    set_IsCallConvThiscall(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_IsCallConvFastcall(): PrivateScope, Public, HideBySig, SpecialName
    set_IsCallConvFastcall(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_IsBestFitEnabled(): PrivateScope, Public, HideBySig, SpecialName
    set_IsBestFitEnabled(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_IsBestFitDisabled(): PrivateScope, Public, HideBySig, SpecialName
    set_IsBestFitDisabled(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_IsThrowOnUnmappableCharEnabled(): PrivateScope, Public, HideBySig, SpecialName
    set_IsThrowOnUnmappableCharEnabled(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_IsThrowOnUnmappableCharDisabled(): PrivateScope, Public, HideBySig, SpecialName
    set_IsThrowOnUnmappableCharDisabled(Boolean): PrivateScope, Public, HideBySig, SpecialName
Class Mono.Cecil.PointerType: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Mono.Cecil.TypeSpecification
    Void .ctor(Mono.Cecil.TypeReference): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String Name 'get ' : 
    System.String FullName 'get ' : 
    Boolean IsValueType 'get set' : 
    Boolean IsPointer 'get ' : 
  Methods:
    get_Name(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_FullName(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_IsValueType(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_IsValueType(Boolean): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_IsPointer(): PrivateScope, Public, Virtual, HideBySig, SpecialName
Struct Mono.Cecil.PropertyAttributes: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    UInt16 value__ : Public, SpecialName, RTSpecialName
    Mono.Cecil.PropertyAttributes None = 0 : Public, Static, Literal, HasDefault
    Mono.Cecil.PropertyAttributes SpecialName = 512 : Public, Static, Literal, HasDefault
    Mono.Cecil.PropertyAttributes RTSpecialName = 1024 : Public, Static, Literal, HasDefault
    Mono.Cecil.PropertyAttributes HasDefault = 4096 : Public, Static, Literal, HasDefault
    Mono.Cecil.PropertyAttributes Unused = 59903 : Public, Static, Literal, HasDefault
Class Mono.Cecil.PropertyDefinition: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Mono.Cecil.PropertyReference
    Void .ctor(System.String, Mono.Cecil.PropertyAttributes, Mono.Cecil.TypeReference): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Mono.Cecil.IMemberDefinition
    Mono.Cecil.ICustomAttributeProvider
    Mono.Cecil.IConstantProvider
  Fields:
    Mono.Cecil.MethodDefinition get_method : Assembly
    Mono.Cecil.MethodDefinition set_method : Assembly
    Mono.Collections.Generic.Collection`1[Mono.Cecil.MethodDefinition] other_methods : Assembly
  Properties:
    Mono.Cecil.PropertyAttributes Attributes 'get set' : 
    Boolean HasThis 'get set' : 
    Boolean HasCustomAttributes 'get ' : 
    Mono.Collections.Generic.Collection`1[Mono.Cecil.CustomAttribute] CustomAttributes 'get ' : 
    Mono.Cecil.MethodDefinition GetMethod 'get set' : 
    Mono.Cecil.MethodDefinition SetMethod 'get set' : 
    Boolean HasOtherMethods 'get ' : 
    Mono.Collections.Generic.Collection`1[Mono.Cecil.MethodDefinition] OtherMethods 'get ' : 
    Boolean HasParameters 'get ' : 
    Mono.Collections.Generic.Collection`1[Mono.Cecil.ParameterDefinition] Parameters 'get ' : 
    Boolean HasConstant 'get set' : 
    System.Object Constant 'get set' : 
    Boolean IsSpecialName 'get set' : 
    Boolean IsRuntimeSpecialName 'get set' : 
    Boolean HasDefault 'get set' : 
    Mono.Cecil.TypeDefinition DeclaringType 'get set' : 
    Boolean IsDefinition 'get ' : 
    System.String FullName 'get ' : 
  Methods:
    get_Attributes(): PrivateScope, Public, HideBySig, SpecialName
    set_Attributes(PropertyAttributes): PrivateScope, Public, HideBySig, SpecialName
    get_HasThis(): PrivateScope, Public, HideBySig, SpecialName
    set_HasThis(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_HasCustomAttributes(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_CustomAttributes(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_GetMethod(): PrivateScope, Public, HideBySig, SpecialName
    set_GetMethod(MethodDefinition): PrivateScope, Public, HideBySig, SpecialName
    get_SetMethod(): PrivateScope, Public, HideBySig, SpecialName
    set_SetMethod(MethodDefinition): PrivateScope, Public, HideBySig, SpecialName
    get_HasOtherMethods(): PrivateScope, Public, HideBySig, SpecialName
    get_OtherMethods(): PrivateScope, Public, HideBySig, SpecialName
    get_HasParameters(): PrivateScope, Public, HideBySig, SpecialName
    get_Parameters(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_HasConstant(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_HasConstant(Boolean): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Constant(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Constant(Object): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsSpecialName(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_IsSpecialName(Boolean): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsRuntimeSpecialName(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_IsRuntimeSpecialName(Boolean): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_HasDefault(): PrivateScope, Public, HideBySig, SpecialName
    set_HasDefault(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_DeclaringType(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_DeclaringType(TypeDefinition): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsDefinition(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_FullName(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    Resolve(): PrivateScope, Public, Virtual, HideBySig
Class Mono.Cecil.PropertyReference: AutoLayout, AnsiClass, Class, Abstract, BeforeFieldInit
  :Mono.Cecil.MemberReference
    Void .ctor(System.String, Mono.Cecil.TypeReference): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    Mono.Cecil.TypeReference PropertyType 'get set' : 
    Mono.Collections.Generic.Collection`1[Mono.Cecil.ParameterDefinition] Parameters 'get ' : 
  Methods:
    get_PropertyType(): PrivateScope, Public, HideBySig, SpecialName
    set_PropertyType(TypeReference): PrivateScope, Public, HideBySig, SpecialName
    get_Parameters(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    Resolve(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class Mono.Cecil.ByReferenceType: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Mono.Cecil.TypeSpecification
    Void .ctor(Mono.Cecil.TypeReference): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String Name 'get ' : 
    System.String FullName 'get ' : 
    Boolean IsValueType 'get set' : 
    Boolean IsByReference 'get ' : 
  Methods:
    get_Name(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_FullName(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_IsValueType(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_IsValueType(Boolean): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_IsByReference(): PrivateScope, Public, Virtual, HideBySig, SpecialName
Struct Mono.Cecil.ResourceType: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Mono.Cecil.ResourceType Linked = 0 : Public, Static, Literal, HasDefault
    Mono.Cecil.ResourceType Embedded = 1 : Public, Static, Literal, HasDefault
    Mono.Cecil.ResourceType AssemblyLinked = 2 : Public, Static, Literal, HasDefault
Class Mono.Cecil.Resource: AutoLayout, AnsiClass, Class, Abstract, BeforeFieldInit
    Void .ctor(System.String, Mono.Cecil.ManifestResourceAttributes): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String Name 'get set' : 
    Mono.Cecil.ManifestResourceAttributes Attributes 'get set' : 
    Mono.Cecil.ResourceType ResourceType 'get ' : 
    Boolean IsPublic 'get set' : 
    Boolean IsPrivate 'get set' : 
  Methods:
    get_Name(): PrivateScope, Public, HideBySig, SpecialName
    set_Name(String): PrivateScope, Public, HideBySig, SpecialName
    get_Attributes(): PrivateScope, Public, HideBySig, SpecialName
    set_Attributes(ManifestResourceAttributes): PrivateScope, Public, HideBySig, SpecialName
    get_ResourceType(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_IsPublic(): PrivateScope, Public, HideBySig, SpecialName
    set_IsPublic(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_IsPrivate(): PrivateScope, Public, HideBySig, SpecialName
    set_IsPrivate(Boolean): PrivateScope, Public, HideBySig, SpecialName
Struct Mono.Cecil.SecurityAction: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    UInt16 value__ : Public, SpecialName, RTSpecialName
    Mono.Cecil.SecurityAction Request = 1 : Public, Static, Literal, HasDefault
    Mono.Cecil.SecurityAction Demand = 2 : Public, Static, Literal, HasDefault
    Mono.Cecil.SecurityAction Assert = 3 : Public, Static, Literal, HasDefault
    Mono.Cecil.SecurityAction Deny = 4 : Public, Static, Literal, HasDefault
    Mono.Cecil.SecurityAction PermitOnly = 5 : Public, Static, Literal, HasDefault
    Mono.Cecil.SecurityAction LinkDemand = 6 : Public, Static, Literal, HasDefault
    Mono.Cecil.SecurityAction InheritDemand = 7 : Public, Static, Literal, HasDefault
    Mono.Cecil.SecurityAction RequestMinimum = 8 : Public, Static, Literal, HasDefault
    Mono.Cecil.SecurityAction RequestOptional = 9 : Public, Static, Literal, HasDefault
    Mono.Cecil.SecurityAction RequestRefuse = 10 : Public, Static, Literal, HasDefault
    Mono.Cecil.SecurityAction PreJitGrant = 11 : Public, Static, Literal, HasDefault
    Mono.Cecil.SecurityAction PreJitDeny = 12 : Public, Static, Literal, HasDefault
    Mono.Cecil.SecurityAction NonCasDemand = 13 : Public, Static, Literal, HasDefault
    Mono.Cecil.SecurityAction NonCasLinkDemand = 14 : Public, Static, Literal, HasDefault
    Mono.Cecil.SecurityAction NonCasInheritance = 15 : Public, Static, Literal, HasDefault
Interface Mono.Cecil.ISecurityDeclarationProvider: AutoLayout, AnsiClass, Class, ClassSemanticsMask, Abstract
  Interfaces:
    Mono.Cecil.IMetadataTokenProvider
  Properties:
    Boolean HasSecurityDeclarations 'get ' : 
    Mono.Collections.Generic.Collection`1[Mono.Cecil.SecurityDeclaration] SecurityDeclarations 'get ' : 
  Methods:
    get_HasSecurityDeclarations(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_SecurityDeclarations(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
Class Mono.Cecil.SecurityAttribute: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
    Void .ctor(Mono.Cecil.TypeReference): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Mono.Cecil.ICustomAttribute
  Fields:
    Mono.Collections.Generic.Collection`1[Mono.Cecil.CustomAttributeNamedArgument] fields : Assembly
    Mono.Collections.Generic.Collection`1[Mono.Cecil.CustomAttributeNamedArgument] properties : Assembly
  Properties:
    Mono.Cecil.TypeReference AttributeType 'get set' : 
    Boolean HasFields 'get ' : 
    Mono.Collections.Generic.Collection`1[Mono.Cecil.CustomAttributeNamedArgument] Fields 'get ' : 
    Boolean HasProperties 'get ' : 
    Mono.Collections.Generic.Collection`1[Mono.Cecil.CustomAttributeNamedArgument] Properties 'get ' : 
  Methods:
    get_AttributeType(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_AttributeType(TypeReference): PrivateScope, Public, HideBySig, SpecialName
    get_HasFields(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Fields(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_HasProperties(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Properties(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
Class Mono.Cecil.SecurityDeclaration: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
    Void .ctor(Mono.Cecil.SecurityAction, UInt32, Mono.Cecil.ModuleDefinition): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Mono.Cecil.SecurityAction): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Mono.Cecil.SecurityAction, Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    UInt32 signature : Assembly, InitOnly
    Boolean resolved : Assembly
    Mono.Collections.Generic.Collection`1[Mono.Cecil.SecurityAttribute] security_attributes : Assembly
  Properties:
    Mono.Cecil.SecurityAction Action 'get set' : 
    Boolean HasSecurityAttributes 'get ' : 
    Mono.Collections.Generic.Collection`1[Mono.Cecil.SecurityAttribute] SecurityAttributes 'get ' : 
    Boolean HasImage 'get ' : 
  Methods:
    get_Action(): PrivateScope, Public, HideBySig, SpecialName
    set_Action(SecurityAction): PrivateScope, Public, HideBySig, SpecialName
    get_HasSecurityAttributes(): PrivateScope, Public, HideBySig, SpecialName
    get_SecurityAttributes(): PrivateScope, Public, HideBySig, SpecialName
    get_HasImage(): PrivateScope, Assembly, HideBySig, SpecialName
    GetBlob(): PrivateScope, Public, HideBySig
Class Mono.Cecil.SentinelType: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Mono.Cecil.TypeSpecification
    Void .ctor(Mono.Cecil.TypeReference): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean IsValueType 'get set' : 
    Boolean IsSentinel 'get ' : 
  Methods:
    get_IsValueType(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_IsValueType(Boolean): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_IsSentinel(): PrivateScope, Public, Virtual, HideBySig, SpecialName
Struct Mono.Cecil.TargetRuntime: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Mono.Cecil.TargetRuntime Net_1_0 = 0 : Public, Static, Literal, HasDefault
    Mono.Cecil.TargetRuntime Net_1_1 = 1 : Public, Static, Literal, HasDefault
    Mono.Cecil.TargetRuntime Net_2_0 = 2 : Public, Static, Literal, HasDefault
    Mono.Cecil.TargetRuntime Net_4_0 = 3 : Public, Static, Literal, HasDefault
Struct Mono.Cecil.TypeDefinitionTreatment: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Mono.Cecil.TypeDefinitionTreatment None = 0 : Public, Static, Literal, HasDefault
    Mono.Cecil.TypeDefinitionTreatment KindMask = 15 : Public, Static, Literal, HasDefault
    Mono.Cecil.TypeDefinitionTreatment NormalType = 1 : Public, Static, Literal, HasDefault
    Mono.Cecil.TypeDefinitionTreatment NormalAttribute = 2 : Public, Static, Literal, HasDefault
    Mono.Cecil.TypeDefinitionTreatment UnmangleWindowsRuntimeName = 3 : Public, Static, Literal, HasDefault
    Mono.Cecil.TypeDefinitionTreatment PrefixWindowsRuntimeName = 4 : Public, Static, Literal, HasDefault
    Mono.Cecil.TypeDefinitionTreatment RedirectToClrType = 5 : Public, Static, Literal, HasDefault
    Mono.Cecil.TypeDefinitionTreatment RedirectToClrAttribute = 6 : Public, Static, Literal, HasDefault
    Mono.Cecil.TypeDefinitionTreatment RedirectImplementedMethods = 7 : Public, Static, Literal, HasDefault
    Mono.Cecil.TypeDefinitionTreatment Abstract = 16 : Public, Static, Literal, HasDefault
    Mono.Cecil.TypeDefinitionTreatment Internal = 32 : Public, Static, Literal, HasDefault
Struct Mono.Cecil.TypeReferenceTreatment: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Mono.Cecil.TypeReferenceTreatment None = 0 : Public, Static, Literal, HasDefault
    Mono.Cecil.TypeReferenceTreatment SystemDelegate = 1 : Public, Static, Literal, HasDefault
    Mono.Cecil.TypeReferenceTreatment SystemAttribute = 2 : Public, Static, Literal, HasDefault
    Mono.Cecil.TypeReferenceTreatment UseProjectionInfo = 3 : Public, Static, Literal, HasDefault
Struct Mono.Cecil.MethodDefinitionTreatment: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Mono.Cecil.MethodDefinitionTreatment None = 0 : Public, Static, Literal, HasDefault
    Mono.Cecil.MethodDefinitionTreatment Abstract = 2 : Public, Static, Literal, HasDefault
    Mono.Cecil.MethodDefinitionTreatment Private = 4 : Public, Static, Literal, HasDefault
    Mono.Cecil.MethodDefinitionTreatment Public = 8 : Public, Static, Literal, HasDefault
    Mono.Cecil.MethodDefinitionTreatment Runtime = 16 : Public, Static, Literal, HasDefault
    Mono.Cecil.MethodDefinitionTreatment InternalCall = 32 : Public, Static, Literal, HasDefault
Struct Mono.Cecil.FieldDefinitionTreatment: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Mono.Cecil.FieldDefinitionTreatment None = 0 : Public, Static, Literal, HasDefault
    Mono.Cecil.FieldDefinitionTreatment Public = 1 : Public, Static, Literal, HasDefault
Struct Mono.Cecil.CustomAttributeValueTreatment: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Mono.Cecil.CustomAttributeValueTreatment None = 0 : Public, Static, Literal, HasDefault
    Mono.Cecil.CustomAttributeValueTreatment AllowSingle = 1 : Public, Static, Literal, HasDefault
    Mono.Cecil.CustomAttributeValueTreatment AllowMultiple = 2 : Public, Static, Literal, HasDefault
    Mono.Cecil.CustomAttributeValueTreatment VersionAttribute = 3 : Public, Static, Literal, HasDefault
    Mono.Cecil.CustomAttributeValueTreatment DeprecatedAttribute = 4 : Public, Static, Literal, HasDefault
Struct Mono.Cecil.TypeAttributes: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    UInt32 value__ : Public, SpecialName, RTSpecialName
    Mono.Cecil.TypeAttributes VisibilityMask = 7 : Public, Static, Literal, HasDefault
    Mono.Cecil.TypeAttributes NotPublic = 0 : Public, Static, Literal, HasDefault
    Mono.Cecil.TypeAttributes Public = 1 : Public, Static, Literal, HasDefault
    Mono.Cecil.TypeAttributes NestedPublic = 2 : Public, Static, Literal, HasDefault
    Mono.Cecil.TypeAttributes NestedPrivate = 3 : Public, Static, Literal, HasDefault
    Mono.Cecil.TypeAttributes NestedFamily = 4 : Public, Static, Literal, HasDefault
    Mono.Cecil.TypeAttributes NestedAssembly = 5 : Public, Static, Literal, HasDefault
    Mono.Cecil.TypeAttributes NestedFamANDAssem = 6 : Public, Static, Literal, HasDefault
    Mono.Cecil.TypeAttributes NestedFamORAssem = 7 : Public, Static, Literal, HasDefault
    Mono.Cecil.TypeAttributes LayoutMask = 24 : Public, Static, Literal, HasDefault
    Mono.Cecil.TypeAttributes AutoLayout = 0 : Public, Static, Literal, HasDefault
    Mono.Cecil.TypeAttributes SequentialLayout = 8 : Public, Static, Literal, HasDefault
    Mono.Cecil.TypeAttributes ExplicitLayout = 16 : Public, Static, Literal, HasDefault
    Mono.Cecil.TypeAttributes ClassSemanticMask = 32 : Public, Static, Literal, HasDefault
    Mono.Cecil.TypeAttributes Class = 0 : Public, Static, Literal, HasDefault
    Mono.Cecil.TypeAttributes Interface = 32 : Public, Static, Literal, HasDefault
    Mono.Cecil.TypeAttributes Abstract = 128 : Public, Static, Literal, HasDefault
    Mono.Cecil.TypeAttributes Sealed = 256 : Public, Static, Literal, HasDefault
    Mono.Cecil.TypeAttributes SpecialName = 1024 : Public, Static, Literal, HasDefault
    Mono.Cecil.TypeAttributes Import = 4096 : Public, Static, Literal, HasDefault
    Mono.Cecil.TypeAttributes Serializable = 8192 : Public, Static, Literal, HasDefault
    Mono.Cecil.TypeAttributes WindowsRuntime = 16384 : Public, Static, Literal, HasDefault
    Mono.Cecil.TypeAttributes StringFormatMask = 196608 : Public, Static, Literal, HasDefault
    Mono.Cecil.TypeAttributes AnsiClass = 0 : Public, Static, Literal, HasDefault
    Mono.Cecil.TypeAttributes UnicodeClass = 65536 : Public, Static, Literal, HasDefault
    Mono.Cecil.TypeAttributes AutoClass = 131072 : Public, Static, Literal, HasDefault
    Mono.Cecil.TypeAttributes BeforeFieldInit = 1048576 : Public, Static, Literal, HasDefault
    Mono.Cecil.TypeAttributes RTSpecialName = 2048 : Public, Static, Literal, HasDefault
    Mono.Cecil.TypeAttributes HasSecurity = 262144 : Public, Static, Literal, HasDefault
    Mono.Cecil.TypeAttributes Forwarder = 2097152 : Public, Static, Literal, HasDefault
Struct Mono.Cecil.TypeComparisonMode: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Mono.Cecil.TypeComparisonMode Exact = 0 : Public, Static, Literal, HasDefault
    Mono.Cecil.TypeComparisonMode SignatureOnly = 1 : Public, Static, Literal, HasDefault
    Mono.Cecil.TypeComparisonMode SignatureOnlyLoose = 2 : Public, Static, Literal, HasDefault
Class Mono.Cecil.TypeDefinition: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Mono.Cecil.TypeReference
    Void .ctor(System.String, System.String, Mono.Cecil.TypeAttributes): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.String, Mono.Cecil.TypeAttributes, Mono.Cecil.TypeReference): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Mono.Cecil.IMemberDefinition
    Mono.Cecil.ICustomAttributeProvider
    Mono.Cecil.ISecurityDeclarationProvider
  Fields:
    Mono.Cecil.Range fields_range : Assembly
    Mono.Cecil.Range methods_range : Assembly
  Properties:
    Mono.Cecil.TypeAttributes Attributes 'get set' : 
    Mono.Cecil.TypeReference BaseType 'get set' : 
    System.String Name 'get set' : 
    Boolean HasLayoutInfo 'get ' : 
    Int16 PackingSize 'get set' : 
    Int32 ClassSize 'get set' : 
    Boolean HasInterfaces 'get ' : 
    Mono.Collections.Generic.Collection`1[Mono.Cecil.InterfaceImplementation] Interfaces 'get ' : 
    Boolean HasNestedTypes 'get ' : 
    Mono.Collections.Generic.Collection`1[Mono.Cecil.TypeDefinition] NestedTypes 'get ' : 
    Boolean HasMethods 'get ' : 
    Mono.Collections.Generic.Collection`1[Mono.Cecil.MethodDefinition] Methods 'get ' : 
    Boolean HasFields 'get ' : 
    Mono.Collections.Generic.Collection`1[Mono.Cecil.FieldDefinition] Fields 'get ' : 
    Boolean HasEvents 'get ' : 
    Mono.Collections.Generic.Collection`1[Mono.Cecil.EventDefinition] Events 'get ' : 
    Boolean HasProperties 'get ' : 
    Mono.Collections.Generic.Collection`1[Mono.Cecil.PropertyDefinition] Properties 'get ' : 
    Boolean HasSecurityDeclarations 'get ' : 
    Mono.Collections.Generic.Collection`1[Mono.Cecil.SecurityDeclaration] SecurityDeclarations 'get ' : 
    Boolean HasCustomAttributes 'get ' : 
    Mono.Collections.Generic.Collection`1[Mono.Cecil.CustomAttribute] CustomAttributes 'get ' : 
    Boolean HasGenericParameters 'get ' : 
    Mono.Collections.Generic.Collection`1[Mono.Cecil.GenericParameter] GenericParameters 'get ' : 
    Boolean IsNotPublic 'get set' : 
    Boolean IsPublic 'get set' : 
    Boolean IsNestedPublic 'get set' : 
    Boolean IsNestedPrivate 'get set' : 
    Boolean IsNestedFamily 'get set' : 
    Boolean IsNestedAssembly 'get set' : 
    Boolean IsNestedFamilyAndAssembly 'get set' : 
    Boolean IsNestedFamilyOrAssembly 'get set' : 
    Boolean IsAutoLayout 'get set' : 
    Boolean IsSequentialLayout 'get set' : 
    Boolean IsExplicitLayout 'get set' : 
    Boolean IsClass 'get set' : 
    Boolean IsInterface 'get set' : 
    Boolean IsAbstract 'get set' : 
    Boolean IsSealed 'get set' : 
    Boolean IsSpecialName 'get set' : 
    Boolean IsImport 'get set' : 
    Boolean IsSerializable 'get set' : 
    Boolean IsWindowsRuntime 'get set' : 
    Boolean IsAnsiClass 'get set' : 
    Boolean IsUnicodeClass 'get set' : 
    Boolean IsAutoClass 'get set' : 
    Boolean IsBeforeFieldInit 'get set' : 
    Boolean IsRuntimeSpecialName 'get set' : 
    Boolean HasSecurity 'get set' : 
    Boolean IsEnum 'get ' : 
    Boolean IsValueType 'get set' : 
    Boolean IsPrimitive 'get ' : 
    Mono.Cecil.MetadataType MetadataType 'get ' : 
    Boolean IsDefinition 'get ' : 
    Mono.Cecil.TypeDefinition DeclaringType 'get set' : 
    Mono.Cecil.TypeDefinitionProjection WindowsRuntimeProjection 'get set' : 
  Methods:
    get_Attributes(): PrivateScope, Public, HideBySig, SpecialName
    set_Attributes(TypeAttributes): PrivateScope, Public, HideBySig, SpecialName
    get_BaseType(): PrivateScope, Public, HideBySig, SpecialName
    set_BaseType(TypeReference): PrivateScope, Public, HideBySig, SpecialName
    get_Name(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Name(String): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_HasLayoutInfo(): PrivateScope, Public, HideBySig, SpecialName
    get_PackingSize(): PrivateScope, Public, HideBySig, SpecialName
    set_PackingSize(Int16): PrivateScope, Public, HideBySig, SpecialName
    get_ClassSize(): PrivateScope, Public, HideBySig, SpecialName
    set_ClassSize(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_HasInterfaces(): PrivateScope, Public, HideBySig, SpecialName
    get_Interfaces(): PrivateScope, Public, HideBySig, SpecialName
    get_HasNestedTypes(): PrivateScope, Public, HideBySig, SpecialName
    get_NestedTypes(): PrivateScope, Public, HideBySig, SpecialName
    get_HasMethods(): PrivateScope, Public, HideBySig, SpecialName
    get_Methods(): PrivateScope, Public, HideBySig, SpecialName
    get_HasFields(): PrivateScope, Public, HideBySig, SpecialName
    get_Fields(): PrivateScope, Public, HideBySig, SpecialName
    get_HasEvents(): PrivateScope, Public, HideBySig, SpecialName
    get_Events(): PrivateScope, Public, HideBySig, SpecialName
    get_HasProperties(): PrivateScope, Public, HideBySig, SpecialName
    get_Properties(): PrivateScope, Public, HideBySig, SpecialName
    get_HasSecurityDeclarations(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_SecurityDeclarations(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_HasCustomAttributes(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_CustomAttributes(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_HasGenericParameters(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_GenericParameters(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_IsNotPublic(): PrivateScope, Public, HideBySig, SpecialName
    set_IsNotPublic(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_IsPublic(): PrivateScope, Public, HideBySig, SpecialName
    set_IsPublic(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_IsNestedPublic(): PrivateScope, Public, HideBySig, SpecialName
    set_IsNestedPublic(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_IsNestedPrivate(): PrivateScope, Public, HideBySig, SpecialName
    set_IsNestedPrivate(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_IsNestedFamily(): PrivateScope, Public, HideBySig, SpecialName
    set_IsNestedFamily(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_IsNestedAssembly(): PrivateScope, Public, HideBySig, SpecialName
    set_IsNestedAssembly(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_IsNestedFamilyAndAssembly(): PrivateScope, Public, HideBySig, SpecialName
    set_IsNestedFamilyAndAssembly(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_IsNestedFamilyOrAssembly(): PrivateScope, Public, HideBySig, SpecialName
    set_IsNestedFamilyOrAssembly(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_IsAutoLayout(): PrivateScope, Public, HideBySig, SpecialName
    set_IsAutoLayout(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_IsSequentialLayout(): PrivateScope, Public, HideBySig, SpecialName
    set_IsSequentialLayout(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_IsExplicitLayout(): PrivateScope, Public, HideBySig, SpecialName
    set_IsExplicitLayout(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_IsClass(): PrivateScope, Public, HideBySig, SpecialName
    set_IsClass(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_IsInterface(): PrivateScope, Public, HideBySig, SpecialName
    set_IsInterface(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_IsAbstract(): PrivateScope, Public, HideBySig, SpecialName
    set_IsAbstract(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_IsSealed(): PrivateScope, Public, HideBySig, SpecialName
    set_IsSealed(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_IsSpecialName(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_IsSpecialName(Boolean): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsImport(): PrivateScope, Public, HideBySig, SpecialName
    set_IsImport(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_IsSerializable(): PrivateScope, Public, HideBySig, SpecialName
    set_IsSerializable(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_IsWindowsRuntime(): PrivateScope, Public, HideBySig, SpecialName
    set_IsWindowsRuntime(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_IsAnsiClass(): PrivateScope, Public, HideBySig, SpecialName
    set_IsAnsiClass(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_IsUnicodeClass(): PrivateScope, Public, HideBySig, SpecialName
    set_IsUnicodeClass(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_IsAutoClass(): PrivateScope, Public, HideBySig, SpecialName
    set_IsAutoClass(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_IsBeforeFieldInit(): PrivateScope, Public, HideBySig, SpecialName
    set_IsBeforeFieldInit(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_IsRuntimeSpecialName(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_IsRuntimeSpecialName(Boolean): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_HasSecurity(): PrivateScope, Public, HideBySig, SpecialName
    set_HasSecurity(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_IsEnum(): PrivateScope, Public, HideBySig, SpecialName
    get_IsValueType(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_IsValueType(Boolean): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_IsPrimitive(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_MetadataType(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_IsDefinition(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_DeclaringType(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_DeclaringType(TypeDefinition): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_WindowsRuntimeProjection(): PrivateScope, Assembly, HideBySig, SpecialName
    set_WindowsRuntimeProjection(TypeDefinitionProjection): PrivateScope, Assembly, HideBySig, SpecialName
    Resolve(): PrivateScope, Public, Virtual, HideBySig
Class Mono.Cecil.InterfaceImplementation: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
    Void .ctor(Mono.Cecil.TypeReference, Mono.Cecil.MetadataToken): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Mono.Cecil.TypeReference): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Mono.Cecil.ICustomAttributeProvider
    Mono.Cecil.IMetadataTokenProvider
  Fields:
    Mono.Cecil.TypeDefinition type : Assembly
    Mono.Cecil.MetadataToken token : Assembly
  Properties:
    Mono.Cecil.TypeReference InterfaceType 'get set' : 
    Boolean HasCustomAttributes 'get ' : 
    Mono.Collections.Generic.Collection`1[Mono.Cecil.CustomAttribute] CustomAttributes 'get ' : 
    Mono.Cecil.MetadataToken MetadataToken 'get set' : 
  Methods:
    get_InterfaceType(): PrivateScope, Public, HideBySig, SpecialName
    set_InterfaceType(TypeReference): PrivateScope, Public, HideBySig, SpecialName
    get_HasCustomAttributes(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_CustomAttributes(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_MetadataToken(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_MetadataToken(MetadataToken): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
Class Mono.Cecil.InterfaceImplementationCollection: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :Mono.Collections.Generic.Collection`1[Mono.Cecil.InterfaceImplementation]
    Void .ctor(Mono.Cecil.TypeDefinition): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Mono.Cecil.TypeDefinition, Int32): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
Class Mono.Cecil.TypeDefinitionCollection: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Mono.Collections.Generic.Collection`1[Mono.Cecil.TypeDefinition]
    Void .ctor(Mono.Cecil.ModuleDefinition): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Mono.Cecil.ModuleDefinition, Int32): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Methods:
    GetType(String): PrivateScope, Public, HideBySig
    GetType(String, String): PrivateScope, Public, HideBySig
Class Mono.Cecil.TypeParser: AutoLayout, AnsiClass, Class, BeforeFieldInit
  Methods:
    ParseType(ModuleDefinition, String, Boolean(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    SplitFullName(String, String&(Out), String&(Out)): PrivateScope, Public, Static, HideBySig
    ToParseable(TypeReference, Boolean(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
Struct Mono.Cecil.MetadataType: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Byte value__ : Public, SpecialName, RTSpecialName
    Mono.Cecil.MetadataType Void = 1 : Public, Static, Literal, HasDefault
    Mono.Cecil.MetadataType Boolean = 2 : Public, Static, Literal, HasDefault
    Mono.Cecil.MetadataType Char = 3 : Public, Static, Literal, HasDefault
    Mono.Cecil.MetadataType SByte = 4 : Public, Static, Literal, HasDefault
    Mono.Cecil.MetadataType Byte = 5 : Public, Static, Literal, HasDefault
    Mono.Cecil.MetadataType Int16 = 6 : Public, Static, Literal, HasDefault
    Mono.Cecil.MetadataType UInt16 = 7 : Public, Static, Literal, HasDefault
    Mono.Cecil.MetadataType Int32 = 8 : Public, Static, Literal, HasDefault
    Mono.Cecil.MetadataType UInt32 = 9 : Public, Static, Literal, HasDefault
    Mono.Cecil.MetadataType Int64 = 10 : Public, Static, Literal, HasDefault
    Mono.Cecil.MetadataType UInt64 = 11 : Public, Static, Literal, HasDefault
    Mono.Cecil.MetadataType Single = 12 : Public, Static, Literal, HasDefault
    Mono.Cecil.MetadataType Double = 13 : Public, Static, Literal, HasDefault
    Mono.Cecil.MetadataType String = 14 : Public, Static, Literal, HasDefault
    Mono.Cecil.MetadataType Pointer = 15 : Public, Static, Literal, HasDefault
    Mono.Cecil.MetadataType ByReference = 16 : Public, Static, Literal, HasDefault
    Mono.Cecil.MetadataType ValueType = 17 : Public, Static, Literal, HasDefault
    Mono.Cecil.MetadataType Class = 18 : Public, Static, Literal, HasDefault
    Mono.Cecil.MetadataType Var = 19 : Public, Static, Literal, HasDefault
    Mono.Cecil.MetadataType Array = 20 : Public, Static, Literal, HasDefault
    Mono.Cecil.MetadataType GenericInstance = 21 : Public, Static, Literal, HasDefault
    Mono.Cecil.MetadataType TypedByReference = 22 : Public, Static, Literal, HasDefault
    Mono.Cecil.MetadataType IntPtr = 24 : Public, Static, Literal, HasDefault
    Mono.Cecil.MetadataType UIntPtr = 25 : Public, Static, Literal, HasDefault
    Mono.Cecil.MetadataType FunctionPointer = 27 : Public, Static, Literal, HasDefault
    Mono.Cecil.MetadataType Object = 28 : Public, Static, Literal, HasDefault
    Mono.Cecil.MetadataType MVar = 30 : Public, Static, Literal, HasDefault
    Mono.Cecil.MetadataType RequiredModifier = 31 : Public, Static, Literal, HasDefault
    Mono.Cecil.MetadataType OptionalModifier = 32 : Public, Static, Literal, HasDefault
    Mono.Cecil.MetadataType Sentinel = 65 : Public, Static, Literal, HasDefault
    Mono.Cecil.MetadataType Pinned = 69 : Public, Static, Literal, HasDefault
Class Mono.Cecil.TypeReference: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :Mono.Cecil.MemberReference
    Void .ctor(System.String, System.String, Mono.Cecil.ModuleDefinition, Mono.Cecil.IMetadataScope): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.String, Mono.Cecil.ModuleDefinition, Mono.Cecil.IMetadataScope, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Mono.Cecil.IGenericParameterProvider
    Mono.Cecil.IGenericContext
  Fields:
    Mono.Cecil.IMetadataScope scope : Assembly
    Mono.Cecil.ModuleDefinition module : Assembly
    Mono.Cecil.Metadata.ElementType etype : Assembly
  Properties:
    System.String Name 'get set' : 
    System.String Namespace 'get set' : 
    Boolean IsValueType 'get set' : 
    Mono.Cecil.ModuleDefinition Module 'get ' : 
    Mono.Cecil.TypeReferenceProjection WindowsRuntimeProjection 'get set' : 
    Boolean HasGenericParameters 'get ' : 
    Mono.Collections.Generic.Collection`1[Mono.Cecil.GenericParameter] GenericParameters 'get ' : 
    Mono.Cecil.IMetadataScope Scope 'get set' : 
    Boolean IsNested 'get ' : 
    Mono.Cecil.TypeReference DeclaringType 'get set' : 
    System.String FullName 'get ' : 
    Boolean IsByReference 'get ' : 
    Boolean IsPointer 'get ' : 
    Boolean IsSentinel 'get ' : 
    Boolean IsArray 'get ' : 
    Boolean IsGenericParameter 'get ' : 
    Boolean IsGenericInstance 'get ' : 
    Boolean IsRequiredModifier 'get ' : 
    Boolean IsOptionalModifier 'get ' : 
    Boolean IsPinned 'get ' : 
    Boolean IsFunctionPointer 'get ' : 
    Boolean IsPrimitive 'get ' : 
    Mono.Cecil.MetadataType MetadataType 'get ' : 
  Methods:
    get_Name(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Name(String): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Namespace(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Namespace(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsValueType(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_IsValueType(Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Module(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_WindowsRuntimeProjection(): PrivateScope, Assembly, HideBySig, SpecialName
    set_WindowsRuntimeProjection(TypeReferenceProjection): PrivateScope, Assembly, HideBySig, SpecialName
    get_HasGenericParameters(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_GenericParameters(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Scope(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Scope(IMetadataScope): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsNested(): PrivateScope, Public, HideBySig, SpecialName
    get_DeclaringType(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_DeclaringType(TypeReference): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_FullName(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_IsByReference(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsPointer(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsSentinel(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsArray(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsGenericParameter(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsGenericInstance(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsRequiredModifier(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsOptionalModifier(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsPinned(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsFunctionPointer(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsPrimitive(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_MetadataType(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    GetElementType(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Resolve(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class Mono.Cecil.TypeReferenceEqualityComparer: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :System.Collections.Generic.EqualityComparer`1[Mono.Cecil.TypeReference]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Equals(TypeReference, TypeReference): PrivateScope, Public, Virtual, HideBySig
    GetHashCode(TypeReference): PrivateScope, Public, Virtual, HideBySig
    AreEqual(TypeReference, TypeReference, TypeComparisonMode(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    GetHashCodeFor(TypeReference): PrivateScope, Public, Static, HideBySig
Class Mono.Cecil.TypeResolver: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Mono.Cecil.GenericInstanceType): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Mono.Cecil.GenericInstanceMethod): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Mono.Cecil.GenericInstanceType, Mono.Cecil.GenericInstanceMethod): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    For(TypeReference): PrivateScope, Public, Static, HideBySig
    For(TypeReference, MethodReference): PrivateScope, Public, Static, HideBySig
    Resolve(MethodReference): PrivateScope, Public, HideBySig
    Resolve(FieldReference): PrivateScope, Public, HideBySig
    ResolveReturnType(MethodReference): PrivateScope, Public, HideBySig
    ResolveParameterType(MethodReference, ParameterReference): PrivateScope, Public, HideBySig
    ResolveVariableType(MethodReference, VariableReference): PrivateScope, Public, HideBySig
    ResolveFieldType(FieldReference): PrivateScope, Public, HideBySig
    Resolve(TypeReference): PrivateScope, Public, HideBySig
    Resolve(TypeReference, Boolean): PrivateScope, Public, HideBySig
    Nested(GenericInstanceMethod): PrivateScope, Assembly, HideBySig
Class Mono.Cecil.TypeSpecification: AutoLayout, AnsiClass, Class, Abstract, BeforeFieldInit
  :Mono.Cecil.TypeReference
    Void .ctor(Mono.Cecil.TypeReference): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    Mono.Cecil.TypeReference ElementType 'get ' : 
    System.String Name 'get set' : 
    System.String Namespace 'get set' : 
    Mono.Cecil.IMetadataScope Scope 'get set' : 
    Mono.Cecil.ModuleDefinition Module 'get ' : 
    System.String FullName 'get ' : 
    Boolean ContainsGenericParameter 'get ' : 
    Mono.Cecil.MetadataType MetadataType 'get ' : 
  Methods:
    get_ElementType(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Name(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Name(String): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Namespace(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Namespace(String): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Scope(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Scope(IMetadataScope): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Module(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_FullName(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_ContainsGenericParameter(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_MetadataType(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    GetElementType(): PrivateScope, Public, Virtual, HideBySig
Class Mono.Cecil.TypeSystem: AutoLayout, AnsiClass, Class, Abstract, BeforeFieldInit
  Properties:
    Mono.Cecil.IMetadataScope Corlib 'get ' :  (Obsolete)
    Mono.Cecil.IMetadataScope CoreLibrary 'get ' : 
    Mono.Cecil.TypeReference Object 'get ' : 
    Mono.Cecil.TypeReference Void 'get ' : 
    Mono.Cecil.TypeReference Boolean 'get ' : 
    Mono.Cecil.TypeReference Char 'get ' : 
    Mono.Cecil.TypeReference SByte 'get ' : 
    Mono.Cecil.TypeReference Byte 'get ' : 
    Mono.Cecil.TypeReference Int16 'get ' : 
    Mono.Cecil.TypeReference UInt16 'get ' : 
    Mono.Cecil.TypeReference Int32 'get ' : 
    Mono.Cecil.TypeReference UInt32 'get ' : 
    Mono.Cecil.TypeReference Int64 'get ' : 
    Mono.Cecil.TypeReference UInt64 'get ' : 
    Mono.Cecil.TypeReference Single 'get ' : 
    Mono.Cecil.TypeReference Double 'get ' : 
    Mono.Cecil.TypeReference IntPtr 'get ' : 
    Mono.Cecil.TypeReference UIntPtr 'get ' : 
    Mono.Cecil.TypeReference String 'get ' : 
    Mono.Cecil.TypeReference TypedReference 'get ' : 
  Methods:
    CreateTypeSystem(ModuleDefinition): PrivateScope, Assembly, Static, HideBySig
    LookupType(String, String): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride, Abstract
    get_Corlib(): PrivateScope, Public, HideBySig, SpecialName
    get_CoreLibrary(): PrivateScope, Public, HideBySig, SpecialName
    get_Object(): PrivateScope, Public, HideBySig, SpecialName
    get_Void(): PrivateScope, Public, HideBySig, SpecialName
    get_Boolean(): PrivateScope, Public, HideBySig, SpecialName
    get_Char(): PrivateScope, Public, HideBySig, SpecialName
    get_SByte(): PrivateScope, Public, HideBySig, SpecialName
    get_Byte(): PrivateScope, Public, HideBySig, SpecialName
    get_Int16(): PrivateScope, Public, HideBySig, SpecialName
    get_UInt16(): PrivateScope, Public, HideBySig, SpecialName
    get_Int32(): PrivateScope, Public, HideBySig, SpecialName
    get_UInt32(): PrivateScope, Public, HideBySig, SpecialName
    get_Int64(): PrivateScope, Public, HideBySig, SpecialName
    get_UInt64(): PrivateScope, Public, HideBySig, SpecialName
    get_Single(): PrivateScope, Public, HideBySig, SpecialName
    get_Double(): PrivateScope, Public, HideBySig, SpecialName
    get_IntPtr(): PrivateScope, Public, HideBySig, SpecialName
    get_UIntPtr(): PrivateScope, Public, HideBySig, SpecialName
    get_String(): PrivateScope, Public, HideBySig, SpecialName
    get_TypedReference(): PrivateScope, Public, HideBySig, SpecialName
Struct Mono.Cecil.VariantType: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Mono.Cecil.VariantType None = 0 : Public, Static, Literal, HasDefault
    Mono.Cecil.VariantType I2 = 2 : Public, Static, Literal, HasDefault
    Mono.Cecil.VariantType I4 = 3 : Public, Static, Literal, HasDefault
    Mono.Cecil.VariantType R4 = 4 : Public, Static, Literal, HasDefault
    Mono.Cecil.VariantType R8 = 5 : Public, Static, Literal, HasDefault
    Mono.Cecil.VariantType CY = 6 : Public, Static, Literal, HasDefault
    Mono.Cecil.VariantType Date = 7 : Public, Static, Literal, HasDefault
    Mono.Cecil.VariantType BStr = 8 : Public, Static, Literal, HasDefault
    Mono.Cecil.VariantType Dispatch = 9 : Public, Static, Literal, HasDefault
    Mono.Cecil.VariantType Error = 10 : Public, Static, Literal, HasDefault
    Mono.Cecil.VariantType Bool = 11 : Public, Static, Literal, HasDefault
    Mono.Cecil.VariantType Variant = 12 : Public, Static, Literal, HasDefault
    Mono.Cecil.VariantType Unknown = 13 : Public, Static, Literal, HasDefault
    Mono.Cecil.VariantType Decimal = 14 : Public, Static, Literal, HasDefault
    Mono.Cecil.VariantType I1 = 16 : Public, Static, Literal, HasDefault
    Mono.Cecil.VariantType UI1 = 17 : Public, Static, Literal, HasDefault
    Mono.Cecil.VariantType UI2 = 18 : Public, Static, Literal, HasDefault
    Mono.Cecil.VariantType UI4 = 19 : Public, Static, Literal, HasDefault
    Mono.Cecil.VariantType I8 = 20 : Public, Static, Literal, HasDefault
    Mono.Cecil.VariantType UI8 = 21 : Public, Static, Literal, HasDefault
    Mono.Cecil.VariantType Int = 22 : Public, Static, Literal, HasDefault
    Mono.Cecil.VariantType UInt = 23 : Public, Static, Literal, HasDefault
Class Mono.Cecil.TypeDefinitionProjection: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
    Void .ctor(Mono.Cecil.TypeDefinition, Mono.Cecil.TypeDefinitionTreatment, Mono.Collections.Generic.Collection`1[Mono.Cecil.MethodDefinition], Mono.Collections.Generic.Collection`1[System.Collections.Generic.KeyValuePair`2[Mono.Cecil.InterfaceImplementation,Mono.Cecil.InterfaceImplementation]]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Mono.Cecil.TypeAttributes Attributes : Public, InitOnly
    System.String Name : Public, InitOnly
    Mono.Cecil.TypeDefinitionTreatment Treatment : Public, InitOnly
    Mono.Collections.Generic.Collection`1[Mono.Cecil.MethodDefinition] RedirectedMethods : Public, InitOnly
    Mono.Collections.Generic.Collection`1[System.Collections.Generic.KeyValuePair`2[Mono.Cecil.InterfaceImplementation,Mono.Cecil.InterfaceImplementation]] RedirectedInterfaces : Public, InitOnly
Class Mono.Cecil.TypeReferenceProjection: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
    Void .ctor(Mono.Cecil.TypeReference, Mono.Cecil.TypeReferenceTreatment): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    System.String Name : Public, InitOnly
    System.String Namespace : Public, InitOnly
    Mono.Cecil.IMetadataScope Scope : Public, InitOnly
    Mono.Cecil.TypeReferenceTreatment Treatment : Public, InitOnly
Class Mono.Cecil.MethodDefinitionProjection: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
    Void .ctor(Mono.Cecil.MethodDefinition, Mono.Cecil.MethodDefinitionTreatment): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Mono.Cecil.MethodAttributes Attributes : Public, InitOnly
    Mono.Cecil.MethodImplAttributes ImplAttributes : Public, InitOnly
    System.String Name : Public, InitOnly
    Mono.Cecil.MethodDefinitionTreatment Treatment : Public, InitOnly
Class Mono.Cecil.FieldDefinitionProjection: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
    Void .ctor(Mono.Cecil.FieldDefinition, Mono.Cecil.FieldDefinitionTreatment): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Mono.Cecil.FieldAttributes Attributes : Public, InitOnly
    Mono.Cecil.FieldDefinitionTreatment Treatment : Public, InitOnly
Class Mono.Cecil.CustomAttributeValueProjection: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
    Void .ctor(System.AttributeTargets, Mono.Cecil.CustomAttributeValueTreatment): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    System.AttributeTargets Targets : Public, InitOnly
    Mono.Cecil.CustomAttributeValueTreatment Treatment : Public, InitOnly
Class Mono.Cecil.WindowsRuntimeProjections: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
    Void .ctor(Mono.Cecil.ModuleDefinition): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Project(TypeDefinition): PrivateScope, Public, Static, HideBySig
    IsClrImplementationType(TypeDefinition): PrivateScope, Public, Static, HideBySig
    ApplyProjection(TypeDefinition, TypeDefinitionProjection): PrivateScope, Public, Static, HideBySig
    RemoveProjection(TypeDefinition): PrivateScope, Public, Static, HideBySig
    Project(TypeReference): PrivateScope, Public, Static, HideBySig
    ApplyProjection(TypeReference, TypeReferenceProjection): PrivateScope, Public, Static, HideBySig
    RemoveProjection(TypeReference): PrivateScope, Public, Static, HideBySig
    Project(MethodDefinition): PrivateScope, Public, Static, HideBySig
    ApplyProjection(MethodDefinition, MethodDefinitionProjection): PrivateScope, Public, Static, HideBySig
    RemoveProjection(MethodDefinition): PrivateScope, Public, Static, HideBySig
    Project(FieldDefinition): PrivateScope, Public, Static, HideBySig
    ApplyProjection(FieldDefinition, FieldDefinitionProjection): PrivateScope, Public, Static, HideBySig
    RemoveProjection(FieldDefinition): PrivateScope, Public, Static, HideBySig
    AddVirtualReferences(Collection`1): PrivateScope, Public, HideBySig
    RemoveVirtualReferences(Collection`1): PrivateScope, Public, HideBySig
    Project(ICustomAttributeProvider, Collection`1, CustomAttribute): PrivateScope, Public, Static, HideBySig
    ApplyProjection(CustomAttribute, CustomAttributeValueProjection): PrivateScope, Public, Static, HideBySig
    RemoveProjection(CustomAttribute): PrivateScope, Public, Static, HideBySig
Struct Mono.Cecil.MetadataToken: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(UInt32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Mono.Cecil.TokenType): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Mono.Cecil.TokenType, UInt32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Mono.Cecil.TokenType, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IEquatable`1[Mono.Cecil.MetadataToken]
  Fields:
    Mono.Cecil.MetadataToken Zero : Public, Static, InitOnly
  Properties:
    UInt32 RID 'get ' : 
    Mono.Cecil.TokenType TokenType 'get ' : 
  Methods:
    get_RID(): PrivateScope, Public, HideBySig, SpecialName
    get_TokenType(): PrivateScope, Public, HideBySig, SpecialName
    ToInt32(): PrivateScope, Public, HideBySig
    ToUInt32(): PrivateScope, Public, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    Equals(MetadataToken): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    op_Equality(MetadataToken, MetadataToken): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Inequality(MetadataToken, MetadataToken): PrivateScope, Public, Static, HideBySig, SpecialName
    ToString(): PrivateScope, Public, Virtual, HideBySig
Struct Mono.Cecil.TokenType: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    UInt32 value__ : Public, SpecialName, RTSpecialName
    Mono.Cecil.TokenType Module = 0 : Public, Static, Literal, HasDefault
    Mono.Cecil.TokenType TypeRef = 16777216 : Public, Static, Literal, HasDefault
    Mono.Cecil.TokenType TypeDef = 33554432 : Public, Static, Literal, HasDefault
    Mono.Cecil.TokenType Field = 67108864 : Public, Static, Literal, HasDefault
    Mono.Cecil.TokenType Method = 100663296 : Public, Static, Literal, HasDefault
    Mono.Cecil.TokenType Param = 134217728 : Public, Static, Literal, HasDefault
    Mono.Cecil.TokenType InterfaceImpl = 150994944 : Public, Static, Literal, HasDefault
    Mono.Cecil.TokenType MemberRef = 167772160 : Public, Static, Literal, HasDefault
    Mono.Cecil.TokenType CustomAttribute = 201326592 : Public, Static, Literal, HasDefault
    Mono.Cecil.TokenType Permission = 234881024 : Public, Static, Literal, HasDefault
    Mono.Cecil.TokenType Signature = 285212672 : Public, Static, Literal, HasDefault
    Mono.Cecil.TokenType Event = 335544320 : Public, Static, Literal, HasDefault
    Mono.Cecil.TokenType Property = 385875968 : Public, Static, Literal, HasDefault
    Mono.Cecil.TokenType ModuleRef = 436207616 : Public, Static, Literal, HasDefault
    Mono.Cecil.TokenType TypeSpec = 452984832 : Public, Static, Literal, HasDefault
    Mono.Cecil.TokenType Assembly = 536870912 : Public, Static, Literal, HasDefault
    Mono.Cecil.TokenType AssemblyRef = 587202560 : Public, Static, Literal, HasDefault
    Mono.Cecil.TokenType File = 637534208 : Public, Static, Literal, HasDefault
    Mono.Cecil.TokenType ExportedType = 654311424 : Public, Static, Literal, HasDefault
    Mono.Cecil.TokenType ManifestResource = 671088640 : Public, Static, Literal, HasDefault
    Mono.Cecil.TokenType GenericParam = 704643072 : Public, Static, Literal, HasDefault
    Mono.Cecil.TokenType MethodSpec = 721420288 : Public, Static, Literal, HasDefault
    Mono.Cecil.TokenType GenericParamConstraint = 738197504 : Public, Static, Literal, HasDefault
    Mono.Cecil.TokenType Document = 805306368 : Public, Static, Literal, HasDefault
    Mono.Cecil.TokenType MethodDebugInformation = 822083584 : Public, Static, Literal, HasDefault
    Mono.Cecil.TokenType LocalScope = 838860800 : Public, Static, Literal, HasDefault
    Mono.Cecil.TokenType LocalVariable = 855638016 : Public, Static, Literal, HasDefault
    Mono.Cecil.TokenType LocalConstant = 872415232 : Public, Static, Literal, HasDefault
    Mono.Cecil.TokenType ImportScope = 889192448 : Public, Static, Literal, HasDefault
    Mono.Cecil.TokenType StateMachineMethod = 905969664 : Public, Static, Literal, HasDefault
    Mono.Cecil.TokenType CustomDebugInformation = 922746880 : Public, Static, Literal, HasDefault
    Mono.Cecil.TokenType String = 1879048192 : Public, Static, Literal, HasDefault
Class Mono.Cecil.CryptoService: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Methods:
    GetPublicKey(WriterParameters): PrivateScope, Public, Static, HideBySig
    StrongName(Stream, ImageWriter, WriterParameters): PrivateScope, Public, Static, HideBySig
    CopyStreamChunk(Stream, Stream, Byte[], Int32): PrivateScope, Public, Static, HideBySig
    ComputeHash(String): PrivateScope, Public, Static, HideBySig
    ComputeHash(Stream): PrivateScope, Public, Static, HideBySig
    ComputeHash(ByteBuffer[]): PrivateScope, Public, Static, HideBySig
    ComputeGuid(Byte[]): PrivateScope, Public, Static, HideBySig
Class Mono.Cecil.PE.BinaryStreamReader: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :System.IO.BinaryReader
    Void .ctor(System.IO.Stream): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 Position 'get set' : 
    Int32 Length 'get ' : 
  Methods:
    get_Position(): PrivateScope, Public, HideBySig, SpecialName
    set_Position(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Length(): PrivateScope, Public, HideBySig, SpecialName
    Advance(Int32): PrivateScope, Public, HideBySig
    MoveTo(UInt32): PrivateScope, Public, HideBySig
    Align(Int32): PrivateScope, Public, HideBySig
    ReadDataDirectory(): PrivateScope, Public, HideBySig
Class Mono.Cecil.PE.BinaryStreamWriter: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :System.IO.BinaryWriter
    Void .ctor(System.IO.Stream): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 Position 'get set' : 
  Methods:
    get_Position(): PrivateScope, Public, HideBySig, SpecialName
    set_Position(Int32): PrivateScope, Public, HideBySig, SpecialName
    WriteByte(Byte): PrivateScope, Public, HideBySig
    WriteUInt16(UInt16): PrivateScope, Public, HideBySig
    WriteInt16(Int16): PrivateScope, Public, HideBySig
    WriteUInt32(UInt32): PrivateScope, Public, HideBySig
    WriteInt32(Int32): PrivateScope, Public, HideBySig
    WriteUInt64(UInt64): PrivateScope, Public, HideBySig
    WriteBytes(Byte[]): PrivateScope, Public, HideBySig
    WriteDataDirectory(DataDirectory): PrivateScope, Public, HideBySig
    WriteBuffer(ByteBuffer): PrivateScope, Public, HideBySig
    Align(Int32): PrivateScope, Public, HideBySig
Class Mono.Cecil.PE.ByteBuffer: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Byte[] buffer : Assembly
    Int32 length : Assembly
    Int32 position : Assembly
  Methods:
    Advance(Int32): PrivateScope, Public, HideBySig
    ReadByte(): PrivateScope, Public, HideBySig
    ReadSByte(): PrivateScope, Public, HideBySig
    ReadBytes(Int32): PrivateScope, Public, HideBySig
    ReadUInt16(): PrivateScope, Public, HideBySig
    ReadInt16(): PrivateScope, Public, HideBySig
    ReadUInt32(): PrivateScope, Public, HideBySig
    ReadInt32(): PrivateScope, Public, HideBySig
    ReadUInt64(): PrivateScope, Public, HideBySig
    ReadInt64(): PrivateScope, Public, HideBySig
    ReadCompressedUInt32(): PrivateScope, Public, HideBySig
    ReadCompressedInt32(): PrivateScope, Public, HideBySig
    ReadSingle(): PrivateScope, Public, HideBySig
    ReadDouble(): PrivateScope, Public, HideBySig
    WriteByte(Byte): PrivateScope, Public, HideBySig
    WriteSByte(SByte): PrivateScope, Public, HideBySig
    WriteUInt16(UInt16): PrivateScope, Public, HideBySig
    WriteInt16(Int16): PrivateScope, Public, HideBySig
    WriteUInt32(UInt32): PrivateScope, Public, HideBySig
    WriteInt32(Int32): PrivateScope, Public, HideBySig
    WriteUInt64(UInt64): PrivateScope, Public, HideBySig
    WriteInt64(Int64): PrivateScope, Public, HideBySig
    WriteCompressedUInt32(UInt32): PrivateScope, Public, HideBySig
    WriteCompressedInt32(Int32): PrivateScope, Public, HideBySig
    WriteBytes(Byte[]): PrivateScope, Public, HideBySig
    WriteBytes(Int32): PrivateScope, Public, HideBySig
    WriteBytes(ByteBuffer): PrivateScope, Public, HideBySig
    WriteSingle(Single): PrivateScope, Public, HideBySig
    WriteDouble(Double): PrivateScope, Public, HideBySig
Class Mono.Cecil.PE.ByteBufferEqualityComparer: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Collections.Generic.IEqualityComparer`1[Mono.Cecil.PE.ByteBuffer]
  Methods:
    Equals(ByteBuffer, ByteBuffer): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetHashCode(ByteBuffer): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Struct Mono.Cecil.PE.DataDirectory: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(UInt32, UInt32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    UInt32 VirtualAddress : Public, InitOnly
    UInt32 Size : Public, InitOnly
  Properties:
    Boolean IsZero 'get ' : 
  Methods:
    get_IsZero(): PrivateScope, Public, HideBySig, SpecialName
Class Mono.Cecil.PE.Image: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Fields:
    Mono.Disposable`1[System.IO.Stream] Stream : Public
    System.String FileName : Public
    Mono.Cecil.ModuleKind Kind : Public
    UInt32 Characteristics : Public
    System.String RuntimeVersion : Public
    Mono.Cecil.TargetArchitecture Architecture : Public
    Mono.Cecil.ModuleCharacteristics DllCharacteristics : Public
    UInt16 LinkerVersion : Public
    UInt16 SubSystemMajor : Public
    UInt16 SubSystemMinor : Public
    Mono.Cecil.Cil.ImageDebugHeader DebugHeader : Public
    Mono.Cecil.PE.Section[] Sections : Public
    Mono.Cecil.PE.Section MetadataSection : Public
    UInt32 EntryPointToken : Public
    UInt32 Timestamp : Public
    Mono.Cecil.ModuleAttributes Attributes : Public
    Mono.Cecil.PE.DataDirectory Win32Resources : Public
    Mono.Cecil.PE.DataDirectory Debug : Public
    Mono.Cecil.PE.DataDirectory Resources : Public
    Mono.Cecil.PE.DataDirectory StrongName : Public
    Mono.Cecil.Metadata.StringHeap StringHeap : Public
    Mono.Cecil.Metadata.BlobHeap BlobHeap : Public
    Mono.Cecil.Metadata.UserStringHeap UserStringHeap : Public
    Mono.Cecil.Metadata.GuidHeap GuidHeap : Public
    Mono.Cecil.Metadata.TableHeap TableHeap : Public
    Mono.Cecil.Metadata.PdbHeap PdbHeap : Public
  Methods:
    HasTable(Table): PrivateScope, Public, HideBySig
    GetTableLength(Table): PrivateScope, Public, HideBySig
    GetTableIndexSize(Table): PrivateScope, Public, HideBySig
    GetCodedIndexSize(CodedIndex): PrivateScope, Public, HideBySig
    ResolveVirtualAddress(UInt32): PrivateScope, Public, HideBySig
    ResolveVirtualAddressInSection(UInt32, Section): PrivateScope, Public, HideBySig
    GetSection(String): PrivateScope, Public, HideBySig
    GetSectionAtVirtualAddress(UInt32): PrivateScope, Public, HideBySig
    GetReaderAt(UInt32, TItem, Func`3): PrivateScope, Public, HideBySig
    HasDebugTables(): PrivateScope, Public, HideBySig
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Mono.Cecil.PE.ImageReader: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Mono.Cecil.PE.BinaryStreamReader
    Void .ctor(Mono.Disposable`1[System.IO.Stream], System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    ReadImage(Disposable`1, String): PrivateScope, Public, Static, HideBySig
    ReadPortablePdb(Disposable`1, String, UInt32&(Out)): PrivateScope, Public, Static, HideBySig
Class Mono.Cecil.PE.ImageWriter: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Mono.Cecil.PE.BinaryStreamWriter
  Fields:
    Mono.Disposable`1[System.IO.Stream] stream : Assembly, InitOnly
    Mono.Cecil.PE.Section text : Assembly
    Mono.Cecil.PE.Section rsrc : Assembly
    Mono.Cecil.PE.Section reloc : Assembly
    Int64 debug_header_entries_position : Assembly
    UInt32 text_rva = 8192 : Assembly, Static, Literal, HasDefault
  Methods:
    CreateWriter(ModuleDefinition, MetadataBuilder, Disposable`1): PrivateScope, Public, Static, HideBySig
    CreateDebugWriter(ModuleDefinition, MetadataBuilder, Disposable`1): PrivateScope, Public, Static, HideBySig
    MoveToRVA(TextSegment): PrivateScope, Assembly, HideBySig
    WriteMetadataHeader(): PrivateScope, Public, HideBySig
    WriteMetadata(): PrivateScope, Public, HideBySig
    WriteImage(): PrivateScope, Public, HideBySig
    BuildMetadataTextMap(): PrivateScope, Public, HideBySig
    GetStrongNameSignatureDirectory(): PrivateScope, Public, HideBySig
    GetHeaderSize(): PrivateScope, Public, HideBySig
Class Mono.Cecil.PE.Section: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    System.String Name : Public
    UInt32 VirtualAddress : Public
    UInt32 VirtualSize : Public
    UInt32 SizeOfRawData : Public
    UInt32 PointerToRawData : Public
Struct Mono.Cecil.PE.TextSegment: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Mono.Cecil.PE.TextSegment ImportAddressTable = 0 : Public, Static, Literal, HasDefault
    Mono.Cecil.PE.TextSegment CLIHeader = 1 : Public, Static, Literal, HasDefault
    Mono.Cecil.PE.TextSegment Code = 2 : Public, Static, Literal, HasDefault
    Mono.Cecil.PE.TextSegment Resources = 3 : Public, Static, Literal, HasDefault
    Mono.Cecil.PE.TextSegment Data = 4 : Public, Static, Literal, HasDefault
    Mono.Cecil.PE.TextSegment StrongNameSignature = 5 : Public, Static, Literal, HasDefault
    Mono.Cecil.PE.TextSegment MetadataHeader = 6 : Public, Static, Literal, HasDefault
    Mono.Cecil.PE.TextSegment TableHeap = 7 : Public, Static, Literal, HasDefault
    Mono.Cecil.PE.TextSegment StringHeap = 8 : Public, Static, Literal, HasDefault
    Mono.Cecil.PE.TextSegment UserStringHeap = 9 : Public, Static, Literal, HasDefault
    Mono.Cecil.PE.TextSegment GuidHeap = 10 : Public, Static, Literal, HasDefault
    Mono.Cecil.PE.TextSegment BlobHeap = 11 : Public, Static, Literal, HasDefault
    Mono.Cecil.PE.TextSegment PdbHeap = 12 : Public, Static, Literal, HasDefault
    Mono.Cecil.PE.TextSegment DebugDirectory = 13 : Public, Static, Literal, HasDefault
    Mono.Cecil.PE.TextSegment ImportDirectory = 14 : Public, Static, Literal, HasDefault
    Mono.Cecil.PE.TextSegment ImportHintNameTable = 15 : Public, Static, Literal, HasDefault
    Mono.Cecil.PE.TextSegment StartupStub = 16 : Public, Static, Literal, HasDefault
Class Mono.Cecil.PE.TextMap: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    AddMap(TextSegment, Int32): PrivateScope, Public, HideBySig
    AddMap(TextSegment, Int32, Int32): PrivateScope, Public, HideBySig
    AddMap(TextSegment, Range): PrivateScope, Public, HideBySig
    GetRange(TextSegment): PrivateScope, Public, HideBySig
    GetDataDirectory(TextSegment): PrivateScope, Public, HideBySig
    GetRVA(TextSegment): PrivateScope, Public, HideBySig
    GetNextRVA(TextSegment): PrivateScope, Public, HideBySig
    GetLength(TextSegment): PrivateScope, Public, HideBySig
    GetLength(): PrivateScope, Public, HideBySig
Class Mono.Cecil.Metadata.BlobHeap: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Mono.Cecil.Metadata.Heap
    Void .ctor(Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Read(UInt32): PrivateScope, Public, HideBySig
    GetView(UInt32, Byte[]&(Out), Int32&(Out), Int32&(Out)): PrivateScope, Public, HideBySig
Class Mono.Cecil.Metadata.TableHeapBuffer: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Mono.Cecil.Metadata.HeapBuffer
    Void .ctor(Mono.Cecil.ModuleDefinition, Mono.Cecil.MetadataBuilder): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Mono.Cecil.Metadata.TableInformation[] table_infos : Assembly, InitOnly
    Mono.Cecil.MetadataTable[] tables : Assembly, InitOnly
    UInt32[] string_offsets : Assembly
  Properties:
    Boolean IsEmpty 'get ' : 
  Methods:
    get_IsEmpty(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    GetTable(Table): PrivateScope, Public, HideBySig
    WriteBySize(UInt32, Int32): PrivateScope, Public, HideBySig
    WriteBySize(UInt32, Boolean): PrivateScope, Public, HideBySig
    WriteString(UInt32): PrivateScope, Public, HideBySig
    WriteBlob(UInt32): PrivateScope, Public, HideBySig
    WriteGuid(UInt32): PrivateScope, Public, HideBySig
    WriteRID(UInt32, Table): PrivateScope, Public, HideBySig
    WriteCodedRID(UInt32, CodedIndex): PrivateScope, Public, HideBySig
    WriteTableHeap(): PrivateScope, Public, HideBySig
    ComputeTableInformations(): PrivateScope, Public, HideBySig
    FixupData(UInt32): PrivateScope, Public, HideBySig
Class Mono.Cecil.Metadata.ResourceBuffer: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Mono.Cecil.PE.ByteBuffer
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    AddResource(Byte[]): PrivateScope, Public, HideBySig
Class Mono.Cecil.Metadata.DataBuffer: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Mono.Cecil.PE.ByteBuffer
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 BufferAlign 'get ' : 
  Methods:
    AddData(Byte[], Int32): PrivateScope, Public, HideBySig
    get_BufferAlign(): PrivateScope, Public, HideBySig, SpecialName
Class Mono.Cecil.Metadata.HeapBuffer: AutoLayout, AnsiClass, Class, Abstract, BeforeFieldInit
  :Mono.Cecil.PE.ByteBuffer
  Properties:
    Boolean IsLarge 'get ' : 
    Boolean IsEmpty 'get ' : 
  Methods:
    get_IsLarge(): PrivateScope, Public, HideBySig, SpecialName
    get_IsEmpty(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
Class Mono.Cecil.Metadata.GuidHeapBuffer: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Mono.Cecil.Metadata.HeapBuffer
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean IsEmpty 'get ' : 
  Methods:
    get_IsEmpty(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    GetGuidIndex(Guid): PrivateScope, Public, HideBySig
Class Mono.Cecil.Metadata.StringHeapBuffer: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :Mono.Cecil.Metadata.HeapBuffer
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean IsEmpty 'get ' : 
  Methods:
    get_IsEmpty(): PrivateScope, Public, Final, Virtual, HideBySig, SpecialName
    GetStringIndex(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    WriteStrings(): PrivateScope, Public, HideBySig
Class Mono.Cecil.Metadata.BlobHeapBuffer: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Mono.Cecil.Metadata.HeapBuffer
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean IsEmpty 'get ' : 
  Methods:
    get_IsEmpty(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    GetBlobIndex(ByteBuffer): PrivateScope, Public, HideBySig
Class Mono.Cecil.Metadata.UserStringHeapBuffer: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Mono.Cecil.Metadata.StringHeapBuffer
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    GetStringIndex(String): PrivateScope, Public, Virtual, HideBySig
Class Mono.Cecil.Metadata.PdbHeapBuffer: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Mono.Cecil.Metadata.HeapBuffer
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean IsEmpty 'get ' : 
  Methods:
    get_IsEmpty(): PrivateScope, Public, Virtual, HideBySig, SpecialName
Struct Mono.Cecil.Metadata.CodedIndex: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Mono.Cecil.Metadata.CodedIndex TypeDefOrRef = 0 : Public, Static, Literal, HasDefault
    Mono.Cecil.Metadata.CodedIndex HasConstant = 1 : Public, Static, Literal, HasDefault
    Mono.Cecil.Metadata.CodedIndex HasCustomAttribute = 2 : Public, Static, Literal, HasDefault
    Mono.Cecil.Metadata.CodedIndex HasFieldMarshal = 3 : Public, Static, Literal, HasDefault
    Mono.Cecil.Metadata.CodedIndex HasDeclSecurity = 4 : Public, Static, Literal, HasDefault
    Mono.Cecil.Metadata.CodedIndex MemberRefParent = 5 : Public, Static, Literal, HasDefault
    Mono.Cecil.Metadata.CodedIndex HasSemantics = 6 : Public, Static, Literal, HasDefault
    Mono.Cecil.Metadata.CodedIndex MethodDefOrRef = 7 : Public, Static, Literal, HasDefault
    Mono.Cecil.Metadata.CodedIndex MemberForwarded = 8 : Public, Static, Literal, HasDefault
    Mono.Cecil.Metadata.CodedIndex Implementation = 9 : Public, Static, Literal, HasDefault
    Mono.Cecil.Metadata.CodedIndex CustomAttributeType = 10 : Public, Static, Literal, HasDefault
    Mono.Cecil.Metadata.CodedIndex ResolutionScope = 11 : Public, Static, Literal, HasDefault
    Mono.Cecil.Metadata.CodedIndex TypeOrMethodDef = 12 : Public, Static, Literal, HasDefault
    Mono.Cecil.Metadata.CodedIndex HasCustomDebugInformation = 13 : Public, Static, Literal, HasDefault
Struct Mono.Cecil.Metadata.ElementType: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Byte value__ : Public, SpecialName, RTSpecialName
    Mono.Cecil.Metadata.ElementType None = 0 : Public, Static, Literal, HasDefault
    Mono.Cecil.Metadata.ElementType Void = 1 : Public, Static, Literal, HasDefault
    Mono.Cecil.Metadata.ElementType Boolean = 2 : Public, Static, Literal, HasDefault
    Mono.Cecil.Metadata.ElementType Char = 3 : Public, Static, Literal, HasDefault
    Mono.Cecil.Metadata.ElementType I1 = 4 : Public, Static, Literal, HasDefault
    Mono.Cecil.Metadata.ElementType U1 = 5 : Public, Static, Literal, HasDefault
    Mono.Cecil.Metadata.ElementType I2 = 6 : Public, Static, Literal, HasDefault
    Mono.Cecil.Metadata.ElementType U2 = 7 : Public, Static, Literal, HasDefault
    Mono.Cecil.Metadata.ElementType I4 = 8 : Public, Static, Literal, HasDefault
    Mono.Cecil.Metadata.ElementType U4 = 9 : Public, Static, Literal, HasDefault
    Mono.Cecil.Metadata.ElementType I8 = 10 : Public, Static, Literal, HasDefault
    Mono.Cecil.Metadata.ElementType U8 = 11 : Public, Static, Literal, HasDefault
    Mono.Cecil.Metadata.ElementType R4 = 12 : Public, Static, Literal, HasDefault
    Mono.Cecil.Metadata.ElementType R8 = 13 : Public, Static, Literal, HasDefault
    Mono.Cecil.Metadata.ElementType String = 14 : Public, Static, Literal, HasDefault
    Mono.Cecil.Metadata.ElementType Ptr = 15 : Public, Static, Literal, HasDefault
    Mono.Cecil.Metadata.ElementType ByRef = 16 : Public, Static, Literal, HasDefault
    Mono.Cecil.Metadata.ElementType ValueType = 17 : Public, Static, Literal, HasDefault
    Mono.Cecil.Metadata.ElementType Class = 18 : Public, Static, Literal, HasDefault
    Mono.Cecil.Metadata.ElementType Var = 19 : Public, Static, Literal, HasDefault
    Mono.Cecil.Metadata.ElementType Array = 20 : Public, Static, Literal, HasDefault
    Mono.Cecil.Metadata.ElementType GenericInst = 21 : Public, Static, Literal, HasDefault
    Mono.Cecil.Metadata.ElementType TypedByRef = 22 : Public, Static, Literal, HasDefault
    Mono.Cecil.Metadata.ElementType I = 24 : Public, Static, Literal, HasDefault
    Mono.Cecil.Metadata.ElementType U = 25 : Public, Static, Literal, HasDefault
    Mono.Cecil.Metadata.ElementType FnPtr = 27 : Public, Static, Literal, HasDefault
    Mono.Cecil.Metadata.ElementType Object = 28 : Public, Static, Literal, HasDefault
    Mono.Cecil.Metadata.ElementType SzArray = 29 : Public, Static, Literal, HasDefault
    Mono.Cecil.Metadata.ElementType MVar = 30 : Public, Static, Literal, HasDefault
    Mono.Cecil.Metadata.ElementType CModReqD = 31 : Public, Static, Literal, HasDefault
    Mono.Cecil.Metadata.ElementType CModOpt = 32 : Public, Static, Literal, HasDefault
    Mono.Cecil.Metadata.ElementType Internal = 33 : Public, Static, Literal, HasDefault
    Mono.Cecil.Metadata.ElementType Modifier = 64 : Public, Static, Literal, HasDefault
    Mono.Cecil.Metadata.ElementType Sentinel = 65 : Public, Static, Literal, HasDefault
    Mono.Cecil.Metadata.ElementType Pinned = 69 : Public, Static, Literal, HasDefault
    Mono.Cecil.Metadata.ElementType Type = 80 : Public, Static, Literal, HasDefault
    Mono.Cecil.Metadata.ElementType Boxed = 81 : Public, Static, Literal, HasDefault
    Mono.Cecil.Metadata.ElementType Enum = 85 : Public, Static, Literal, HasDefault
Class Mono.Cecil.Metadata.GuidHeap: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Mono.Cecil.Metadata.Heap
    Void .ctor(Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Read(UInt32): PrivateScope, Public, HideBySig
Class Mono.Cecil.Metadata.Heap: AutoLayout, AnsiClass, Class, Abstract, BeforeFieldInit
  Fields:
    Int32 IndexSize : Public
    Byte[] data : Assembly, InitOnly
Class Mono.Cecil.Metadata.PdbHeap: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Mono.Cecil.Metadata.Heap
    Void .ctor(Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Byte[] Id : Public
    UInt32 EntryPoint : Public
    Int64 TypeSystemTables : Public
    UInt32[] TypeSystemTableRows : Public
  Methods:
    HasTable(Table): PrivateScope, Public, HideBySig
Struct Mono.Cecil.Metadata.Row`2[T1,T2]: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  Type parameter: T1
  Type parameter: T2
  :System.ValueType
    Void .ctor(T1, T2): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    T1 Col1 : Assembly
    T2 Col2 : Assembly
Struct Mono.Cecil.Metadata.Row`3[T1,T2,T3]: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  Type parameter: T1
  Type parameter: T2
  Type parameter: T3
  :System.ValueType
    Void .ctor(T1, T2, T3): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    T1 Col1 : Assembly
    T2 Col2 : Assembly
    T3 Col3 : Assembly
Struct Mono.Cecil.Metadata.Row`4[T1,T2,T3,T4]: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  Type parameter: T1
  Type parameter: T2
  Type parameter: T3
  Type parameter: T4
  :System.ValueType
    Void .ctor(T1, T2, T3, T4): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    T1 Col1 : Assembly
    T2 Col2 : Assembly
    T3 Col3 : Assembly
    T4 Col4 : Assembly
Struct Mono.Cecil.Metadata.Row`5[T1,T2,T3,T4,T5]: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  Type parameter: T1
  Type parameter: T2
  Type parameter: T3
  Type parameter: T4
  Type parameter: T5
  :System.ValueType
    Void .ctor(T1, T2, T3, T4, T5): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    T1 Col1 : Assembly
    T2 Col2 : Assembly
    T3 Col3 : Assembly
    T4 Col4 : Assembly
    T5 Col5 : Assembly
Struct Mono.Cecil.Metadata.Row`6[T1,T2,T3,T4,T5,T6]: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  Type parameter: T1
  Type parameter: T2
  Type parameter: T3
  Type parameter: T4
  Type parameter: T5
  Type parameter: T6
  :System.ValueType
    Void .ctor(T1, T2, T3, T4, T5, T6): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    T1 Col1 : Assembly
    T2 Col2 : Assembly
    T3 Col3 : Assembly
    T4 Col4 : Assembly
    T5 Col5 : Assembly
    T6 Col6 : Assembly
Struct Mono.Cecil.Metadata.Row`9[T1,T2,T3,T4,T5,T6,T7,T8,T9]: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  Type parameter: T1
  Type parameter: T2
  Type parameter: T3
  Type parameter: T4
  Type parameter: T5
  Type parameter: T6
  Type parameter: T7
  Type parameter: T8
  Type parameter: T9
  :System.ValueType
    Void .ctor(T1, T2, T3, T4, T5, T6, T7, T8, T9): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    T1 Col1 : Assembly
    T2 Col2 : Assembly
    T3 Col3 : Assembly
    T4 Col4 : Assembly
    T5 Col5 : Assembly
    T6 Col6 : Assembly
    T7 Col7 : Assembly
    T8 Col8 : Assembly
    T9 Col9 : Assembly
Class Mono.Cecil.Metadata.RowEqualityComparer: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Collections.Generic.IEqualityComparer`1[Mono.Cecil.Metadata.Row`2[System.String,System.String]]
    System.Collections.Generic.IEqualityComparer`1[Mono.Cecil.Metadata.Row`2[System.UInt32,System.UInt32]]
    System.Collections.Generic.IEqualityComparer`1[Mono.Cecil.Metadata.Row`3[System.UInt32,System.UInt32,System.UInt32]]
  Methods:
    Equals(Row`2, Row`2): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetHashCode(Row`2): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Equals(Row`2, Row`2): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetHashCode(Row`2): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Equals(Row`3, Row`3): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetHashCode(Row`3): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Mono.Cecil.Metadata.StringHeap: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :Mono.Cecil.Metadata.Heap
    Void .ctor(Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Read(UInt32): PrivateScope, Public, HideBySig
Struct Mono.Cecil.Metadata.Table: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Byte value__ : Public, SpecialName, RTSpecialName
    Mono.Cecil.Metadata.Table Module = 0 : Public, Static, Literal, HasDefault
    Mono.Cecil.Metadata.Table TypeRef = 1 : Public, Static, Literal, HasDefault
    Mono.Cecil.Metadata.Table TypeDef = 2 : Public, Static, Literal, HasDefault
    Mono.Cecil.Metadata.Table FieldPtr = 3 : Public, Static, Literal, HasDefault
    Mono.Cecil.Metadata.Table Field = 4 : Public, Static, Literal, HasDefault
    Mono.Cecil.Metadata.Table MethodPtr = 5 : Public, Static, Literal, HasDefault
    Mono.Cecil.Metadata.Table Method = 6 : Public, Static, Literal, HasDefault
    Mono.Cecil.Metadata.Table ParamPtr = 7 : Public, Static, Literal, HasDefault
    Mono.Cecil.Metadata.Table Param = 8 : Public, Static, Literal, HasDefault
    Mono.Cecil.Metadata.Table InterfaceImpl = 9 : Public, Static, Literal, HasDefault
    Mono.Cecil.Metadata.Table MemberRef = 10 : Public, Static, Literal, HasDefault
    Mono.Cecil.Metadata.Table Constant = 11 : Public, Static, Literal, HasDefault
    Mono.Cecil.Metadata.Table CustomAttribute = 12 : Public, Static, Literal, HasDefault
    Mono.Cecil.Metadata.Table FieldMarshal = 13 : Public, Static, Literal, HasDefault
    Mono.Cecil.Metadata.Table DeclSecurity = 14 : Public, Static, Literal, HasDefault
    Mono.Cecil.Metadata.Table ClassLayout = 15 : Public, Static, Literal, HasDefault
    Mono.Cecil.Metadata.Table FieldLayout = 16 : Public, Static, Literal, HasDefault
    Mono.Cecil.Metadata.Table StandAloneSig = 17 : Public, Static, Literal, HasDefault
    Mono.Cecil.Metadata.Table EventMap = 18 : Public, Static, Literal, HasDefault
    Mono.Cecil.Metadata.Table EventPtr = 19 : Public, Static, Literal, HasDefault
    Mono.Cecil.Metadata.Table Event = 20 : Public, Static, Literal, HasDefault
    Mono.Cecil.Metadata.Table PropertyMap = 21 : Public, Static, Literal, HasDefault
    Mono.Cecil.Metadata.Table PropertyPtr = 22 : Public, Static, Literal, HasDefault
    Mono.Cecil.Metadata.Table Property = 23 : Public, Static, Literal, HasDefault
    Mono.Cecil.Metadata.Table MethodSemantics = 24 : Public, Static, Literal, HasDefault
    Mono.Cecil.Metadata.Table MethodImpl = 25 : Public, Static, Literal, HasDefault
    Mono.Cecil.Metadata.Table ModuleRef = 26 : Public, Static, Literal, HasDefault
    Mono.Cecil.Metadata.Table TypeSpec = 27 : Public, Static, Literal, HasDefault
    Mono.Cecil.Metadata.Table ImplMap = 28 : Public, Static, Literal, HasDefault
    Mono.Cecil.Metadata.Table FieldRVA = 29 : Public, Static, Literal, HasDefault
    Mono.Cecil.Metadata.Table EncLog = 30 : Public, Static, Literal, HasDefault
    Mono.Cecil.Metadata.Table EncMap = 31 : Public, Static, Literal, HasDefault
    Mono.Cecil.Metadata.Table Assembly = 32 : Public, Static, Literal, HasDefault
    Mono.Cecil.Metadata.Table AssemblyProcessor = 33 : Public, Static, Literal, HasDefault
    Mono.Cecil.Metadata.Table AssemblyOS = 34 : Public, Static, Literal, HasDefault
    Mono.Cecil.Metadata.Table AssemblyRef = 35 : Public, Static, Literal, HasDefault
    Mono.Cecil.Metadata.Table AssemblyRefProcessor = 36 : Public, Static, Literal, HasDefault
    Mono.Cecil.Metadata.Table AssemblyRefOS = 37 : Public, Static, Literal, HasDefault
    Mono.Cecil.Metadata.Table File = 38 : Public, Static, Literal, HasDefault
    Mono.Cecil.Metadata.Table ExportedType = 39 : Public, Static, Literal, HasDefault
    Mono.Cecil.Metadata.Table ManifestResource = 40 : Public, Static, Literal, HasDefault
    Mono.Cecil.Metadata.Table NestedClass = 41 : Public, Static, Literal, HasDefault
    Mono.Cecil.Metadata.Table GenericParam = 42 : Public, Static, Literal, HasDefault
    Mono.Cecil.Metadata.Table MethodSpec = 43 : Public, Static, Literal, HasDefault
    Mono.Cecil.Metadata.Table GenericParamConstraint = 44 : Public, Static, Literal, HasDefault
    Mono.Cecil.Metadata.Table Document = 48 : Public, Static, Literal, HasDefault
    Mono.Cecil.Metadata.Table MethodDebugInformation = 49 : Public, Static, Literal, HasDefault
    Mono.Cecil.Metadata.Table LocalScope = 50 : Public, Static, Literal, HasDefault
    Mono.Cecil.Metadata.Table LocalVariable = 51 : Public, Static, Literal, HasDefault
    Mono.Cecil.Metadata.Table LocalConstant = 52 : Public, Static, Literal, HasDefault
    Mono.Cecil.Metadata.Table ImportScope = 53 : Public, Static, Literal, HasDefault
    Mono.Cecil.Metadata.Table StateMachineMethod = 54 : Public, Static, Literal, HasDefault
    Mono.Cecil.Metadata.Table CustomDebugInformation = 55 : Public, Static, Literal, HasDefault
Struct Mono.Cecil.Metadata.TableInformation: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    UInt32 Offset : Public
    UInt32 Length : Public
    UInt32 RowSize : Public
  Properties:
    Boolean IsLarge 'get ' : 
  Methods:
    get_IsLarge(): PrivateScope, Public, HideBySig, SpecialName
Class Mono.Cecil.Metadata.TableHeap: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Mono.Cecil.Metadata.Heap
    Void .ctor(Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int64 Valid : Public
    Int64 Sorted : Public
    Mono.Cecil.Metadata.TableInformation[] Tables : Public, InitOnly
  Properties:
    Mono.Cecil.Metadata.TableInformation Item [Mono.Cecil.Metadata.Table] 'get ' : 
  Methods:
    get_Item(Table): PrivateScope, Public, HideBySig, SpecialName
    HasTable(Table): PrivateScope, Public, HideBySig
Class Mono.Cecil.Metadata.UserStringHeap: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Mono.Cecil.Metadata.StringHeap
    Void .ctor(Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Struct Mono.Cecil.Cil.Code: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Mono.Cecil.Cil.Code Nop = 0 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.Code Break = 1 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.Code Ldarg_0 = 2 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.Code Ldarg_1 = 3 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.Code Ldarg_2 = 4 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.Code Ldarg_3 = 5 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.Code Ldloc_0 = 6 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.Code Ldloc_1 = 7 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.Code Ldloc_2 = 8 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.Code Ldloc_3 = 9 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.Code Stloc_0 = 10 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.Code Stloc_1 = 11 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.Code Stloc_2 = 12 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.Code Stloc_3 = 13 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.Code Ldarg_S = 14 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.Code Ldarga_S = 15 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.Code Starg_S = 16 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.Code Ldloc_S = 17 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.Code Ldloca_S = 18 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.Code Stloc_S = 19 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.Code Ldnull = 20 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.Code Ldc_I4_M1 = 21 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.Code Ldc_I4_0 = 22 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.Code Ldc_I4_1 = 23 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.Code Ldc_I4_2 = 24 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.Code Ldc_I4_3 = 25 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.Code Ldc_I4_4 = 26 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.Code Ldc_I4_5 = 27 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.Code Ldc_I4_6 = 28 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.Code Ldc_I4_7 = 29 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.Code Ldc_I4_8 = 30 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.Code Ldc_I4_S = 31 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.Code Ldc_I4 = 32 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.Code Ldc_I8 = 33 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.Code Ldc_R4 = 34 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.Code Ldc_R8 = 35 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.Code Dup = 36 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.Code Pop = 37 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.Code Jmp = 38 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.Code Call = 39 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.Code Calli = 40 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.Code Ret = 41 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.Code Br_S = 42 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.Code Brfalse_S = 43 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.Code Brtrue_S = 44 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.Code Beq_S = 45 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.Code Bge_S = 46 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.Code Bgt_S = 47 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.Code Ble_S = 48 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.Code Blt_S = 49 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.Code Bne_Un_S = 50 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.Code Bge_Un_S = 51 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.Code Bgt_Un_S = 52 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.Code Ble_Un_S = 53 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.Code Blt_Un_S = 54 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.Code Br = 55 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.Code Brfalse = 56 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.Code Brtrue = 57 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.Code Beq = 58 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.Code Bge = 59 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.Code Bgt = 60 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.Code Ble = 61 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.Code Blt = 62 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.Code Bne_Un = 63 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.Code Bge_Un = 64 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.Code Bgt_Un = 65 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.Code Ble_Un = 66 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.Code Blt_Un = 67 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.Code Switch = 68 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.Code Ldind_I1 = 69 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.Code Ldind_U1 = 70 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.Code Ldind_I2 = 71 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.Code Ldind_U2 = 72 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.Code Ldind_I4 = 73 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.Code Ldind_U4 = 74 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.Code Ldind_I8 = 75 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.Code Ldind_I = 76 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.Code Ldind_R4 = 77 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.Code Ldind_R8 = 78 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.Code Ldind_Ref = 79 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.Code Stind_Ref = 80 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.Code Stind_I1 = 81 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.Code Stind_I2 = 82 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.Code Stind_I4 = 83 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.Code Stind_I8 = 84 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.Code Stind_R4 = 85 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.Code Stind_R8 = 86 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.Code Add = 87 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.Code Sub = 88 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.Code Mul = 89 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.Code Div = 90 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.Code Div_Un = 91 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.Code Rem = 92 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.Code Rem_Un = 93 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.Code And = 94 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.Code Or = 95 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.Code Xor = 96 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.Code Shl = 97 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.Code Shr = 98 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.Code Shr_Un = 99 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.Code Neg = 100 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.Code Not = 101 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.Code Conv_I1 = 102 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.Code Conv_I2 = 103 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.Code Conv_I4 = 104 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.Code Conv_I8 = 105 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.Code Conv_R4 = 106 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.Code Conv_R8 = 107 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.Code Conv_U4 = 108 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.Code Conv_U8 = 109 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.Code Callvirt = 110 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.Code Cpobj = 111 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.Code Ldobj = 112 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.Code Ldstr = 113 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.Code Newobj = 114 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.Code Castclass = 115 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.Code Isinst = 116 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.Code Conv_R_Un = 117 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.Code Unbox = 118 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.Code Throw = 119 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.Code Ldfld = 120 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.Code Ldflda = 121 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.Code Stfld = 122 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.Code Ldsfld = 123 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.Code Ldsflda = 124 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.Code Stsfld = 125 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.Code Stobj = 126 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.Code Conv_Ovf_I1_Un = 127 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.Code Conv_Ovf_I2_Un = 128 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.Code Conv_Ovf_I4_Un = 129 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.Code Conv_Ovf_I8_Un = 130 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.Code Conv_Ovf_U1_Un = 131 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.Code Conv_Ovf_U2_Un = 132 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.Code Conv_Ovf_U4_Un = 133 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.Code Conv_Ovf_U8_Un = 134 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.Code Conv_Ovf_I_Un = 135 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.Code Conv_Ovf_U_Un = 136 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.Code Box = 137 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.Code Newarr = 138 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.Code Ldlen = 139 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.Code Ldelema = 140 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.Code Ldelem_I1 = 141 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.Code Ldelem_U1 = 142 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.Code Ldelem_I2 = 143 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.Code Ldelem_U2 = 144 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.Code Ldelem_I4 = 145 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.Code Ldelem_U4 = 146 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.Code Ldelem_I8 = 147 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.Code Ldelem_I = 148 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.Code Ldelem_R4 = 149 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.Code Ldelem_R8 = 150 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.Code Ldelem_Ref = 151 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.Code Stelem_I = 152 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.Code Stelem_I1 = 153 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.Code Stelem_I2 = 154 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.Code Stelem_I4 = 155 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.Code Stelem_I8 = 156 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.Code Stelem_R4 = 157 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.Code Stelem_R8 = 158 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.Code Stelem_Ref = 159 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.Code Ldelem_Any = 160 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.Code Stelem_Any = 161 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.Code Unbox_Any = 162 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.Code Conv_Ovf_I1 = 163 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.Code Conv_Ovf_U1 = 164 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.Code Conv_Ovf_I2 = 165 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.Code Conv_Ovf_U2 = 166 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.Code Conv_Ovf_I4 = 167 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.Code Conv_Ovf_U4 = 168 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.Code Conv_Ovf_I8 = 169 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.Code Conv_Ovf_U8 = 170 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.Code Refanyval = 171 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.Code Ckfinite = 172 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.Code Mkrefany = 173 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.Code Ldtoken = 174 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.Code Conv_U2 = 175 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.Code Conv_U1 = 176 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.Code Conv_I = 177 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.Code Conv_Ovf_I = 178 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.Code Conv_Ovf_U = 179 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.Code Add_Ovf = 180 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.Code Add_Ovf_Un = 181 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.Code Mul_Ovf = 182 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.Code Mul_Ovf_Un = 183 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.Code Sub_Ovf = 184 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.Code Sub_Ovf_Un = 185 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.Code Endfinally = 186 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.Code Leave = 187 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.Code Leave_S = 188 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.Code Stind_I = 189 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.Code Conv_U = 190 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.Code Arglist = 191 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.Code Ceq = 192 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.Code Cgt = 193 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.Code Cgt_Un = 194 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.Code Clt = 195 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.Code Clt_Un = 196 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.Code Ldftn = 197 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.Code Ldvirtftn = 198 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.Code Ldarg = 199 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.Code Ldarga = 200 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.Code Starg = 201 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.Code Ldloc = 202 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.Code Ldloca = 203 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.Code Stloc = 204 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.Code Localloc = 205 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.Code Endfilter = 206 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.Code Unaligned = 207 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.Code Volatile = 208 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.Code Tail = 209 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.Code Initobj = 210 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.Code Constrained = 211 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.Code Cpblk = 212 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.Code Initblk = 213 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.Code No = 214 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.Code Rethrow = 215 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.Code Sizeof = 216 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.Code Refanytype = 217 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.Code Readonly = 218 : Public, Static, Literal, HasDefault
Class Mono.Cecil.Cil.CodeReader: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Mono.Cecil.PE.BinaryStreamReader
    Void .ctor(Mono.Cecil.MetadataReader): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Mono.Cecil.MetadataReader reader : Assembly, InitOnly
  Methods:
    MoveTo(MethodDefinition): PrivateScope, Public, HideBySig
    MoveBackTo(Int32): PrivateScope, Public, HideBySig
    ReadMethodBody(MethodDefinition): PrivateScope, Public, HideBySig
    ReadCodeSize(MethodDefinition): PrivateScope, Public, HideBySig
    ReadVariables(MetadataToken): PrivateScope, Public, HideBySig
    GetString(MetadataToken): PrivateScope, Public, HideBySig
    GetParameter(Int32): PrivateScope, Public, HideBySig
    GetVariable(Int32): PrivateScope, Public, HideBySig
    GetCallSite(MetadataToken): PrivateScope, Public, HideBySig
    ReadToken(): PrivateScope, Public, HideBySig
    PatchRawMethodBody(MethodDefinition, CodeWriter, Int32&(Out), MetadataToken&(Out)): PrivateScope, Public, HideBySig
Class Mono.Cecil.Cil.CodeWriter: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Mono.Cecil.PE.ByteBuffer
    Void .ctor(Mono.Cecil.MetadataBuilder): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Mono.Cecil.MetadataBuilder metadata : Assembly, InitOnly
  Methods:
    WriteMethodBody(MethodDefinition): PrivateScope, Public, HideBySig
    GetStandAloneSignature(Collection`1): PrivateScope, Public, HideBySig
    GetStandAloneSignature(CallSite): PrivateScope, Public, HideBySig
Struct Mono.Cecil.Cil.DocumentType: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Mono.Cecil.Cil.DocumentType Other = 0 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.DocumentType Text = 1 : Public, Static, Literal, HasDefault
Struct Mono.Cecil.Cil.DocumentHashAlgorithm: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Mono.Cecil.Cil.DocumentHashAlgorithm None = 0 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.DocumentHashAlgorithm MD5 = 1 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.DocumentHashAlgorithm SHA1 = 2 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.DocumentHashAlgorithm SHA256 = 3 : Public, Static, Literal, HasDefault
Struct Mono.Cecil.Cil.DocumentLanguage: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Mono.Cecil.Cil.DocumentLanguage Other = 0 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.DocumentLanguage C = 1 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.DocumentLanguage Cpp = 2 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.DocumentLanguage CSharp = 3 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.DocumentLanguage Basic = 4 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.DocumentLanguage Java = 5 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.DocumentLanguage Cobol = 6 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.DocumentLanguage Pascal = 7 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.DocumentLanguage Cil = 8 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.DocumentLanguage JScript = 9 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.DocumentLanguage Smc = 10 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.DocumentLanguage MCpp = 11 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.DocumentLanguage FSharp = 12 : Public, Static, Literal, HasDefault
Struct Mono.Cecil.Cil.DocumentLanguageVendor: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Mono.Cecil.Cil.DocumentLanguageVendor Other = 0 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.DocumentLanguageVendor Microsoft = 1 : Public, Static, Literal, HasDefault
Class Mono.Cecil.Cil.Document: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Mono.Cecil.Cil.DebugInformation
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String Url 'get set' : 
    Mono.Cecil.Cil.DocumentType Type 'get set' : 
    System.Guid TypeGuid 'get set' : 
    Mono.Cecil.Cil.DocumentHashAlgorithm HashAlgorithm 'get set' : 
    System.Guid HashAlgorithmGuid 'get set' : 
    Mono.Cecil.Cil.DocumentLanguage Language 'get set' : 
    System.Guid LanguageGuid 'get set' : 
    Mono.Cecil.Cil.DocumentLanguageVendor LanguageVendor 'get set' : 
    System.Guid LanguageVendorGuid 'get set' : 
    Byte[] Hash 'get set' : 
    Byte[] EmbeddedSource 'get set' : 
  Methods:
    get_Url(): PrivateScope, Public, HideBySig, SpecialName
    set_Url(String): PrivateScope, Public, HideBySig, SpecialName
    get_Type(): PrivateScope, Public, HideBySig, SpecialName
    set_Type(DocumentType): PrivateScope, Public, HideBySig, SpecialName
    get_TypeGuid(): PrivateScope, Public, HideBySig, SpecialName
    set_TypeGuid(Guid): PrivateScope, Public, HideBySig, SpecialName
    get_HashAlgorithm(): PrivateScope, Public, HideBySig, SpecialName
    set_HashAlgorithm(DocumentHashAlgorithm): PrivateScope, Public, HideBySig, SpecialName
    get_HashAlgorithmGuid(): PrivateScope, Public, HideBySig, SpecialName
    set_HashAlgorithmGuid(Guid): PrivateScope, Public, HideBySig, SpecialName
    get_Language(): PrivateScope, Public, HideBySig, SpecialName
    set_Language(DocumentLanguage): PrivateScope, Public, HideBySig, SpecialName
    get_LanguageGuid(): PrivateScope, Public, HideBySig, SpecialName
    set_LanguageGuid(Guid): PrivateScope, Public, HideBySig, SpecialName
    get_LanguageVendor(): PrivateScope, Public, HideBySig, SpecialName
    set_LanguageVendor(DocumentLanguageVendor): PrivateScope, Public, HideBySig, SpecialName
    get_LanguageVendorGuid(): PrivateScope, Public, HideBySig, SpecialName
    set_LanguageVendorGuid(Guid): PrivateScope, Public, HideBySig, SpecialName
    get_Hash(): PrivateScope, Public, HideBySig, SpecialName
    set_Hash(Byte[]): PrivateScope, Public, HideBySig, SpecialName
    get_EmbeddedSource(): PrivateScope, Public, HideBySig, SpecialName
    set_EmbeddedSource(Byte[]): PrivateScope, Public, HideBySig, SpecialName
Struct Mono.Cecil.Cil.ExceptionHandlerType: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Mono.Cecil.Cil.ExceptionHandlerType Catch = 0 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.ExceptionHandlerType Filter = 1 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.ExceptionHandlerType Finally = 2 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.ExceptionHandlerType Fault = 4 : Public, Static, Literal, HasDefault
Class Mono.Cecil.Cil.ExceptionHandler: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
    Void .ctor(Mono.Cecil.Cil.ExceptionHandlerType): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Mono.Cecil.Cil.Instruction TryStart 'get set' : 
    Mono.Cecil.Cil.Instruction TryEnd 'get set' : 
    Mono.Cecil.Cil.Instruction FilterStart 'get set' : 
    Mono.Cecil.Cil.Instruction HandlerStart 'get set' : 
    Mono.Cecil.Cil.Instruction HandlerEnd 'get set' : 
    Mono.Cecil.TypeReference CatchType 'get set' : 
    Mono.Cecil.Cil.ExceptionHandlerType HandlerType 'get set' : 
  Methods:
    get_TryStart(): PrivateScope, Public, HideBySig, SpecialName
    set_TryStart(Instruction): PrivateScope, Public, HideBySig, SpecialName
    get_TryEnd(): PrivateScope, Public, HideBySig, SpecialName
    set_TryEnd(Instruction): PrivateScope, Public, HideBySig, SpecialName
    get_FilterStart(): PrivateScope, Public, HideBySig, SpecialName
    set_FilterStart(Instruction): PrivateScope, Public, HideBySig, SpecialName
    get_HandlerStart(): PrivateScope, Public, HideBySig, SpecialName
    set_HandlerStart(Instruction): PrivateScope, Public, HideBySig, SpecialName
    get_HandlerEnd(): PrivateScope, Public, HideBySig, SpecialName
    set_HandlerEnd(Instruction): PrivateScope, Public, HideBySig, SpecialName
    get_CatchType(): PrivateScope, Public, HideBySig, SpecialName
    set_CatchType(TypeReference): PrivateScope, Public, HideBySig, SpecialName
    get_HandlerType(): PrivateScope, Public, HideBySig, SpecialName
    set_HandlerType(ExceptionHandlerType): PrivateScope, Public, HideBySig, SpecialName
Class Mono.Cecil.Cil.ILProcessor: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
    Void .ctor(Mono.Cecil.Cil.MethodBody): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    Mono.Cecil.Cil.MethodBody Body 'get ' : 
  Methods:
    get_Body(): PrivateScope, Public, HideBySig, SpecialName
    Create(OpCode): PrivateScope, Public, HideBySig
    Create(OpCode, TypeReference): PrivateScope, Public, HideBySig
    Create(OpCode, CallSite): PrivateScope, Public, HideBySig
    Create(OpCode, MethodReference): PrivateScope, Public, HideBySig
    Create(OpCode, FieldReference): PrivateScope, Public, HideBySig
    Create(OpCode, String): PrivateScope, Public, HideBySig
    Create(OpCode, SByte): PrivateScope, Public, HideBySig
    Create(OpCode, Byte): PrivateScope, Public, HideBySig
    Create(OpCode, Int32): PrivateScope, Public, HideBySig
    Create(OpCode, Int64): PrivateScope, Public, HideBySig
    Create(OpCode, Single): PrivateScope, Public, HideBySig
    Create(OpCode, Double): PrivateScope, Public, HideBySig
    Create(OpCode, Instruction): PrivateScope, Public, HideBySig
    Create(OpCode, Instruction[]): PrivateScope, Public, HideBySig
    Create(OpCode, VariableDefinition): PrivateScope, Public, HideBySig
    Create(OpCode, ParameterDefinition): PrivateScope, Public, HideBySig
    Emit(OpCode): PrivateScope, Public, HideBySig
    Emit(OpCode, TypeReference): PrivateScope, Public, HideBySig
    Emit(OpCode, MethodReference): PrivateScope, Public, HideBySig
    Emit(OpCode, CallSite): PrivateScope, Public, HideBySig
    Emit(OpCode, FieldReference): PrivateScope, Public, HideBySig
    Emit(OpCode, String): PrivateScope, Public, HideBySig
    Emit(OpCode, Byte): PrivateScope, Public, HideBySig
    Emit(OpCode, SByte): PrivateScope, Public, HideBySig
    Emit(OpCode, Int32): PrivateScope, Public, HideBySig
    Emit(OpCode, Int64): PrivateScope, Public, HideBySig
    Emit(OpCode, Single): PrivateScope, Public, HideBySig
    Emit(OpCode, Double): PrivateScope, Public, HideBySig
    Emit(OpCode, Instruction): PrivateScope, Public, HideBySig
    Emit(OpCode, Instruction[]): PrivateScope, Public, HideBySig
    Emit(OpCode, VariableDefinition): PrivateScope, Public, HideBySig
    Emit(OpCode, ParameterDefinition): PrivateScope, Public, HideBySig
    InsertBefore(Instruction, Instruction): PrivateScope, Public, HideBySig
    InsertAfter(Instruction, Instruction): PrivateScope, Public, HideBySig
    InsertAfter(Int32, Instruction): PrivateScope, Public, HideBySig
    Append(Instruction): PrivateScope, Public, HideBySig
    Replace(Instruction, Instruction): PrivateScope, Public, HideBySig
    Replace(Int32, Instruction): PrivateScope, Public, HideBySig
    Remove(Instruction): PrivateScope, Public, HideBySig
    RemoveAt(Int32): PrivateScope, Public, HideBySig
    Clear(): PrivateScope, Public, HideBySig
Class Mono.Cecil.Cil.Instruction: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
    Void .ctor(Int32, Mono.Cecil.Cil.OpCode): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Mono.Cecil.Cil.OpCode, System.Object): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int32 offset : Assembly
    Mono.Cecil.Cil.OpCode opcode : Assembly
    System.Object operand : Assembly
    Mono.Cecil.Cil.Instruction previous : Assembly
    Mono.Cecil.Cil.Instruction next : Assembly
  Properties:
    Int32 Offset 'get set' : 
    Mono.Cecil.Cil.OpCode OpCode 'get set' : 
    System.Object Operand 'get set' : 
    Mono.Cecil.Cil.Instruction Previous 'get set' : 
    Mono.Cecil.Cil.Instruction Next 'get set' : 
  Methods:
    get_Offset(): PrivateScope, Public, HideBySig, SpecialName
    set_Offset(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_OpCode(): PrivateScope, Public, HideBySig, SpecialName
    set_OpCode(OpCode): PrivateScope, Public, HideBySig, SpecialName
    get_Operand(): PrivateScope, Public, HideBySig, SpecialName
    set_Operand(Object): PrivateScope, Public, HideBySig, SpecialName
    get_Previous(): PrivateScope, Public, HideBySig, SpecialName
    set_Previous(Instruction): PrivateScope, Public, HideBySig, SpecialName
    get_Next(): PrivateScope, Public, HideBySig, SpecialName
    set_Next(Instruction): PrivateScope, Public, HideBySig, SpecialName
    GetSize(): PrivateScope, Public, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
    Create(OpCode): PrivateScope, Public, Static, HideBySig
    Create(OpCode, TypeReference): PrivateScope, Public, Static, HideBySig
    Create(OpCode, CallSite): PrivateScope, Public, Static, HideBySig
    Create(OpCode, MethodReference): PrivateScope, Public, Static, HideBySig
    Create(OpCode, FieldReference): PrivateScope, Public, Static, HideBySig
    Create(OpCode, String): PrivateScope, Public, Static, HideBySig
    Create(OpCode, SByte): PrivateScope, Public, Static, HideBySig
    Create(OpCode, Byte): PrivateScope, Public, Static, HideBySig
    Create(OpCode, Int32): PrivateScope, Public, Static, HideBySig
    Create(OpCode, Int64): PrivateScope, Public, Static, HideBySig
    Create(OpCode, Single): PrivateScope, Public, Static, HideBySig
    Create(OpCode, Double): PrivateScope, Public, Static, HideBySig
    Create(OpCode, Instruction): PrivateScope, Public, Static, HideBySig
    Create(OpCode, Instruction[]): PrivateScope, Public, Static, HideBySig
    Create(OpCode, VariableDefinition): PrivateScope, Public, Static, HideBySig
    Create(OpCode, ParameterDefinition): PrivateScope, Public, Static, HideBySig
Class Mono.Cecil.Cil.MethodBody: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
    Void .ctor(Mono.Cecil.MethodDefinition): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Mono.Cecil.MethodDefinition method : Assembly, InitOnly
    Mono.Cecil.ParameterDefinition this_parameter : Assembly
    Int32 max_stack_size : Assembly
    Int32 code_size : Assembly
    Boolean init_locals : Assembly
    Mono.Cecil.MetadataToken local_var_token : Assembly
    Mono.Collections.Generic.Collection`1[Mono.Cecil.Cil.Instruction] instructions : Assembly
    Mono.Collections.Generic.Collection`1[Mono.Cecil.Cil.ExceptionHandler] exceptions : Assembly
    Mono.Collections.Generic.Collection`1[Mono.Cecil.Cil.VariableDefinition] variables : Assembly
  Properties:
    Mono.Cecil.MethodDefinition Method 'get ' : 
    Int32 MaxStackSize 'get set' : 
    Int32 CodeSize 'get ' : 
    Boolean InitLocals 'get set' : 
    Mono.Cecil.MetadataToken LocalVarToken 'get set' : 
    Mono.Collections.Generic.Collection`1[Mono.Cecil.Cil.Instruction] Instructions 'get ' : 
    Boolean HasExceptionHandlers 'get ' : 
    Mono.Collections.Generic.Collection`1[Mono.Cecil.Cil.ExceptionHandler] ExceptionHandlers 'get ' : 
    Boolean HasVariables 'get ' : 
    Mono.Collections.Generic.Collection`1[Mono.Cecil.Cil.VariableDefinition] Variables 'get ' : 
    Mono.Cecil.ParameterDefinition ThisParameter 'get ' : 
  Methods:
    get_Method(): PrivateScope, Public, HideBySig, SpecialName
    get_MaxStackSize(): PrivateScope, Public, HideBySig, SpecialName
    set_MaxStackSize(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_CodeSize(): PrivateScope, Public, HideBySig, SpecialName
    get_InitLocals(): PrivateScope, Public, HideBySig, SpecialName
    set_InitLocals(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_LocalVarToken(): PrivateScope, Public, HideBySig, SpecialName
    set_LocalVarToken(MetadataToken): PrivateScope, Public, HideBySig, SpecialName
    get_Instructions(): PrivateScope, Public, HideBySig, SpecialName
    get_HasExceptionHandlers(): PrivateScope, Public, HideBySig, SpecialName
    get_ExceptionHandlers(): PrivateScope, Public, HideBySig, SpecialName
    get_HasVariables(): PrivateScope, Public, HideBySig, SpecialName
    get_Variables(): PrivateScope, Public, HideBySig, SpecialName
    get_ThisParameter(): PrivateScope, Public, HideBySig, SpecialName
    GetILProcessor(): PrivateScope, Public, HideBySig
Class Mono.Cecil.Cil.VariableDefinitionCollection: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Mono.Collections.Generic.Collection`1[Mono.Cecil.Cil.VariableDefinition]
    Void .ctor(Mono.Cecil.MethodDefinition): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Mono.Cecil.MethodDefinition, Int32): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
Class Mono.Cecil.Cil.InstructionCollection: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :Mono.Collections.Generic.Collection`1[Mono.Cecil.Cil.Instruction]
    Void .ctor(Mono.Cecil.MethodDefinition): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Mono.Cecil.MethodDefinition, Int32): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
Struct Mono.Cecil.Cil.FlowControl: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Mono.Cecil.Cil.FlowControl Branch = 0 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.FlowControl Break = 1 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.FlowControl Call = 2 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.FlowControl Cond_Branch = 3 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.FlowControl Meta = 4 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.FlowControl Next = 5 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.FlowControl Phi = 6 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.FlowControl Return = 7 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.FlowControl Throw = 8 : Public, Static, Literal, HasDefault
Struct Mono.Cecil.Cil.OpCodeType: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Mono.Cecil.Cil.OpCodeType Annotation = 0 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.OpCodeType Macro = 1 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.OpCodeType Nternal = 2 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.OpCodeType Objmodel = 3 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.OpCodeType Prefix = 4 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.OpCodeType Primitive = 5 : Public, Static, Literal, HasDefault
Struct Mono.Cecil.Cil.OperandType: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Mono.Cecil.Cil.OperandType InlineBrTarget = 0 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.OperandType InlineField = 1 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.OperandType InlineI = 2 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.OperandType InlineI8 = 3 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.OperandType InlineMethod = 4 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.OperandType InlineNone = 5 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.OperandType InlinePhi = 6 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.OperandType InlineR = 7 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.OperandType InlineSig = 8 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.OperandType InlineString = 9 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.OperandType InlineSwitch = 10 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.OperandType InlineTok = 11 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.OperandType InlineType = 12 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.OperandType InlineVar = 13 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.OperandType InlineArg = 14 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.OperandType ShortInlineBrTarget = 15 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.OperandType ShortInlineI = 16 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.OperandType ShortInlineR = 17 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.OperandType ShortInlineVar = 18 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.OperandType ShortInlineArg = 19 : Public, Static, Literal, HasDefault
Struct Mono.Cecil.Cil.StackBehaviour: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Mono.Cecil.Cil.StackBehaviour Pop0 = 0 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.StackBehaviour Pop1 = 1 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.StackBehaviour Pop1_pop1 = 2 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.StackBehaviour Popi = 3 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.StackBehaviour Popi_pop1 = 4 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.StackBehaviour Popi_popi = 5 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.StackBehaviour Popi_popi8 = 6 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.StackBehaviour Popi_popi_popi = 7 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.StackBehaviour Popi_popr4 = 8 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.StackBehaviour Popi_popr8 = 9 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.StackBehaviour Popref = 10 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.StackBehaviour Popref_pop1 = 11 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.StackBehaviour Popref_popi = 12 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.StackBehaviour Popref_popi_popi = 13 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.StackBehaviour Popref_popi_popi8 = 14 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.StackBehaviour Popref_popi_popr4 = 15 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.StackBehaviour Popref_popi_popr8 = 16 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.StackBehaviour Popref_popi_popref = 17 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.StackBehaviour PopAll = 18 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.StackBehaviour Push0 = 19 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.StackBehaviour Push1 = 20 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.StackBehaviour Push1_push1 = 21 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.StackBehaviour Pushi = 22 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.StackBehaviour Pushi8 = 23 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.StackBehaviour Pushr4 = 24 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.StackBehaviour Pushr8 = 25 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.StackBehaviour Pushref = 26 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.StackBehaviour Varpop = 27 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.StackBehaviour Varpush = 28 : Public, Static, Literal, HasDefault
Struct Mono.Cecil.Cil.OpCode: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Int32, Int32): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IEquatable`1[Mono.Cecil.Cil.OpCode]
  Properties:
    System.String Name 'get ' : 
    Int32 Size 'get ' : 
    Byte Op1   'get ' : 
    Byte Op2   'get ' : 
    Int16 Value 'get ' : 
    Mono.Cecil.Cil.Code Code 'get ' : 
    Mono.Cecil.Cil.FlowControl FlowControl 'get ' : 
    Mono.Cecil.Cil.OpCodeType OpCodeType 'get ' : 
    Mono.Cecil.Cil.OperandType OperandType 'get ' : 
    Mono.Cecil.Cil.StackBehaviour StackBehaviourPop 'get ' : 
    Mono.Cecil.Cil.StackBehaviour StackBehaviourPush 'get ' : 
  Methods:
    get_Name(): PrivateScope, Public, HideBySig, SpecialName
    get_Size(): PrivateScope, Public, HideBySig, SpecialName
    get_Op1(): PrivateScope, Public, HideBySig, SpecialName
    get_Op2(): PrivateScope, Public, HideBySig, SpecialName
    get_Value(): PrivateScope, Public, HideBySig, SpecialName
    get_Code(): PrivateScope, Public, HideBySig, SpecialName
    get_FlowControl(): PrivateScope, Public, HideBySig, SpecialName
    get_OpCodeType(): PrivateScope, Public, HideBySig, SpecialName
    get_OperandType(): PrivateScope, Public, HideBySig, SpecialName
    get_StackBehaviourPop(): PrivateScope, Public, HideBySig, SpecialName
    get_StackBehaviourPush(): PrivateScope, Public, HideBySig, SpecialName
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    Equals(OpCode): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    op_Equality(OpCode, OpCode): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Inequality(OpCode, OpCode): PrivateScope, Public, Static, HideBySig, SpecialName
    ToString(): PrivateScope, Public, Virtual, HideBySig
Class Mono.Cecil.Cil.OpCodeNames: AutoLayout, AnsiClass, Class, Abstract, Sealed
  Fields:
    System.String[] names : Assembly, Static, InitOnly
Class Mono.Cecil.Cil.OpCodes: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Fields:
    Mono.Cecil.Cil.OpCode[] OneByteOpCode : Assembly, Static, InitOnly
    Mono.Cecil.Cil.OpCode[] TwoBytesOpCode : Assembly, Static, InitOnly
    Mono.Cecil.Cil.OpCode Nop : Public, Static, InitOnly
    Mono.Cecil.Cil.OpCode Break : Public, Static, InitOnly
    Mono.Cecil.Cil.OpCode Ldarg_0 : Public, Static, InitOnly
    Mono.Cecil.Cil.OpCode Ldarg_1 : Public, Static, InitOnly
    Mono.Cecil.Cil.OpCode Ldarg_2 : Public, Static, InitOnly
    Mono.Cecil.Cil.OpCode Ldarg_3 : Public, Static, InitOnly
    Mono.Cecil.Cil.OpCode Ldloc_0 : Public, Static, InitOnly
    Mono.Cecil.Cil.OpCode Ldloc_1 : Public, Static, InitOnly
    Mono.Cecil.Cil.OpCode Ldloc_2 : Public, Static, InitOnly
    Mono.Cecil.Cil.OpCode Ldloc_3 : Public, Static, InitOnly
    Mono.Cecil.Cil.OpCode Stloc_0 : Public, Static, InitOnly
    Mono.Cecil.Cil.OpCode Stloc_1 : Public, Static, InitOnly
    Mono.Cecil.Cil.OpCode Stloc_2 : Public, Static, InitOnly
    Mono.Cecil.Cil.OpCode Stloc_3 : Public, Static, InitOnly
    Mono.Cecil.Cil.OpCode Ldarg_S : Public, Static, InitOnly
    Mono.Cecil.Cil.OpCode Ldarga_S : Public, Static, InitOnly
    Mono.Cecil.Cil.OpCode Starg_S : Public, Static, InitOnly
    Mono.Cecil.Cil.OpCode Ldloc_S : Public, Static, InitOnly
    Mono.Cecil.Cil.OpCode Ldloca_S : Public, Static, InitOnly
    Mono.Cecil.Cil.OpCode Stloc_S : Public, Static, InitOnly
    Mono.Cecil.Cil.OpCode Ldnull : Public, Static, InitOnly
    Mono.Cecil.Cil.OpCode Ldc_I4_M1 : Public, Static, InitOnly
    Mono.Cecil.Cil.OpCode Ldc_I4_0 : Public, Static, InitOnly
    Mono.Cecil.Cil.OpCode Ldc_I4_1 : Public, Static, InitOnly
    Mono.Cecil.Cil.OpCode Ldc_I4_2 : Public, Static, InitOnly
    Mono.Cecil.Cil.OpCode Ldc_I4_3 : Public, Static, InitOnly
    Mono.Cecil.Cil.OpCode Ldc_I4_4 : Public, Static, InitOnly
    Mono.Cecil.Cil.OpCode Ldc_I4_5 : Public, Static, InitOnly
    Mono.Cecil.Cil.OpCode Ldc_I4_6 : Public, Static, InitOnly
    Mono.Cecil.Cil.OpCode Ldc_I4_7 : Public, Static, InitOnly
    Mono.Cecil.Cil.OpCode Ldc_I4_8 : Public, Static, InitOnly
    Mono.Cecil.Cil.OpCode Ldc_I4_S : Public, Static, InitOnly
    Mono.Cecil.Cil.OpCode Ldc_I4 : Public, Static, InitOnly
    Mono.Cecil.Cil.OpCode Ldc_I8 : Public, Static, InitOnly
    Mono.Cecil.Cil.OpCode Ldc_R4 : Public, Static, InitOnly
    Mono.Cecil.Cil.OpCode Ldc_R8 : Public, Static, InitOnly
    Mono.Cecil.Cil.OpCode Dup : Public, Static, InitOnly
    Mono.Cecil.Cil.OpCode Pop : Public, Static, InitOnly
    Mono.Cecil.Cil.OpCode Jmp : Public, Static, InitOnly
    Mono.Cecil.Cil.OpCode Call : Public, Static, InitOnly
    Mono.Cecil.Cil.OpCode Calli : Public, Static, InitOnly
    Mono.Cecil.Cil.OpCode Ret : Public, Static, InitOnly
    Mono.Cecil.Cil.OpCode Br_S : Public, Static, InitOnly
    Mono.Cecil.Cil.OpCode Brfalse_S : Public, Static, InitOnly
    Mono.Cecil.Cil.OpCode Brtrue_S : Public, Static, InitOnly
    Mono.Cecil.Cil.OpCode Beq_S : Public, Static, InitOnly
    Mono.Cecil.Cil.OpCode Bge_S : Public, Static, InitOnly
    Mono.Cecil.Cil.OpCode Bgt_S : Public, Static, InitOnly
    Mono.Cecil.Cil.OpCode Ble_S : Public, Static, InitOnly
    Mono.Cecil.Cil.OpCode Blt_S : Public, Static, InitOnly
    Mono.Cecil.Cil.OpCode Bne_Un_S : Public, Static, InitOnly
    Mono.Cecil.Cil.OpCode Bge_Un_S : Public, Static, InitOnly
    Mono.Cecil.Cil.OpCode Bgt_Un_S : Public, Static, InitOnly
    Mono.Cecil.Cil.OpCode Ble_Un_S : Public, Static, InitOnly
    Mono.Cecil.Cil.OpCode Blt_Un_S : Public, Static, InitOnly
    Mono.Cecil.Cil.OpCode Br : Public, Static, InitOnly
    Mono.Cecil.Cil.OpCode Brfalse : Public, Static, InitOnly
    Mono.Cecil.Cil.OpCode Brtrue : Public, Static, InitOnly
    Mono.Cecil.Cil.OpCode Beq : Public, Static, InitOnly
    Mono.Cecil.Cil.OpCode Bge : Public, Static, InitOnly
    Mono.Cecil.Cil.OpCode Bgt : Public, Static, InitOnly
    Mono.Cecil.Cil.OpCode Ble : Public, Static, InitOnly
    Mono.Cecil.Cil.OpCode Blt : Public, Static, InitOnly
    Mono.Cecil.Cil.OpCode Bne_Un : Public, Static, InitOnly
    Mono.Cecil.Cil.OpCode Bge_Un : Public, Static, InitOnly
    Mono.Cecil.Cil.OpCode Bgt_Un : Public, Static, InitOnly
    Mono.Cecil.Cil.OpCode Ble_Un : Public, Static, InitOnly
    Mono.Cecil.Cil.OpCode Blt_Un : Public, Static, InitOnly
    Mono.Cecil.Cil.OpCode Switch : Public, Static, InitOnly
    Mono.Cecil.Cil.OpCode Ldind_I1 : Public, Static, InitOnly
    Mono.Cecil.Cil.OpCode Ldind_U1 : Public, Static, InitOnly
    Mono.Cecil.Cil.OpCode Ldind_I2 : Public, Static, InitOnly
    Mono.Cecil.Cil.OpCode Ldind_U2 : Public, Static, InitOnly
    Mono.Cecil.Cil.OpCode Ldind_I4 : Public, Static, InitOnly
    Mono.Cecil.Cil.OpCode Ldind_U4 : Public, Static, InitOnly
    Mono.Cecil.Cil.OpCode Ldind_I8 : Public, Static, InitOnly
    Mono.Cecil.Cil.OpCode Ldind_I : Public, Static, InitOnly
    Mono.Cecil.Cil.OpCode Ldind_R4 : Public, Static, InitOnly
    Mono.Cecil.Cil.OpCode Ldind_R8 : Public, Static, InitOnly
    Mono.Cecil.Cil.OpCode Ldind_Ref : Public, Static, InitOnly
    Mono.Cecil.Cil.OpCode Stind_Ref : Public, Static, InitOnly
    Mono.Cecil.Cil.OpCode Stind_I1 : Public, Static, InitOnly
    Mono.Cecil.Cil.OpCode Stind_I2 : Public, Static, InitOnly
    Mono.Cecil.Cil.OpCode Stind_I4 : Public, Static, InitOnly
    Mono.Cecil.Cil.OpCode Stind_I8 : Public, Static, InitOnly
    Mono.Cecil.Cil.OpCode Stind_R4 : Public, Static, InitOnly
    Mono.Cecil.Cil.OpCode Stind_R8 : Public, Static, InitOnly
    Mono.Cecil.Cil.OpCode Add : Public, Static, InitOnly
    Mono.Cecil.Cil.OpCode Sub : Public, Static, InitOnly
    Mono.Cecil.Cil.OpCode Mul : Public, Static, InitOnly
    Mono.Cecil.Cil.OpCode Div : Public, Static, InitOnly
    Mono.Cecil.Cil.OpCode Div_Un : Public, Static, InitOnly
    Mono.Cecil.Cil.OpCode Rem : Public, Static, InitOnly
    Mono.Cecil.Cil.OpCode Rem_Un : Public, Static, InitOnly
    Mono.Cecil.Cil.OpCode And : Public, Static, InitOnly
    Mono.Cecil.Cil.OpCode Or : Public, Static, InitOnly
    Mono.Cecil.Cil.OpCode Xor : Public, Static, InitOnly
    Mono.Cecil.Cil.OpCode Shl : Public, Static, InitOnly
    Mono.Cecil.Cil.OpCode Shr : Public, Static, InitOnly
    Mono.Cecil.Cil.OpCode Shr_Un : Public, Static, InitOnly
    Mono.Cecil.Cil.OpCode Neg : Public, Static, InitOnly
    Mono.Cecil.Cil.OpCode Not : Public, Static, InitOnly
    Mono.Cecil.Cil.OpCode Conv_I1 : Public, Static, InitOnly
    Mono.Cecil.Cil.OpCode Conv_I2 : Public, Static, InitOnly
    Mono.Cecil.Cil.OpCode Conv_I4 : Public, Static, InitOnly
    Mono.Cecil.Cil.OpCode Conv_I8 : Public, Static, InitOnly
    Mono.Cecil.Cil.OpCode Conv_R4 : Public, Static, InitOnly
    Mono.Cecil.Cil.OpCode Conv_R8 : Public, Static, InitOnly
    Mono.Cecil.Cil.OpCode Conv_U4 : Public, Static, InitOnly
    Mono.Cecil.Cil.OpCode Conv_U8 : Public, Static, InitOnly
    Mono.Cecil.Cil.OpCode Callvirt : Public, Static, InitOnly
    Mono.Cecil.Cil.OpCode Cpobj : Public, Static, InitOnly
    Mono.Cecil.Cil.OpCode Ldobj : Public, Static, InitOnly
    Mono.Cecil.Cil.OpCode Ldstr : Public, Static, InitOnly
    Mono.Cecil.Cil.OpCode Newobj : Public, Static, InitOnly
    Mono.Cecil.Cil.OpCode Castclass : Public, Static, InitOnly
    Mono.Cecil.Cil.OpCode Isinst : Public, Static, InitOnly
    Mono.Cecil.Cil.OpCode Conv_R_Un : Public, Static, InitOnly
    Mono.Cecil.Cil.OpCode Unbox : Public, Static, InitOnly
    Mono.Cecil.Cil.OpCode Throw : Public, Static, InitOnly
    Mono.Cecil.Cil.OpCode Ldfld : Public, Static, InitOnly
    Mono.Cecil.Cil.OpCode Ldflda : Public, Static, InitOnly
    Mono.Cecil.Cil.OpCode Stfld : Public, Static, InitOnly
    Mono.Cecil.Cil.OpCode Ldsfld : Public, Static, InitOnly
    Mono.Cecil.Cil.OpCode Ldsflda : Public, Static, InitOnly
    Mono.Cecil.Cil.OpCode Stsfld : Public, Static, InitOnly
    Mono.Cecil.Cil.OpCode Stobj : Public, Static, InitOnly
    Mono.Cecil.Cil.OpCode Conv_Ovf_I1_Un : Public, Static, InitOnly
    Mono.Cecil.Cil.OpCode Conv_Ovf_I2_Un : Public, Static, InitOnly
    Mono.Cecil.Cil.OpCode Conv_Ovf_I4_Un : Public, Static, InitOnly
    Mono.Cecil.Cil.OpCode Conv_Ovf_I8_Un : Public, Static, InitOnly
    Mono.Cecil.Cil.OpCode Conv_Ovf_U1_Un : Public, Static, InitOnly
    Mono.Cecil.Cil.OpCode Conv_Ovf_U2_Un : Public, Static, InitOnly
    Mono.Cecil.Cil.OpCode Conv_Ovf_U4_Un : Public, Static, InitOnly
    Mono.Cecil.Cil.OpCode Conv_Ovf_U8_Un : Public, Static, InitOnly
    Mono.Cecil.Cil.OpCode Conv_Ovf_I_Un : Public, Static, InitOnly
    Mono.Cecil.Cil.OpCode Conv_Ovf_U_Un : Public, Static, InitOnly
    Mono.Cecil.Cil.OpCode Box : Public, Static, InitOnly
    Mono.Cecil.Cil.OpCode Newarr : Public, Static, InitOnly
    Mono.Cecil.Cil.OpCode Ldlen : Public, Static, InitOnly
    Mono.Cecil.Cil.OpCode Ldelema : Public, Static, InitOnly
    Mono.Cecil.Cil.OpCode Ldelem_I1 : Public, Static, InitOnly
    Mono.Cecil.Cil.OpCode Ldelem_U1 : Public, Static, InitOnly
    Mono.Cecil.Cil.OpCode Ldelem_I2 : Public, Static, InitOnly
    Mono.Cecil.Cil.OpCode Ldelem_U2 : Public, Static, InitOnly
    Mono.Cecil.Cil.OpCode Ldelem_I4 : Public, Static, InitOnly
    Mono.Cecil.Cil.OpCode Ldelem_U4 : Public, Static, InitOnly
    Mono.Cecil.Cil.OpCode Ldelem_I8 : Public, Static, InitOnly
    Mono.Cecil.Cil.OpCode Ldelem_I : Public, Static, InitOnly
    Mono.Cecil.Cil.OpCode Ldelem_R4 : Public, Static, InitOnly
    Mono.Cecil.Cil.OpCode Ldelem_R8 : Public, Static, InitOnly
    Mono.Cecil.Cil.OpCode Ldelem_Ref : Public, Static, InitOnly
    Mono.Cecil.Cil.OpCode Stelem_I : Public, Static, InitOnly
    Mono.Cecil.Cil.OpCode Stelem_I1 : Public, Static, InitOnly
    Mono.Cecil.Cil.OpCode Stelem_I2 : Public, Static, InitOnly
    Mono.Cecil.Cil.OpCode Stelem_I4 : Public, Static, InitOnly
    Mono.Cecil.Cil.OpCode Stelem_I8 : Public, Static, InitOnly
    Mono.Cecil.Cil.OpCode Stelem_R4 : Public, Static, InitOnly
    Mono.Cecil.Cil.OpCode Stelem_R8 : Public, Static, InitOnly
    Mono.Cecil.Cil.OpCode Stelem_Ref : Public, Static, InitOnly
    Mono.Cecil.Cil.OpCode Ldelem_Any : Public, Static, InitOnly
    Mono.Cecil.Cil.OpCode Stelem_Any : Public, Static, InitOnly
    Mono.Cecil.Cil.OpCode Unbox_Any : Public, Static, InitOnly
    Mono.Cecil.Cil.OpCode Conv_Ovf_I1 : Public, Static, InitOnly
    Mono.Cecil.Cil.OpCode Conv_Ovf_U1 : Public, Static, InitOnly
    Mono.Cecil.Cil.OpCode Conv_Ovf_I2 : Public, Static, InitOnly
    Mono.Cecil.Cil.OpCode Conv_Ovf_U2 : Public, Static, InitOnly
    Mono.Cecil.Cil.OpCode Conv_Ovf_I4 : Public, Static, InitOnly
    Mono.Cecil.Cil.OpCode Conv_Ovf_U4 : Public, Static, InitOnly
    Mono.Cecil.Cil.OpCode Conv_Ovf_I8 : Public, Static, InitOnly
    Mono.Cecil.Cil.OpCode Conv_Ovf_U8 : Public, Static, InitOnly
    Mono.Cecil.Cil.OpCode Refanyval : Public, Static, InitOnly
    Mono.Cecil.Cil.OpCode Ckfinite : Public, Static, InitOnly
    Mono.Cecil.Cil.OpCode Mkrefany : Public, Static, InitOnly
    Mono.Cecil.Cil.OpCode Ldtoken : Public, Static, InitOnly
    Mono.Cecil.Cil.OpCode Conv_U2 : Public, Static, InitOnly
    Mono.Cecil.Cil.OpCode Conv_U1 : Public, Static, InitOnly
    Mono.Cecil.Cil.OpCode Conv_I : Public, Static, InitOnly
    Mono.Cecil.Cil.OpCode Conv_Ovf_I : Public, Static, InitOnly
    Mono.Cecil.Cil.OpCode Conv_Ovf_U : Public, Static, InitOnly
    Mono.Cecil.Cil.OpCode Add_Ovf : Public, Static, InitOnly
    Mono.Cecil.Cil.OpCode Add_Ovf_Un : Public, Static, InitOnly
    Mono.Cecil.Cil.OpCode Mul_Ovf : Public, Static, InitOnly
    Mono.Cecil.Cil.OpCode Mul_Ovf_Un : Public, Static, InitOnly
    Mono.Cecil.Cil.OpCode Sub_Ovf : Public, Static, InitOnly
    Mono.Cecil.Cil.OpCode Sub_Ovf_Un : Public, Static, InitOnly
    Mono.Cecil.Cil.OpCode Endfinally : Public, Static, InitOnly
    Mono.Cecil.Cil.OpCode Leave : Public, Static, InitOnly
    Mono.Cecil.Cil.OpCode Leave_S : Public, Static, InitOnly
    Mono.Cecil.Cil.OpCode Stind_I : Public, Static, InitOnly
    Mono.Cecil.Cil.OpCode Conv_U : Public, Static, InitOnly
    Mono.Cecil.Cil.OpCode Arglist : Public, Static, InitOnly
    Mono.Cecil.Cil.OpCode Ceq : Public, Static, InitOnly
    Mono.Cecil.Cil.OpCode Cgt : Public, Static, InitOnly
    Mono.Cecil.Cil.OpCode Cgt_Un : Public, Static, InitOnly
    Mono.Cecil.Cil.OpCode Clt : Public, Static, InitOnly
    Mono.Cecil.Cil.OpCode Clt_Un : Public, Static, InitOnly
    Mono.Cecil.Cil.OpCode Ldftn : Public, Static, InitOnly
    Mono.Cecil.Cil.OpCode Ldvirtftn : Public, Static, InitOnly
    Mono.Cecil.Cil.OpCode Ldarg : Public, Static, InitOnly
    Mono.Cecil.Cil.OpCode Ldarga : Public, Static, InitOnly
    Mono.Cecil.Cil.OpCode Starg : Public, Static, InitOnly
    Mono.Cecil.Cil.OpCode Ldloc : Public, Static, InitOnly
    Mono.Cecil.Cil.OpCode Ldloca : Public, Static, InitOnly
    Mono.Cecil.Cil.OpCode Stloc : Public, Static, InitOnly
    Mono.Cecil.Cil.OpCode Localloc : Public, Static, InitOnly
    Mono.Cecil.Cil.OpCode Endfilter : Public, Static, InitOnly
    Mono.Cecil.Cil.OpCode Unaligned : Public, Static, InitOnly
    Mono.Cecil.Cil.OpCode Volatile : Public, Static, InitOnly
    Mono.Cecil.Cil.OpCode Tail : Public, Static, InitOnly
    Mono.Cecil.Cil.OpCode Initobj : Public, Static, InitOnly
    Mono.Cecil.Cil.OpCode Constrained : Public, Static, InitOnly
    Mono.Cecil.Cil.OpCode Cpblk : Public, Static, InitOnly
    Mono.Cecil.Cil.OpCode Initblk : Public, Static, InitOnly
    Mono.Cecil.Cil.OpCode No : Public, Static, InitOnly
    Mono.Cecil.Cil.OpCode Rethrow : Public, Static, InitOnly
    Mono.Cecil.Cil.OpCode Sizeof : Public, Static, InitOnly
    Mono.Cecil.Cil.OpCode Refanytype : Public, Static, InitOnly
    Mono.Cecil.Cil.OpCode Readonly : Public, Static, InitOnly
Class Mono.Cecil.Cil.PortablePdbReaderProvider: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Mono.Cecil.Cil.ISymbolReaderProvider
  Methods:
    GetSymbolReader(ModuleDefinition, String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetSymbolReader(ModuleDefinition, Stream): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Mono.Cecil.Cil.PortablePdbReader: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
    Void .ctor(Mono.Cecil.PE.Image, Mono.Cecil.ModuleDefinition): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Mono.Cecil.Cil.ISymbolReader
    System.IDisposable
  Methods:
    GetWriterProvider(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ProcessDebugHeader(ImageDebugHeader): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Read(MethodDefinition): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Mono.Cecil.Cil.EmbeddedPortablePdbReaderProvider: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Mono.Cecil.Cil.ISymbolReaderProvider
  Methods:
    GetSymbolReader(ModuleDefinition, String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetSymbolReader(ModuleDefinition, Stream): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Mono.Cecil.Cil.EmbeddedPortablePdbReader: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
    Void .ctor(Mono.Cecil.Cil.PortablePdbReader): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Mono.Cecil.Cil.ISymbolReader
    System.IDisposable
  Methods:
    GetWriterProvider(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ProcessDebugHeader(ImageDebugHeader): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Read(MethodDefinition): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Mono.Cecil.Cil.PortablePdbWriterProvider: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Mono.Cecil.Cil.ISymbolWriterProvider
  Methods:
    GetSymbolWriter(ModuleDefinition, String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetSymbolWriter(ModuleDefinition, Stream): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Mono.Cecil.Cil.PortablePdbWriter: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
    Void .ctor(Mono.Cecil.MetadataBuilder, Mono.Cecil.ModuleDefinition): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Mono.Cecil.MetadataBuilder, Mono.Cecil.ModuleDefinition, Mono.Cecil.PE.ImageWriter, Mono.Disposable`1[System.IO.Stream]): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Mono.Cecil.Cil.ISymbolWriter
    System.IDisposable
  Fields:
    Byte[] pdb_checksum : Assembly
    System.Guid pdb_id_guid : Assembly
    UInt32 pdb_id_stamp : Assembly
  Methods:
    GetReaderProvider(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Write(MethodDebugInformation): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Write(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetDebugHeader(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Mono.Cecil.Cil.EmbeddedPortablePdbWriterProvider: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Mono.Cecil.Cil.ISymbolWriterProvider
  Methods:
    GetSymbolWriter(ModuleDefinition, String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetSymbolWriter(ModuleDefinition, Stream): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Mono.Cecil.Cil.EmbeddedPortablePdbWriter: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
    Void .ctor(System.IO.Stream, Mono.Cecil.Cil.PortablePdbWriter): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Mono.Cecil.Cil.ISymbolWriter
    System.IDisposable
  Methods:
    GetReaderProvider(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Write(MethodDebugInformation): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetDebugHeader(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Write(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Mono.Cecil.Cil.PdbGuidMapping: AutoLayout, AnsiClass, Class, Abstract, Sealed
  Methods:
    ToType(Guid): PrivateScope, Public, Static, HideBySig
    ToGuid(DocumentType): PrivateScope, Public, Static, HideBySig
    ToHashAlgorithm(Guid): PrivateScope, Public, Static, HideBySig
    ToGuid(DocumentHashAlgorithm): PrivateScope, Public, Static, HideBySig
    ToLanguage(Guid): PrivateScope, Public, Static, HideBySig
    ToGuid(DocumentLanguage): PrivateScope, Public, Static, HideBySig
    ToVendor(Guid): PrivateScope, Public, Static, HideBySig
    ToGuid(DocumentLanguageVendor): PrivateScope, Public, Static, HideBySig
Class Mono.Cecil.Cil.SequencePoint: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
    Void .ctor(Int32, Mono.Cecil.Cil.Document): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Mono.Cecil.Cil.Instruction, Mono.Cecil.Cil.Document): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Mono.Cecil.Cil.InstructionOffset offset : Assembly
  Properties:
    Int32 Offset 'get ' : 
    Int32 StartLine 'get set' : 
    Int32 StartColumn 'get set' : 
    Int32 EndLine 'get set' : 
    Int32 EndColumn 'get set' : 
    Boolean IsHidden 'get ' : 
    Mono.Cecil.Cil.Document Document 'get set' : 
  Methods:
    get_Offset(): PrivateScope, Public, HideBySig, SpecialName
    get_StartLine(): PrivateScope, Public, HideBySig, SpecialName
    set_StartLine(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_StartColumn(): PrivateScope, Public, HideBySig, SpecialName
    set_StartColumn(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_EndLine(): PrivateScope, Public, HideBySig, SpecialName
    set_EndLine(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_EndColumn(): PrivateScope, Public, HideBySig, SpecialName
    set_EndColumn(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_IsHidden(): PrivateScope, Public, HideBySig, SpecialName
    get_Document(): PrivateScope, Public, HideBySig, SpecialName
    set_Document(Document): PrivateScope, Public, HideBySig, SpecialName
Struct Mono.Cecil.Cil.ImageDebugDirectory: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    Int32 Characteristics : Public
    Int32 TimeDateStamp : Public
    Int16 MajorVersion : Public
    Int16 MinorVersion : Public
    Mono.Cecil.Cil.ImageDebugType Type : Public
    Int32 SizeOfData : Public
    Int32 AddressOfRawData : Public
    Int32 PointerToRawData : Public
    Int32 Size = 28 : Public, Static, Literal, HasDefault
Struct Mono.Cecil.Cil.ImageDebugType: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Mono.Cecil.Cil.ImageDebugType CodeView = 2 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.ImageDebugType Deterministic = 16 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.ImageDebugType EmbeddedPortablePdb = 17 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.ImageDebugType PdbChecksum = 19 : Public, Static, Literal, HasDefault
Class Mono.Cecil.Cil.ImageDebugHeader: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
    Void .ctor(Mono.Cecil.Cil.ImageDebugHeaderEntry[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Mono.Cecil.Cil.ImageDebugHeaderEntry): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean HasEntries 'get ' : 
    Mono.Cecil.Cil.ImageDebugHeaderEntry[] Entries 'get ' : 
  Methods:
    get_HasEntries(): PrivateScope, Public, HideBySig, SpecialName
    get_Entries(): PrivateScope, Public, HideBySig, SpecialName
Class Mono.Cecil.Cil.ImageDebugHeaderEntry: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
    Void .ctor(Mono.Cecil.Cil.ImageDebugDirectory, Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Mono.Cecil.Cil.ImageDebugDirectory Directory 'get set' : 
    Byte[] Data 'get ' : 
  Methods:
    get_Directory(): PrivateScope, Public, HideBySig, SpecialName
    set_Directory(ImageDebugDirectory): PrivateScope, Assembly, HideBySig, SpecialName
    get_Data(): PrivateScope, Public, HideBySig, SpecialName
Class Mono.Cecil.Cil.ScopeDebugInformation: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Mono.Cecil.Cil.DebugInformation
    Void .ctor(): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Mono.Cecil.Cil.Instruction, Mono.Cecil.Cil.Instruction): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Mono.Cecil.Cil.InstructionOffset start : Assembly
    Mono.Cecil.Cil.InstructionOffset end : Assembly
    Mono.Cecil.Cil.ImportDebugInformation import : Assembly
    Mono.Collections.Generic.Collection`1[Mono.Cecil.Cil.ScopeDebugInformation] scopes : Assembly
    Mono.Collections.Generic.Collection`1[Mono.Cecil.Cil.VariableDebugInformation] variables : Assembly
    Mono.Collections.Generic.Collection`1[Mono.Cecil.Cil.ConstantDebugInformation] constants : Assembly
  Properties:
    Mono.Cecil.Cil.InstructionOffset Start 'get set' : 
    Mono.Cecil.Cil.InstructionOffset End 'get set' : 
    Mono.Cecil.Cil.ImportDebugInformation Import 'get set' : 
    Boolean HasScopes 'get ' : 
    Mono.Collections.Generic.Collection`1[Mono.Cecil.Cil.ScopeDebugInformation] Scopes 'get ' : 
    Boolean HasVariables 'get ' : 
    Mono.Collections.Generic.Collection`1[Mono.Cecil.Cil.VariableDebugInformation] Variables 'get ' : 
    Boolean HasConstants 'get ' : 
    Mono.Collections.Generic.Collection`1[Mono.Cecil.Cil.ConstantDebugInformation] Constants 'get ' : 
  Methods:
    get_Start(): PrivateScope, Public, HideBySig, SpecialName
    set_Start(InstructionOffset): PrivateScope, Public, HideBySig, SpecialName
    get_End(): PrivateScope, Public, HideBySig, SpecialName
    set_End(InstructionOffset): PrivateScope, Public, HideBySig, SpecialName
    get_Import(): PrivateScope, Public, HideBySig, SpecialName
    set_Import(ImportDebugInformation): PrivateScope, Public, HideBySig, SpecialName
    get_HasScopes(): PrivateScope, Public, HideBySig, SpecialName
    get_Scopes(): PrivateScope, Public, HideBySig, SpecialName
    get_HasVariables(): PrivateScope, Public, HideBySig, SpecialName
    get_Variables(): PrivateScope, Public, HideBySig, SpecialName
    get_HasConstants(): PrivateScope, Public, HideBySig, SpecialName
    get_Constants(): PrivateScope, Public, HideBySig, SpecialName
    TryGetName(VariableDefinition, String&(Out)): PrivateScope, Public, HideBySig
Struct Mono.Cecil.Cil.InstructionOffset: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Mono.Cecil.Cil.Instruction): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 Offset 'get ' : 
    Boolean IsEndOfMethod 'get ' : 
    Boolean IsResolved 'get ' : 
    Mono.Cecil.Cil.Instruction ResolvedInstruction 'get ' : 
  Methods:
    get_Offset(): PrivateScope, Public, HideBySig, SpecialName
    get_IsEndOfMethod(): PrivateScope, Public, HideBySig, SpecialName
    get_IsResolved(): PrivateScope, Assembly, HideBySig, SpecialName
    get_ResolvedInstruction(): PrivateScope, Assembly, HideBySig, SpecialName
Struct Mono.Cecil.Cil.VariableAttributes: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    UInt16 value__ : Public, SpecialName, RTSpecialName
    Mono.Cecil.Cil.VariableAttributes None = 0 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.VariableAttributes DebuggerHidden = 1 : Public, Static, Literal, HasDefault
Struct Mono.Cecil.Cil.VariableIndex: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Mono.Cecil.Cil.VariableDefinition): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 Index 'get ' : 
    Boolean IsResolved 'get ' : 
    Mono.Cecil.Cil.VariableDefinition ResolvedVariable 'get ' : 
  Methods:
    get_Index(): PrivateScope, Public, HideBySig, SpecialName
    get_IsResolved(): PrivateScope, Assembly, HideBySig, SpecialName
    get_ResolvedVariable(): PrivateScope, Assembly, HideBySig, SpecialName
Class Mono.Cecil.Cil.DebugInformation: AutoLayout, AnsiClass, Class, Abstract, BeforeFieldInit
    Void .ctor(): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Mono.Cecil.Cil.ICustomDebugInformationProvider
    Mono.Cecil.IMetadataTokenProvider
  Fields:
    Mono.Cecil.MetadataToken token : Assembly
    Mono.Collections.Generic.Collection`1[Mono.Cecil.Cil.CustomDebugInformation] custom_infos : Assembly
  Properties:
    Mono.Cecil.MetadataToken MetadataToken 'get set' : 
    Boolean HasCustomDebugInformations 'get ' : 
    Mono.Collections.Generic.Collection`1[Mono.Cecil.Cil.CustomDebugInformation] CustomDebugInformations 'get ' : 
  Methods:
    get_MetadataToken(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_MetadataToken(MetadataToken): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_HasCustomDebugInformations(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_CustomDebugInformations(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
Class Mono.Cecil.Cil.VariableDebugInformation: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Mono.Cecil.Cil.DebugInformation
    Void .ctor(Int32, System.String): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Mono.Cecil.Cil.VariableDefinition, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Mono.Cecil.Cil.VariableIndex index : Assembly
  Properties:
    Int32 Index 'get ' : 
    System.String Name 'get set' : 
    Mono.Cecil.Cil.VariableAttributes Attributes 'get set' : 
    Boolean IsDebuggerHidden 'get set' : 
  Methods:
    get_Index(): PrivateScope, Public, HideBySig, SpecialName
    get_Name(): PrivateScope, Public, HideBySig, SpecialName
    set_Name(String): PrivateScope, Public, HideBySig, SpecialName
    get_Attributes(): PrivateScope, Public, HideBySig, SpecialName
    set_Attributes(VariableAttributes): PrivateScope, Public, HideBySig, SpecialName
    get_IsDebuggerHidden(): PrivateScope, Public, HideBySig, SpecialName
    set_IsDebuggerHidden(Boolean): PrivateScope, Public, HideBySig, SpecialName
Class Mono.Cecil.Cil.ConstantDebugInformation: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Mono.Cecil.Cil.DebugInformation
    Void .ctor(System.String, Mono.Cecil.TypeReference, System.Object): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String Name 'get set' : 
    Mono.Cecil.TypeReference ConstantType 'get set' : 
    System.Object Value 'get set' : 
  Methods:
    get_Name(): PrivateScope, Public, HideBySig, SpecialName
    set_Name(String): PrivateScope, Public, HideBySig, SpecialName
    get_ConstantType(): PrivateScope, Public, HideBySig, SpecialName
    set_ConstantType(TypeReference): PrivateScope, Public, HideBySig, SpecialName
    get_Value(): PrivateScope, Public, HideBySig, SpecialName
    set_Value(Object): PrivateScope, Public, HideBySig, SpecialName
Struct Mono.Cecil.Cil.ImportTargetKind: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Byte value__ : Public, SpecialName, RTSpecialName
    Mono.Cecil.Cil.ImportTargetKind ImportNamespace = 1 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.ImportTargetKind ImportNamespaceInAssembly = 2 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.ImportTargetKind ImportType = 3 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.ImportTargetKind ImportXmlNamespaceWithAlias = 4 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.ImportTargetKind ImportAlias = 5 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.ImportTargetKind DefineAssemblyAlias = 6 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.ImportTargetKind DefineNamespaceAlias = 7 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.ImportTargetKind DefineNamespaceInAssemblyAlias = 8 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.ImportTargetKind DefineTypeAlias = 9 : Public, Static, Literal, HasDefault
Class Mono.Cecil.Cil.ImportTarget: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
    Void .ctor(Mono.Cecil.Cil.ImportTargetKind): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Mono.Cecil.Cil.ImportTargetKind kind : Assembly
    System.String namespace : Assembly
    Mono.Cecil.TypeReference type : Assembly
    Mono.Cecil.AssemblyNameReference reference : Assembly
    System.String alias : Assembly
  Properties:
    System.String Namespace 'get set' : 
    Mono.Cecil.TypeReference Type 'get set' : 
    Mono.Cecil.AssemblyNameReference AssemblyReference 'get set' : 
    System.String Alias 'get set' : 
    Mono.Cecil.Cil.ImportTargetKind Kind 'get set' : 
  Methods:
    get_Namespace(): PrivateScope, Public, HideBySig, SpecialName
    set_Namespace(String): PrivateScope, Public, HideBySig, SpecialName
    get_Type(): PrivateScope, Public, HideBySig, SpecialName
    set_Type(TypeReference): PrivateScope, Public, HideBySig, SpecialName
    get_AssemblyReference(): PrivateScope, Public, HideBySig, SpecialName
    set_AssemblyReference(AssemblyNameReference): PrivateScope, Public, HideBySig, SpecialName
    get_Alias(): PrivateScope, Public, HideBySig, SpecialName
    set_Alias(String): PrivateScope, Public, HideBySig, SpecialName
    get_Kind(): PrivateScope, Public, HideBySig, SpecialName
    set_Kind(ImportTargetKind): PrivateScope, Public, HideBySig, SpecialName
Class Mono.Cecil.Cil.ImportDebugInformation: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Mono.Cecil.Cil.DebugInformation
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Mono.Cecil.Cil.ImportDebugInformation parent : Assembly
    Mono.Collections.Generic.Collection`1[Mono.Cecil.Cil.ImportTarget] targets : Assembly
  Properties:
    Boolean HasTargets 'get ' : 
    Mono.Collections.Generic.Collection`1[Mono.Cecil.Cil.ImportTarget] Targets 'get ' : 
    Mono.Cecil.Cil.ImportDebugInformation Parent 'get set' : 
  Methods:
    get_HasTargets(): PrivateScope, Public, HideBySig, SpecialName
    get_Targets(): PrivateScope, Public, HideBySig, SpecialName
    get_Parent(): PrivateScope, Public, HideBySig, SpecialName
    set_Parent(ImportDebugInformation): PrivateScope, Public, HideBySig, SpecialName
Interface Mono.Cecil.Cil.ICustomDebugInformationProvider: AutoLayout, AnsiClass, Class, ClassSemanticsMask, Abstract
  Interfaces:
    Mono.Cecil.IMetadataTokenProvider
  Properties:
    Boolean HasCustomDebugInformations 'get ' : 
    Mono.Collections.Generic.Collection`1[Mono.Cecil.Cil.CustomDebugInformation] CustomDebugInformations 'get ' : 
  Methods:
    get_HasCustomDebugInformations(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_CustomDebugInformations(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
Struct Mono.Cecil.Cil.CustomDebugInformationKind: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Mono.Cecil.Cil.CustomDebugInformationKind Binary = 0 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.CustomDebugInformationKind StateMachineScope = 1 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.CustomDebugInformationKind DynamicVariable = 2 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.CustomDebugInformationKind DefaultNamespace = 3 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.CustomDebugInformationKind AsyncMethodBody = 4 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.CustomDebugInformationKind EmbeddedSource = 5 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.CustomDebugInformationKind SourceLink = 6 : Public, Static, Literal, HasDefault
Class Mono.Cecil.Cil.CustomDebugInformation: AutoLayout, AnsiClass, Class, Abstract, BeforeFieldInit
  :Mono.Cecil.Cil.DebugInformation
    Void .ctor(System.Guid): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Guid Identifier 'get ' : 
    Mono.Cecil.Cil.CustomDebugInformationKind Kind 'get ' : 
  Methods:
    get_Identifier(): PrivateScope, Public, HideBySig, SpecialName
    get_Kind(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
Class Mono.Cecil.Cil.BinaryCustomDebugInformation: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Mono.Cecil.Cil.CustomDebugInformation
    Void .ctor(System.Guid, Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Byte[] Data 'get set' : 
    Mono.Cecil.Cil.CustomDebugInformationKind Kind 'get ' : 
  Methods:
    get_Data(): PrivateScope, Public, HideBySig, SpecialName
    set_Data(Byte[]): PrivateScope, Public, HideBySig, SpecialName
    get_Kind(): PrivateScope, Public, Virtual, HideBySig, SpecialName
Class Mono.Cecil.Cil.AsyncMethodBodyDebugInformation: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Mono.Cecil.Cil.CustomDebugInformation
    Void .ctor(Int32): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Mono.Cecil.Cil.Instruction): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Mono.Cecil.Cil.InstructionOffset catch_handler : Assembly
    Mono.Collections.Generic.Collection`1[Mono.Cecil.Cil.InstructionOffset] yields : Assembly
    Mono.Collections.Generic.Collection`1[Mono.Cecil.Cil.InstructionOffset] resumes : Assembly
    Mono.Collections.Generic.Collection`1[Mono.Cecil.MethodDefinition] resume_methods : Assembly
    System.Guid KindIdentifier : Public, Static
  Properties:
    Mono.Cecil.Cil.InstructionOffset CatchHandler 'get set' : 
    Mono.Collections.Generic.Collection`1[Mono.Cecil.Cil.InstructionOffset] Yields 'get ' : 
    Mono.Collections.Generic.Collection`1[Mono.Cecil.Cil.InstructionOffset] Resumes 'get ' : 
    Mono.Collections.Generic.Collection`1[Mono.Cecil.MethodDefinition] ResumeMethods 'get ' : 
    Mono.Cecil.Cil.CustomDebugInformationKind Kind 'get ' : 
  Methods:
    get_CatchHandler(): PrivateScope, Public, HideBySig, SpecialName
    set_CatchHandler(InstructionOffset): PrivateScope, Public, HideBySig, SpecialName
    get_Yields(): PrivateScope, Public, HideBySig, SpecialName
    get_Resumes(): PrivateScope, Public, HideBySig, SpecialName
    get_ResumeMethods(): PrivateScope, Public, HideBySig, SpecialName
    get_Kind(): PrivateScope, Public, Virtual, HideBySig, SpecialName
Class Mono.Cecil.Cil.StateMachineScope: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
    Void .ctor(Int32, Int32): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Mono.Cecil.Cil.Instruction, Mono.Cecil.Cil.Instruction): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Mono.Cecil.Cil.InstructionOffset start : Assembly
    Mono.Cecil.Cil.InstructionOffset end : Assembly
  Properties:
    Mono.Cecil.Cil.InstructionOffset Start 'get set' : 
    Mono.Cecil.Cil.InstructionOffset End 'get set' : 
  Methods:
    get_Start(): PrivateScope, Public, HideBySig, SpecialName
    set_Start(InstructionOffset): PrivateScope, Public, HideBySig, SpecialName
    get_End(): PrivateScope, Public, HideBySig, SpecialName
    set_End(InstructionOffset): PrivateScope, Public, HideBySig, SpecialName
Class Mono.Cecil.Cil.StateMachineScopeDebugInformation: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Mono.Cecil.Cil.CustomDebugInformation
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Mono.Collections.Generic.Collection`1[Mono.Cecil.Cil.StateMachineScope] scopes : Assembly
    System.Guid KindIdentifier : Public, Static
  Properties:
    Mono.Collections.Generic.Collection`1[Mono.Cecil.Cil.StateMachineScope] Scopes 'get ' : 
    Mono.Cecil.Cil.CustomDebugInformationKind Kind 'get ' : 
  Methods:
    get_Scopes(): PrivateScope, Public, HideBySig, SpecialName
    get_Kind(): PrivateScope, Public, Virtual, HideBySig, SpecialName
Class Mono.Cecil.Cil.EmbeddedSourceDebugInformation: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Mono.Cecil.Cil.CustomDebugInformation
    Void .ctor(UInt32, Mono.Cecil.MetadataReader): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Byte[], Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    UInt32 index : Assembly
    Mono.Cecil.MetadataReader debug_reader : Assembly
    Boolean resolved : Assembly
    Byte[] content : Assembly
    Boolean compress : Assembly
    System.Guid KindIdentifier : Public, Static
  Properties:
    Byte[] Content 'get set' : 
    Boolean Compress 'get set' : 
    Mono.Cecil.Cil.CustomDebugInformationKind Kind 'get ' : 
  Methods:
    get_Content(): PrivateScope, Public, HideBySig, SpecialName
    set_Content(Byte[]): PrivateScope, Public, HideBySig, SpecialName
    get_Compress(): PrivateScope, Public, HideBySig, SpecialName
    set_Compress(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_Kind(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    ReadRawEmbeddedSourceDebugInformation(): PrivateScope, Assembly, HideBySig
Class Mono.Cecil.Cil.SourceLinkDebugInformation: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Mono.Cecil.Cil.CustomDebugInformation
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    System.String content : Assembly
    System.Guid KindIdentifier : Public, Static
  Properties:
    System.String Content 'get set' : 
    Mono.Cecil.Cil.CustomDebugInformationKind Kind 'get ' : 
  Methods:
    get_Content(): PrivateScope, Public, HideBySig, SpecialName
    set_Content(String): PrivateScope, Public, HideBySig, SpecialName
    get_Kind(): PrivateScope, Public, Virtual, HideBySig, SpecialName
Class Mono.Cecil.Cil.MethodDebugInformation: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Mono.Cecil.Cil.DebugInformation
    Void .ctor(Mono.Cecil.MethodDefinition): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Fields:
    Mono.Cecil.MethodDefinition method : Assembly
    Mono.Collections.Generic.Collection`1[Mono.Cecil.Cil.SequencePoint] sequence_points : Assembly
    Mono.Cecil.Cil.ScopeDebugInformation scope : Assembly
    Mono.Cecil.MethodDefinition kickoff_method : Assembly
    Int32 code_size : Assembly
    Mono.Cecil.MetadataToken local_var_token : Assembly
  Properties:
    Mono.Cecil.MethodDefinition Method 'get ' : 
    Boolean HasSequencePoints 'get ' : 
    Mono.Collections.Generic.Collection`1[Mono.Cecil.Cil.SequencePoint] SequencePoints 'get ' : 
    Mono.Cecil.Cil.ScopeDebugInformation Scope 'get set' : 
    Mono.Cecil.MethodDefinition StateMachineKickOffMethod 'get set' : 
  Methods:
    get_Method(): PrivateScope, Public, HideBySig, SpecialName
    get_HasSequencePoints(): PrivateScope, Public, HideBySig, SpecialName
    get_SequencePoints(): PrivateScope, Public, HideBySig, SpecialName
    get_Scope(): PrivateScope, Public, HideBySig, SpecialName
    set_Scope(ScopeDebugInformation): PrivateScope, Public, HideBySig, SpecialName
    get_StateMachineKickOffMethod(): PrivateScope, Public, HideBySig, SpecialName
    set_StateMachineKickOffMethod(MethodDefinition): PrivateScope, Public, HideBySig, SpecialName
    GetSequencePoint(Instruction): PrivateScope, Public, HideBySig
    GetSequencePointMapping(): PrivateScope, Public, HideBySig
    GetScopes(): PrivateScope, Public, HideBySig
    TryGetName(VariableDefinition, String&(Out)): PrivateScope, Public, HideBySig
Interface Mono.Cecil.Cil.ISymbolReader: AutoLayout, AnsiClass, Class, ClassSemanticsMask, Abstract
  Interfaces:
    System.IDisposable
  Methods:
    GetWriterProvider(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    ProcessDebugHeader(ImageDebugHeader): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Read(MethodDefinition): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Interface Mono.Cecil.Cil.ISymbolReaderProvider: AutoLayout, AnsiClass, Class, ClassSemanticsMask, Abstract
  Methods:
    GetSymbolReader(ModuleDefinition, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetSymbolReader(ModuleDefinition, Stream): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class Mono.Cecil.Cil.SymbolsNotFoundException: AutoLayout, AnsiClass, Class, Sealed, Serializable, BeforeFieldInit
  :System.IO.FileNotFoundException
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Mono.Cecil.Cil.SymbolsNotMatchingException: AutoLayout, AnsiClass, Class, Sealed, Serializable, BeforeFieldInit
  :System.InvalidOperationException
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Mono.Cecil.Cil.DefaultSymbolReaderProvider: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Mono.Cecil.Cil.ISymbolReaderProvider
  Methods:
    GetSymbolReader(ModuleDefinition, String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetSymbolReader(ModuleDefinition, Stream): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Struct Mono.Cecil.Cil.SymbolKind: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Mono.Cecil.Cil.SymbolKind NativePdb = 0 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.SymbolKind PortablePdb = 1 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.SymbolKind EmbeddedPortablePdb = 2 : Public, Static, Literal, HasDefault
    Mono.Cecil.Cil.SymbolKind Mdb = 3 : Public, Static, Literal, HasDefault
Class Mono.Cecil.Cil.SymbolProvider: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Methods:
    GetReaderProvider(SymbolKind): PrivateScope, Public, Static, HideBySig
Interface Mono.Cecil.Cil.ISymbolWriter: AutoLayout, AnsiClass, Class, ClassSemanticsMask, Abstract
  Interfaces:
    System.IDisposable
  Methods:
    GetReaderProvider(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetDebugHeader(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Write(MethodDebugInformation): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Write(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Interface Mono.Cecil.Cil.ISymbolWriterProvider: AutoLayout, AnsiClass, Class, ClassSemanticsMask, Abstract
  Methods:
    GetSymbolWriter(ModuleDefinition, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetSymbolWriter(ModuleDefinition, Stream): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class Mono.Cecil.Cil.DefaultSymbolWriterProvider: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Mono.Cecil.Cil.ISymbolWriterProvider
  Methods:
    GetSymbolWriter(ModuleDefinition, String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetSymbolWriter(ModuleDefinition, Stream): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Mono.Cecil.Cil.VariableDefinition: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Mono.Cecil.Cil.VariableReference
    Void .ctor(Mono.Cecil.TypeReference): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean IsPinned 'get ' : 
  Methods:
    get_IsPinned(): PrivateScope, Public, HideBySig, SpecialName
    Resolve(): PrivateScope, Public, Virtual, HideBySig
Class Mono.Cecil.Cil.VariableReference: AutoLayout, AnsiClass, Class, Abstract, BeforeFieldInit
    Void .ctor(Mono.Cecil.TypeReference): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int32 index : Assembly
  Properties:
    Mono.Cecil.TypeReference VariableType 'get set' : 
    Int32 Index 'get ' : 
  Methods:
    get_VariableType(): PrivateScope, Public, HideBySig, SpecialName
    set_VariableType(TypeReference): PrivateScope, Public, HideBySig, SpecialName
    get_Index(): PrivateScope, Public, HideBySig, SpecialName
    Resolve(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    ToString(): PrivateScope, Public, Virtual, HideBySig
Class Mono.CompilerServices.SymbolWriter.MonoSymbolFileException: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :System.Exception
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Object[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Exception): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Mono.CompilerServices.SymbolWriter.MyBinaryWriter: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :System.IO.BinaryWriter
    Void .ctor(System.IO.Stream): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    WriteLeb128(Int32): PrivateScope, Public, HideBySig
Class Mono.CompilerServices.SymbolWriter.MyBinaryReader: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :System.IO.BinaryReader
    Void .ctor(System.IO.Stream): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    ReadLeb128(): PrivateScope, Public, HideBySig
    ReadString(Int32): PrivateScope, Public, HideBySig
Interface Mono.CompilerServices.SymbolWriter.ISourceFile: AutoLayout, AnsiClass, Class, ClassSemanticsMask, Abstract
  Properties:
    Mono.CompilerServices.SymbolWriter.SourceFileEntry Entry 'get ' : 
  Methods:
    get_Entry(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
Interface Mono.CompilerServices.SymbolWriter.ICompileUnit: AutoLayout, AnsiClass, Class, ClassSemanticsMask, Abstract
  Properties:
    Mono.CompilerServices.SymbolWriter.CompileUnitEntry Entry 'get ' : 
  Methods:
    get_Entry(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
Interface Mono.CompilerServices.SymbolWriter.IMethodDef: AutoLayout, AnsiClass, Class, ClassSemanticsMask, Abstract
  Properties:
    System.String Name 'get ' : 
    Int32 Token 'get ' : 
  Methods:
    get_Name(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Token(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
Class Mono.CompilerServices.SymbolWriter.MonoSymbolFile: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Fields:
    Int32 MajorVersion : Public, InitOnly
    Int32 MinorVersion : Public, InitOnly
    Int32 NumLineNumbers : Public
    Int32 LineNumberCount : Assembly
    Int32 LocalCount : Assembly
    Int32 StringSize : Assembly
    Int32 LineNumberSize : Assembly
    Int32 ExtendedLineNumberSize : Assembly
  Properties:
    Int32 CompileUnitCount 'get ' : 
    Int32 SourceCount 'get ' : 
    Int32 MethodCount 'get ' : 
    Int32 TypeCount 'get ' : 
    Int32 AnonymousScopeCount 'get ' : 
    Int32 NamespaceCount 'get ' : 
    System.Guid Guid 'get ' : 
    Mono.CompilerServices.SymbolWriter.OffsetTable OffsetTable 'get ' : 
    Mono.CompilerServices.SymbolWriter.SourceFileEntry[] Sources 'get ' : 
    Mono.CompilerServices.SymbolWriter.CompileUnitEntry[] CompileUnits 'get ' : 
    Mono.CompilerServices.SymbolWriter.MethodEntry[] Methods 'get ' : 
    Mono.CompilerServices.SymbolWriter.MyBinaryReader BinaryReader 'get ' : 
  Methods:
    AddSource(SourceFileEntry): PrivateScope, Public, HideBySig
    AddCompileUnit(CompileUnitEntry): PrivateScope, Public, HideBySig
    AddMethod(MethodEntry): PrivateScope, Public, HideBySig
    DefineMethod(CompileUnitEntry, Int32, ScopeVariable[], LocalVariableEntry[], LineNumberEntry[], CodeBlockEntry[], String, Flags, Int32): PrivateScope, Public, HideBySig
    DefineAnonymousScope(Int32): PrivateScope, Assembly, HideBySig
    DefineCapturedVariable(Int32, String, String, CapturedKind): PrivateScope, Assembly, HideBySig
    DefineCapturedScope(Int32, Int32, String): PrivateScope, Assembly, HideBySig
    GetNextTypeIndex(): PrivateScope, Assembly, HideBySig
    GetNextMethodIndex(): PrivateScope, Assembly, HideBySig
    GetNextNamespaceIndex(): PrivateScope, Assembly, HideBySig
    CreateSymbolFile(Guid, FileStream): PrivateScope, Public, HideBySig
    ReadSymbolFile(Assembly): PrivateScope, Public, Static, HideBySig
    ReadSymbolFile(String): PrivateScope, Public, Static, HideBySig
    ReadSymbolFile(String, Guid): PrivateScope, Public, Static, HideBySig
    ReadSymbolFile(Stream): PrivateScope, Public, Static, HideBySig
    get_CompileUnitCount(): PrivateScope, Public, HideBySig, SpecialName
    get_SourceCount(): PrivateScope, Public, HideBySig, SpecialName
    get_MethodCount(): PrivateScope, Public, HideBySig, SpecialName
    get_TypeCount(): PrivateScope, Public, HideBySig, SpecialName
    get_AnonymousScopeCount(): PrivateScope, Public, HideBySig, SpecialName
    get_NamespaceCount(): PrivateScope, Public, HideBySig, SpecialName
    get_Guid(): PrivateScope, Public, HideBySig, SpecialName
    get_OffsetTable(): PrivateScope, Public, HideBySig, SpecialName
    GetSourceFile(Int32): PrivateScope, Public, HideBySig
    get_Sources(): PrivateScope, Public, HideBySig, SpecialName
    GetCompileUnit(Int32): PrivateScope, Public, HideBySig
    get_CompileUnits(): PrivateScope, Public, HideBySig, SpecialName
    GetMethodByToken(Int32): PrivateScope, Public, HideBySig
    GetMethod(Int32): PrivateScope, Public, HideBySig
    get_Methods(): PrivateScope, Public, HideBySig, SpecialName
    FindSource(String): PrivateScope, Public, HideBySig
    GetAnonymousScope(Int32): PrivateScope, Public, HideBySig
    get_BinaryReader(): PrivateScope, Assembly, HideBySig, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Mono.CompilerServices.SymbolWriter.OffsetTable: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.IO.BinaryReader, Int32, Int32): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int32 TotalFileSize : Public
    Int32 DataSectionOffset : Public
    Int32 DataSectionSize : Public
    Int32 CompileUnitCount : Public
    Int32 CompileUnitTableOffset : Public
    Int32 CompileUnitTableSize : Public
    Int32 SourceCount : Public
    Int32 SourceTableOffset : Public
    Int32 SourceTableSize : Public
    Int32 MethodCount : Public
    Int32 MethodTableOffset : Public
    Int32 MethodTableSize : Public
    Int32 TypeCount : Public
    Int32 AnonymousScopeCount : Public
    Int32 AnonymousScopeTableOffset : Public
    Int32 AnonymousScopeTableSize : Public
    Flags FileFlags : Public
    Int32 LineNumberTable_LineBase : Public
    Int32 LineNumberTable_LineRange : Public
    Int32 LineNumberTable_OpcodeBase : Public
    Int32 MajorVersion = 50 : Public, Static, Literal, HasDefault
    Int32 MinorVersion = 0 : Public, Static, Literal, HasDefault
    Int64 Magic = 5037318119232611860 : Public, Static, Literal, HasDefault
  Methods:
    Write(BinaryWriter, Int32, Int32): PrivateScope, Assembly, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
Struct Mono.CompilerServices.SymbolWriter.OffsetTable+Flags: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Flags IsAspxSource = 1 : Public, Static, Literal, HasDefault
    Flags WindowsFileNames = 2 : Public, Static, Literal, HasDefault
Class Mono.CompilerServices.SymbolWriter.LineNumberEntry: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(Int32, Int32, Int32, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32, Int32, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32, Int32, Int32, Int32, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32, Int32, Int32, Int32, Int32, Int32, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int32 Row : Public, InitOnly
    Int32 Column : Public
    Int32 EndRow : Public
    Int32 EndColumn : Public
    Int32 File : Public, InitOnly
    Int32 Offset : Public, InitOnly
    Boolean IsHidden : Public, InitOnly
    Mono.CompilerServices.SymbolWriter.LineNumberEntry Null : Public, Static, InitOnly
  Methods:
    ToString(): PrivateScope, Public, Virtual, HideBySig
Class Mono.CompilerServices.SymbolWriter.LineNumberEntry+LocationComparer: AutoLayout, AnsiClass, Class, NestedPublic, Sealed, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Collections.Generic.IComparer`1[Mono.CompilerServices.SymbolWriter.LineNumberEntry]
  Fields:
    LocationComparer Default : Public, Static, InitOnly
  Methods:
    Compare(LineNumberEntry, LineNumberEntry): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Mono.CompilerServices.SymbolWriter.CodeBlockEntry: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(Int32, Int32, Type, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32, Mono.CompilerServices.SymbolWriter.MyBinaryReader): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int32 Index : Public
    Int32 Parent : Public
    Type BlockType : Public
    Int32 StartOffset : Public
    Int32 EndOffset : Public
  Methods:
    Close(Int32): PrivateScope, Public, HideBySig
    Write(MyBinaryWriter): PrivateScope, Assembly, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
Struct Mono.CompilerServices.SymbolWriter.CodeBlockEntry+Type: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Type Lexical = 1 : Public, Static, Literal, HasDefault
    Type CompilerGenerated = 2 : Public, Static, Literal, HasDefault
    Type IteratorBody = 3 : Public, Static, Literal, HasDefault
    Type IteratorDispatcher = 4 : Public, Static, Literal, HasDefault
Struct Mono.CompilerServices.SymbolWriter.LocalVariableEntry: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Int32, System.String, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Mono.CompilerServices.SymbolWriter.MonoSymbolFile, Mono.CompilerServices.SymbolWriter.MyBinaryReader): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int32 Index : Public, InitOnly
    System.String Name : Public, InitOnly
    Int32 BlockIndex : Public, InitOnly
  Methods:
    Write(MonoSymbolFile, MyBinaryWriter): PrivateScope, Assembly, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
Struct Mono.CompilerServices.SymbolWriter.CapturedVariable: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(System.String, System.String, CapturedKind): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Mono.CompilerServices.SymbolWriter.MyBinaryReader): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Fields:
    System.String Name : Public, InitOnly
    System.String CapturedName : Public, InitOnly
    CapturedKind Kind : Public, InitOnly
  Methods:
    Write(MyBinaryWriter): PrivateScope, Assembly, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
Struct Mono.CompilerServices.SymbolWriter.CapturedVariable+CapturedKind: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.Enum
  Fields:
    Byte value__ : Public, SpecialName, RTSpecialName
    CapturedKind Local = 0 : Public, Static, Literal, HasDefault
    CapturedKind Parameter = 1 : Public, Static, Literal, HasDefault
    CapturedKind This = 2 : Public, Static, Literal, HasDefault
Struct Mono.CompilerServices.SymbolWriter.CapturedScope: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Int32, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Mono.CompilerServices.SymbolWriter.MyBinaryReader): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int32 Scope : Public, InitOnly
    System.String CapturedName : Public, InitOnly
  Methods:
    Write(MyBinaryWriter): PrivateScope, Assembly, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
Struct Mono.CompilerServices.SymbolWriter.ScopeVariable: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Int32, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Mono.CompilerServices.SymbolWriter.MyBinaryReader): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int32 Scope : Public, InitOnly
    Int32 Index : Public, InitOnly
  Methods:
    Write(MyBinaryWriter): PrivateScope, Assembly, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
Class Mono.CompilerServices.SymbolWriter.AnonymousScopeEntry: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Mono.CompilerServices.SymbolWriter.MyBinaryReader): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int32 ID : Public, InitOnly
  Properties:
    Mono.CompilerServices.SymbolWriter.CapturedVariable[] CapturedVariables 'get ' : 
    Mono.CompilerServices.SymbolWriter.CapturedScope[] CapturedScopes 'get ' : 
  Methods:
    AddCapturedVariable(String, String, CapturedKind): PrivateScope, Assembly, HideBySig
    get_CapturedVariables(): PrivateScope, Public, HideBySig, SpecialName
    AddCapturedScope(Int32, String): PrivateScope, Assembly, HideBySig
    get_CapturedScopes(): PrivateScope, Public, HideBySig, SpecialName
    Write(MyBinaryWriter): PrivateScope, Assembly, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
Class Mono.CompilerServices.SymbolWriter.CompileUnitEntry: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(Mono.CompilerServices.SymbolWriter.MonoSymbolFile, Mono.CompilerServices.SymbolWriter.SourceFileEntry): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Mono.CompilerServices.SymbolWriter.MonoSymbolFile, Mono.CompilerServices.SymbolWriter.MyBinaryReader): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Mono.CompilerServices.SymbolWriter.ICompileUnit
  Fields:
    Int32 Index : Public, InitOnly
  Properties:
    Int32 Size 'get ' : 
    Mono.CompilerServices.SymbolWriter.SourceFileEntry SourceFile 'get ' : 
    Mono.CompilerServices.SymbolWriter.NamespaceEntry[] Namespaces 'get ' : 
    Mono.CompilerServices.SymbolWriter.SourceFileEntry[] IncludeFiles 'get ' : 
  Methods:
    get_Size(): PrivateScope, Public, Static, HideBySig, SpecialName
    AddFile(SourceFileEntry): PrivateScope, Public, HideBySig
    get_SourceFile(): PrivateScope, Public, HideBySig, SpecialName
    DefineNamespace(String, String[], Int32): PrivateScope, Public, HideBySig
    WriteData(MyBinaryWriter): PrivateScope, Assembly, HideBySig
    Write(BinaryWriter): PrivateScope, Assembly, HideBySig
    ReadAll(): PrivateScope, Public, HideBySig
    get_Namespaces(): PrivateScope, Public, HideBySig, SpecialName
    get_IncludeFiles(): PrivateScope, Public, HideBySig, SpecialName
Class Mono.CompilerServices.SymbolWriter.SourceFileEntry: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(Mono.CompilerServices.SymbolWriter.MonoSymbolFile, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Mono.CompilerServices.SymbolWriter.MonoSymbolFile, System.String, Byte[], Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Mono.CompilerServices.SymbolWriter.MonoSymbolFile, System.String, System.String, Byte[], Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Mono.CompilerServices.SymbolWriter.MonoSymbolFile, Mono.CompilerServices.SymbolWriter.MyBinaryReader): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int32 Index : Public, InitOnly
  Properties:
    Int32 Size 'get ' : 
    Byte[] Checksum 'get ' : 
    System.String FileName 'get set' : 
    Boolean AutoGenerated 'get ' : 
  Methods:
    get_Size(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Checksum(): PrivateScope, Public, HideBySig, SpecialName
    WriteData(MyBinaryWriter): PrivateScope, Assembly, HideBySig
    Write(BinaryWriter): PrivateScope, Assembly, HideBySig
    get_FileName(): PrivateScope, Public, HideBySig, SpecialName
    set_FileName(String): PrivateScope, Public, HideBySig, SpecialName
    get_AutoGenerated(): PrivateScope, Public, HideBySig, SpecialName
    SetAutoGenerated(): PrivateScope, Public, HideBySig
    CheckChecksum(): PrivateScope, Public, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
Class Mono.CompilerServices.SymbolWriter.LineNumberTable: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(Mono.CompilerServices.SymbolWriter.MonoSymbolFile, Mono.CompilerServices.SymbolWriter.LineNumberEntry[]): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int32 LineBase : Public, InitOnly
    Int32 LineRange : Public, InitOnly
    Byte OpcodeBase : Public, InitOnly
    Int32 MaxAddressIncrement : Public, InitOnly
    Int32 Default_LineBase = -1 : Public, Static, Literal, HasDefault
    Int32 Default_LineRange = 8 : Public, Static, Literal, HasDefault
    Byte Default_OpcodeBase = 9 : Public, Static, Literal, HasDefault
    Byte DW_LNS_copy = 1 : Public, Static, Literal, HasDefault
    Byte DW_LNS_advance_pc = 2 : Public, Static, Literal, HasDefault
    Byte DW_LNS_advance_line = 3 : Public, Static, Literal, HasDefault
    Byte DW_LNS_set_file = 4 : Public, Static, Literal, HasDefault
    Byte DW_LNS_const_add_pc = 8 : Public, Static, Literal, HasDefault
    Byte DW_LNE_end_sequence = 1 : Public, Static, Literal, HasDefault
    Byte DW_LNE_MONO_negate_is_hidden = 64 : Public, Static, Literal, HasDefault
    Byte DW_LNE_MONO__extensions_start = 64 : Assembly, Static, Literal, HasDefault
    Byte DW_LNE_MONO__extensions_end = 127 : Assembly, Static, Literal, HasDefault
  Properties:
    Mono.CompilerServices.SymbolWriter.LineNumberEntry[] LineNumbers 'get ' : 
  Methods:
    get_LineNumbers(): PrivateScope, Public, HideBySig, SpecialName
    Write(MonoSymbolFile, MyBinaryWriter, Boolean, Boolean): PrivateScope, Assembly, HideBySig
    Read(MonoSymbolFile, MyBinaryReader, Boolean, Boolean): PrivateScope, Assembly, Static, HideBySig
    GetMethodBounds(LineNumberEntry&(Out), LineNumberEntry&(Out)): PrivateScope, Public, HideBySig
Class Mono.CompilerServices.SymbolWriter.MethodEntry: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(Mono.CompilerServices.SymbolWriter.MonoSymbolFile, Mono.CompilerServices.SymbolWriter.MyBinaryReader, Int32): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Mono.CompilerServices.SymbolWriter.MonoSymbolFile, Mono.CompilerServices.SymbolWriter.CompileUnitEntry, Int32, Mono.CompilerServices.SymbolWriter.ScopeVariable[], Mono.CompilerServices.SymbolWriter.LocalVariableEntry[], Mono.CompilerServices.SymbolWriter.LineNumberEntry[], Mono.CompilerServices.SymbolWriter.CodeBlockEntry[], System.String, Flags, Int32): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IComparable
  Fields:
    Int32 CompileUnitIndex : Public, InitOnly
    Int32 Token : Public, InitOnly
    Int32 NamespaceID : Public, InitOnly
    Mono.CompilerServices.SymbolWriter.CompileUnitEntry CompileUnit : Public, InitOnly
    Mono.CompilerServices.SymbolWriter.MonoSymbolFile SymbolFile : Public, InitOnly
    Int32 Size = 12 : Public, Static, Literal, HasDefault
  Properties:
    Flags MethodFlags 'get ' : 
    Int32 Index 'get set' : 
  Methods:
    get_MethodFlags(): PrivateScope, Public, HideBySig, SpecialName
    get_Index(): PrivateScope, Public, HideBySig, SpecialName
    set_Index(Int32): PrivateScope, Public, HideBySig, SpecialName
    Write(MyBinaryWriter): PrivateScope, Assembly, HideBySig
    WriteData(MonoSymbolFile, MyBinaryWriter): PrivateScope, Assembly, HideBySig
    ReadAll(): PrivateScope, Public, HideBySig
    GetLineNumberTable(): PrivateScope, Public, HideBySig
    GetLocals(): PrivateScope, Public, HideBySig
    GetCodeBlocks(): PrivateScope, Public, HideBySig
    GetScopeVariables(): PrivateScope, Public, HideBySig
    GetRealName(): PrivateScope, Public, HideBySig
    CompareTo(Object): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ToString(): PrivateScope, Public, Virtual, HideBySig
Struct Mono.CompilerServices.SymbolWriter.MethodEntry+Flags: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Flags LocalNamesAmbiguous = 1 : Public, Static, Literal, HasDefault
    Flags ColumnsInfoIncluded = 2 : Public, Static, Literal, HasDefault
    Flags EndInfoIncluded = 4 : Public, Static, Literal, HasDefault
Struct Mono.CompilerServices.SymbolWriter.NamespaceEntry: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(System.String, Int32, System.String[], Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Mono.CompilerServices.SymbolWriter.MonoSymbolFile, Mono.CompilerServices.SymbolWriter.MyBinaryReader): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Fields:
    System.String Name : Public, InitOnly
    Int32 Index : Public, InitOnly
    Int32 Parent : Public, InitOnly
    System.String[] UsingClauses : Public, InitOnly
  Methods:
    Write(MonoSymbolFile, MyBinaryWriter): PrivateScope, Assembly, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
Class Mono.CompilerServices.SymbolWriter.MonoSymbolWriter: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Mono.CompilerServices.SymbolWriter.MonoSymbolFile SymbolFile 'get ' : 
  Methods:
    get_SymbolFile(): PrivateScope, Public, HideBySig, SpecialName
    CloseNamespace(): PrivateScope, Public, HideBySig
    DefineLocalVariable(Int32, String): PrivateScope, Public, HideBySig
    DefineCapturedLocal(Int32, String, String): PrivateScope, Public, HideBySig
    DefineCapturedParameter(Int32, String, String): PrivateScope, Public, HideBySig
    DefineCapturedThis(Int32, String): PrivateScope, Public, HideBySig
    DefineCapturedScope(Int32, Int32, String): PrivateScope, Public, HideBySig
    DefineScopeVariable(Int32, Int32): PrivateScope, Public, HideBySig
    MarkSequencePoint(Int32, SourceFileEntry, Int32, Int32, Boolean): PrivateScope, Public, HideBySig
    OpenMethod(ICompileUnit, Int32, IMethodDef): PrivateScope, Public, HideBySig
    CloseMethod(): PrivateScope, Public, HideBySig
    DefineDocument(String): PrivateScope, Public, HideBySig
    DefineDocument(String, Byte[], Byte[]): PrivateScope, Public, HideBySig
    DefineCompilationUnit(SourceFileEntry): PrivateScope, Public, HideBySig
    DefineNamespace(String, CompileUnitEntry, String[], Int32): PrivateScope, Public, HideBySig
    OpenScope(Int32): PrivateScope, Public, HideBySig
    CloseScope(Int32): PrivateScope, Public, HideBySig
    OpenCompilerGeneratedBlock(Int32): PrivateScope, Public, HideBySig
    CloseCompilerGeneratedBlock(Int32): PrivateScope, Public, HideBySig
    StartIteratorBody(Int32): PrivateScope, Public, HideBySig
    EndIteratorBody(Int32): PrivateScope, Public, HideBySig
    StartIteratorDispatcher(Int32): PrivateScope, Public, HideBySig
    EndIteratorDispatcher(Int32): PrivateScope, Public, HideBySig
    DefineAnonymousScope(Int32): PrivateScope, Public, HideBySig
    WriteSymbolFile(Guid): PrivateScope, Public, HideBySig
Class Mono.CompilerServices.SymbolWriter.SourceMethodBuilder: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(Mono.CompilerServices.SymbolWriter.ICompileUnit): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Mono.CompilerServices.SymbolWriter.ICompileUnit, Int32, Mono.CompilerServices.SymbolWriter.IMethodDef): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Mono.CompilerServices.SymbolWriter.CodeBlockEntry[] Blocks 'get ' : 
    Mono.CompilerServices.SymbolWriter.CodeBlockEntry CurrentBlock 'get ' : 
    Mono.CompilerServices.SymbolWriter.LocalVariableEntry[] Locals 'get ' : 
    Mono.CompilerServices.SymbolWriter.ICompileUnit SourceFile 'get ' : 
    Mono.CompilerServices.SymbolWriter.ScopeVariable[] ScopeVariables 'get ' : 
  Methods:
    MarkSequencePoint(Int32, SourceFileEntry, Int32, Int32, Boolean): PrivateScope, Public, HideBySig
    MarkSequencePoint(Int32, SourceFileEntry, Int32, Int32, Int32, Int32, Boolean): PrivateScope, Public, HideBySig
    StartBlock(Type, Int32): PrivateScope, Public, HideBySig
    StartBlock(Type, Int32, Int32): PrivateScope, Public, HideBySig
    EndBlock(Int32): PrivateScope, Public, HideBySig
    get_Blocks(): PrivateScope, Public, HideBySig, SpecialName
    get_CurrentBlock(): PrivateScope, Public, HideBySig, SpecialName
    get_Locals(): PrivateScope, Public, HideBySig, SpecialName
    get_SourceFile(): PrivateScope, Public, HideBySig, SpecialName
    AddLocal(Int32, String): PrivateScope, Public, HideBySig
    get_ScopeVariables(): PrivateScope, Public, HideBySig, SpecialName
    AddScopeVariable(Int32, Int32): PrivateScope, Public, HideBySig
    DefineMethod(MonoSymbolFile): PrivateScope, Public, HideBySig
    DefineMethod(MonoSymbolFile, Int32): PrivateScope, Public, HideBySig
Class Mono.CompilerServices.SymbolWriter.SymbolWriterImpl: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(System.Guid): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Diagnostics.SymbolStore.ISymbolWriter
  Methods:
    Close(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CloseMethod(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CloseNamespace(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CloseScope(Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    DefineDocument(String, Guid, Guid, Guid): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    DefineField(SymbolToken, String, FieldAttributes, Byte[], SymAddressKind, Int32, Int32, Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    DefineGlobalVariable(String, FieldAttributes, Byte[], SymAddressKind, Int32, Int32, Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    DefineLocalVariable(String, FieldAttributes, Byte[], SymAddressKind, Int32, Int32, Int32, Int32, Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    DefineParameter(String, ParameterAttributes, Int32, SymAddressKind, Int32, Int32, Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    DefineSequencePoints(ISymbolDocumentWriter, Int32[], Int32[], Int32[], Int32[], Int32[]): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Initialize(IntPtr, String, Boolean): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    OpenMethod(SymbolToken): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    OpenNamespace(String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    OpenScope(Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    SetMethodSourceRange(ISymbolDocumentWriter, Int32, Int32, ISymbolDocumentWriter, Int32, Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    SetScopeRange(Int32, Int32, Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    SetSymAttribute(SymbolToken, String, Byte[]): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    SetUnderlyingWriter(IntPtr): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    SetUserEntryPoint(SymbolToken): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    UsingNamespace(String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Mono.CompilerServices.SymbolWriter.SymbolDocumentWriterImpl: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(Mono.CompilerServices.SymbolWriter.CompileUnitEntry): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Diagnostics.SymbolStore.ISymbolDocumentWriter
    Mono.CompilerServices.SymbolWriter.ISourceFile
    Mono.CompilerServices.SymbolWriter.ICompileUnit
  Properties:
    Mono.CompilerServices.SymbolWriter.CompileUnitEntry Entry 'get ' : 
  Methods:
    SetCheckSum(Guid, Byte[]): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    SetSource(Byte[]): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_Entry(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
Class Mono.CompilerServices.SymbolWriter.SourceMethodImpl: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(System.String, Int32, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Mono.CompilerServices.SymbolWriter.IMethodDef
  Properties:
    System.String Name 'get ' : 
    Int32 NamespaceID 'get ' : 
    Int32 Token 'get ' : 
  Methods:
    get_Name(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_NamespaceID(): PrivateScope, Public, HideBySig, SpecialName
    get_Token(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
Class Mono.CompilerServices.SymbolWriter.NamespaceInfo: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    System.String Name : Public
    Int32 NamespaceID : Public
    System.Collections.ArrayList UsingClauses : Public
Class Mono.Cecil.Mdb.MdbReaderProvider: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Mono.Cecil.Cil.ISymbolReaderProvider
  Methods:
    GetSymbolReader(ModuleDefinition, String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetSymbolReader(ModuleDefinition, Stream): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Mono.Cecil.Mdb.MdbReader: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
    Void .ctor(Mono.Cecil.ModuleDefinition, Mono.CompilerServices.SymbolWriter.MonoSymbolFile): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Mono.Cecil.Cil.ISymbolReader
    System.IDisposable
  Methods:
    GetWriterProvider(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ProcessDebugHeader(ImageDebugHeader): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Read(MethodDefinition): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Mono.Cecil.Mdb.MethodEntryExtensions: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Methods:
    HasColumnInfo(MethodEntry): PrivateScope, Public, Static, HideBySig
    HasEndInfo(MethodEntry): PrivateScope, Public, Static, HideBySig
Class Mono.Cecil.Mdb.MdbWriterProvider: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Mono.Cecil.Cil.ISymbolWriterProvider
  Methods:
    GetSymbolWriter(ModuleDefinition, String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetSymbolWriter(ModuleDefinition, Stream): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Mono.Cecil.Mdb.MdbWriter: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
    Void .ctor(Mono.Cecil.ModuleDefinition, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Mono.Cecil.Cil.ISymbolWriter
    System.IDisposable
  Methods:
    GetReaderProvider(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Write(MethodDebugInformation): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetDebugHeader(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Write(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Interface Mono.Cecil.Pdb.ISymUnmanagedDocumentWriter: AutoLayout, AnsiClass, Class, ClassSemanticsMask, Abstract, Import
  Methods:
    SetSource(UInt32, Byte[](HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SetCheckSum(Guid, UInt32, Byte[](HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Interface Mono.Cecil.Pdb.ISymUnmanagedWriter2: AutoLayout, AnsiClass, Class, ClassSemanticsMask, Abstract, Import
  Methods:
    DefineDocument(String(In, HasFieldMarshal), Guid&(In), Guid&(In), Guid&(In), ISymUnmanagedDocumentWriter&(Out, HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SetUserEntryPoint(Int32(In)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    OpenMethod(Int32(In)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    CloseMethod(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    OpenScope(Int32(In), Int32&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    CloseScope(Int32(In)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SetScopeRange_Placeholder(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    DefineLocalVariable_Placeholder(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    DefineParameter_Placeholder(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    DefineField_Placeholder(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    DefineGlobalVariable_Placeholder(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Close(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SetSymAttribute(UInt32, String, UInt32, IntPtr): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    OpenNamespace(String(In, HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    CloseNamespace(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    UsingNamespace(String(In, HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SetMethodSourceRange_Placeholder(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Initialize(Object(In, HasFieldMarshal), String(In, HasFieldMarshal), IStream(In), Boolean(In)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetDebugInfo(ImageDebugDirectory&(Out), Int32(In), Int32&(Out), Byte[](In, Out, HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    DefineSequencePoints(ISymUnmanagedDocumentWriter(In, HasFieldMarshal), Int32(In), Int32[](In, HasFieldMarshal), Int32[](In, HasFieldMarshal), Int32[](In, HasFieldMarshal), Int32[](In, HasFieldMarshal), Int32[](In, HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    RemapToken_Placeholder(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Initialize2_Placeholder(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    DefineConstant_Placeholder(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Abort_Placeholder(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    DefineLocalVariable2(String(In, HasFieldMarshal), Int32(In), Int32(In), Int32(In), Int32(In), Int32(In), Int32(In), Int32(In), Int32(In)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    DefineGlobalVariable2_Placeholder(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    DefineConstant2(String(In, HasFieldMarshal), Object(In, HasFieldMarshal), Int32(In)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Interface Mono.Cecil.Pdb.IMetaDataEmit: AutoLayout, AnsiClass, Class, ClassSemanticsMask, Abstract, Import
  Methods:
    SetModuleProps(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Save(String, UInt32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SaveToStream(IntPtr, UInt32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetSaveSize(UInt32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    DefineTypeDef(IntPtr, UInt32, UInt32, IntPtr): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    DefineNestedType(IntPtr, UInt32, UInt32, IntPtr, UInt32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SetHandler(Object(In, HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    DefineMethod(UInt32, IntPtr, UInt32, IntPtr, UInt32, UInt32, UInt32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    DefineMethodImpl(UInt32, UInt32, UInt32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    DefineTypeRefByName(UInt32, IntPtr): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    DefineImportType(IntPtr, IntPtr, UInt32, IMetaDataImport, UInt32, IntPtr): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    DefineMemberRef(UInt32, String, IntPtr, UInt32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    DefineImportMember(IntPtr, IntPtr, UInt32, IMetaDataImport, UInt32, IntPtr, UInt32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    DefineEvent(UInt32, String, UInt32, UInt32, UInt32, UInt32, UInt32, IntPtr): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SetClassLayout(UInt32, UInt32, IntPtr, UInt32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    DeleteClassLayout(UInt32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SetFieldMarshal(UInt32, IntPtr, UInt32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    DeleteFieldMarshal(UInt32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    DefinePermissionSet(UInt32, UInt32, IntPtr, UInt32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SetRVA(UInt32, UInt32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetTokenFromSig(IntPtr, UInt32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    DefineModuleRef(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SetParent(UInt32, UInt32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetTokenFromTypeSpec(IntPtr, UInt32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SaveToMemory(IntPtr, UInt32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    DefineUserString(String, UInt32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    DeleteToken(UInt32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SetMethodProps(UInt32, UInt32, UInt32, UInt32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SetTypeDefProps(UInt32, UInt32, UInt32, IntPtr): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SetEventProps(UInt32, UInt32, UInt32, UInt32, UInt32, UInt32, IntPtr): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SetPermissionSetProps(UInt32, UInt32, IntPtr, UInt32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    DefinePinvokeMap(UInt32, UInt32, String, UInt32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SetPinvokeMap(UInt32, UInt32, String, UInt32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    DeletePinvokeMap(UInt32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    DefineCustomAttribute(UInt32, UInt32, IntPtr, UInt32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SetCustomAttributeValue(UInt32, IntPtr, UInt32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    DefineField(UInt32, String, UInt32, IntPtr, UInt32, UInt32, IntPtr, UInt32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    DefineProperty(UInt32, String, UInt32, IntPtr, UInt32, UInt32, IntPtr, UInt32, UInt32, UInt32, IntPtr): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    DefineParam(UInt32, UInt32, String, UInt32, UInt32, IntPtr, UInt32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SetFieldProps(UInt32, UInt32, UInt32, IntPtr, UInt32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SetPropertyProps(UInt32, UInt32, UInt32, IntPtr, UInt32, UInt32, UInt32, IntPtr): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SetParamProps(UInt32, String, UInt32, UInt32, IntPtr, UInt32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    DefineSecurityAttributeSet(UInt32, IntPtr, UInt32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    ApplyEditAndContinue(Object(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    TranslateSigWithScope(IntPtr, IntPtr, UInt32, IMetaDataImport, IntPtr, UInt32, IntPtr, IMetaDataEmit, IntPtr, UInt32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SetMethodImplFlags(UInt32, UInt32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SetFieldRVA(UInt32, UInt32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Merge(IMetaDataImport, IntPtr, Object(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    MergeEnd(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Interface Mono.Cecil.Pdb.IMetaDataImport: AutoLayout, AnsiClass, Class, ClassSemanticsMask, Abstract, Import
  Methods:
    CloseEnum(UInt32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    CountEnum(UInt32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    ResetEnum(UInt32, UInt32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    EnumTypeDefs(UInt32&, UInt32[](HasFieldMarshal), UInt32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    EnumInterfaceImpls(UInt32&, UInt32, UInt32[](HasFieldMarshal), UInt32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    EnumTypeRefs(UInt32&, UInt32[](HasFieldMarshal), UInt32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    FindTypeDefByName(String, UInt32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetScopeProps(StringBuilder, UInt32, UInt32&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetModuleFromScope(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetTypeDefProps(UInt32, Char*, UInt32, UInt32*, UInt32*, UInt32*): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetInterfaceImplProps(UInt32, UInt32&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetTypeRefProps(UInt32, UInt32&(Out), StringBuilder, UInt32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    ResolveTypeRef(UInt32, Guid&(In), Object&(Out, HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    EnumMembers(UInt32&, UInt32, UInt32[](HasFieldMarshal), UInt32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    EnumMembersWithName(UInt32&, UInt32, String, UInt32[](HasFieldMarshal), UInt32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    EnumMethods(UInt32&, UInt32, IntPtr, UInt32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    EnumMethodsWithName(UInt32&, UInt32, String, UInt32[](HasFieldMarshal), UInt32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    EnumFields(UInt32&, UInt32, IntPtr, UInt32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    EnumFieldsWithName(UInt32&, UInt32, String, UInt32[](HasFieldMarshal), UInt32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    EnumParams(UInt32&, UInt32, UInt32[](HasFieldMarshal), UInt32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    EnumMemberRefs(UInt32&, UInt32, UInt32[](HasFieldMarshal), UInt32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    EnumMethodImpls(UInt32&, UInt32, UInt32[](HasFieldMarshal), UInt32[](HasFieldMarshal), UInt32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    EnumPermissionSets(UInt32&, UInt32, UInt32, UInt32[](HasFieldMarshal), UInt32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    FindMember(UInt32, String, Byte[](HasFieldMarshal), UInt32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    FindMethod(UInt32, String, Byte[](HasFieldMarshal), UInt32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    FindField(UInt32, String, Byte[](HasFieldMarshal), UInt32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    FindMemberRef(UInt32, String, Byte[](HasFieldMarshal), UInt32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetMethodProps(UInt32, UInt32*, Char*, UInt32, UInt32*, UInt32*, IntPtr, IntPtr, UInt32*, UInt32*): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetMemberRefProps(UInt32, UInt32&, StringBuilder, UInt32, UInt32&(Out), IntPtr&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    EnumProperties(UInt32&, UInt32, IntPtr, UInt32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    EnumEvents(UInt32&, UInt32, IntPtr, UInt32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetEventProps(UInt32, UInt32&(Out), StringBuilder, UInt32, UInt32&(Out), UInt32&(Out), UInt32&(Out), UInt32&(Out), UInt32&(Out), UInt32&(Out), UInt32[](HasFieldMarshal), UInt32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    EnumMethodSemantics(UInt32&, UInt32, UInt32[](HasFieldMarshal), UInt32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetMethodSemantics(UInt32, UInt32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetClassLayout(UInt32, UInt32&(Out), IntPtr(HasFieldMarshal), UInt32, UInt32&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetFieldMarshal(UInt32, IntPtr&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetRVA(UInt32, UInt32&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetPermissionSetProps(UInt32, UInt32&(Out), IntPtr&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetSigFromToken(UInt32, IntPtr&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetModuleRefProps(UInt32, StringBuilder, UInt32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    EnumModuleRefs(UInt32&, UInt32[](HasFieldMarshal), UInt32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetTypeSpecFromToken(UInt32, IntPtr&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetNameFromToken(UInt32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    EnumUnresolvedMethods(UInt32&, UInt32[](HasFieldMarshal), UInt32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetUserString(UInt32, StringBuilder, UInt32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetPinvokeMap(UInt32, UInt32&(Out), StringBuilder, UInt32, UInt32&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    EnumSignatures(UInt32&, UInt32[](HasFieldMarshal), UInt32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    EnumTypeSpecs(UInt32&, UInt32[](HasFieldMarshal), UInt32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    EnumUserStrings(UInt32&, UInt32[](HasFieldMarshal), UInt32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetParamForMethodIndex(UInt32, UInt32, UInt32&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    EnumCustomAttributes(UInt32&, UInt32, UInt32, UInt32[](HasFieldMarshal), UInt32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetCustomAttributeProps(UInt32, UInt32&(Out), UInt32&(Out), IntPtr&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    FindTypeRef(UInt32, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetMemberProps(UInt32, UInt32&(Out), StringBuilder, UInt32, UInt32&(Out), UInt32&(Out), IntPtr&(Out), UInt32&(Out), UInt32&(Out), UInt32&(Out), UInt32&(Out), IntPtr&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetFieldProps(UInt32, UInt32&(Out), StringBuilder, UInt32, UInt32&(Out), UInt32&(Out), IntPtr&(Out), UInt32&(Out), UInt32&(Out), IntPtr&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetPropertyProps(UInt32, UInt32&(Out), StringBuilder, UInt32, UInt32&(Out), UInt32&(Out), IntPtr&(Out), UInt32&(Out), UInt32&(Out), IntPtr&(Out), UInt32&(Out), UInt32&(Out), UInt32&(Out), UInt32[](HasFieldMarshal), UInt32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetParamProps(UInt32, UInt32&(Out), UInt32&(Out), StringBuilder, UInt32, UInt32&(Out), UInt32&(Out), UInt32&(Out), IntPtr&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetCustomAttributeByName(UInt32, String, IntPtr&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    IsValidToken(UInt32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetNestedClassProps(UInt32, UInt32*): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetNativeCallConvFromSig(IntPtr, UInt32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    IsGlobal(UInt32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class Mono.Cecil.Pdb.ModuleMetadata: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(Mono.Cecil.ModuleDefinition): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Mono.Cecil.Pdb.IMetaDataEmit
    Mono.Cecil.Pdb.IMetaDataImport
  Methods:
    SetModuleProps(String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Save(String, UInt32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    SaveToStream(IntPtr, UInt32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetSaveSize(UInt32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    DefineTypeDef(IntPtr, UInt32, UInt32, IntPtr): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    DefineNestedType(IntPtr, UInt32, UInt32, IntPtr, UInt32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    SetHandler(Object): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    DefineMethod(UInt32, IntPtr, UInt32, IntPtr, UInt32, UInt32, UInt32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    DefineMethodImpl(UInt32, UInt32, UInt32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    DefineTypeRefByName(UInt32, IntPtr): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    DefineImportType(IntPtr, IntPtr, UInt32, IMetaDataImport, UInt32, IntPtr): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    DefineMemberRef(UInt32, String, IntPtr, UInt32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    DefineImportMember(IntPtr, IntPtr, UInt32, IMetaDataImport, UInt32, IntPtr, UInt32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    DefineEvent(UInt32, String, UInt32, UInt32, UInt32, UInt32, UInt32, IntPtr): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    SetClassLayout(UInt32, UInt32, IntPtr, UInt32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    DeleteClassLayout(UInt32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    SetFieldMarshal(UInt32, IntPtr, UInt32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    DeleteFieldMarshal(UInt32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    DefinePermissionSet(UInt32, UInt32, IntPtr, UInt32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    SetRVA(UInt32, UInt32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetTokenFromSig(IntPtr, UInt32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    DefineModuleRef(String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    SetParent(UInt32, UInt32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetTokenFromTypeSpec(IntPtr, UInt32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    SaveToMemory(IntPtr, UInt32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    DefineUserString(String, UInt32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    DeleteToken(UInt32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    SetMethodProps(UInt32, UInt32, UInt32, UInt32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    SetTypeDefProps(UInt32, UInt32, UInt32, IntPtr): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    SetEventProps(UInt32, UInt32, UInt32, UInt32, UInt32, UInt32, IntPtr): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    SetPermissionSetProps(UInt32, UInt32, IntPtr, UInt32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    DefinePinvokeMap(UInt32, UInt32, String, UInt32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    SetPinvokeMap(UInt32, UInt32, String, UInt32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    DeletePinvokeMap(UInt32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    DefineCustomAttribute(UInt32, UInt32, IntPtr, UInt32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    SetCustomAttributeValue(UInt32, IntPtr, UInt32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    DefineField(UInt32, String, UInt32, IntPtr, UInt32, UInt32, IntPtr, UInt32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    DefineProperty(UInt32, String, UInt32, IntPtr, UInt32, UInt32, IntPtr, UInt32, UInt32, UInt32, IntPtr): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    DefineParam(UInt32, UInt32, String, UInt32, UInt32, IntPtr, UInt32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    SetFieldProps(UInt32, UInt32, UInt32, IntPtr, UInt32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    SetPropertyProps(UInt32, UInt32, UInt32, IntPtr, UInt32, UInt32, UInt32, IntPtr): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    SetParamProps(UInt32, String, UInt32, UInt32, IntPtr, UInt32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    DefineSecurityAttributeSet(UInt32, IntPtr, UInt32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ApplyEditAndContinue(Object): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    TranslateSigWithScope(IntPtr, IntPtr, UInt32, IMetaDataImport, IntPtr, UInt32, IntPtr, IMetaDataEmit, IntPtr, UInt32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    SetMethodImplFlags(UInt32, UInt32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    SetFieldRVA(UInt32, UInt32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Merge(IMetaDataImport, IntPtr, Object): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    MergeEnd(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CloseEnum(UInt32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CountEnum(UInt32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ResetEnum(UInt32, UInt32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    EnumTypeDefs(UInt32&, UInt32[], UInt32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    EnumInterfaceImpls(UInt32&, UInt32, UInt32[], UInt32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    EnumTypeRefs(UInt32&, UInt32[], UInt32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    FindTypeDefByName(String, UInt32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetScopeProps(StringBuilder, UInt32, UInt32&(Out)): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetModuleFromScope(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetTypeDefProps(UInt32, Char*, UInt32, UInt32*, UInt32*, UInt32*): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetInterfaceImplProps(UInt32, UInt32&(Out)): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetTypeRefProps(UInt32, UInt32&(Out), StringBuilder, UInt32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ResolveTypeRef(UInt32, Guid&, Object&(Out)): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    EnumMembers(UInt32&, UInt32, UInt32[], UInt32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    EnumMembersWithName(UInt32&, UInt32, String, UInt32[], UInt32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    EnumMethods(UInt32&, UInt32, IntPtr, UInt32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    EnumMethodsWithName(UInt32&, UInt32, String, UInt32[], UInt32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    EnumFields(UInt32&, UInt32, IntPtr, UInt32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    EnumFieldsWithName(UInt32&, UInt32, String, UInt32[], UInt32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    EnumParams(UInt32&, UInt32, UInt32[], UInt32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    EnumMemberRefs(UInt32&, UInt32, UInt32[], UInt32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    EnumMethodImpls(UInt32&, UInt32, UInt32[], UInt32[], UInt32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    EnumPermissionSets(UInt32&, UInt32, UInt32, UInt32[], UInt32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    FindMember(UInt32, String, Byte[], UInt32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    FindMethod(UInt32, String, Byte[], UInt32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    FindField(UInt32, String, Byte[], UInt32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    FindMemberRef(UInt32, String, Byte[], UInt32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetMethodProps(UInt32, UInt32*, Char*, UInt32, UInt32*, UInt32*, IntPtr, IntPtr, UInt32*, UInt32*): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetMemberRefProps(UInt32, UInt32&, StringBuilder, UInt32, UInt32&(Out), IntPtr&(Out)): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    EnumProperties(UInt32&, UInt32, IntPtr, UInt32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    EnumEvents(UInt32&, UInt32, IntPtr, UInt32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetEventProps(UInt32, UInt32&(Out), StringBuilder, UInt32, UInt32&(Out), UInt32&(Out), UInt32&(Out), UInt32&(Out), UInt32&(Out), UInt32&(Out), UInt32[], UInt32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    EnumMethodSemantics(UInt32&, UInt32, UInt32[], UInt32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetMethodSemantics(UInt32, UInt32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetClassLayout(UInt32, UInt32&(Out), IntPtr, UInt32, UInt32&(Out)): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetFieldMarshal(UInt32, IntPtr&(Out)): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetRVA(UInt32, UInt32&(Out)): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetPermissionSetProps(UInt32, UInt32&(Out), IntPtr&(Out)): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetSigFromToken(UInt32, IntPtr&(Out)): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetModuleRefProps(UInt32, StringBuilder, UInt32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    EnumModuleRefs(UInt32&, UInt32[], UInt32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetTypeSpecFromToken(UInt32, IntPtr&(Out)): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetNameFromToken(UInt32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    EnumUnresolvedMethods(UInt32&, UInt32[], UInt32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetUserString(UInt32, StringBuilder, UInt32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetPinvokeMap(UInt32, UInt32&(Out), StringBuilder, UInt32, UInt32&(Out)): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    EnumSignatures(UInt32&, UInt32[], UInt32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    EnumTypeSpecs(UInt32&, UInt32[], UInt32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    EnumUserStrings(UInt32&, UInt32[], UInt32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetParamForMethodIndex(UInt32, UInt32, UInt32&(Out)): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    EnumCustomAttributes(UInt32&, UInt32, UInt32, UInt32[], UInt32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetCustomAttributeProps(UInt32, UInt32&(Out), UInt32&(Out), IntPtr&(Out)): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    FindTypeRef(UInt32, String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetMemberProps(UInt32, UInt32&(Out), StringBuilder, UInt32, UInt32&(Out), UInt32&(Out), IntPtr&(Out), UInt32&(Out), UInt32&(Out), UInt32&(Out), UInt32&(Out), IntPtr&(Out)): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetFieldProps(UInt32, UInt32&(Out), StringBuilder, UInt32, UInt32&(Out), UInt32&(Out), IntPtr&(Out), UInt32&(Out), UInt32&(Out), IntPtr&(Out)): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetPropertyProps(UInt32, UInt32&(Out), StringBuilder, UInt32, UInt32&(Out), UInt32&(Out), IntPtr&(Out), UInt32&(Out), UInt32&(Out), IntPtr&(Out), UInt32&(Out), UInt32&(Out), UInt32&(Out), UInt32[], UInt32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetParamProps(UInt32, UInt32&(Out), UInt32&(Out), StringBuilder, UInt32, UInt32&(Out), UInt32&(Out), UInt32&(Out), IntPtr&(Out)): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetCustomAttributeByName(UInt32, String, IntPtr&(Out)): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    IsValidToken(UInt32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetNestedClassProps(UInt32, UInt32*): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetNativeCallConvFromSig(IntPtr, UInt32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    IsGlobal(UInt32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Mono.Cecil.Pdb.NativePdbReader: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(Mono.Disposable`1[System.IO.Stream]): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Mono.Cecil.Cil.ISymbolReader
    System.IDisposable
  Methods:
    GetWriterProvider(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ProcessDebugHeader(ImageDebugHeader): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Read(MethodDefinition): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Mono.Cecil.Pdb.NativePdbWriter: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(Mono.Cecil.ModuleDefinition, Mono.Cecil.Pdb.SymWriter): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Mono.Cecil.Cil.ISymbolWriter
    System.IDisposable
  Methods:
    GetReaderProvider(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetDebugHeader(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Write(MethodDebugInformation): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Write(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Struct Mono.Cecil.Pdb.CustomMetadataType: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Byte value__ : Public, SpecialName, RTSpecialName
    Mono.Cecil.Pdb.CustomMetadataType UsingInfo = 0 : Public, Static, Literal, HasDefault
    Mono.Cecil.Pdb.CustomMetadataType ForwardInfo = 1 : Public, Static, Literal, HasDefault
    Mono.Cecil.Pdb.CustomMetadataType IteratorScopes = 3 : Public, Static, Literal, HasDefault
    Mono.Cecil.Pdb.CustomMetadataType ForwardIterator = 4 : Public, Static, Literal, HasDefault
Class Mono.Cecil.Pdb.CustomMetadataWriter: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(Mono.Cecil.Pdb.SymWriter): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Methods:
    WriteUsingInfo(ImportDebugInformation): PrivateScope, Public, HideBySig
    WriteForwardInfo(MetadataToken): PrivateScope, Public, HideBySig
    WriteIteratorScopes(StateMachineScopeDebugInformation, MethodDebugInformation): PrivateScope, Public, HideBySig
    WriteForwardIterator(TypeReference): PrivateScope, Public, HideBySig
    WriteCustomMetadata(): PrivateScope, Public, HideBySig
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Mono.Cecil.Pdb.NativePdbReaderProvider: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Mono.Cecil.Cil.ISymbolReaderProvider
  Methods:
    GetSymbolReader(ModuleDefinition, String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetSymbolReader(ModuleDefinition, Stream): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Mono.Cecil.Pdb.PdbReaderProvider: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Mono.Cecil.Cil.ISymbolReaderProvider
  Methods:
    GetSymbolReader(ModuleDefinition, String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetSymbolReader(ModuleDefinition, Stream): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Mono.Cecil.Pdb.NativePdbWriterProvider: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Mono.Cecil.Cil.ISymbolWriterProvider
  Methods:
    GetSymbolWriter(ModuleDefinition, String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetSymbolWriter(ModuleDefinition, Stream): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Mono.Cecil.Pdb.PdbWriterProvider: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Mono.Cecil.Cil.ISymbolWriterProvider
  Methods:
    GetSymbolWriter(ModuleDefinition, String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetSymbolWriter(ModuleDefinition, Stream): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Mono.Cecil.Pdb.SymDocumentWriter: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(Mono.Cecil.Pdb.ISymUnmanagedDocumentWriter): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Mono.Cecil.Pdb.ISymUnmanagedDocumentWriter Writer 'get ' : 
  Methods:
    get_Writer(): PrivateScope, Public, HideBySig, SpecialName
    SetSource(Byte[]): PrivateScope, Public, HideBySig
    SetCheckSum(Guid, Byte[]): PrivateScope, Public, HideBySig
Class Mono.Cecil.Pdb.SymWriter: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    GetDebugInfo(ImageDebugDirectory&(Out)): PrivateScope, Public, HideBySig
    DefineLocalVariable2(String, VariableAttributes, Int32, Int32, Int32, Int32, Int32, Int32): PrivateScope, Public, HideBySig
    DefineConstant2(String, Object, Int32): PrivateScope, Public, HideBySig
    Close(): PrivateScope, Public, HideBySig
    CloseMethod(): PrivateScope, Public, HideBySig
    CloseNamespace(): PrivateScope, Public, HideBySig
    CloseScope(Int32): PrivateScope, Public, HideBySig
    DefineDocument(String, Guid, Guid, Guid): PrivateScope, Public, HideBySig
    DefineSequencePoints(SymDocumentWriter, Int32[], Int32[], Int32[], Int32[], Int32[]): PrivateScope, Public, HideBySig
    Initialize(Object, String, Boolean): PrivateScope, Public, HideBySig
    SetUserEntryPoint(Int32): PrivateScope, Public, HideBySig
    OpenMethod(Int32): PrivateScope, Public, HideBySig
    OpenNamespace(String): PrivateScope, Public, HideBySig
    OpenScope(Int32): PrivateScope, Public, HideBySig
    UsingNamespace(String): PrivateScope, Public, HideBySig
    DefineCustomMetadata(String, Byte[]): PrivateScope, Public, HideBySig
Class Microsoft.Cci.Pdb.BitAccess: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(Int32): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Byte[]): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    Byte[] Buffer 'get ' : 
    Int32 Position 'get set' : 
  Methods:
    get_Buffer(): PrivateScope, Assembly, HideBySig, SpecialName
    FillBuffer(Stream, Int32): PrivateScope, Assembly, HideBySig
    Append(Stream, Int32): PrivateScope, Assembly, HideBySig
    get_Position(): PrivateScope, Assembly, HideBySig, SpecialName
    set_Position(Int32): PrivateScope, Assembly, HideBySig, SpecialName
    MinCapacity(Int32): PrivateScope, Assembly, HideBySig
    Align(Int32): PrivateScope, Assembly, HideBySig
    ReadInt16(Int16&(Out)): PrivateScope, Assembly, HideBySig
    ReadInt8(SByte&(Out)): PrivateScope, Assembly, HideBySig
    ReadInt32(Int32&(Out)): PrivateScope, Assembly, HideBySig
    ReadInt64(Int64&(Out)): PrivateScope, Assembly, HideBySig
    ReadUInt16(UInt16&(Out)): PrivateScope, Assembly, HideBySig
    ReadUInt8(Byte&(Out)): PrivateScope, Assembly, HideBySig
    ReadUInt32(UInt32&(Out)): PrivateScope, Assembly, HideBySig
    ReadUInt64(UInt64&(Out)): PrivateScope, Assembly, HideBySig
    ReadInt32(Int32[]): PrivateScope, Assembly, HideBySig
    ReadUInt32(UInt32[]): PrivateScope, Assembly, HideBySig
    ReadBytes(Byte[]): PrivateScope, Assembly, HideBySig
    ReadFloat(): PrivateScope, Assembly, HideBySig
    ReadDouble(): PrivateScope, Assembly, HideBySig
    ReadDecimal(): PrivateScope, Assembly, HideBySig
    ReadBString(String&(Out)): PrivateScope, Assembly, HideBySig
    ReadBString(Int32): PrivateScope, Assembly, HideBySig
    ReadCString(String&(Out)): PrivateScope, Assembly, HideBySig
    SkipCString(String&(Out)): PrivateScope, Assembly, HideBySig
    ReadGuid(Guid&(Out)): PrivateScope, Assembly, HideBySig
    ReadString(): PrivateScope, Assembly, HideBySig
Struct Microsoft.Cci.Pdb.BitSet: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Microsoft.Cci.Pdb.BitAccess): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean IsEmpty 'get ' : 
  Methods:
    IsSet(Int32): PrivateScope, Assembly, HideBySig
    get_IsEmpty(): PrivateScope, Assembly, HideBySig, SpecialName
Struct Microsoft.Cci.Pdb.FLOAT10: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    Byte Data_0 : Assembly
    Byte Data_1 : Assembly
    Byte Data_2 : Assembly
    Byte Data_3 : Assembly
    Byte Data_4 : Assembly
    Byte Data_5 : Assembly
    Byte Data_6 : Assembly
    Byte Data_7 : Assembly
    Byte Data_8 : Assembly
    Byte Data_9 : Assembly
Struct Microsoft.Cci.Pdb.CV_SIGNATURE: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Microsoft.Cci.Pdb.CV_SIGNATURE C6 = 0 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.CV_SIGNATURE C7 = 1 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.CV_SIGNATURE C11 = 2 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.CV_SIGNATURE C13 = 4 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.CV_SIGNATURE RESERVERD = 5 : Public, Static, Literal, HasDefault
Struct Microsoft.Cci.Pdb.CV_prmode: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Microsoft.Cci.Pdb.CV_prmode CV_TM_DIRECT = 0 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.CV_prmode CV_TM_NPTR32 = 4 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.CV_prmode CV_TM_NPTR64 = 6 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.CV_prmode CV_TM_NPTR128 = 7 : Public, Static, Literal, HasDefault
Struct Microsoft.Cci.Pdb.CV_type: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Microsoft.Cci.Pdb.CV_type CV_SPECIAL = 0 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.CV_type CV_SIGNED = 1 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.CV_type CV_UNSIGNED = 2 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.CV_type CV_BOOLEAN = 3 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.CV_type CV_REAL = 4 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.CV_type CV_COMPLEX = 5 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.CV_type CV_SPECIAL2 = 6 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.CV_type CV_INT = 7 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.CV_type CV_CVRESERVED = 15 : Public, Static, Literal, HasDefault
Struct Microsoft.Cci.Pdb.CV_special: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Microsoft.Cci.Pdb.CV_special CV_SP_NOTYPE = 0 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.CV_special CV_SP_ABS = 1 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.CV_special CV_SP_SEGMENT = 2 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.CV_special CV_SP_VOID = 3 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.CV_special CV_SP_CURRENCY = 4 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.CV_special CV_SP_NBASICSTR = 5 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.CV_special CV_SP_FBASICSTR = 6 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.CV_special CV_SP_NOTTRANS = 7 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.CV_special CV_SP_HRESULT = 8 : Public, Static, Literal, HasDefault
Struct Microsoft.Cci.Pdb.CV_special2: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Microsoft.Cci.Pdb.CV_special2 CV_S2_BIT = 0 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.CV_special2 CV_S2_PASCHAR = 1 : Public, Static, Literal, HasDefault
Struct Microsoft.Cci.Pdb.CV_integral: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Microsoft.Cci.Pdb.CV_integral CV_IN_1BYTE = 0 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.CV_integral CV_IN_2BYTE = 1 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.CV_integral CV_IN_4BYTE = 2 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.CV_integral CV_IN_8BYTE = 3 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.CV_integral CV_IN_16BYTE = 4 : Public, Static, Literal, HasDefault
Struct Microsoft.Cci.Pdb.CV_real: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Microsoft.Cci.Pdb.CV_real CV_RC_REAL32 = 0 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.CV_real CV_RC_REAL64 = 1 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.CV_real CV_RC_REAL80 = 2 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.CV_real CV_RC_REAL128 = 3 : Public, Static, Literal, HasDefault
Struct Microsoft.Cci.Pdb.CV_int: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Microsoft.Cci.Pdb.CV_int CV_RI_CHAR = 0 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.CV_int CV_RI_INT1 = 0 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.CV_int CV_RI_WCHAR = 1 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.CV_int CV_RI_UINT1 = 1 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.CV_int CV_RI_INT2 = 2 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.CV_int CV_RI_UINT2 = 3 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.CV_int CV_RI_INT4 = 4 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.CV_int CV_RI_UINT4 = 5 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.CV_int CV_RI_INT8 = 6 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.CV_int CV_RI_UINT8 = 7 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.CV_int CV_RI_INT16 = 8 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.CV_int CV_RI_UINT16 = 9 : Public, Static, Literal, HasDefault
Struct Microsoft.Cci.Pdb.CV_PRIMITIVE_TYPE: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
Struct Microsoft.Cci.Pdb.TYPE_ENUM: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Microsoft.Cci.Pdb.TYPE_ENUM T_NOTYPE = 0 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.TYPE_ENUM T_ABS = 1 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.TYPE_ENUM T_SEGMENT = 2 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.TYPE_ENUM T_VOID = 3 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.TYPE_ENUM T_HRESULT = 8 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.TYPE_ENUM T_32PHRESULT = 1032 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.TYPE_ENUM T_64PHRESULT = 1544 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.TYPE_ENUM T_PVOID = 259 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.TYPE_ENUM T_PFVOID = 515 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.TYPE_ENUM T_PHVOID = 771 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.TYPE_ENUM T_32PVOID = 1027 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.TYPE_ENUM T_64PVOID = 1539 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.TYPE_ENUM T_CURRENCY = 4 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.TYPE_ENUM T_NOTTRANS = 7 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.TYPE_ENUM T_BIT = 96 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.TYPE_ENUM T_PASCHAR = 97 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.TYPE_ENUM T_CHAR = 16 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.TYPE_ENUM T_32PCHAR = 1040 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.TYPE_ENUM T_64PCHAR = 1552 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.TYPE_ENUM T_UCHAR = 32 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.TYPE_ENUM T_32PUCHAR = 1056 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.TYPE_ENUM T_64PUCHAR = 1568 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.TYPE_ENUM T_RCHAR = 112 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.TYPE_ENUM T_32PRCHAR = 1136 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.TYPE_ENUM T_64PRCHAR = 1648 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.TYPE_ENUM T_WCHAR = 113 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.TYPE_ENUM T_32PWCHAR = 1137 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.TYPE_ENUM T_64PWCHAR = 1649 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.TYPE_ENUM T_INT1 = 104 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.TYPE_ENUM T_32PINT1 = 1128 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.TYPE_ENUM T_64PINT1 = 1640 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.TYPE_ENUM T_UINT1 = 105 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.TYPE_ENUM T_32PUINT1 = 1129 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.TYPE_ENUM T_64PUINT1 = 1641 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.TYPE_ENUM T_SHORT = 17 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.TYPE_ENUM T_32PSHORT = 1041 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.TYPE_ENUM T_64PSHORT = 1553 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.TYPE_ENUM T_USHORT = 33 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.TYPE_ENUM T_32PUSHORT = 1057 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.TYPE_ENUM T_64PUSHORT = 1569 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.TYPE_ENUM T_INT2 = 114 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.TYPE_ENUM T_32PINT2 = 1138 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.TYPE_ENUM T_64PINT2 = 1650 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.TYPE_ENUM T_UINT2 = 115 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.TYPE_ENUM T_32PUINT2 = 1139 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.TYPE_ENUM T_64PUINT2 = 1651 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.TYPE_ENUM T_LONG = 18 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.TYPE_ENUM T_ULONG = 34 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.TYPE_ENUM T_32PLONG = 1042 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.TYPE_ENUM T_32PULONG = 1058 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.TYPE_ENUM T_64PLONG = 1554 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.TYPE_ENUM T_64PULONG = 1570 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.TYPE_ENUM T_INT4 = 116 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.TYPE_ENUM T_32PINT4 = 1140 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.TYPE_ENUM T_64PINT4 = 1652 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.TYPE_ENUM T_UINT4 = 117 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.TYPE_ENUM T_32PUINT4 = 1141 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.TYPE_ENUM T_64PUINT4 = 1653 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.TYPE_ENUM T_QUAD = 19 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.TYPE_ENUM T_32PQUAD = 1043 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.TYPE_ENUM T_64PQUAD = 1555 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.TYPE_ENUM T_UQUAD = 35 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.TYPE_ENUM T_32PUQUAD = 1059 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.TYPE_ENUM T_64PUQUAD = 1571 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.TYPE_ENUM T_INT8 = 118 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.TYPE_ENUM T_32PINT8 = 1142 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.TYPE_ENUM T_64PINT8 = 1654 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.TYPE_ENUM T_UINT8 = 119 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.TYPE_ENUM T_32PUINT8 = 1143 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.TYPE_ENUM T_64PUINT8 = 1655 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.TYPE_ENUM T_OCT = 20 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.TYPE_ENUM T_32POCT = 1044 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.TYPE_ENUM T_64POCT = 1556 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.TYPE_ENUM T_UOCT = 36 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.TYPE_ENUM T_32PUOCT = 1060 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.TYPE_ENUM T_64PUOCT = 1572 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.TYPE_ENUM T_INT16 = 120 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.TYPE_ENUM T_32PINT16 = 1144 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.TYPE_ENUM T_64PINT16 = 1656 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.TYPE_ENUM T_UINT16 = 121 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.TYPE_ENUM T_32PUINT16 = 1145 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.TYPE_ENUM T_64PUINT16 = 1657 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.TYPE_ENUM T_REAL32 = 64 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.TYPE_ENUM T_32PREAL32 = 1088 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.TYPE_ENUM T_64PREAL32 = 1600 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.TYPE_ENUM T_REAL64 = 65 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.TYPE_ENUM T_32PREAL64 = 1089 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.TYPE_ENUM T_64PREAL64 = 1601 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.TYPE_ENUM T_REAL80 = 66 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.TYPE_ENUM T_32PREAL80 = 1090 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.TYPE_ENUM T_64PREAL80 = 1602 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.TYPE_ENUM T_REAL128 = 67 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.TYPE_ENUM T_32PREAL128 = 1091 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.TYPE_ENUM T_64PREAL128 = 1603 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.TYPE_ENUM T_CPLX32 = 80 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.TYPE_ENUM T_32PCPLX32 = 1104 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.TYPE_ENUM T_64PCPLX32 = 1616 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.TYPE_ENUM T_CPLX64 = 81 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.TYPE_ENUM T_32PCPLX64 = 1105 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.TYPE_ENUM T_64PCPLX64 = 1617 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.TYPE_ENUM T_CPLX80 = 82 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.TYPE_ENUM T_32PCPLX80 = 1106 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.TYPE_ENUM T_64PCPLX80 = 1618 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.TYPE_ENUM T_CPLX128 = 83 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.TYPE_ENUM T_32PCPLX128 = 1107 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.TYPE_ENUM T_64PCPLX128 = 1619 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.TYPE_ENUM T_BOOL08 = 48 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.TYPE_ENUM T_32PBOOL08 = 1072 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.TYPE_ENUM T_64PBOOL08 = 1584 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.TYPE_ENUM T_BOOL16 = 49 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.TYPE_ENUM T_32PBOOL16 = 1073 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.TYPE_ENUM T_64PBOOL16 = 1585 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.TYPE_ENUM T_BOOL32 = 50 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.TYPE_ENUM T_32PBOOL32 = 1074 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.TYPE_ENUM T_64PBOOL32 = 1586 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.TYPE_ENUM T_BOOL64 = 51 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.TYPE_ENUM T_32PBOOL64 = 1075 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.TYPE_ENUM T_64PBOOL64 = 1587 : Public, Static, Literal, HasDefault
Struct Microsoft.Cci.Pdb.LEAF: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Microsoft.Cci.Pdb.LEAF LF_VTSHAPE = 10 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.LEAF LF_COBOL1 = 12 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.LEAF LF_LABEL = 14 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.LEAF LF_NULL = 15 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.LEAF LF_NOTTRAN = 16 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.LEAF LF_ENDPRECOMP = 20 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.LEAF LF_TYPESERVER_ST = 22 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.LEAF LF_LIST = 515 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.LEAF LF_REFSYM = 524 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.LEAF LF_ENUMERATE_ST = 1027 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.LEAF LF_TI16_MAX = 4096 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.LEAF LF_MODIFIER = 4097 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.LEAF LF_POINTER = 4098 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.LEAF LF_ARRAY_ST = 4099 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.LEAF LF_CLASS_ST = 4100 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.LEAF LF_STRUCTURE_ST = 4101 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.LEAF LF_UNION_ST = 4102 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.LEAF LF_ENUM_ST = 4103 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.LEAF LF_PROCEDURE = 4104 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.LEAF LF_MFUNCTION = 4105 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.LEAF LF_COBOL0 = 4106 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.LEAF LF_BARRAY = 4107 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.LEAF LF_DIMARRAY_ST = 4108 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.LEAF LF_VFTPATH = 4109 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.LEAF LF_PRECOMP_ST = 4110 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.LEAF LF_OEM = 4111 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.LEAF LF_ALIAS_ST = 4112 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.LEAF LF_OEM2 = 4113 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.LEAF LF_SKIP = 4608 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.LEAF LF_ARGLIST = 4609 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.LEAF LF_DEFARG_ST = 4610 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.LEAF LF_FIELDLIST = 4611 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.LEAF LF_DERIVED = 4612 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.LEAF LF_BITFIELD = 4613 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.LEAF LF_METHODLIST = 4614 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.LEAF LF_DIMCONU = 4615 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.LEAF LF_DIMCONLU = 4616 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.LEAF LF_DIMVARU = 4617 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.LEAF LF_DIMVARLU = 4618 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.LEAF LF_BCLASS = 5120 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.LEAF LF_VBCLASS = 5121 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.LEAF LF_IVBCLASS = 5122 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.LEAF LF_FRIENDFCN_ST = 5123 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.LEAF LF_INDEX = 5124 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.LEAF LF_MEMBER_ST = 5125 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.LEAF LF_STMEMBER_ST = 5126 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.LEAF LF_METHOD_ST = 5127 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.LEAF LF_NESTTYPE_ST = 5128 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.LEAF LF_VFUNCTAB = 5129 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.LEAF LF_FRIENDCLS = 5130 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.LEAF LF_ONEMETHOD_ST = 5131 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.LEAF LF_VFUNCOFF = 5132 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.LEAF LF_NESTTYPEEX_ST = 5133 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.LEAF LF_MEMBERMODIFY_ST = 5134 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.LEAF LF_MANAGED_ST = 5135 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.LEAF LF_ST_MAX = 5376 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.LEAF LF_TYPESERVER = 5377 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.LEAF LF_ENUMERATE = 5378 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.LEAF LF_ARRAY = 5379 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.LEAF LF_CLASS = 5380 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.LEAF LF_STRUCTURE = 5381 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.LEAF LF_UNION = 5382 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.LEAF LF_ENUM = 5383 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.LEAF LF_DIMARRAY = 5384 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.LEAF LF_PRECOMP = 5385 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.LEAF LF_ALIAS = 5386 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.LEAF LF_DEFARG = 5387 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.LEAF LF_FRIENDFCN = 5388 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.LEAF LF_MEMBER = 5389 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.LEAF LF_STMEMBER = 5390 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.LEAF LF_METHOD = 5391 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.LEAF LF_NESTTYPE = 5392 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.LEAF LF_ONEMETHOD = 5393 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.LEAF LF_NESTTYPEEX = 5394 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.LEAF LF_MEMBERMODIFY = 5395 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.LEAF LF_MANAGED = 5396 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.LEAF LF_TYPESERVER2 = 5397 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.LEAF LF_NUMERIC = 32768 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.LEAF LF_CHAR = 32768 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.LEAF LF_SHORT = 32769 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.LEAF LF_USHORT = 32770 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.LEAF LF_LONG = 32771 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.LEAF LF_ULONG = 32772 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.LEAF LF_REAL32 = 32773 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.LEAF LF_REAL64 = 32774 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.LEAF LF_REAL80 = 32775 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.LEAF LF_REAL128 = 32776 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.LEAF LF_QUADWORD = 32777 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.LEAF LF_UQUADWORD = 32778 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.LEAF LF_COMPLEX32 = 32780 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.LEAF LF_COMPLEX64 = 32781 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.LEAF LF_COMPLEX80 = 32782 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.LEAF LF_COMPLEX128 = 32783 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.LEAF LF_VARSTRING = 32784 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.LEAF LF_OCTWORD = 32791 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.LEAF LF_UOCTWORD = 32792 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.LEAF LF_DECIMAL = 32793 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.LEAF LF_DATE = 32794 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.LEAF LF_UTF8STRING = 32795 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.LEAF LF_PAD0 = 240 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.LEAF LF_PAD1 = 241 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.LEAF LF_PAD2 = 242 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.LEAF LF_PAD3 = 243 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.LEAF LF_PAD4 = 244 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.LEAF LF_PAD5 = 245 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.LEAF LF_PAD6 = 246 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.LEAF LF_PAD7 = 247 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.LEAF LF_PAD8 = 248 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.LEAF LF_PAD9 = 249 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.LEAF LF_PAD10 = 250 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.LEAF LF_PAD11 = 251 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.LEAF LF_PAD12 = 252 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.LEAF LF_PAD13 = 253 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.LEAF LF_PAD14 = 254 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.LEAF LF_PAD15 = 255 : Public, Static, Literal, HasDefault
Struct Microsoft.Cci.Pdb.CV_ptrtype: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Microsoft.Cci.Pdb.CV_ptrtype CV_PTR_BASE_SEG = 3 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.CV_ptrtype CV_PTR_BASE_VAL = 4 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.CV_ptrtype CV_PTR_BASE_SEGVAL = 5 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.CV_ptrtype CV_PTR_BASE_ADDR = 6 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.CV_ptrtype CV_PTR_BASE_SEGADDR = 7 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.CV_ptrtype CV_PTR_BASE_TYPE = 8 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.CV_ptrtype CV_PTR_BASE_SELF = 9 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.CV_ptrtype CV_PTR_NEAR32 = 10 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.CV_ptrtype CV_PTR_64 = 12 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.CV_ptrtype CV_PTR_UNUSEDPTR = 13 : Public, Static, Literal, HasDefault
Struct Microsoft.Cci.Pdb.CV_ptrmode: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Microsoft.Cci.Pdb.CV_ptrmode CV_PTR_MODE_PTR = 0 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.CV_ptrmode CV_PTR_MODE_REF = 1 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.CV_ptrmode CV_PTR_MODE_PMEM = 2 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.CV_ptrmode CV_PTR_MODE_PMFUNC = 3 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.CV_ptrmode CV_PTR_MODE_RESERVED = 4 : Public, Static, Literal, HasDefault
Struct Microsoft.Cci.Pdb.CV_pmtype: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Microsoft.Cci.Pdb.CV_pmtype CV_PMTYPE_Undef = 0 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.CV_pmtype CV_PMTYPE_D_Single = 1 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.CV_pmtype CV_PMTYPE_D_Multiple = 2 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.CV_pmtype CV_PMTYPE_D_Virtual = 3 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.CV_pmtype CV_PMTYPE_D_General = 4 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.CV_pmtype CV_PMTYPE_F_Single = 5 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.CV_pmtype CV_PMTYPE_F_Multiple = 6 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.CV_pmtype CV_PMTYPE_F_Virtual = 7 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.CV_pmtype CV_PMTYPE_F_General = 8 : Public, Static, Literal, HasDefault
Struct Microsoft.Cci.Pdb.CV_methodprop: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Microsoft.Cci.Pdb.CV_methodprop CV_MTvanilla = 0 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.CV_methodprop CV_MTvirtual = 1 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.CV_methodprop CV_MTstatic = 2 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.CV_methodprop CV_MTfriend = 3 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.CV_methodprop CV_MTintro = 4 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.CV_methodprop CV_MTpurevirt = 5 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.CV_methodprop CV_MTpureintro = 6 : Public, Static, Literal, HasDefault
Struct Microsoft.Cci.Pdb.CV_VTS_desc: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Microsoft.Cci.Pdb.CV_VTS_desc CV_VTS_near = 0 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.CV_VTS_desc CV_VTS_far = 1 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.CV_VTS_desc CV_VTS_thin = 2 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.CV_VTS_desc CV_VTS_outer = 3 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.CV_VTS_desc CV_VTS_meta = 4 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.CV_VTS_desc CV_VTS_near32 = 5 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.CV_VTS_desc CV_VTS_far32 = 6 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.CV_VTS_desc CV_VTS_unused = 7 : Public, Static, Literal, HasDefault
Struct Microsoft.Cci.Pdb.CV_LABEL_TYPE: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Microsoft.Cci.Pdb.CV_LABEL_TYPE CV_LABEL_NEAR = 0 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.CV_LABEL_TYPE CV_LABEL_FAR = 4 : Public, Static, Literal, HasDefault
Struct Microsoft.Cci.Pdb.CV_modifier: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    UInt16 value__ : Public, SpecialName, RTSpecialName
    Microsoft.Cci.Pdb.CV_modifier MOD_const = 1 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.CV_modifier MOD_volatile = 2 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.CV_modifier MOD_unaligned = 4 : Public, Static, Literal, HasDefault
Struct Microsoft.Cci.Pdb.CV_prop: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    UInt16 value__ : Public, SpecialName, RTSpecialName
    Microsoft.Cci.Pdb.CV_prop packed = 1 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.CV_prop ctor = 2 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.CV_prop ovlops = 4 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.CV_prop isnested = 8 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.CV_prop cnested = 16 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.CV_prop opassign = 32 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.CV_prop opcast = 64 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.CV_prop fwdref = 128 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.CV_prop scoped = 256 : Public, Static, Literal, HasDefault
Struct Microsoft.Cci.Pdb.CV_fldattr: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Microsoft.Cci.Pdb.CV_fldattr access = 3 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.CV_fldattr mprop = 28 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.CV_fldattr pseudo = 32 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.CV_fldattr noinherit = 64 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.CV_fldattr noconstruct = 128 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.CV_fldattr compgenx = 256 : Public, Static, Literal, HasDefault
Struct Microsoft.Cci.Pdb.TYPTYPE: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    UInt16 len : Assembly
    UInt16 leaf : Assembly
Struct Microsoft.Cci.Pdb.CV_PDMR32_NVVFCN: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    Int32 mdisp : Assembly
Struct Microsoft.Cci.Pdb.CV_PDMR32_VBASE: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    Int32 mdisp : Assembly
    Int32 pdisp : Assembly
    Int32 vdisp : Assembly
Struct Microsoft.Cci.Pdb.CV_PMFR32_NVSA: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    UInt32 off : Assembly
Struct Microsoft.Cci.Pdb.CV_PMFR32_NVMA: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    UInt32 off : Assembly
    Int32 disp : Assembly
Struct Microsoft.Cci.Pdb.CV_PMFR32_VBASE: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    UInt32 off : Assembly
    Int32 mdisp : Assembly
    Int32 pdisp : Assembly
    Int32 vdisp : Assembly
Struct Microsoft.Cci.Pdb.LeafModifier: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    UInt32 type : Assembly
    Microsoft.Cci.Pdb.CV_modifier attr : Assembly
Struct Microsoft.Cci.Pdb.LeafPointerAttr: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    UInt32 value__ : Public, SpecialName, RTSpecialName
    Microsoft.Cci.Pdb.LeafPointerAttr ptrtype = 31 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.LeafPointerAttr ptrmode = 224 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.LeafPointerAttr isflat32 = 256 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.LeafPointerAttr isvolatile = 512 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.LeafPointerAttr isconst = 1024 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.LeafPointerAttr isunaligned = 2048 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.LeafPointerAttr isrestrict = 4096 : Public, Static, Literal, HasDefault
Struct Microsoft.Cci.Pdb.LeafPointer: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
Struct Microsoft.Cci.Pdb.LeafPointer+LeafPointerBody: AutoLayout, AnsiClass, Class, NestedAssembly, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    UInt32 utype : Assembly
    Microsoft.Cci.Pdb.LeafPointerAttr attr : Assembly
Struct Microsoft.Cci.Pdb.LeafArray: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    UInt32 elemtype : Assembly
    UInt32 idxtype : Assembly
    Byte[] data : Assembly
    System.String name : Assembly
Struct Microsoft.Cci.Pdb.LeafClass: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    UInt16 count : Assembly
    UInt16 property : Assembly
    UInt32 field : Assembly
    UInt32 derived : Assembly
    UInt32 vshape : Assembly
    Byte[] data : Assembly
    System.String name : Assembly
Struct Microsoft.Cci.Pdb.LeafUnion: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    UInt16 count : Assembly
    UInt16 property : Assembly
    UInt32 field : Assembly
    Byte[] data : Assembly
    System.String name : Assembly
Struct Microsoft.Cci.Pdb.LeafAlias: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    UInt32 utype : Assembly
    System.String name : Assembly
Struct Microsoft.Cci.Pdb.LeafManaged: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    System.String name : Assembly
Struct Microsoft.Cci.Pdb.LeafEnum: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    UInt16 count : Assembly
    UInt16 property : Assembly
    UInt32 utype : Assembly
    UInt32 field : Assembly
    System.String name : Assembly
Struct Microsoft.Cci.Pdb.LeafProc: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    UInt32 rvtype : Assembly
    Byte calltype : Assembly
    Byte reserved : Assembly
    UInt16 parmcount : Assembly
    UInt32 arglist : Assembly
Struct Microsoft.Cci.Pdb.LeafMFunc: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    UInt32 rvtype : Assembly
    UInt32 classtype : Assembly
    UInt32 thistype : Assembly
    Byte calltype : Assembly
    Byte reserved : Assembly
    UInt16 parmcount : Assembly
    UInt32 arglist : Assembly
    Int32 thisadjust : Assembly
Struct Microsoft.Cci.Pdb.LeafVTShape: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    UInt16 count : Assembly
    Byte[] desc : Assembly
Struct Microsoft.Cci.Pdb.LeafCobol0: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    UInt32 type : Assembly
    Byte[] data : Assembly
Struct Microsoft.Cci.Pdb.LeafCobol1: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    Byte[] data : Assembly
Struct Microsoft.Cci.Pdb.LeafBArray: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    UInt32 utype : Assembly
Struct Microsoft.Cci.Pdb.LeafLabel: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    UInt16 mode : Assembly
Struct Microsoft.Cci.Pdb.LeafDimArray: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    UInt32 utype : Assembly
    UInt32 diminfo : Assembly
    System.String name : Assembly
Struct Microsoft.Cci.Pdb.LeafVFTPath: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    UInt32 count : Assembly
    UInt32[] bases : Assembly
Struct Microsoft.Cci.Pdb.LeafPreComp: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    UInt32 start : Assembly
    UInt32 count : Assembly
    UInt32 signature : Assembly
    System.String name : Assembly
Struct Microsoft.Cci.Pdb.LeafEndPreComp: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    UInt32 signature : Assembly
Struct Microsoft.Cci.Pdb.LeafOEM: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    UInt16 cvOEM : Assembly
    UInt16 recOEM : Assembly
    UInt32 count : Assembly
    UInt32[] index : Assembly
Struct Microsoft.Cci.Pdb.OEM_ID: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Microsoft.Cci.Pdb.OEM_ID OEM_MS_FORTRAN90 = 61584 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.OEM_ID OEM_ODI = 16 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.OEM_ID OEM_THOMSON_SOFTWARE = 21587 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.OEM_ID OEM_ODI_REC_BASELIST = 0 : Public, Static, Literal, HasDefault
Struct Microsoft.Cci.Pdb.LeafOEM2: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    System.Guid idOem : Assembly
    UInt32 count : Assembly
    UInt32[] index : Assembly
Struct Microsoft.Cci.Pdb.LeafTypeServer: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    UInt32 signature : Assembly
    UInt32 age : Assembly
    System.String name : Assembly
Struct Microsoft.Cci.Pdb.LeafTypeServer2: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    System.Guid sig70 : Assembly
    UInt32 age : Assembly
    System.String name : Assembly
Struct Microsoft.Cci.Pdb.LeafSkip: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    UInt32 type : Assembly
    Byte[] data : Assembly
Struct Microsoft.Cci.Pdb.LeafArgList: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    UInt32 count : Assembly
    UInt32[] arg : Assembly
Struct Microsoft.Cci.Pdb.LeafDerived: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    UInt32 count : Assembly
    UInt32[] drvdcls : Assembly
Struct Microsoft.Cci.Pdb.LeafDefArg: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    UInt32 type : Assembly
    Byte[] expr : Assembly
Struct Microsoft.Cci.Pdb.LeafList: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    Byte[] data : Assembly
Struct Microsoft.Cci.Pdb.LeafFieldList: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    Char[] data : Assembly
Struct Microsoft.Cci.Pdb.mlMethod: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    UInt16 attr : Assembly
    UInt16 pad0 : Assembly
    UInt32 index : Assembly
    UInt32[] vbaseoff : Assembly
Struct Microsoft.Cci.Pdb.LeafMethodList: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    Byte[] mList : Assembly
Struct Microsoft.Cci.Pdb.LeafBitfield: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    UInt32 type : Assembly
    Byte length : Assembly
    Byte position : Assembly
Struct Microsoft.Cci.Pdb.LeafDimCon: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    UInt32 typ : Assembly
    UInt16 rank : Assembly
    Byte[] dim : Assembly
Struct Microsoft.Cci.Pdb.LeafDimVar: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    UInt32 rank : Assembly
    UInt32 typ : Assembly
    UInt32[] dim : Assembly
Struct Microsoft.Cci.Pdb.LeafRefSym: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    Byte[] Sym : Assembly
Struct Microsoft.Cci.Pdb.LeafChar: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    SByte val : Assembly
Struct Microsoft.Cci.Pdb.LeafShort: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    Int16 val : Assembly
Struct Microsoft.Cci.Pdb.LeafUShort: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    UInt16 val : Assembly
Struct Microsoft.Cci.Pdb.LeafLong: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    Int32 val : Assembly
Struct Microsoft.Cci.Pdb.LeafULong: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    UInt32 val : Assembly
Struct Microsoft.Cci.Pdb.LeafQuad: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    Int64 val : Assembly
Struct Microsoft.Cci.Pdb.LeafUQuad: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    UInt64 val : Assembly
Struct Microsoft.Cci.Pdb.LeafOct: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    UInt64 val0 : Assembly
    UInt64 val1 : Assembly
Struct Microsoft.Cci.Pdb.LeafUOct: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    UInt64 val0 : Assembly
    UInt64 val1 : Assembly
Struct Microsoft.Cci.Pdb.LeafReal32: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    Single val : Assembly
Struct Microsoft.Cci.Pdb.LeafReal64: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    Double val : Assembly
Struct Microsoft.Cci.Pdb.LeafReal80: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    Microsoft.Cci.Pdb.FLOAT10 val : Assembly
Struct Microsoft.Cci.Pdb.LeafReal128: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    UInt64 val0 : Assembly
    UInt64 val1 : Assembly
Struct Microsoft.Cci.Pdb.LeafCmplx32: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    Single val_real : Assembly
    Single val_imag : Assembly
Struct Microsoft.Cci.Pdb.LeafCmplx64: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    Double val_real : Assembly
    Double val_imag : Assembly
Struct Microsoft.Cci.Pdb.LeafCmplx80: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    Microsoft.Cci.Pdb.FLOAT10 val_real : Assembly
    Microsoft.Cci.Pdb.FLOAT10 val_imag : Assembly
Struct Microsoft.Cci.Pdb.LeafCmplx128: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    UInt64 val0_real : Assembly
    UInt64 val1_real : Assembly
    UInt64 val0_imag : Assembly
    UInt64 val1_imag : Assembly
Struct Microsoft.Cci.Pdb.LeafVarString: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    UInt16 len : Assembly
    Byte[] value : Assembly
Struct Microsoft.Cci.Pdb.LeafIndex: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    UInt16 pad0 : Assembly
    UInt32 index : Assembly
Struct Microsoft.Cci.Pdb.LeafBClass: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    UInt16 attr : Assembly
    UInt32 index : Assembly
    Byte[] offset : Assembly
Struct Microsoft.Cci.Pdb.LeafVBClass: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    UInt16 attr : Assembly
    UInt32 index : Assembly
    UInt32 vbptr : Assembly
    Byte[] vbpoff : Assembly
Struct Microsoft.Cci.Pdb.LeafFriendCls: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    UInt16 pad0 : Assembly
    UInt32 index : Assembly
Struct Microsoft.Cci.Pdb.LeafFriendFcn: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    UInt16 pad0 : Assembly
    UInt32 index : Assembly
    System.String name : Assembly
Struct Microsoft.Cci.Pdb.LeafMember: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    UInt16 attr : Assembly
    UInt32 index : Assembly
    Byte[] offset : Assembly
    System.String name : Assembly
Struct Microsoft.Cci.Pdb.LeafSTMember: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    UInt16 attr : Assembly
    UInt32 index : Assembly
    System.String name : Assembly
Struct Microsoft.Cci.Pdb.LeafVFuncTab: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    UInt16 pad0 : Assembly
    UInt32 type : Assembly
Struct Microsoft.Cci.Pdb.LeafVFuncOff: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    UInt16 pad0 : Assembly
    UInt32 type : Assembly
    Int32 offset : Assembly
Struct Microsoft.Cci.Pdb.LeafMethod: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    UInt16 count : Assembly
    UInt32 mList : Assembly
    System.String name : Assembly
Struct Microsoft.Cci.Pdb.LeafOneMethod: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    UInt16 attr : Assembly
    UInt32 index : Assembly
    UInt32[] vbaseoff : Assembly
    System.String name : Assembly
Struct Microsoft.Cci.Pdb.LeafEnumerate: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    UInt16 attr : Assembly
    Byte[] value : Assembly
    System.String name : Assembly
Struct Microsoft.Cci.Pdb.LeafNestType: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    UInt16 pad0 : Assembly
    UInt32 index : Assembly
    System.String name : Assembly
Struct Microsoft.Cci.Pdb.LeafNestTypeEx: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    UInt16 attr : Assembly
    UInt32 index : Assembly
    System.String name : Assembly
Struct Microsoft.Cci.Pdb.LeafMemberModify: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    UInt16 attr : Assembly
    UInt32 index : Assembly
    System.String name : Assembly
Struct Microsoft.Cci.Pdb.LeafPad: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    Byte leaf : Assembly
Struct Microsoft.Cci.Pdb.SYM: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Microsoft.Cci.Pdb.SYM S_END = 6 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.SYM S_OEM = 1028 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.SYM S_REGISTER_ST = 4097 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.SYM S_CONSTANT_ST = 4098 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.SYM S_UDT_ST = 4099 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.SYM S_COBOLUDT_ST = 4100 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.SYM S_MANYREG_ST = 4101 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.SYM S_BPREL32_ST = 4102 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.SYM S_LDATA32_ST = 4103 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.SYM S_GDATA32_ST = 4104 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.SYM S_PUB32_ST = 4105 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.SYM S_LPROC32_ST = 4106 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.SYM S_GPROC32_ST = 4107 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.SYM S_VFTABLE32 = 4108 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.SYM S_REGREL32_ST = 4109 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.SYM S_LTHREAD32_ST = 4110 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.SYM S_GTHREAD32_ST = 4111 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.SYM S_LPROCMIPS_ST = 4112 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.SYM S_GPROCMIPS_ST = 4113 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.SYM S_FRAMEPROC = 4114 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.SYM S_COMPILE2_ST = 4115 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.SYM S_MANYREG2_ST = 4116 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.SYM S_LPROCIA64_ST = 4117 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.SYM S_GPROCIA64_ST = 4118 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.SYM S_LOCALSLOT_ST = 4119 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.SYM S_PARAMSLOT_ST = 4120 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.SYM S_ANNOTATION = 4121 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.SYM S_GMANPROC_ST = 4122 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.SYM S_LMANPROC_ST = 4123 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.SYM S_RESERVED1 = 4124 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.SYM S_RESERVED2 = 4125 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.SYM S_RESERVED3 = 4126 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.SYM S_RESERVED4 = 4127 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.SYM S_LMANDATA_ST = 4128 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.SYM S_GMANDATA_ST = 4129 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.SYM S_MANFRAMEREL_ST = 4130 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.SYM S_MANREGISTER_ST = 4131 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.SYM S_MANSLOT_ST = 4132 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.SYM S_MANMANYREG_ST = 4133 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.SYM S_MANREGREL_ST = 4134 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.SYM S_MANMANYREG2_ST = 4135 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.SYM S_MANTYPREF = 4136 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.SYM S_UNAMESPACE_ST = 4137 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.SYM S_ST_MAX = 4352 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.SYM S_OBJNAME = 4353 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.SYM S_THUNK32 = 4354 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.SYM S_BLOCK32 = 4355 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.SYM S_WITH32 = 4356 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.SYM S_LABEL32 = 4357 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.SYM S_REGISTER = 4358 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.SYM S_CONSTANT = 4359 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.SYM S_UDT = 4360 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.SYM S_COBOLUDT = 4361 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.SYM S_MANYREG = 4362 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.SYM S_BPREL32 = 4363 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.SYM S_LDATA32 = 4364 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.SYM S_GDATA32 = 4365 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.SYM S_PUB32 = 4366 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.SYM S_LPROC32 = 4367 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.SYM S_GPROC32 = 4368 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.SYM S_REGREL32 = 4369 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.SYM S_LTHREAD32 = 4370 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.SYM S_GTHREAD32 = 4371 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.SYM S_LPROCMIPS = 4372 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.SYM S_GPROCMIPS = 4373 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.SYM S_COMPILE2 = 4374 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.SYM S_MANYREG2 = 4375 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.SYM S_LPROCIA64 = 4376 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.SYM S_GPROCIA64 = 4377 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.SYM S_LOCALSLOT = 4378 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.SYM S_SLOT = 4378 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.SYM S_PARAMSLOT = 4379 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.SYM S_LMANDATA = 4380 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.SYM S_GMANDATA = 4381 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.SYM S_MANFRAMEREL = 4382 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.SYM S_MANREGISTER = 4383 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.SYM S_MANSLOT = 4384 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.SYM S_MANMANYREG = 4385 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.SYM S_MANREGREL = 4386 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.SYM S_MANMANYREG2 = 4387 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.SYM S_UNAMESPACE = 4388 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.SYM S_PROCREF = 4389 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.SYM S_DATAREF = 4390 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.SYM S_LPROCREF = 4391 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.SYM S_ANNOTATIONREF = 4392 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.SYM S_TOKENREF = 4393 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.SYM S_GMANPROC = 4394 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.SYM S_LMANPROC = 4395 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.SYM S_TRAMPOLINE = 4396 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.SYM S_MANCONSTANT = 4397 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.SYM S_ATTR_FRAMEREL = 4398 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.SYM S_ATTR_REGISTER = 4399 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.SYM S_ATTR_REGREL = 4400 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.SYM S_ATTR_MANYREG = 4401 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.SYM S_SEPCODE = 4402 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.SYM S_LOCAL = 4403 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.SYM S_DEFRANGE = 4404 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.SYM S_DEFRANGE2 = 4405 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.SYM S_SECTION = 4406 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.SYM S_COFFGROUP = 4407 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.SYM S_EXPORT = 4408 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.SYM S_CALLSITEINFO = 4409 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.SYM S_FRAMECOOKIE = 4410 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.SYM S_DISCARDED = 4411 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.SYM S_RECTYPE_MAX = 4412 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.SYM S_RECTYPE_LAST = 4411 : Public, Static, Literal, HasDefault
Struct Microsoft.Cci.Pdb.CV_CFL_DATA: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Microsoft.Cci.Pdb.CV_CFL_DATA CV_CFL_DNEAR = 0 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.CV_CFL_DATA CV_CFL_DFAR = 1 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.CV_CFL_DATA CV_CFL_DHUGE = 2 : Public, Static, Literal, HasDefault
Struct Microsoft.Cci.Pdb.CV_CFL_CODE: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Microsoft.Cci.Pdb.CV_CFL_CODE CV_CFL_CNEAR = 0 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.CV_CFL_CODE CV_CFL_CFAR = 1 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.CV_CFL_CODE CV_CFL_CHUGE = 2 : Public, Static, Literal, HasDefault
Struct Microsoft.Cci.Pdb.CV_CFL_FPKG: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Microsoft.Cci.Pdb.CV_CFL_FPKG CV_CFL_NDP = 0 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.CV_CFL_FPKG CV_CFL_EMU = 1 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.CV_CFL_FPKG CV_CFL_ALT = 2 : Public, Static, Literal, HasDefault
Struct Microsoft.Cci.Pdb.CV_PROCFLAGS: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Byte value__ : Public, SpecialName, RTSpecialName
    Microsoft.Cci.Pdb.CV_PROCFLAGS CV_PFLAG_NOFPO = 1 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.CV_PROCFLAGS CV_PFLAG_INT = 2 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.CV_PROCFLAGS CV_PFLAG_FAR = 4 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.CV_PROCFLAGS CV_PFLAG_NEVER = 8 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.CV_PROCFLAGS CV_PFLAG_NOTREACHED = 16 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.CV_PROCFLAGS CV_PFLAG_CUST_CALL = 32 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.CV_PROCFLAGS CV_PFLAG_NOINLINE = 64 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.CV_PROCFLAGS CV_PFLAG_OPTDBGINFO = 128 : Public, Static, Literal, HasDefault
Struct Microsoft.Cci.Pdb.CV_EXPROCFLAGS: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    Byte flags : Assembly
    Byte reserved : Assembly
Struct Microsoft.Cci.Pdb.CV_LVARFLAGS: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    UInt16 value__ : Public, SpecialName, RTSpecialName
    Microsoft.Cci.Pdb.CV_LVARFLAGS fIsParam = 1 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.CV_LVARFLAGS fAddrTaken = 2 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.CV_LVARFLAGS fCompGenx = 4 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.CV_LVARFLAGS fIsAggregate = 8 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.CV_LVARFLAGS fIsAggregated = 16 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.CV_LVARFLAGS fIsAliased = 32 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.CV_LVARFLAGS fIsAlias = 64 : Public, Static, Literal, HasDefault
Struct Microsoft.Cci.Pdb.CV_lvar_addr_range: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    UInt32 offStart : Assembly
    UInt16 isectStart : Assembly
    UInt32 cbRange : Assembly
Struct Microsoft.Cci.Pdb.CV_GENERIC_STYLE: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Microsoft.Cci.Pdb.CV_GENERIC_STYLE CV_GENERIC_VOID = 0 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.CV_GENERIC_STYLE CV_GENERIC_REG = 1 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.CV_GENERIC_STYLE CV_GENERIC_ICAN = 2 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.CV_GENERIC_STYLE CV_GENERIC_ICAF = 3 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.CV_GENERIC_STYLE CV_GENERIC_IRAN = 4 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.CV_GENERIC_STYLE CV_GENERIC_IRAF = 5 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.CV_GENERIC_STYLE CV_GENERIC_UNUSED = 6 : Public, Static, Literal, HasDefault
Struct Microsoft.Cci.Pdb.CV_GENERIC_FLAG: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    UInt16 value__ : Public, SpecialName, RTSpecialName
    Microsoft.Cci.Pdb.CV_GENERIC_FLAG cstyle = 1 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.CV_GENERIC_FLAG rsclean = 2 : Public, Static, Literal, HasDefault
Struct Microsoft.Cci.Pdb.CV_SEPCODEFLAGS: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    UInt32 value__ : Public, SpecialName, RTSpecialName
    Microsoft.Cci.Pdb.CV_SEPCODEFLAGS fIsLexicalScope = 1 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.CV_SEPCODEFLAGS fReturnsToParent = 2 : Public, Static, Literal, HasDefault
Struct Microsoft.Cci.Pdb.SYMTYPE: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    UInt16 reclen : Assembly
    UInt16 rectyp : Assembly
Struct Microsoft.Cci.Pdb.RegSym: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    UInt32 typind : Assembly
    UInt16 reg : Assembly
    System.String name : Assembly
Struct Microsoft.Cci.Pdb.AttrRegSym: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    UInt32 typind : Assembly
    UInt32 offCod : Assembly
    UInt16 segCod : Assembly
    UInt16 flags : Assembly
    UInt16 reg : Assembly
    System.String name : Assembly
Struct Microsoft.Cci.Pdb.ManyRegSym: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    UInt32 typind : Assembly
    Byte count : Assembly
    Byte[] reg : Assembly
    System.String name : Assembly
Struct Microsoft.Cci.Pdb.ManyRegSym2: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    UInt32 typind : Assembly
    UInt16 count : Assembly
    UInt16[] reg : Assembly
    System.String name : Assembly
Struct Microsoft.Cci.Pdb.AttrManyRegSym: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    UInt32 typind : Assembly
    UInt32 offCod : Assembly
    UInt16 segCod : Assembly
    UInt16 flags : Assembly
    Byte count : Assembly
    Byte[] reg : Assembly
    System.String name : Assembly
Struct Microsoft.Cci.Pdb.AttrManyRegSym2: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    UInt32 typind : Assembly
    UInt32 offCod : Assembly
    UInt16 segCod : Assembly
    UInt16 flags : Assembly
    UInt16 count : Assembly
    UInt16[] reg : Assembly
    System.String name : Assembly
Struct Microsoft.Cci.Pdb.ConstSym: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    UInt32 typind : Assembly
    UInt16 value : Assembly
    System.String name : Assembly
Struct Microsoft.Cci.Pdb.UdtSym: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    UInt32 typind : Assembly
    System.String name : Assembly
Struct Microsoft.Cci.Pdb.ManyTypRef: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    UInt32 typind : Assembly
Struct Microsoft.Cci.Pdb.SearchSym: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    UInt32 startsym : Assembly
    UInt16 seg : Assembly
Struct Microsoft.Cci.Pdb.CFLAGSYM_FLAGS: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    UInt16 value__ : Public, SpecialName, RTSpecialName
    Microsoft.Cci.Pdb.CFLAGSYM_FLAGS pcode = 1 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.CFLAGSYM_FLAGS floatprec = 6 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.CFLAGSYM_FLAGS floatpkg = 24 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.CFLAGSYM_FLAGS ambdata = 224 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.CFLAGSYM_FLAGS ambcode = 1792 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.CFLAGSYM_FLAGS mode32 = 2048 : Public, Static, Literal, HasDefault
Struct Microsoft.Cci.Pdb.CFlagSym: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    Byte machine : Assembly
    Byte language : Assembly
    UInt16 flags : Assembly
    System.String ver : Assembly
Struct Microsoft.Cci.Pdb.COMPILESYM_FLAGS: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    UInt32 value__ : Public, SpecialName, RTSpecialName
    Microsoft.Cci.Pdb.COMPILESYM_FLAGS iLanguage = 255 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.COMPILESYM_FLAGS fEC = 256 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.COMPILESYM_FLAGS fNoDbgInfo = 512 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.COMPILESYM_FLAGS fLTCG = 1024 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.COMPILESYM_FLAGS fNoDataAlign = 2048 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.COMPILESYM_FLAGS fManagedPresent = 4096 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.COMPILESYM_FLAGS fSecurityChecks = 8192 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.COMPILESYM_FLAGS fHotPatch = 16384 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.COMPILESYM_FLAGS fCVTCIL = 32768 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.COMPILESYM_FLAGS fMSILModule = 65536 : Public, Static, Literal, HasDefault
Struct Microsoft.Cci.Pdb.CompileSym: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    UInt32 flags : Assembly
    UInt16 machine : Assembly
    UInt16 verFEMajor : Assembly
    UInt16 verFEMinor : Assembly
    UInt16 verFEBuild : Assembly
    UInt16 verMajor : Assembly
    UInt16 verMinor : Assembly
    UInt16 verBuild : Assembly
    System.String verSt : Assembly
    System.String[] verArgs : Assembly
Struct Microsoft.Cci.Pdb.ObjNameSym: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    UInt32 signature : Assembly
    System.String name : Assembly
Struct Microsoft.Cci.Pdb.EndArgSym: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
Struct Microsoft.Cci.Pdb.ReturnSym: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    Microsoft.Cci.Pdb.CV_GENERIC_FLAG flags : Assembly
    Byte style : Assembly
Struct Microsoft.Cci.Pdb.EntryThisSym: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    Byte thissym : Assembly
Struct Microsoft.Cci.Pdb.BpRelSym32: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    Int32 off : Assembly
    UInt32 typind : Assembly
    System.String name : Assembly
Struct Microsoft.Cci.Pdb.FrameRelSym: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    Int32 off : Assembly
    UInt32 typind : Assembly
    UInt32 offCod : Assembly
    UInt16 segCod : Assembly
    UInt16 flags : Assembly
    System.String name : Assembly
Struct Microsoft.Cci.Pdb.SlotSym32: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    UInt32 index : Assembly
    UInt32 typind : Assembly
    System.String name : Assembly
Struct Microsoft.Cci.Pdb.AttrSlotSym: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    UInt32 index : Assembly
    UInt32 typind : Assembly
    UInt32 offCod : Assembly
    UInt16 segCod : Assembly
    UInt16 flags : Assembly
    System.String name : Assembly
Struct Microsoft.Cci.Pdb.AnnotationSym: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    UInt32 off : Assembly
    UInt16 seg : Assembly
    UInt16 csz : Assembly
    System.String[] rgsz : Assembly
Struct Microsoft.Cci.Pdb.DatasSym32: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    UInt32 typind : Assembly
    UInt32 off : Assembly
    UInt16 seg : Assembly
    System.String name : Assembly
Struct Microsoft.Cci.Pdb.CV_PUBSYMFLAGS: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    UInt32 value__ : Public, SpecialName, RTSpecialName
    Microsoft.Cci.Pdb.CV_PUBSYMFLAGS fNone = 0 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.CV_PUBSYMFLAGS fCode = 1 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.CV_PUBSYMFLAGS fFunction = 2 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.CV_PUBSYMFLAGS fManaged = 4 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.CV_PUBSYMFLAGS fMSIL = 8 : Public, Static, Literal, HasDefault
Struct Microsoft.Cci.Pdb.PubSym32: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    UInt32 flags : Assembly
    UInt32 off : Assembly
    UInt16 seg : Assembly
    System.String name : Assembly
Struct Microsoft.Cci.Pdb.ProcSym32: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    UInt32 parent : Assembly
    UInt32 end : Assembly
    UInt32 next : Assembly
    UInt32 len : Assembly
    UInt32 dbgStart : Assembly
    UInt32 dbgEnd : Assembly
    UInt32 typind : Assembly
    UInt32 off : Assembly
    UInt16 seg : Assembly
    Byte flags : Assembly
    System.String name : Assembly
Struct Microsoft.Cci.Pdb.ManProcSym: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    UInt32 parent : Assembly
    UInt32 end : Assembly
    UInt32 next : Assembly
    UInt32 len : Assembly
    UInt32 dbgStart : Assembly
    UInt32 dbgEnd : Assembly
    UInt32 token : Assembly
    UInt32 off : Assembly
    UInt16 seg : Assembly
    Byte flags : Assembly
    UInt16 retReg : Assembly
    System.String name : Assembly
Struct Microsoft.Cci.Pdb.ManProcSymMips: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    UInt32 parent : Assembly
    UInt32 end : Assembly
    UInt32 next : Assembly
    UInt32 len : Assembly
    UInt32 dbgStart : Assembly
    UInt32 dbgEnd : Assembly
    UInt32 regSave : Assembly
    UInt32 fpSave : Assembly
    UInt32 intOff : Assembly
    UInt32 fpOff : Assembly
    UInt32 token : Assembly
    UInt32 off : Assembly
    UInt16 seg : Assembly
    Byte retReg : Assembly
    Byte frameReg : Assembly
    System.String name : Assembly
Struct Microsoft.Cci.Pdb.ThunkSym32: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    UInt32 parent : Assembly
    UInt32 end : Assembly
    UInt32 next : Assembly
    UInt32 off : Assembly
    UInt16 seg : Assembly
    UInt16 len : Assembly
    Byte ord : Assembly
    System.String name : Assembly
    Byte[] variant : Assembly
Struct Microsoft.Cci.Pdb.TRAMP: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Microsoft.Cci.Pdb.TRAMP trampIncremental = 0 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.TRAMP trampBranchIsland = 1 : Public, Static, Literal, HasDefault
Struct Microsoft.Cci.Pdb.TrampolineSym: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    UInt16 trampType : Assembly
    UInt16 cbThunk : Assembly
    UInt32 offThunk : Assembly
    UInt32 offTarget : Assembly
    UInt16 sectThunk : Assembly
    UInt16 sectTarget : Assembly
Struct Microsoft.Cci.Pdb.LabelSym32: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    UInt32 off : Assembly
    UInt16 seg : Assembly
    Byte flags : Assembly
    System.String name : Assembly
Struct Microsoft.Cci.Pdb.BlockSym32: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    UInt32 parent : Assembly
    UInt32 end : Assembly
    UInt32 len : Assembly
    UInt32 off : Assembly
    UInt16 seg : Assembly
    System.String name : Assembly
Struct Microsoft.Cci.Pdb.WithSym32: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    UInt32 parent : Assembly
    UInt32 end : Assembly
    UInt32 len : Assembly
    UInt32 off : Assembly
    UInt16 seg : Assembly
    System.String expr : Assembly
Struct Microsoft.Cci.Pdb.VpathSym32: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    UInt32 root : Assembly
    UInt32 path : Assembly
    UInt32 off : Assembly
    UInt16 seg : Assembly
Struct Microsoft.Cci.Pdb.RegRel32: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    UInt32 off : Assembly
    UInt32 typind : Assembly
    UInt16 reg : Assembly
    System.String name : Assembly
Struct Microsoft.Cci.Pdb.AttrRegRel: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    UInt32 off : Assembly
    UInt32 typind : Assembly
    UInt16 reg : Assembly
    UInt32 offCod : Assembly
    UInt16 segCod : Assembly
    UInt16 flags : Assembly
    System.String name : Assembly
Struct Microsoft.Cci.Pdb.ThreadSym32: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    UInt32 typind : Assembly
    UInt32 off : Assembly
    UInt16 seg : Assembly
    System.String name : Assembly
Struct Microsoft.Cci.Pdb.Slink32: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    UInt32 framesize : Assembly
    Int32 off : Assembly
    UInt16 reg : Assembly
Struct Microsoft.Cci.Pdb.ProcSymMips: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    UInt32 parent : Assembly
    UInt32 end : Assembly
    UInt32 next : Assembly
    UInt32 len : Assembly
    UInt32 dbgStart : Assembly
    UInt32 dbgEnd : Assembly
    UInt32 regSave : Assembly
    UInt32 fpSave : Assembly
    UInt32 intOff : Assembly
    UInt32 fpOff : Assembly
    UInt32 typind : Assembly
    UInt32 off : Assembly
    UInt16 seg : Assembly
    Byte retReg : Assembly
    Byte frameReg : Assembly
    System.String name : Assembly
Struct Microsoft.Cci.Pdb.ProcSymIa64: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    UInt32 parent : Assembly
    UInt32 end : Assembly
    UInt32 next : Assembly
    UInt32 len : Assembly
    UInt32 dbgStart : Assembly
    UInt32 dbgEnd : Assembly
    UInt32 typind : Assembly
    UInt32 off : Assembly
    UInt16 seg : Assembly
    UInt16 retReg : Assembly
    Byte flags : Assembly
    System.String name : Assembly
Struct Microsoft.Cci.Pdb.RefSym: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    UInt32 sumName : Assembly
    UInt32 ibSym : Assembly
    UInt16 imod : Assembly
    UInt16 usFill : Assembly
Struct Microsoft.Cci.Pdb.RefSym2: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    UInt32 sumName : Assembly
    UInt32 ibSym : Assembly
    UInt16 imod : Assembly
    System.String name : Assembly
Struct Microsoft.Cci.Pdb.AlignSym: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
Struct Microsoft.Cci.Pdb.OemSymbol: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    System.Guid idOem : Assembly
    UInt32 typind : Assembly
    Byte[] rgl : Assembly
Struct Microsoft.Cci.Pdb.FRAMEPROCSYM_FLAGS: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    UInt32 value__ : Public, SpecialName, RTSpecialName
    Microsoft.Cci.Pdb.FRAMEPROCSYM_FLAGS fHasAlloca = 1 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.FRAMEPROCSYM_FLAGS fHasSetJmp = 2 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.FRAMEPROCSYM_FLAGS fHasLongJmp = 4 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.FRAMEPROCSYM_FLAGS fHasInlAsm = 8 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.FRAMEPROCSYM_FLAGS fHasEH = 16 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.FRAMEPROCSYM_FLAGS fInlSpec = 32 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.FRAMEPROCSYM_FLAGS fHasSEH = 64 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.FRAMEPROCSYM_FLAGS fNaked = 128 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.FRAMEPROCSYM_FLAGS fSecurityChecks = 256 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.FRAMEPROCSYM_FLAGS fAsyncEH = 512 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.FRAMEPROCSYM_FLAGS fGSNoStackOrdering = 1024 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.FRAMEPROCSYM_FLAGS fWasInlined = 2048 : Public, Static, Literal, HasDefault
Struct Microsoft.Cci.Pdb.FrameProcSym: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    UInt32 cbFrame : Assembly
    UInt32 cbPad : Assembly
    UInt32 offPad : Assembly
    UInt32 cbSaveRegs : Assembly
    UInt32 offExHdlr : Assembly
    UInt16 secExHdlr : Assembly
    UInt32 flags : Assembly
Struct Microsoft.Cci.Pdb.UnamespaceSym: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    System.String name : Assembly
Struct Microsoft.Cci.Pdb.SepCodSym: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    UInt32 parent : Assembly
    UInt32 end : Assembly
    UInt32 length : Assembly
    UInt32 scf : Assembly
    UInt32 off : Assembly
    UInt32 offParent : Assembly
    UInt16 sec : Assembly
    UInt16 secParent : Assembly
Struct Microsoft.Cci.Pdb.LocalSym: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    UInt32 id : Assembly
    UInt32 typind : Assembly
    UInt16 flags : Assembly
    UInt32 idParent : Assembly
    UInt32 offParent : Assembly
    UInt32 expr : Assembly
    UInt32 pad0 : Assembly
    UInt32 pad1 : Assembly
    System.String name : Assembly
Struct Microsoft.Cci.Pdb.DefRangeSym: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    UInt32 id : Assembly
    UInt32 program : Assembly
    Microsoft.Cci.Pdb.CV_lvar_addr_range range : Assembly
Struct Microsoft.Cci.Pdb.DefRangeSym2: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    UInt32 id : Assembly
    UInt32 program : Assembly
    UInt16 count : Assembly
    Microsoft.Cci.Pdb.CV_lvar_addr_range[] range : Assembly
Struct Microsoft.Cci.Pdb.SectionSym: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    UInt16 isec : Assembly
    Byte align : Assembly
    Byte bReserved : Assembly
    UInt32 rva : Assembly
    UInt32 cb : Assembly
    UInt32 characteristics : Assembly
    System.String name : Assembly
Struct Microsoft.Cci.Pdb.CoffGroupSym: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    UInt32 cb : Assembly
    UInt32 characteristics : Assembly
    UInt32 off : Assembly
    UInt16 seg : Assembly
    System.String name : Assembly
Struct Microsoft.Cci.Pdb.EXPORTSYM_FLAGS: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    UInt16 value__ : Public, SpecialName, RTSpecialName
    Microsoft.Cci.Pdb.EXPORTSYM_FLAGS fConstant = 1 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.EXPORTSYM_FLAGS fData = 2 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.EXPORTSYM_FLAGS fPrivate = 4 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.EXPORTSYM_FLAGS fNoName = 8 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.EXPORTSYM_FLAGS fOrdinal = 16 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.EXPORTSYM_FLAGS fForwarder = 32 : Public, Static, Literal, HasDefault
Struct Microsoft.Cci.Pdb.ExportSym: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    UInt16 ordinal : Assembly
    UInt16 flags : Assembly
    System.String name : Assembly
Struct Microsoft.Cci.Pdb.CallsiteInfo: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    Int32 off : Assembly
    UInt16 ect : Assembly
    UInt16 pad0 : Assembly
    UInt32 typind : Assembly
Struct Microsoft.Cci.Pdb.CV_cookietype: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Microsoft.Cci.Pdb.CV_cookietype CV_COOKIETYPE_COPY = 0 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.CV_cookietype CV_COOKIETYPE_XOR_SP = 1 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.CV_cookietype CV_COOKIETYPE_XOR_BP = 2 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.CV_cookietype CV_COOKIETYPE_XOR_R13 = 3 : Public, Static, Literal, HasDefault
Struct Microsoft.Cci.Pdb.FrameCookie: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    Int32 off : Assembly
    UInt16 reg : Assembly
    Int32 cookietype : Assembly
    Byte flags : Assembly
Struct Microsoft.Cci.Pdb.CV_DISCARDED: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    UInt32 value__ : Public, SpecialName, RTSpecialName
    Microsoft.Cci.Pdb.CV_DISCARDED CV_DISCARDED_UNKNOWN = 0 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.CV_DISCARDED CV_DISCARDED_NOT_SELECTED = 1 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.CV_DISCARDED CV_DISCARDED_NOT_REFERENCED = 2 : Public, Static, Literal, HasDefault
Struct Microsoft.Cci.Pdb.DiscardedSym: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    Microsoft.Cci.Pdb.CV_DISCARDED iscarded : Assembly
    UInt32 fileid : Assembly
    UInt32 linenum : Assembly
    Byte[] data : Assembly
Struct Microsoft.Cci.Pdb.DEBUG_S_SUBSECTION_TYPE: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    UInt32 value__ : Public, SpecialName, RTSpecialName
    Microsoft.Cci.Pdb.DEBUG_S_SUBSECTION_TYPE DEBUG_S_IGNORE = 2147483648 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.DEBUG_S_SUBSECTION_TYPE DEBUG_S_SYMBOLS = 241 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.DEBUG_S_SUBSECTION_TYPE DEBUG_S_LINES = 242 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.DEBUG_S_SUBSECTION_TYPE DEBUG_S_STRINGTABLE = 243 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.DEBUG_S_SUBSECTION_TYPE DEBUG_S_FILECHKSMS = 244 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.DEBUG_S_SUBSECTION_TYPE DEBUG_S_FRAMEDATA = 245 : Public, Static, Literal, HasDefault
Struct Microsoft.Cci.Pdb.CV_LINE_SUBSECTION_FLAGS: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    UInt16 value__ : Public, SpecialName, RTSpecialName
    Microsoft.Cci.Pdb.CV_LINE_SUBSECTION_FLAGS CV_LINES_HAVE_COLUMNS = 1 : Public, Static, Literal, HasDefault
Struct Microsoft.Cci.Pdb.CV_LineSection: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    UInt32 off : Assembly
    UInt16 sec : Assembly
    UInt16 flags : Assembly
    UInt32 cod : Assembly
Struct Microsoft.Cci.Pdb.CV_SourceFile: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    UInt32 index : Assembly
    UInt32 count : Assembly
    UInt32 linsiz : Assembly
Struct Microsoft.Cci.Pdb.CV_Line_Flags: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    UInt32 value__ : Public, SpecialName, RTSpecialName
    Microsoft.Cci.Pdb.CV_Line_Flags linenumStart = 16777215 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.CV_Line_Flags deltaLineEnd = 2130706432 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.CV_Line_Flags fStatement = 2147483648 : Public, Static, Literal, HasDefault
Struct Microsoft.Cci.Pdb.CV_Line: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    UInt32 offset : Assembly
    UInt32 flags : Assembly
Struct Microsoft.Cci.Pdb.CV_Column: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    UInt16 offColumnStart : Assembly
    UInt16 offColumnEnd : Assembly
Struct Microsoft.Cci.Pdb.CV_FILE_CHECKSUM_TYPE: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Byte value__ : Public, SpecialName, RTSpecialName
    Microsoft.Cci.Pdb.CV_FILE_CHECKSUM_TYPE None = 0 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.CV_FILE_CHECKSUM_TYPE MD5 = 1 : Public, Static, Literal, HasDefault
Struct Microsoft.Cci.Pdb.CV_FileCheckSum: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    UInt32 name : Assembly
    Byte len : Assembly
    Byte type : Assembly
Struct Microsoft.Cci.Pdb.FRAMEDATA_FLAGS: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    UInt32 value__ : Public, SpecialName, RTSpecialName
    Microsoft.Cci.Pdb.FRAMEDATA_FLAGS fHasSEH = 1 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.FRAMEDATA_FLAGS fHasEH = 2 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.FRAMEDATA_FLAGS fIsFunctionStart = 4 : Public, Static, Literal, HasDefault
Struct Microsoft.Cci.Pdb.FrameData: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    UInt32 ulRvaStart : Assembly
    UInt32 cbBlock : Assembly
    UInt32 cbLocals : Assembly
    UInt32 cbParams : Assembly
    UInt32 cbStkMax : Assembly
    UInt32 frameFunc : Assembly
    UInt16 cbProlog : Assembly
    UInt16 cbSavedRegs : Assembly
    UInt32 flags : Assembly
Struct Microsoft.Cci.Pdb.XFixupData: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    UInt16 wType : Assembly
    UInt16 wExtra : Assembly
    UInt32 rva : Assembly
    UInt32 rvaTarget : Assembly
Struct Microsoft.Cci.Pdb.DEBUG_S_SUBSECTION: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Microsoft.Cci.Pdb.DEBUG_S_SUBSECTION SYMBOLS = 241 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.DEBUG_S_SUBSECTION LINES = 242 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.DEBUG_S_SUBSECTION STRINGTABLE = 243 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.DEBUG_S_SUBSECTION FILECHKSMS = 244 : Public, Static, Literal, HasDefault
    Microsoft.Cci.Pdb.DEBUG_S_SUBSECTION FRAMEDATA = 245 : Public, Static, Literal, HasDefault
Class Microsoft.Cci.Pdb.DataStream: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32, Microsoft.Cci.Pdb.BitAccess, Int32): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int32 contentSize : Assembly
    Int32[] pages : Assembly
  Properties:
    Int32 Length 'get ' : 
  Methods:
    Read(PdbReader, BitAccess): PrivateScope, Assembly, HideBySig
    Read(PdbReader, Int32, Byte[], Int32, Int32): PrivateScope, Assembly, HideBySig
    get_Length(): PrivateScope, Assembly, HideBySig, SpecialName
Struct Microsoft.Cci.Pdb.DbiDbgHdr: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Microsoft.Cci.Pdb.BitAccess): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Fields:
    UInt16 snFPO : Assembly
    UInt16 snException : Assembly
    UInt16 snFixup : Assembly
    UInt16 snOmapToSrc : Assembly
    UInt16 snOmapFromSrc : Assembly
    UInt16 snSectionHdr : Assembly
    UInt16 snTokenRidMap : Assembly
    UInt16 snXdata : Assembly
    UInt16 snPdata : Assembly
    UInt16 snNewFPO : Assembly
    UInt16 snSectionHdrOrig : Assembly
Struct Microsoft.Cci.Pdb.DbiHeader: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Microsoft.Cci.Pdb.BitAccess): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int32 sig : Assembly
    Int32 ver : Assembly
    Int32 age : Assembly
    Int16 gssymStream : Assembly
    UInt16 vers : Assembly
    Int16 pssymStream : Assembly
    UInt16 pdbver : Assembly
    Int16 symrecStream : Assembly
    UInt16 pdbver2 : Assembly
    Int32 gpmodiSize : Assembly
    Int32 secconSize : Assembly
    Int32 secmapSize : Assembly
    Int32 filinfSize : Assembly
    Int32 tsmapSize : Assembly
    Int32 mfcIndex : Assembly
    Int32 dbghdrSize : Assembly
    Int32 ecinfoSize : Assembly
    UInt16 flags : Assembly
    UInt16 machine : Assembly
    Int32 reserved : Assembly
Class Microsoft.Cci.Pdb.DbiModuleInfo: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(Microsoft.Cci.Pdb.BitAccess, Boolean): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int32 opened : Assembly
    UInt16 flags : Assembly
    Int16 stream : Assembly
    Int32 cbSyms : Assembly
    Int32 cbOldLines : Assembly
    Int32 cbLines : Assembly
    Int16 files : Assembly
    Int16 pad1 : Assembly
    UInt32 offsets : Assembly
    Int32 niSource : Assembly
    Int32 niCompiler : Assembly
    System.String moduleName : Assembly
    System.String objectName : Assembly
Struct Microsoft.Cci.Pdb.DbiSecCon: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Microsoft.Cci.Pdb.BitAccess): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int16 section : Assembly
    Int16 pad1 : Assembly
    Int32 offset : Assembly
    Int32 size : Assembly
    UInt32 flags : Assembly
    Int16 module : Assembly
    Int16 pad2 : Assembly
    UInt32 dataCrc : Assembly
    UInt32 relocCrc : Assembly
Interface Microsoft.Cci.Pdb.ILocalScope: AutoLayout, AnsiClass, Class, ClassSemanticsMask, Abstract
  Properties:
    UInt32 Offset 'get ' : 
    UInt32 Length 'get ' : 
  Methods:
    get_Offset(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Length(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
Interface Microsoft.Cci.Pdb.INamespaceScope: AutoLayout, AnsiClass, Class, ClassSemanticsMask, Abstract
  Properties:
    System.Collections.Generic.IEnumerable`1[Microsoft.Cci.Pdb.IUsedNamespace] UsedNamespaces 'get ' : 
  Methods:
    get_UsedNamespaces(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
Interface Microsoft.Cci.Pdb.IUsedNamespace: AutoLayout, AnsiClass, Class, ClassSemanticsMask, Abstract
  Properties:
    Microsoft.Cci.Pdb.IName Alias 'get ' : 
    Microsoft.Cci.Pdb.IName NamespaceName 'get ' : 
  Methods:
    get_Alias(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_NamespaceName(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
Interface Microsoft.Cci.Pdb.IName: AutoLayout, AnsiClass, Class, ClassSemanticsMask, Abstract
  Properties:
    Int32 UniqueKey 'get ' : 
    Int32 UniqueKeyIgnoringCase 'get ' : 
    System.String Value 'get ' : 
  Methods:
    get_UniqueKey(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_UniqueKeyIgnoringCase(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Value(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
Class Microsoft.Cci.Pdb.IntHashTable: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32, Int32): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Object Item [Int32] 'get ' : 
  Methods:
    Add(Int32, Object): PrivateScope, Assembly, HideBySig
    get_Item(Int32): PrivateScope, Assembly, HideBySig, SpecialName
Class Microsoft.Cci.Pdb.MsfDirectory: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(Microsoft.Cci.Pdb.PdbReader, Microsoft.Cci.Pdb.PdbFileHeader, Microsoft.Cci.Pdb.BitAccess): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Fields:
    Microsoft.Cci.Pdb.DataStream[] streams : Assembly
Class Microsoft.Cci.Pdb.PdbConstant: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(System.String, UInt32, System.Object): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Microsoft.Cci.Pdb.BitAccess): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Fields:
    System.String name : Assembly
    UInt32 token : Assembly
    System.Object value : Assembly
Class Microsoft.Cci.Pdb.PdbDebugException: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :System.IO.IOException
    Void .ctor(System.String, System.Object[]): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
Class Microsoft.Cci.Pdb.PdbException: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :System.IO.IOException
    Void .ctor(System.String, System.Object[]): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
Class Microsoft.Cci.Pdb.PdbFile: AutoLayout, AnsiClass, Class, BeforeFieldInit
  Fields:
    System.Guid SymDocumentType_Text : Public, Static, InitOnly
  Methods:
    LoadFunctions(Stream): PrivateScope, Assembly, Static, HideBySig
Class Microsoft.Cci.Pdb.PdbFileHeader: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(System.IO.Stream, Microsoft.Cci.Pdb.BitAccess): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Fields:
    Byte[] magic : Assembly, InitOnly
    Int32 pageSize : Assembly, InitOnly
    Int32 freePageMap : Assembly
    Int32 pagesUsed : Assembly
    Int32 directorySize : Assembly
    Int32 zero : Assembly, InitOnly
    Int32[] directoryRoot : Assembly
Class Microsoft.Cci.Pdb.PdbFunction: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Microsoft.Cci.Pdb.ManProcSym, Microsoft.Cci.Pdb.BitAccess): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Fields:
    UInt32 token : Assembly
    UInt32 slotToken : Assembly
    UInt32 tokenOfMethodWhoseUsingInfoAppliesToThisMethod : Assembly
    UInt32 segment : Assembly
    UInt32 address : Assembly
    UInt32 length : Assembly
    Microsoft.Cci.Pdb.PdbScope[] scopes : Assembly
    Microsoft.Cci.Pdb.PdbSlot[] slots : Assembly
    Microsoft.Cci.Pdb.PdbConstant[] constants : Assembly
    System.String[] usedNamespaces : Assembly
    Microsoft.Cci.Pdb.PdbLines[] lines : Assembly
    UInt16[] usingCounts : Assembly
    System.Collections.Generic.IEnumerable`1[Microsoft.Cci.Pdb.INamespaceScope] namespaceScopes : Assembly
    System.String iteratorClass : Assembly
    System.Collections.Generic.List`1[Microsoft.Cci.Pdb.ILocalScope] iteratorScopes : Assembly
    Microsoft.Cci.Pdb.PdbSynchronizationInformation synchronizationInformation : Assembly
    System.Guid msilMetaData : Assembly, Static, InitOnly
    System.Collections.IComparer byAddress : Assembly, Static, InitOnly
    System.Collections.IComparer byAddressAndToken : Assembly, Static, InitOnly
  Methods:
    AdjustVisualBasicScopes(): PrivateScope, Assembly, HideBySig
    LoadManagedFunctions(BitAccess, UInt32, Boolean): PrivateScope, Assembly, Static, HideBySig
    CountScopesAndSlots(BitAccess, UInt32, Int32&(Out), Int32&(Out), Int32&(Out), Int32&(Out)): PrivateScope, Assembly, Static, HideBySig
    ReadMD2CustomMetadata(BitAccess): PrivateScope, Assembly, HideBySig
Class Microsoft.Cci.Pdb.PdbFunction+PdbFunctionsByAddress: AutoLayout, AnsiClass, Class, NestedAssembly, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Collections.IComparer
  Methods:
    Compare(Object, Object): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Microsoft.Cci.Pdb.PdbFunction+PdbFunctionsByAddressAndToken: AutoLayout, AnsiClass, Class, NestedAssembly, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Collections.IComparer
  Methods:
    Compare(Object, Object): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Microsoft.Cci.Pdb.PdbSynchronizationInformation: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(Microsoft.Cci.Pdb.BitAccess): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Fields:
    UInt32 kickoffMethodToken : Assembly
    UInt32 generatedCatchHandlerIlOffset : Assembly
    Microsoft.Cci.Pdb.PdbSynchronizationPoint[] synchronizationPoints : Assembly
  Properties:
    UInt32 GeneratedCatchHandlerOffset 'get ' : 
  Methods:
    get_GeneratedCatchHandlerOffset(): PrivateScope, Public, HideBySig, SpecialName
Class Microsoft.Cci.Pdb.PdbSynchronizationPoint: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(Microsoft.Cci.Pdb.BitAccess): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Fields:
    UInt32 synchronizeOffset : Assembly
    UInt32 continuationMethodToken : Assembly
    UInt32 continuationOffset : Assembly
  Properties:
    UInt32 SynchronizeOffset 'get ' : 
    UInt32 ContinuationOffset 'get ' : 
  Methods:
    get_SynchronizeOffset(): PrivateScope, Public, HideBySig, SpecialName
    get_ContinuationOffset(): PrivateScope, Public, HideBySig, SpecialName
Class Microsoft.Cci.Pdb.PdbInfo: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Microsoft.Cci.Pdb.PdbFunction[] Functions : Public
    System.Collections.Generic.Dictionary`2[System.UInt32,Microsoft.Cci.Pdb.PdbTokenLine] TokenToSourceMapping : Public
    System.String SourceServerData : Public
    Int32 Age : Public
    System.Guid Guid : Public
    Byte[] SourceLinkData : Public
Struct Microsoft.Cci.Pdb.PdbLine: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(UInt32, UInt32, UInt16, UInt32, UInt16): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Fields:
    UInt32 offset : Assembly
    UInt32 lineBegin : Assembly
    UInt32 lineEnd : Assembly
    UInt16 colBegin : Assembly
    UInt16 colEnd : Assembly
Class Microsoft.Cci.Pdb.PdbLines: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(Microsoft.Cci.Pdb.PdbSource, UInt32): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Fields:
    Microsoft.Cci.Pdb.PdbSource file : Assembly
    Microsoft.Cci.Pdb.PdbLine[] lines : Assembly
Class Microsoft.Cci.Pdb.PdbReader: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(System.IO.Stream, Int32): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int32 pageSize : Assembly, InitOnly
    System.IO.Stream reader : Assembly, InitOnly
  Methods:
    Seek(Int32, Int32): PrivateScope, Assembly, HideBySig
    Read(Byte[], Int32, Int32): PrivateScope, Assembly, HideBySig
    PagesFromSize(Int32): PrivateScope, Assembly, HideBySig
Class Microsoft.Cci.Pdb.PdbScope: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(UInt32, UInt32, UInt32, Microsoft.Cci.Pdb.PdbSlot[], Microsoft.Cci.Pdb.PdbConstant[], System.String[]): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(UInt32, UInt32, Microsoft.Cci.Pdb.PdbSlot[], Microsoft.Cci.Pdb.PdbConstant[], System.String[]): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(UInt32, Microsoft.Cci.Pdb.BlockSym32, Microsoft.Cci.Pdb.BitAccess, UInt32 ByRef): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Fields:
    Microsoft.Cci.Pdb.PdbConstant[] constants : Assembly
    Microsoft.Cci.Pdb.PdbSlot[] slots : Assembly
    Microsoft.Cci.Pdb.PdbScope[] scopes : Assembly
    System.String[] usedNamespaces : Assembly
    UInt32 address : Assembly
    UInt32 offset : Assembly
    UInt32 length : Assembly
Class Microsoft.Cci.Pdb.PdbSlot: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(UInt32, UInt32, System.String, UInt16): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Microsoft.Cci.Pdb.BitAccess): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Fields:
    UInt32 slot : Assembly
    UInt32 typeToken : Assembly
    System.String name : Assembly
    UInt16 flags : Assembly
Class Microsoft.Cci.Pdb.PdbSource: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(System.String, System.Guid, System.Guid, System.Guid, System.Guid, Byte[]): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Fields:
    System.String name : Assembly
    System.Guid doctype : Assembly
    System.Guid language : Assembly
    System.Guid vendor : Assembly
    System.Guid checksumAlgorithm : Assembly
    Byte[] checksum : Assembly
Class Microsoft.Cci.Pdb.PdbTokenLine: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(UInt32, UInt32, UInt32, UInt32, UInt32, UInt32): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Fields:
    UInt32 token : Assembly
    UInt32 file_id : Assembly
    UInt32 line : Assembly
    UInt32 column : Assembly
    UInt32 endLine : Assembly
    UInt32 endColumn : Assembly
    Microsoft.Cci.Pdb.PdbSource sourceFile : Assembly
    Microsoft.Cci.Pdb.PdbTokenLine nextLine : Assembly
Class Microsoft.Cci.Pdb.PdbIteratorScope: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
    Void .ctor(UInt32, UInt32): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Microsoft.Cci.Pdb.ILocalScope
  Properties:
    UInt32 Offset 'get ' : 
    UInt32 Length 'get ' : 
  Methods:
    get_Offset(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Length(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
Class Mono.Cecil.Rocks.DocCommentId: AutoLayout, AnsiClass, Class, BeforeFieldInit
  Methods:
    ToString(): PrivateScope, Public, Virtual, HideBySig
    GetDocCommentId(IMemberDefinition): PrivateScope, Public, Static, HideBySig
Class Mono.Cecil.Rocks.Functional: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Methods:
    Y(Func`2): PrivateScope, Public, Static, HideBySig
    Prepend(IEnumerable`1, TSource): PrivateScope, Public, Static, HideBySig
Interface Mono.Cecil.Rocks.IILVisitor: AutoLayout, AnsiClass, Class, ClassSemanticsMask, Abstract
  Methods:
    OnInlineNone(OpCode): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    OnInlineSByte(OpCode, SByte): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    OnInlineByte(OpCode, Byte): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    OnInlineInt32(OpCode, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    OnInlineInt64(OpCode, Int64): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    OnInlineSingle(OpCode, Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    OnInlineDouble(OpCode, Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    OnInlineString(OpCode, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    OnInlineBranch(OpCode, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    OnInlineSwitch(OpCode, Int32[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    OnInlineVariable(OpCode, VariableDefinition): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    OnInlineArgument(OpCode, ParameterDefinition): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    OnInlineSignature(OpCode, CallSite): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    OnInlineType(OpCode, TypeReference): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    OnInlineField(OpCode, FieldReference): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    OnInlineMethod(OpCode, MethodReference): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class Mono.Cecil.Rocks.ILParser: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Methods:
    Parse(MethodDefinition, IILVisitor): PrivateScope, Public, Static, HideBySig
Class Mono.Cecil.Rocks.MethodBodyRocks: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Methods:
    SimplifyMacros(MethodBody): PrivateScope, Public, Static, HideBySig
    Optimize(MethodBody): PrivateScope, Public, Static, HideBySig
    OptimizeMacros(MethodBody): PrivateScope, Public, Static, HideBySig
Class Mono.Cecil.Rocks.MethodDefinitionRocks: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Methods:
    GetBaseMethod(MethodDefinition): PrivateScope, Public, Static, HideBySig
    GetOriginalBaseMethod(MethodDefinition): PrivateScope, Public, Static, HideBySig
Class Mono.Cecil.Rocks.ModuleDefinitionRocks: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Methods:
    GetAllTypes(ModuleDefinition): PrivateScope, Public, Static, HideBySig
Class Mono.Cecil.Rocks.ParameterReferenceRocks: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Methods:
    GetSequence(ParameterReference): PrivateScope, Public, Static, HideBySig
Class Mono.Cecil.Rocks.SecurityDeclarationRocks: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Methods:
    ToPermissionSet(SecurityDeclaration): PrivateScope, Public, Static, HideBySig
    ToSecurityDeclaration(PermissionSet, SecurityAction, ModuleDefinition): PrivateScope, Public, Static, HideBySig
Class Mono.Cecil.Rocks.TypeDefinitionRocks: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Methods:
    GetConstructors(TypeDefinition): PrivateScope, Public, Static, HideBySig
    GetStaticConstructor(TypeDefinition): PrivateScope, Public, Static, HideBySig
    GetMethods(TypeDefinition): PrivateScope, Public, Static, HideBySig
    GetEnumUnderlyingType(TypeDefinition): PrivateScope, Public, Static, HideBySig
Class Mono.Cecil.Rocks.TypeReferenceRocks: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Methods:
    MakeArrayType(TypeReference): PrivateScope, Public, Static, HideBySig
    MakeArrayType(TypeReference, Int32): PrivateScope, Public, Static, HideBySig
    MakePointerType(TypeReference): PrivateScope, Public, Static, HideBySig
    MakeByReferenceType(TypeReference): PrivateScope, Public, Static, HideBySig
    MakeOptionalModifierType(TypeReference, TypeReference): PrivateScope, Public, Static, HideBySig
    MakeRequiredModifierType(TypeReference, TypeReference): PrivateScope, Public, Static, HideBySig
    MakeGenericInstanceType(TypeReference, TypeReference[]): PrivateScope, Public, Static, HideBySig
    MakePinnedType(TypeReference): PrivateScope, Public, Static, HideBySig
    MakeSentinelType(TypeReference): PrivateScope, Public, Static, HideBySig
Class System.Runtime.CompilerServices.IsReadOnlyAttribute: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :System.Attribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class System.Runtime.CompilerServices.IsByRefLikeAttribute: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :System.Attribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class System.Runtime.CompilerServices.NullableAttribute: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :System.Attribute
    Void .ctor(Byte): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Byte[] NullableFlags : Public, InitOnly
Class System.Runtime.CompilerServices.NullableContextAttribute: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :System.Attribute
    Void .ctor(Byte): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Byte Flag : Public, InitOnly
Class System.Runtime.CompilerServices.NativeIntegerAttribute: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :System.Attribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Boolean[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Boolean[] TransformFlags : Public, InitOnly
Class MonoMod.Backports.MethodImplOptionsEx: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Fields:
    System.Runtime.CompilerServices.MethodImplOptions Unmanaged = 4 : Public, Static, Literal, HasDefault
    System.Runtime.CompilerServices.MethodImplOptions NoInlining = 8 : Public, Static, Literal, HasDefault
    System.Runtime.CompilerServices.MethodImplOptions ForwardRef = 16 : Public, Static, Literal, HasDefault
    System.Runtime.CompilerServices.MethodImplOptions Synchronized = 32 : Public, Static, Literal, HasDefault
    System.Runtime.CompilerServices.MethodImplOptions NoOptimization = 64 : Public, Static, Literal, HasDefault
    System.Runtime.CompilerServices.MethodImplOptions PreserveSig = 128 : Public, Static, Literal, HasDefault
    System.Runtime.CompilerServices.MethodImplOptions AggressiveInlining = 256 : Public, Static, Literal, HasDefault
    System.Runtime.CompilerServices.MethodImplOptions AggressiveOptimization = 512 : Public, Static, Literal, HasDefault
    System.Runtime.CompilerServices.MethodImplOptions InternalCall = 4096 : Public, Static, Literal, HasDefault
Class System.ArrayEx: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Properties:
    Int32 MaxLength 'get ' : 
  Methods:
    Empty(): PrivateScope, Public, Static, HideBySig
    get_MaxLength(): PrivateScope, Public, Static, HideBySig, SpecialName
Struct System.SequencePosition: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(System.Object, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IEquatable`1[System.SequencePosition]
  Methods:
    GetObject(): PrivateScope, Public, HideBySig
    GetInteger(): PrivateScope, Public, HideBySig
    Equals(SequencePosition): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
Class System.EnvironmentEx: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Properties:
    Int32 CurrentManagedThreadId 'get ' : 
  Methods:
    get_CurrentManagedThreadId(): PrivateScope, Public, Static, HideBySig, SpecialName
Class System.Gen2GcCallback: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :System.Runtime.ConstrainedExecution.CriticalFinalizerObject
  Methods:
    Register(Func`1): PrivateScope, Public, Static, HideBySig
    Register(Func`2, Object): PrivateScope, Public, Static, HideBySig
Struct System.HashCode: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Methods:
    Combine(T1): PrivateScope, Public, Static, HideBySig
    Combine(T1, T2): PrivateScope, Public, Static, HideBySig
    Combine(T1, T2, T3): PrivateScope, Public, Static, HideBySig
    Combine(T1, T2, T3, T4): PrivateScope, Public, Static, HideBySig
    Combine(T1, T2, T3, T4, T5): PrivateScope, Public, Static, HideBySig
    Combine(T1, T2, T3, T4, T5, T6): PrivateScope, Public, Static, HideBySig
    Combine(T1, T2, T3, T4, T5, T6, T7): PrivateScope, Public, Static, HideBySig
    Combine(T1, T2, T3, T4, T5, T6, T7, T8): PrivateScope, Public, Static, HideBySig
    Add(T): PrivateScope, Public, HideBySig
    Add(T, IEqualityComparer`1): PrivateScope, Public, HideBySig
    AddBytes(ReadOnlySpan`1): PrivateScope, Public, HideBySig
    ToHashCode(): PrivateScope, Public, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig (Obsolete)
    Equals(Object): PrivateScope, Public, Virtual, HideBySig (Obsolete)
Class System.MathEx: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Methods:
    Clamp(Byte, Byte, Byte): PrivateScope, Public, Static, HideBySig
    Clamp(Decimal, Decimal, Decimal): PrivateScope, Public, Static, HideBySig
    Clamp(Double, Double, Double): PrivateScope, Public, Static, HideBySig
    Clamp(Int16, Int16, Int16): PrivateScope, Public, Static, HideBySig
    Clamp(Int32, Int32, Int32): PrivateScope, Public, Static, HideBySig
    Clamp(Int64, Int64, Int64): PrivateScope, Public, Static, HideBySig
    Clamp(IntPtr, IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig
    Clamp(SByte, SByte, SByte): PrivateScope, Public, Static, HideBySig
    Clamp(Single, Single, Single): PrivateScope, Public, Static, HideBySig
    Clamp(UInt16, UInt16, UInt16): PrivateScope, Public, Static, HideBySig
    Clamp(UInt32, UInt32, UInt32): PrivateScope, Public, Static, HideBySig
    Clamp(UInt64, UInt64, UInt64): PrivateScope, Public, Static, HideBySig
    Clamp(UIntPtr, UIntPtr, UIntPtr): PrivateScope, Public, Static, HideBySig
Struct System.Memory`1[T]: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  Type parameter: T
  :System.ValueType
    Void .ctor(T[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(T[], Int32): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(T[], Int32, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Buffers.MemoryManager`1[T], Int32): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Buffers.MemoryManager`1[T], Int32, Int32): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Object, Int32, Int32): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Memory`1[T] Empty 'get ' : 
    Int32 Length 'get ' : 
    Boolean IsEmpty 'get ' : 
    System.Span`1[T] Span 'get ' : 
  Methods:
    op_Implicit(T[]): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Implicit(ArraySegment`1): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Implicit(Memory`1): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Empty(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Length(): PrivateScope, Public, HideBySig, SpecialName
    get_IsEmpty(): PrivateScope, Public, HideBySig, SpecialName
    ToString(): PrivateScope, Public, Virtual, HideBySig
    Slice(Int32): PrivateScope, Public, HideBySig
    Slice(Int32, Int32): PrivateScope, Public, HideBySig
    get_Span(): PrivateScope, Public, HideBySig, SpecialName
    CopyTo(Memory`1): PrivateScope, Public, HideBySig
    TryCopyTo(Memory`1): PrivateScope, Public, HideBySig
    Pin(): PrivateScope, Public, HideBySig
    ToArray(): PrivateScope, Public, HideBySig
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    Equals(Memory`1): PrivateScope, Public, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
Class System.MemoryDebugView`1[T]: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  Type parameter: T
    Void .ctor(System.Memory`1[T]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.ReadOnlyMemory`1[T]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    T[] Items  'get ' : 
  Methods:
    get_Items(): PrivateScope, Public, HideBySig, SpecialName
Class System.MemoryExtensions: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Fields:
    IntPtr StringAdjustment : Assembly, Static, InitOnly
  Methods:
    EndsWith(ReadOnlySpan`1, ReadOnlySpan`1, StringComparison): PrivateScope, Public, Static, HideBySig
    StartsWith(ReadOnlySpan`1, ReadOnlySpan`1, StringComparison): PrivateScope, Public, Static, HideBySig
    AsSpan(String): PrivateScope, Public, Static, HideBySig
    AsSpan(String, Int32): PrivateScope, Public, Static, HideBySig
    AsSpan(String, Int32, Int32): PrivateScope, Public, Static, HideBySig
    AsMemory(String): PrivateScope, Public, Static, HideBySig
    AsMemory(String, Int32): PrivateScope, Public, Static, HideBySig
    AsMemory(String, Int32, Int32): PrivateScope, Public, Static, HideBySig
    Trim(ReadOnlySpan`1): PrivateScope, Public, Static, HideBySig
    TrimStart(ReadOnlySpan`1): PrivateScope, Public, Static, HideBySig
    TrimEnd(ReadOnlySpan`1): PrivateScope, Public, Static, HideBySig
    Trim(ReadOnlySpan`1, Char): PrivateScope, Public, Static, HideBySig
    TrimStart(ReadOnlySpan`1, Char): PrivateScope, Public, Static, HideBySig
    TrimEnd(ReadOnlySpan`1, Char): PrivateScope, Public, Static, HideBySig
    Trim(ReadOnlySpan`1, ReadOnlySpan`1): PrivateScope, Public, Static, HideBySig
    TrimStart(ReadOnlySpan`1, ReadOnlySpan`1): PrivateScope, Public, Static, HideBySig
    TrimEnd(ReadOnlySpan`1, ReadOnlySpan`1): PrivateScope, Public, Static, HideBySig
    IsWhiteSpace(ReadOnlySpan`1): PrivateScope, Public, Static, HideBySig
    IndexOf(Span`1, T): PrivateScope, Public, Static, HideBySig
    IndexOf(Span`1, ReadOnlySpan`1): PrivateScope, Public, Static, HideBySig
    LastIndexOf(Span`1, T): PrivateScope, Public, Static, HideBySig
    LastIndexOf(Span`1, ReadOnlySpan`1): PrivateScope, Public, Static, HideBySig
    SequenceEqual(Span`1, ReadOnlySpan`1): PrivateScope, Public, Static, HideBySig
    SequenceCompareTo(Span`1, ReadOnlySpan`1): PrivateScope, Public, Static, HideBySig
    IndexOf(ReadOnlySpan`1, T): PrivateScope, Public, Static, HideBySig
    IndexOf(ReadOnlySpan`1, ReadOnlySpan`1): PrivateScope, Public, Static, HideBySig
    LastIndexOf(ReadOnlySpan`1, T): PrivateScope, Public, Static, HideBySig
    LastIndexOf(ReadOnlySpan`1, ReadOnlySpan`1): PrivateScope, Public, Static, HideBySig
    IndexOfAny(Span`1, T, T): PrivateScope, Public, Static, HideBySig
    IndexOfAny(Span`1, T, T, T): PrivateScope, Public, Static, HideBySig
    IndexOfAny(Span`1, ReadOnlySpan`1): PrivateScope, Public, Static, HideBySig
    IndexOfAny(ReadOnlySpan`1, T, T): PrivateScope, Public, Static, HideBySig
    IndexOfAny(ReadOnlySpan`1, T, T, T): PrivateScope, Public, Static, HideBySig
    IndexOfAny(ReadOnlySpan`1, ReadOnlySpan`1): PrivateScope, Public, Static, HideBySig
    LastIndexOfAny(Span`1, T, T): PrivateScope, Public, Static, HideBySig
    LastIndexOfAny(Span`1, T, T, T): PrivateScope, Public, Static, HideBySig
    LastIndexOfAny(Span`1, ReadOnlySpan`1): PrivateScope, Public, Static, HideBySig
    LastIndexOfAny(ReadOnlySpan`1, T, T): PrivateScope, Public, Static, HideBySig
    LastIndexOfAny(ReadOnlySpan`1, T, T, T): PrivateScope, Public, Static, HideBySig
    LastIndexOfAny(ReadOnlySpan`1, ReadOnlySpan`1): PrivateScope, Public, Static, HideBySig
    SequenceEqual(ReadOnlySpan`1, ReadOnlySpan`1): PrivateScope, Public, Static, HideBySig
    SequenceCompareTo(ReadOnlySpan`1, ReadOnlySpan`1): PrivateScope, Public, Static, HideBySig
    StartsWith(Span`1, ReadOnlySpan`1): PrivateScope, Public, Static, HideBySig
    StartsWith(ReadOnlySpan`1, ReadOnlySpan`1): PrivateScope, Public, Static, HideBySig
    EndsWith(Span`1, ReadOnlySpan`1): PrivateScope, Public, Static, HideBySig
    EndsWith(ReadOnlySpan`1, ReadOnlySpan`1): PrivateScope, Public, Static, HideBySig
    Reverse(Span`1): PrivateScope, Public, Static, HideBySig
    AsSpan(T[]): PrivateScope, Public, Static, HideBySig
    AsSpan(T[], Int32, Int32): PrivateScope, Public, Static, HideBySig
    AsSpan(ArraySegment`1): PrivateScope, Public, Static, HideBySig
    AsSpan(ArraySegment`1, Int32): PrivateScope, Public, Static, HideBySig
    AsSpan(ArraySegment`1, Int32, Int32): PrivateScope, Public, Static, HideBySig
    AsMemory(T[]): PrivateScope, Public, Static, HideBySig
    AsMemory(T[], Int32): PrivateScope, Public, Static, HideBySig
    AsMemory(T[], Int32, Int32): PrivateScope, Public, Static, HideBySig
    AsMemory(ArraySegment`1): PrivateScope, Public, Static, HideBySig
    AsMemory(ArraySegment`1, Int32): PrivateScope, Public, Static, HideBySig
    AsMemory(ArraySegment`1, Int32, Int32): PrivateScope, Public, Static, HideBySig
    CopyTo(T[], Span`1): PrivateScope, Public, Static, HideBySig
    CopyTo(T[], Memory`1): PrivateScope, Public, Static, HideBySig
    Overlaps(Span`1, ReadOnlySpan`1): PrivateScope, Public, Static, HideBySig
    Overlaps(Span`1, ReadOnlySpan`1, Int32&(Out)): PrivateScope, Public, Static, HideBySig
    Overlaps(ReadOnlySpan`1, ReadOnlySpan`1): PrivateScope, Public, Static, HideBySig
    Overlaps(ReadOnlySpan`1, ReadOnlySpan`1, Int32&(Out)): PrivateScope, Public, Static, HideBySig
    BinarySearch(Span`1, IComparable`1): PrivateScope, Public, Static, HideBySig
    BinarySearch(Span`1, TComparable): PrivateScope, Public, Static, HideBySig
    BinarySearch(Span`1, T, TComparer): PrivateScope, Public, Static, HideBySig
    BinarySearch(ReadOnlySpan`1, IComparable`1): PrivateScope, Public, Static, HideBySig
    BinarySearch(ReadOnlySpan`1, TComparable): PrivateScope, Public, Static, HideBySig
    BinarySearch(ReadOnlySpan`1, T, TComparer): PrivateScope, Public, Static, HideBySig
    AsSpan(T[], Int32): PrivateScope, Public, Static, HideBySig
    Contains(ReadOnlySpan`1, ReadOnlySpan`1, StringComparison): PrivateScope, Public, Static, HideBySig
    Equals(ReadOnlySpan`1, ReadOnlySpan`1, StringComparison): PrivateScope, Public, Static, HideBySig
    CompareTo(ReadOnlySpan`1, ReadOnlySpan`1, StringComparison): PrivateScope, Public, Static, HideBySig
    IndexOf(ReadOnlySpan`1, ReadOnlySpan`1, StringComparison): PrivateScope, Public, Static, HideBySig
    ToLower(ReadOnlySpan`1, Span`1, CultureInfo): PrivateScope, Public, Static, HideBySig
    ToLowerInvariant(ReadOnlySpan`1, Span`1): PrivateScope, Public, Static, HideBySig
    ToUpper(ReadOnlySpan`1, Span`1, CultureInfo): PrivateScope, Public, Static, HideBySig
    ToUpperInvariant(ReadOnlySpan`1, Span`1): PrivateScope, Public, Static, HideBySig
Class System.Pinnable`1[T]: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  Type parameter: T
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    T Data : Public
Struct System.ReadOnlyMemory`1[T]: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  Type parameter: T
  :System.ValueType
    Void .ctor(T[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(T[], Int32, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Object, Int32, Int32): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int32 RemoveFlagsBitMask = 2147483647 : Assembly, Static, Literal, HasDefault
  Properties:
    System.ReadOnlyMemory`1[T] Empty 'get ' : 
    Int32 Length 'get ' : 
    Boolean IsEmpty 'get ' : 
    System.ReadOnlySpan`1[T] Span 'get ' : 
  Methods:
    op_Implicit(T[]): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Implicit(ArraySegment`1): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Empty(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Length(): PrivateScope, Public, HideBySig, SpecialName
    get_IsEmpty(): PrivateScope, Public, HideBySig, SpecialName
    ToString(): PrivateScope, Public, Virtual, HideBySig
    Slice(Int32): PrivateScope, Public, HideBySig
    Slice(Int32, Int32): PrivateScope, Public, HideBySig
    get_Span(): PrivateScope, Public, HideBySig, SpecialName
    CopyTo(Memory`1): PrivateScope, Public, HideBySig
    TryCopyTo(Memory`1): PrivateScope, Public, HideBySig
    Pin(): PrivateScope, Public, HideBySig
    ToArray(): PrivateScope, Public, HideBySig
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    Equals(ReadOnlyMemory`1): PrivateScope, Public, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    GetObjectStartLength(Int32&(Out), Int32&(Out)): PrivateScope, Assembly, HideBySig
Struct System.ReadOnlySpan`1[T]: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit (Obsolete)
  Type parameter: T
  :System.ValueType
    Void .ctor(T[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(T[], Int32, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Void*, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Pinnable`1[T], IntPtr, Int32): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 Length 'get ' : 
    Boolean IsEmpty 'get ' : 
    System.ReadOnlySpan`1[T] Empty 'get ' : 
    T& Item [Int32] 'get ' InAttribute : 
    System.Pinnable`1[T] Pinnable 'get ' : 
    IntPtr ByteOffset 'get ' : 
  Methods:
    get_Length(): PrivateScope, Public, HideBySig, SpecialName
    get_IsEmpty(): PrivateScope, Public, HideBySig, SpecialName
    op_Inequality(ReadOnlySpan`1, ReadOnlySpan`1): PrivateScope, Public, Static, HideBySig, SpecialName
    Equals(Object): PrivateScope, Public, Virtual, HideBySig (Obsolete)
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig (Obsolete)
    op_Implicit(T[]): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Implicit(ArraySegment`1): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Empty(): PrivateScope, Public, Static, HideBySig, SpecialName
    GetEnumerator(): PrivateScope, Public, HideBySig
    get_Item(Int32): PrivateScope, Public, HideBySig, SpecialName
    GetPinnableReference(): PrivateScope, Public, HideBySig
    CopyTo(Span`1): PrivateScope, Public, HideBySig
    TryCopyTo(Span`1): PrivateScope, Public, HideBySig
    op_Equality(ReadOnlySpan`1, ReadOnlySpan`1): PrivateScope, Public, Static, HideBySig, SpecialName
    ToString(): PrivateScope, Public, Virtual, HideBySig
    Slice(Int32): PrivateScope, Public, HideBySig
    Slice(Int32, Int32): PrivateScope, Public, HideBySig
    ToArray(): PrivateScope, Public, HideBySig
    DangerousGetPinnableReference(): PrivateScope, Assembly, HideBySig
    get_Pinnable(): PrivateScope, Assembly, HideBySig, SpecialName
    get_ByteOffset(): PrivateScope, Assembly, HideBySig, SpecialName
Struct System.ReadOnlySpan`1+Enumerator[T]: AutoLayout, AnsiClass, Class, NestedPublic, SequentialLayout, Sealed, BeforeFieldInit (Obsolete)
  Type parameter: T
  :System.ValueType
    Void .ctor(System.ReadOnlySpan`1[T]): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    T& Current 'get ' InAttribute : 
  Methods:
    MoveNext(): PrivateScope, Public, HideBySig
    get_Current(): PrivateScope, Public, HideBySig, SpecialName
Struct System.Span`1[T]: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit (Obsolete)
  Type parameter: T
  :System.ValueType
    Void .ctor(T[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(T[], Int32, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Void*, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Pinnable`1[T], IntPtr, Int32): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 Length 'get ' : 
    Boolean IsEmpty 'get ' : 
    System.Span`1[T] Empty 'get ' : 
    T& Item [Int32] 'get ' : 
    System.Pinnable`1[T] Pinnable 'get ' : 
    IntPtr ByteOffset 'get ' : 
  Methods:
    get_Length(): PrivateScope, Public, HideBySig, SpecialName
    get_IsEmpty(): PrivateScope, Public, HideBySig, SpecialName
    op_Inequality(Span`1, Span`1): PrivateScope, Public, Static, HideBySig, SpecialName
    Equals(Object): PrivateScope, Public, Virtual, HideBySig (Obsolete)
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig (Obsolete)
    op_Implicit(T[]): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Implicit(ArraySegment`1): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Empty(): PrivateScope, Public, Static, HideBySig, SpecialName
    GetEnumerator(): PrivateScope, Public, HideBySig
    Create(T[], Int32): PrivateScope, Assembly, Static, HideBySig
    get_Item(Int32): PrivateScope, Public, HideBySig, SpecialName
    GetPinnableReference(): PrivateScope, Public, HideBySig
    Clear(): PrivateScope, Public, HideBySig
    Fill(T): PrivateScope, Public, HideBySig
    CopyTo(Span`1): PrivateScope, Public, HideBySig
    TryCopyTo(Span`1): PrivateScope, Public, HideBySig
    op_Equality(Span`1, Span`1): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Implicit(Span`1): PrivateScope, Public, Static, HideBySig, SpecialName
    ToString(): PrivateScope, Public, Virtual, HideBySig
    Slice(Int32): PrivateScope, Public, HideBySig
    Slice(Int32, Int32): PrivateScope, Public, HideBySig
    ToArray(): PrivateScope, Public, HideBySig
    DangerousGetPinnableReference(): PrivateScope, Assembly, HideBySig
    get_Pinnable(): PrivateScope, Assembly, HideBySig, SpecialName
    get_ByteOffset(): PrivateScope, Assembly, HideBySig, SpecialName
Struct System.Span`1+Enumerator[T]: AutoLayout, AnsiClass, Class, NestedPublic, SequentialLayout, Sealed, BeforeFieldInit (Obsolete)
  Type parameter: T
  :System.ValueType
    Void .ctor(System.Span`1[T]): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    T& Current 'get ' : 
  Methods:
    MoveNext(): PrivateScope, Public, HideBySig
    get_Current(): PrivateScope, Public, HideBySig, SpecialName
Class System.SpanDebugView`1[T]: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  Type parameter: T
    Void .ctor(System.Span`1[T]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.ReadOnlySpan`1[T]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    T[] Items  'get ' : 
  Methods:
    get_Items(): PrivateScope, Public, HideBySig, SpecialName
Class System.SpanHelpers: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Methods:
    BinarySearch(ReadOnlySpan`1, TComparable): PrivateScope, Public, Static, HideBySig
    BinarySearch(T&, Int32, TComparable): PrivateScope, Public, Static, HideBySig
    IndexOf(Byte&, Int32, Byte&, Int32): PrivateScope, Public, Static, HideBySig
    IndexOfAny(Byte&, Int32, Byte&, Int32): PrivateScope, Public, Static, HideBySig
    LastIndexOfAny(Byte&, Int32, Byte&, Int32): PrivateScope, Public, Static, HideBySig
    IndexOf(Byte&, Byte, Int32): PrivateScope, Public, Static, HideBySig
    LastIndexOf(Byte&, Int32, Byte&, Int32): PrivateScope, Public, Static, HideBySig
    LastIndexOf(Byte&, Byte, Int32): PrivateScope, Public, Static, HideBySig
    IndexOfAny(Byte&, Byte, Byte, Int32): PrivateScope, Public, Static, HideBySig
    IndexOfAny(Byte&, Byte, Byte, Byte, Int32): PrivateScope, Public, Static, HideBySig
    LastIndexOfAny(Byte&, Byte, Byte, Int32): PrivateScope, Public, Static, HideBySig
    LastIndexOfAny(Byte&, Byte, Byte, Byte, Int32): PrivateScope, Public, Static, HideBySig
    SequenceEqual(Byte&, Byte&, UIntPtr): PrivateScope, Public, Static, HideBySig
    SequenceCompareTo(Byte&, Int32, Byte&, Int32): PrivateScope, Public, Static, HideBySig
    SequenceCompareTo(Char&, Int32, Char&, Int32): PrivateScope, Public, Static, HideBySig
    IndexOf(Char&, Char, Int32): PrivateScope, Public, Static, HideBySig
    LastIndexOf(Char&, Char, Int32): PrivateScope, Public, Static, HideBySig
    CopyTo(T&, Int32, T&, Int32): PrivateScope, Public, Static, HideBySig
    Add(IntPtr, Int32): PrivateScope, Public, Static, HideBySig
    IsReferenceOrContainsReferences(): PrivateScope, Public, Static, HideBySig
    ClearLessThanPointerSized(Byte*, UIntPtr): PrivateScope, Public, Static, HideBySig
    ClearLessThanPointerSized(Byte&, UIntPtr): PrivateScope, Public, Static, HideBySig
    ClearPointerSizedWithoutReferences(Byte&, UIntPtr): PrivateScope, Public, Static, HideBySig
    ClearPointerSizedWithReferences(IntPtr&, UIntPtr): PrivateScope, Public, Static, HideBySig
    IndexOf(T&, Int32, T&, Int32): PrivateScope, Public, Static, HideBySig
    IndexOf(T&, T, Int32): PrivateScope, Public, Static, HideBySig
    IndexOfAny(T&, T, T, Int32): PrivateScope, Public, Static, HideBySig
    IndexOfAny(T&, T, T, T, Int32): PrivateScope, Public, Static, HideBySig
    IndexOfAny(T&, Int32, T&, Int32): PrivateScope, Public, Static, HideBySig
    LastIndexOf(T&, Int32, T&, Int32): PrivateScope, Public, Static, HideBySig
    LastIndexOf(T&, T, Int32): PrivateScope, Public, Static, HideBySig
    LastIndexOfAny(T&, T, T, Int32): PrivateScope, Public, Static, HideBySig
    LastIndexOfAny(T&, T, T, T, Int32): PrivateScope, Public, Static, HideBySig
    LastIndexOfAny(T&, Int32, T&, Int32): PrivateScope, Public, Static, HideBySig
    SequenceEqual(T&, T&, Int32): PrivateScope, Public, Static, HideBySig
    SequenceCompareTo(T&, Int32, T&, Int32): PrivateScope, Public, Static, HideBySig
Struct System.SpanHelpers+ComparerComparable`2[T,TComparer]: AutoLayout, AnsiClass, Class, NestedAssembly, SequentialLayout, Sealed, BeforeFieldInit
  Type parameter: T
  Type parameter: TComparer, System.Collections.Generic.IComparer`1[T]
  :System.ValueType
    Void .ctor(T, TComparer): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IComparable`1[T]
  Methods:
    CompareTo(T): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class System.SpanHelpers+PerTypeValues`1[T]: AutoLayout, AnsiClass, Class, NestedPublic, Abstract, Sealed, BeforeFieldInit
  Type parameter: T
  Fields:
    Boolean IsReferenceOrContainsReferences : Public, Static, InitOnly
    T[] EmptyArray : Public, Static, InitOnly
    IntPtr ArrayAdjustment : Public, Static, InitOnly
Class System.StringComparerEx: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Methods:
    FromComparison(StringComparison): PrivateScope, Public, Static, HideBySig
Class System.StringExtensions: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Methods:
    Replace(String, String, String, StringComparison): PrivateScope, Public, Static, HideBySig
    Contains(String, String, StringComparison): PrivateScope, Public, Static, HideBySig
    Contains(String, Char, StringComparison): PrivateScope, Public, Static, HideBySig
    GetHashCode(String, StringComparison): PrivateScope, Public, Static, HideBySig
    IndexOf(String, Char, StringComparison): PrivateScope, Public, Static, HideBySig
Class System.ThrowHelper: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Methods:
    ThrowIfArgumentNull(Object, ExceptionArgument): PrivateScope, Assembly, Static, HideBySig
    ThrowIfArgumentNull(Object, String, String(Optional, HasDefault)): PrivateScope, Assembly, Static, HideBySig
    ThrowArgumentNullException(ExceptionArgument): PrivateScope, Assembly, Static, HideBySig
    ThrowArgumentNullException(String, String(Optional, HasDefault)): PrivateScope, Assembly, Static, HideBySig
    ThrowArrayTypeMismatchException(): PrivateScope, Assembly, Static, HideBySig
    ThrowArgumentException_InvalidTypeWithPointersNotSupported(Type): PrivateScope, Assembly, Static, HideBySig
    ThrowArgumentException_DestinationTooShort(): PrivateScope, Assembly, Static, HideBySig
    ThrowArgumentException(String, String(Optional, HasDefault)): PrivateScope, Assembly, Static, HideBySig
    ThrowIndexOutOfRangeException(): PrivateScope, Assembly, Static, HideBySig
    ThrowArgumentOutOfRangeException(): PrivateScope, Assembly, Static, HideBySig
    ThrowArgumentOutOfRangeException(ExceptionArgument): PrivateScope, Assembly, Static, HideBySig
    ThrowArgumentOutOfRangeException_PrecisionTooLarge(): PrivateScope, Assembly, Static, HideBySig
    ThrowArgumentOutOfRangeException_SymbolDoesNotFit(): PrivateScope, Assembly, Static, HideBySig
    ThrowInvalidOperationException(): PrivateScope, Assembly, Static, HideBySig
    ThrowInvalidOperationException_OutstandingReferences(): PrivateScope, Assembly, Static, HideBySig
    ThrowInvalidOperationException_UnexpectedSegmentType(): PrivateScope, Assembly, Static, HideBySig
    ThrowInvalidOperationException_EndPositionNotReached(): PrivateScope, Assembly, Static, HideBySig
    ThrowArgumentOutOfRangeException_PositionOutOfRange(): PrivateScope, Assembly, Static, HideBySig
    ThrowArgumentOutOfRangeException_OffsetOutOfRange(): PrivateScope, Assembly, Static, HideBySig
    ThrowObjectDisposedException_ArrayMemoryPoolBuffer(): PrivateScope, Assembly, Static, HideBySig
    ThrowFormatException_BadFormatSpecifier(): PrivateScope, Assembly, Static, HideBySig
    ThrowArgumentException_OverlapAlignmentMismatch(): PrivateScope, Assembly, Static, HideBySig
    ThrowNotSupportedException(String(Optional, HasDefault)): PrivateScope, Assembly, Static, HideBySig
    ThrowKeyNullException(): PrivateScope, Assembly, Static, HideBySig
    ThrowValueNullException(): PrivateScope, Assembly, Static, HideBySig
    ThrowOutOfMemoryException(): PrivateScope, Assembly, Static, HideBySig
    TryFormatThrowFormatException(Int32&(Out)): PrivateScope, Public, Static, HideBySig
    TryParseThrowFormatException(T&(Out), Int32&(Out)): PrivateScope, Public, Static, HideBySig
    ThrowArgumentValidationException(ReadOnlySequenceSegment`1, Int32, ReadOnlySequenceSegment`1): PrivateScope, Public, Static, HideBySig
    ThrowArgumentValidationException(Array, Int32): PrivateScope, Public, Static, HideBySig
    ThrowArgumentException_TupleIncorrectType(Object): PrivateScope, Assembly, Static, HideBySig
    ThrowStartOrEndArgumentValidationException(Int64): PrivateScope, Public, Static, HideBySig
Struct System.ExceptionArgument: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    System.ExceptionArgument length = 0 : Public, Static, Literal, HasDefault
    System.ExceptionArgument start = 1 : Public, Static, Literal, HasDefault
    System.ExceptionArgument bufferSize = 2 : Public, Static, Literal, HasDefault
    System.ExceptionArgument minimumBufferSize = 3 : Public, Static, Literal, HasDefault
    System.ExceptionArgument elementIndex = 4 : Public, Static, Literal, HasDefault
    System.ExceptionArgument comparable = 5 : Public, Static, Literal, HasDefault
    System.ExceptionArgument comparer = 6 : Public, Static, Literal, HasDefault
    System.ExceptionArgument destination = 7 : Public, Static, Literal, HasDefault
    System.ExceptionArgument offset = 8 : Public, Static, Literal, HasDefault
    System.ExceptionArgument startSegment = 9 : Public, Static, Literal, HasDefault
    System.ExceptionArgument endSegment = 10 : Public, Static, Literal, HasDefault
    System.ExceptionArgument startIndex = 11 : Public, Static, Literal, HasDefault
    System.ExceptionArgument endIndex = 12 : Public, Static, Literal, HasDefault
    System.ExceptionArgument array = 13 : Public, Static, Literal, HasDefault
    System.ExceptionArgument culture = 14 : Public, Static, Literal, HasDefault
    System.ExceptionArgument manager = 15 : Public, Static, Literal, HasDefault
    System.ExceptionArgument key = 16 : Public, Static, Literal, HasDefault
    System.ExceptionArgument collection = 17 : Public, Static, Literal, HasDefault
    System.ExceptionArgument index = 18 : Public, Static, Literal, HasDefault
    System.ExceptionArgument type = 19 : Public, Static, Literal, HasDefault
    System.ExceptionArgument self = 20 : Public, Static, Literal, HasDefault
    System.ExceptionArgument value = 21 : Public, Static, Literal, HasDefault
    System.ExceptionArgument oldValue = 22 : Public, Static, Literal, HasDefault
    System.ExceptionArgument newValue = 23 : Public, Static, Literal, HasDefault
Class System.TypeExtensions: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Methods:
    IsByRefLike(Type): PrivateScope, Public, Static, HideBySig
Class System.Threading.MonitorEx: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Methods:
    Enter(Object, Boolean&): PrivateScope, Public, Static, HideBySig
Class System.Text.StringBuilderExtensions: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Methods:
    Clear(StringBuilder): PrivateScope, Public, Static, HideBySig
Class System.Numerics.BitOperations: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Methods:
    LeadingZeroCount(UInt32): PrivateScope, Public, Static, HideBySig
    LeadingZeroCount(UInt64): PrivateScope, Public, Static, HideBySig
    Log2(UInt32): PrivateScope, Public, Static, HideBySig
    Log2(UInt64): PrivateScope, Public, Static, HideBySig
    Log2Ceiling(UInt32): PrivateScope, Assembly, Static, HideBySig
    Log2Ceiling(UInt64): PrivateScope, Assembly, Static, HideBySig
    PopCount(UInt32): PrivateScope, Public, Static, HideBySig
    PopCount(UInt64): PrivateScope, Public, Static, HideBySig
    TrailingZeroCount(Int32): PrivateScope, Public, Static, HideBySig
    TrailingZeroCount(UInt32): PrivateScope, Public, Static, HideBySig
    TrailingZeroCount(Int64): PrivateScope, Public, Static, HideBySig
    TrailingZeroCount(UInt64): PrivateScope, Public, Static, HideBySig
    RotateLeft(UInt32, Int32): PrivateScope, Public, Static, HideBySig
    RotateLeft(UInt64, Int32): PrivateScope, Public, Static, HideBySig
    RotateRight(UInt32, Int32): PrivateScope, Public, Static, HideBySig
    RotateRight(UInt64, Int32): PrivateScope, Public, Static, HideBySig
    ResetLowestSetBit(UInt32): PrivateScope, Assembly, Static, HideBySig
    ResetBit(UInt32, Int32): PrivateScope, Assembly, Static, HideBySig
    <PopCount>g__SoftwareFallback|11_0(UInt32): PrivateScope, Assembly, Static, HideBySig
    <PopCount>g__SoftwareFallback|12_0(UInt64): PrivateScope, Assembly, Static, HideBySig
Class System.Numerics.BitOperationsEx: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Methods:
    IsPow2(Int32): PrivateScope, Public, Static, HideBySig
    IsPow2(UInt32): PrivateScope, Public, Static, HideBySig
    IsPow2(Int64): PrivateScope, Public, Static, HideBySig
    IsPow2(UInt64): PrivateScope, Public, Static, HideBySig
    IsPow2(IntPtr): PrivateScope, Public, Static, HideBySig
    IsPow2(UIntPtr): PrivateScope, Public, Static, HideBySig
    RoundUpToPowerOf2(UInt32): PrivateScope, Public, Static, HideBySig
    RoundUpToPowerOf2(UInt64): PrivateScope, Public, Static, HideBySig
    RoundUpToPowerOf2(UIntPtr): PrivateScope, Public, Static, HideBySig
    LeadingZeroCount(UInt32): PrivateScope, Public, Static, HideBySig
    LeadingZeroCount(UInt64): PrivateScope, Public, Static, HideBySig
    LeadingZeroCount(UIntPtr): PrivateScope, Public, Static, HideBySig
    Log2(UInt32): PrivateScope, Public, Static, HideBySig
    Log2(UInt64): PrivateScope, Public, Static, HideBySig
    Log2(UIntPtr): PrivateScope, Public, Static, HideBySig
    PopCount(UInt32): PrivateScope, Public, Static, HideBySig
    PopCount(UInt64): PrivateScope, Public, Static, HideBySig
    PopCount(UIntPtr): PrivateScope, Public, Static, HideBySig
    TrailingZeroCount(Int32): PrivateScope, Public, Static, HideBySig
    TrailingZeroCount(UInt32): PrivateScope, Public, Static, HideBySig
    TrailingZeroCount(Int64): PrivateScope, Public, Static, HideBySig
    TrailingZeroCount(UInt64): PrivateScope, Public, Static, HideBySig
    TrailingZeroCount(IntPtr): PrivateScope, Public, Static, HideBySig
    TrailingZeroCount(UIntPtr): PrivateScope, Public, Static, HideBySig
    RotateLeft(UInt32, Int32): PrivateScope, Public, Static, HideBySig
    RotateLeft(UInt64, Int32): PrivateScope, Public, Static, HideBySig
    RotateLeft(UIntPtr, Int32): PrivateScope, Public, Static, HideBySig
    RotateRight(UInt32, Int32): PrivateScope, Public, Static, HideBySig
    RotateRight(UInt64, Int32): PrivateScope, Public, Static, HideBySig
    RotateRight(UIntPtr, Int32): PrivateScope, Public, Static, HideBySig
Class System.IO.StreamExtensions: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Methods:
    CopyTo(Stream, Stream): PrivateScope, Public, Static, HideBySig
    CopyTo(Stream, Stream, Int32): PrivateScope, Public, Static, HideBySig
Class System.Collections.HashHelpers: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Fields:
    UInt32 HashCollisionThreshold = 100 : Public, Static, Literal, HasDefault
    Int32 MaxPrimeArrayLength = 2147483587 : Public, Static, Literal, HasDefault
    Int32 HashPrime = 101 : Public, Static, Literal, HasDefault
  Methods:
    IsPrime(Int32): PrivateScope, Public, Static, HideBySig
    GetPrime(Int32): PrivateScope, Public, Static, HideBySig
    ExpandPrime(Int32): PrivateScope, Public, Static, HideBySig
    GetFastModMultiplier(UInt32): PrivateScope, Public, Static, HideBySig
    FastMod(UInt32, UInt32, UInt64): PrivateScope, Public, Static, HideBySig
Class System.Collections.Concurrent.ConcurrentExtensions: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Methods:
    Clear(ConcurrentBag`1): PrivateScope, Public, Static, HideBySig
    Clear(ConcurrentQueue`1): PrivateScope, Public, Static, HideBySig
    AddOrUpdate(ConcurrentDictionary`2, TKey, Func`3, Func`4, TArg): PrivateScope, Public, Static, HideBySig
    GetOrAdd(ConcurrentDictionary`2, TKey, Func`3, TArg): PrivateScope, Public, Static, HideBySig
    TryRemove(ConcurrentDictionary`2, KeyValuePair`2): PrivateScope, Public, Static, HideBySig
Class System.Buffers.ArrayPool`1[T]: AutoLayout, AnsiClass, Class, Abstract, BeforeFieldInit
  Type parameter: T
  Properties:
    System.Buffers.ArrayPool`1[T] Shared 'get ' : 
  Methods:
    get_Shared(): PrivateScope, Public, Static, HideBySig, SpecialName
    Create(): PrivateScope, Public, Static, HideBySig
    Create(Int32, Int32): PrivateScope, Public, Static, HideBySig
    Rent(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Return(T[], Boolean(Optional, HasDefault)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class System.Buffers.BuffersExtensions: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Methods:
    PositionOf(ReadOnlySequence`1&(In), T): PrivateScope, Public, Static, HideBySig
    CopyTo(ReadOnlySequence`1&(In), Span`1): PrivateScope, Public, Static, HideBySig
    ToArray(ReadOnlySequence`1&(In)): PrivateScope, Public, Static, HideBySig
    Write(IBufferWriter`1, ReadOnlySpan`1): PrivateScope, Public, Static, HideBySig
Class System.Buffers.ConfigurableArrayPool`1[T]: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  Type parameter: T
  :System.Buffers.ArrayPool`1[T]
    Void .ctor(): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32, Int32): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Methods:
    Rent(Int32): PrivateScope, Public, Virtual, HideBySig
    Return(T[], Boolean(Optional, HasDefault)): PrivateScope, Public, Virtual, HideBySig
Interface System.Buffers.IBufferWriter`1[T]: AutoLayout, AnsiClass, Class, ClassSemanticsMask, Abstract, BeforeFieldInit
  Type parameter: T
  Methods:
    Advance(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetMemory(Int32(Optional, HasDefault)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetSpan(Int32(Optional, HasDefault)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Interface System.Buffers.IMemoryOwner`1[T]: AutoLayout, AnsiClass, Class, ClassSemanticsMask, Abstract, BeforeFieldInit
  Type parameter: T
  Interfaces:
    System.IDisposable
  Properties:
    System.Memory`1[T] Memory 'get ' : 
  Methods:
    get_Memory(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
Interface System.Buffers.IPinnable: AutoLayout, AnsiClass, Class, ClassSemanticsMask, Abstract, BeforeFieldInit
  Methods:
    Pin(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Unpin(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Struct System.Buffers.MemoryHandle: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Void*, System.Runtime.InteropServices.GCHandle, System.Buffers.IPinnable): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Properties:
    Void* Pointer 'get ' : 
  Methods:
    get_Pointer(): PrivateScope, Public, HideBySig, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class System.Buffers.MemoryManager`1[T]: AutoLayout, AnsiClass, Class, Abstract, BeforeFieldInit
  Type parameter: T
  Interfaces:
    System.Buffers.IMemoryOwner`1[T]
    System.IDisposable
    System.Buffers.IPinnable
  Properties:
    System.Memory`1[T] Memory 'get ' : 
  Methods:
    get_Memory(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    GetSpan(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Pin(Int32(Optional, HasDefault)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Unpin(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Struct System.Buffers.ReadOnlySequence`1[T]: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  Type parameter: T
  :System.ValueType
    Void .ctor(System.Buffers.ReadOnlySequenceSegment`1[T], Int32, System.Buffers.ReadOnlySequenceSegment`1[T], Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(T[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(T[], Int32, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.ReadOnlyMemory`1[T]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    System.Buffers.ReadOnlySequence`1[T] Empty : Public, Static, InitOnly
  Properties:
    Int64 Length 'get ' : 
    Boolean IsEmpty 'get ' : 
    Boolean IsSingleSegment 'get ' : 
    System.ReadOnlyMemory`1[T] First 'get ' : 
    System.SequencePosition Start 'get ' : 
    System.SequencePosition End 'get ' : 
  Methods:
    get_Length(): PrivateScope, Public, HideBySig, SpecialName
    get_IsEmpty(): PrivateScope, Public, HideBySig, SpecialName
    get_IsSingleSegment(): PrivateScope, Public, HideBySig, SpecialName
    get_First(): PrivateScope, Public, HideBySig, SpecialName
    get_Start(): PrivateScope, Public, HideBySig, SpecialName
    get_End(): PrivateScope, Public, HideBySig, SpecialName
    Slice(Int64, Int64): PrivateScope, Public, HideBySig
    Slice(Int64, SequencePosition): PrivateScope, Public, HideBySig
    Slice(SequencePosition, Int64): PrivateScope, Public, HideBySig
    Slice(Int32, Int32): PrivateScope, Public, HideBySig
    Slice(Int32, SequencePosition): PrivateScope, Public, HideBySig
    Slice(SequencePosition, Int32): PrivateScope, Public, HideBySig
    Slice(SequencePosition, SequencePosition): PrivateScope, Public, HideBySig
    Slice(SequencePosition): PrivateScope, Public, HideBySig
    Slice(Int64): PrivateScope, Public, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
    GetEnumerator(): PrivateScope, Public, HideBySig
    GetPosition(Int64): PrivateScope, Public, HideBySig
    GetPosition(Int64, SequencePosition): PrivateScope, Public, HideBySig
    TryGet(SequencePosition&, ReadOnlyMemory`1&(Out), Boolean(Optional, HasDefault)): PrivateScope, Public, HideBySig
    TryGetBuffer(SequencePosition&(In), ReadOnlyMemory`1&(Out), SequencePosition&(Out)): PrivateScope, Assembly, HideBySig
    TryGetReadOnlySequenceSegment(ReadOnlySequenceSegment`1&(Out), Int32&(Out), ReadOnlySequenceSegment`1&(Out), Int32&(Out)): PrivateScope, Assembly, HideBySig
    TryGetArray(ArraySegment`1&(Out)): PrivateScope, Assembly, HideBySig
    TryGetString(String&(Out), Int32&(Out), Int32&(Out)): PrivateScope, Assembly, HideBySig
Struct System.Buffers.ReadOnlySequence`1+Enumerator[T]: AutoLayout, AnsiClass, Class, NestedPublic, SequentialLayout, Sealed, BeforeFieldInit
  Type parameter: T
  :System.ValueType
    Void .ctor(System.Buffers.ReadOnlySequence`1[T] ByRef): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.ReadOnlyMemory`1[T] Current 'get ' : 
  Methods:
    get_Current(): PrivateScope, Public, HideBySig, SpecialName
    MoveNext(): PrivateScope, Public, HideBySig
Class System.Buffers.ReadOnlySequence: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Fields:
    Int32 FlagBitMask = -2147483648 : Public, Static, Literal, HasDefault
    Int32 IndexBitMask = 2147483647 : Public, Static, Literal, HasDefault
    Int32 SegmentStartMask = 0 : Public, Static, Literal, HasDefault
    Int32 SegmentEndMask = 0 : Public, Static, Literal, HasDefault
    Int32 ArrayStartMask = 0 : Public, Static, Literal, HasDefault
    Int32 ArrayEndMask = -2147483648 : Public, Static, Literal, HasDefault
    Int32 MemoryManagerStartMask = -2147483648 : Public, Static, Literal, HasDefault
    Int32 MemoryManagerEndMask = 0 : Public, Static, Literal, HasDefault
    Int32 StringStartMask = -2147483648 : Public, Static, Literal, HasDefault
    Int32 StringEndMask = -2147483648 : Public, Static, Literal, HasDefault
  Methods:
    SegmentToSequenceStart(Int32): PrivateScope, Public, Static, HideBySig
    SegmentToSequenceEnd(Int32): PrivateScope, Public, Static, HideBySig
    ArrayToSequenceStart(Int32): PrivateScope, Public, Static, HideBySig
    ArrayToSequenceEnd(Int32): PrivateScope, Public, Static, HideBySig
    MemoryManagerToSequenceStart(Int32): PrivateScope, Public, Static, HideBySig
    MemoryManagerToSequenceEnd(Int32): PrivateScope, Public, Static, HideBySig
    StringToSequenceStart(Int32): PrivateScope, Public, Static, HideBySig
    StringToSequenceEnd(Int32): PrivateScope, Public, Static, HideBySig
Class System.Buffers.ReadOnlySequenceDebugView`1[T]: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  Type parameter: T
    Void .ctor(System.Buffers.ReadOnlySequence`1[T]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    ReadOnlySequenceDebugViewSegments BufferSegments 'get ' : 
    T[] Items  'get ' : 
  Methods:
    get_BufferSegments(): PrivateScope, Public, HideBySig, SpecialName
    get_Items(): PrivateScope, Public, HideBySig, SpecialName
Struct System.Buffers.ReadOnlySequenceDebugView`1+ReadOnlySequenceDebugViewSegments[T]: AutoLayout, AnsiClass, Class, NestedPublic, SequentialLayout, Sealed, BeforeFieldInit
  Type parameter: T
  :System.ValueType
  Properties:
    System.ReadOnlyMemory`1[T][] Segments 'get set' : 
  Methods:
    get_Segments(): PrivateScope, Public, HideBySig, SpecialName
    set_Segments(ReadOnlyMemory`1[]): PrivateScope, Public, HideBySig, SpecialName
Class System.Buffers.ReadOnlySequenceSegment`1[T]: AutoLayout, AnsiClass, Class, Abstract, BeforeFieldInit
  Type parameter: T
  Properties:
    System.ReadOnlyMemory`1[T] Memory 'get set' : 
    System.Buffers.ReadOnlySequenceSegment`1[T] Next 'get set' : 
    Int64 RunningIndex 'get set' : 
  Methods:
    get_Memory(): PrivateScope, Public, HideBySig, SpecialName
    get_Next(): PrivateScope, Public, HideBySig, SpecialName
    get_RunningIndex(): PrivateScope, Public, HideBySig, SpecialName
Struct System.Buffers.StandardFormat: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Char, Byte): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IEquatable`1[System.Buffers.StandardFormat]
  Fields:
    Byte NoPrecision = 255 : Public, Static, Literal, HasDefault
    Byte MaxPrecision = 99 : Public, Static, Literal, HasDefault
  Properties:
    Char Symbol 'get ' : 
    Byte Precision 'get ' : 
    Boolean HasPrecision 'get ' : 
    Boolean IsDefault 'get ' : 
  Methods:
    get_Symbol(): PrivateScope, Public, HideBySig, SpecialName
    get_Precision(): PrivateScope, Public, HideBySig, SpecialName
    get_HasPrecision(): PrivateScope, Public, HideBySig, SpecialName
    get_IsDefault(): PrivateScope, Public, HideBySig, SpecialName
    op_Implicit(Char): PrivateScope, Public, Static, HideBySig, SpecialName
    Parse(ReadOnlySpan`1): PrivateScope, Public, Static, HideBySig
    Parse(String): PrivateScope, Public, Static, HideBySig
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    Equals(StandardFormat): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ToString(): PrivateScope, Public, Virtual, HideBySig
    op_Equality(StandardFormat, StandardFormat): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Inequality(StandardFormat, StandardFormat): PrivateScope, Public, Static, HideBySig, SpecialName
Class System.Buffers.TlsOverPerCoreLockedStacksArrayPool`1[T]: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  Type parameter: T
  :System.Buffers.ArrayPool`1[T]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Rent(Int32): PrivateScope, Public, Virtual, HideBySig
    Return(T[], Boolean(Optional, HasDefault)): PrivateScope, Public, Virtual, HideBySig
    Trim(): PrivateScope, Public, HideBySig
Class System.Buffers.Utilities: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Methods:
    SelectBucketIndex(Int32): PrivateScope, Assembly, Static, HideBySig
    GetMaxSizeForBucket(Int32): PrivateScope, Assembly, Static, HideBySig
    GetMemoryPressure(): PrivateScope, Assembly, Static, HideBySig
Struct System.Buffers.Utilities+MemoryPressure: AutoLayout, AnsiClass, Class, NestedAssembly, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    MemoryPressure Low = 0 : Public, Static, Literal, HasDefault
    MemoryPressure Medium = 1 : Public, Static, Literal, HasDefault
    MemoryPressure High = 2 : Public, Static, Literal, HasDefault
Struct System.Runtime.DependentHandle: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(System.Object, System.Object): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Properties:
    Boolean IsAllocated 'get ' : 
    System.Object Target 'get set' : 
    System.Object Dependent 'get set' : 
    System.ValueTuple`2[System.Object,System.Object] TargetAndDependent 'get ' : 
  Methods:
    get_IsAllocated(): PrivateScope, Public, HideBySig, SpecialName
    get_Target(): PrivateScope, Public, HideBySig, SpecialName
    set_Target(Object): PrivateScope, Public, HideBySig, SpecialName
    get_Dependent(): PrivateScope, Public, HideBySig, SpecialName
    set_Dependent(Object): PrivateScope, Public, HideBySig, SpecialName
    get_TargetAndDependent(): PrivateScope, Public, HideBySig, SpecialName
    UnsafeGetTarget(): PrivateScope, Assembly, HideBySig
    UnsafeGetTargetAndDependent(Object&(Out)): PrivateScope, Assembly, HideBySig
    UnsafeSetTargetToNull(): PrivateScope, Assembly, HideBySig
    UnsafeSetDependent(Object): PrivateScope, Assembly, HideBySig
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class System.Runtime.InteropServices.MemoryMarshal: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Methods:
    TryGetArray(ReadOnlyMemory`1, ArraySegment`1&(Out)): PrivateScope, Public, Static, HideBySig
    TryGetMemoryManager(ReadOnlyMemory`1, TManager&(Out)): PrivateScope, Public, Static, HideBySig
    TryGetMemoryManager(ReadOnlyMemory`1, TManager&(Out), Int32&(Out), Int32&(Out)): PrivateScope, Public, Static, HideBySig
    ToEnumerable(ReadOnlyMemory`1): PrivateScope, Public, Static, HideBySig
    TryGetString(ReadOnlyMemory`1, String&(Out), Int32&(Out), Int32&(Out)): PrivateScope, Public, Static, HideBySig
    Read(ReadOnlySpan`1): PrivateScope, Public, Static, HideBySig
    TryRead(ReadOnlySpan`1, T&(Out)): PrivateScope, Public, Static, HideBySig
    Write(Span`1, T&): PrivateScope, Public, Static, HideBySig
    TryWrite(Span`1, T&): PrivateScope, Public, Static, HideBySig
    CreateFromPinnedArray(T[], Int32, Int32): PrivateScope, Public, Static, HideBySig
    AsBytes(Span`1): PrivateScope, Public, Static, HideBySig
    AsBytes(ReadOnlySpan`1): PrivateScope, Public, Static, HideBySig
    AsMemory(ReadOnlyMemory`1): PrivateScope, Public, Static, HideBySig
    GetReference(Span`1): PrivateScope, Public, Static, HideBySig
    GetReference(ReadOnlySpan`1): PrivateScope, Public, Static, HideBySig
    Cast(Span`1): PrivateScope, Public, Static, HideBySig
    Cast(ReadOnlySpan`1): PrivateScope, Public, Static, HideBySig
Class System.Runtime.InteropServices.SequenceMarshal: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Methods:
    TryGetReadOnlySequenceSegment(ReadOnlySequence`1, ReadOnlySequenceSegment`1&(Out), Int32&(Out), ReadOnlySequenceSegment`1&(Out), Int32&(Out)): PrivateScope, Public, Static, HideBySig
    TryGetArray(ReadOnlySequence`1, ArraySegment`1&(Out)): PrivateScope, Public, Static, HideBySig
    TryGetReadOnlyMemory(ReadOnlySequence`1, ReadOnlyMemory`1&(Out)): PrivateScope, Public, Static, HideBySig
    TryGetString(ReadOnlySequence`1, String&(Out), Int32&(Out), Int32&(Out)): PrivateScope, Assembly, Static, HideBySig
Class System.Runtime.InteropServices.MarshalEx: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Methods:
    GetLastPInvokeError(): PrivateScope, Public, Static, HideBySig
    SetLastPInvokeError(Int32): PrivateScope, Public, Static, HideBySig
Class System.Runtime.CompilerServices.<22576685-8ec8-4022-94e7-b5a630de7c65>IsExternalInit: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
Class System.Runtime.CompilerServices.CallerArgumentExpressionAttribute: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :System.Attribute
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String ParameterName 'get ' : 
  Methods:
    get_ParameterName(): PrivateScope, Public, HideBySig, SpecialName
Interface System.Runtime.CompilerServices.ICWTEnumerable`1[T]: AutoLayout, AnsiClass, Class, ClassSemanticsMask, Abstract, BeforeFieldInit
  Type parameter: T
  Properties:
    System.Collections.Generic.IEnumerable`1[T] SelfEnumerable 'get ' : 
  Methods:
    get_SelfEnumerable(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    GetEnumerator(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class System.Runtime.CompilerServices.CWTEnumerable`2[TKey,TValue]: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  Type parameter: TKey,  ReferenceType
  Type parameter: TValue,  ReferenceType
    Void .ctor(System.Runtime.CompilerServices.ConditionalWeakTable`2[TKey,TValue]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Collections.Generic.IEnumerable`1[System.Collections.Generic.KeyValuePair`2[TKey,TValue]]
    System.Collections.IEnumerable
  Methods:
    GetEnumerator(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class System.Runtime.CompilerServices.ConditionalWeakTableExtensions: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Methods:
    AsEnumerable(ConditionalWeakTable`2): PrivateScope, Public, Static, HideBySig
    GetEnumerator(ConditionalWeakTable`2): PrivateScope, Public, Static, HideBySig
    Clear(ConditionalWeakTable`2): PrivateScope, Public, Static, HideBySig
    TryAdd(ConditionalWeakTable`2, TKey, TValue): PrivateScope, Public, Static, HideBySig
    <GetEnumerator>g__Enumerate|2_0(ConditionalWeakTable`2, IEnumerable`1): PrivateScope, Assembly, Static, HideBySig
Struct System.Runtime.CompilerServices.DefaultInterpolatedStringHandler: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit (Obsolete)
  :System.ValueType
    Void .ctor(Int32, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32, Int32, System.IFormatProvider): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32, Int32, System.IFormatProvider, System.Span`1[System.Char]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.ReadOnlySpan`1[System.Char] Text 'get ' : 
  Methods:
    GetDefaultLength(Int32, Int32): PrivateScope, Assembly, Static, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
    ToStringAndClear(): PrivateScope, Public, HideBySig
    Clear(): PrivateScope, Assembly, HideBySig
    get_Text(): PrivateScope, Assembly, HideBySig, SpecialName
    AppendLiteral(String): PrivateScope, Public, HideBySig
    AppendFormatted(T): PrivateScope, Public, HideBySig
    AppendFormatted(T, String): PrivateScope, Public, HideBySig
    AppendFormatted(T, Int32): PrivateScope, Public, HideBySig
    AppendFormatted(T, Int32, String): PrivateScope, Public, HideBySig
    AppendFormatted(ReadOnlySpan`1): PrivateScope, Public, HideBySig
    AppendFormatted(ReadOnlySpan`1, Int32(Optional, HasDefault), String(Optional, HasDefault)): PrivateScope, Public, HideBySig
    AppendFormatted(String): PrivateScope, Public, HideBySig
    AppendFormatted(String, Int32(Optional, HasDefault), String(Optional, HasDefault)): PrivateScope, Public, HideBySig
    AppendFormatted(Object, Int32(Optional, HasDefault), String(Optional, HasDefault)): PrivateScope, Public, HideBySig
    HasCustomFormatter(IFormatProvider): PrivateScope, Assembly, Static, HideBySig
Class System.Runtime.CompilerServices.DisableRuntimeMarshallingAttribute: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :System.Attribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class System.Runtime.CompilerServices.InterpolatedStringHandlerAttribute: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :System.Attribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class System.Runtime.CompilerServices.InterpolatedStringHandlerArgumentAttribute: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :System.Attribute
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String[] Arguments 'get ' : 
  Methods:
    get_Arguments(): PrivateScope, Public, HideBySig, SpecialName
Interface System.Runtime.CompilerServices.ITuple: AutoLayout, AnsiClass, Class, ClassSemanticsMask, Abstract, BeforeFieldInit
  Properties:
    Int32 Length 'get ' : 
    System.Object Item [Int32] 'get ' : 
  Methods:
    get_Length(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Item(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
Class System.Runtime.CompilerServices.ModuleInitializerAttribute: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :System.Attribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class System.Diagnostics.CodeAnalysis.<22576685-8ec8-4022-94e7-b5a630de7c65>AllowNullAttribute: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :System.Attribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class System.Diagnostics.CodeAnalysis.<22576685-8ec8-4022-94e7-b5a630de7c65>DisallowNullAttribute: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :System.Attribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class System.Diagnostics.CodeAnalysis.<22576685-8ec8-4022-94e7-b5a630de7c65>DoesNotReturnAttribute: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :System.Attribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class System.Diagnostics.CodeAnalysis.<22576685-8ec8-4022-94e7-b5a630de7c65>DoesNotReturnIfAttribute: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :System.Attribute
    Void .ctor(Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean ParameterValue 'get ' : 
  Methods:
    get_ParameterValue(): PrivateScope, Public, HideBySig, SpecialName
Class System.Diagnostics.CodeAnalysis.<22576685-8ec8-4022-94e7-b5a630de7c65>MaybeNullAttribute: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :System.Attribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class System.Diagnostics.CodeAnalysis.<22576685-8ec8-4022-94e7-b5a630de7c65>MaybeNullWhenAttribute: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :System.Attribute
    Void .ctor(Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean ReturnValue 'get ' : 
  Methods:
    get_ReturnValue(): PrivateScope, Public, HideBySig, SpecialName
Class System.Diagnostics.CodeAnalysis.<22576685-8ec8-4022-94e7-b5a630de7c65>MemberNotNullAttribute: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :System.Attribute
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String[] Members 'get ' : 
  Methods:
    get_Members(): PrivateScope, Public, HideBySig, SpecialName
Class System.Diagnostics.CodeAnalysis.<22576685-8ec8-4022-94e7-b5a630de7c65>MemberNotNullWhenAttribute: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :System.Attribute
    Void .ctor(Boolean, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Boolean, System.String[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean ReturnValue 'get ' : 
    System.String[] Members 'get ' : 
  Methods:
    get_ReturnValue(): PrivateScope, Public, HideBySig, SpecialName
    get_Members(): PrivateScope, Public, HideBySig, SpecialName
Class System.Diagnostics.CodeAnalysis.<22576685-8ec8-4022-94e7-b5a630de7c65>NotNullAttribute: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :System.Attribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class System.Diagnostics.CodeAnalysis.<22576685-8ec8-4022-94e7-b5a630de7c65>NotNullIfNotNullAttribute: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :System.Attribute
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String ParameterName 'get ' : 
  Methods:
    get_ParameterName(): PrivateScope, Public, HideBySig, SpecialName
Class System.Diagnostics.CodeAnalysis.<22576685-8ec8-4022-94e7-b5a630de7c65>NotNullWhenAttribute: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :System.Attribute
    Void .ctor(Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean ReturnValue 'get ' : 
  Methods:
    get_ReturnValue(): PrivateScope, Public, HideBySig, SpecialName
Class System.Diagnostics.CodeAnalysis.ExtraDynamicallyAccessedMemberTypes: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Fields:
    System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes Interfaces = 8192 : Public, Static, Literal, HasDefault
Class System.Diagnostics.CodeAnalysis.DynamicallyAccessedMembersAttribute: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :System.Attribute
    Void .ctor(System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes MemberTypes 'get ' : 
  Methods:
    get_MemberTypes(): PrivateScope, Public, HideBySig, SpecialName
Struct System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes None = 0 : Public, Static, Literal, HasDefault
    System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes PublicParameterlessConstructor = 1 : Public, Static, Literal, HasDefault
    System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes PublicConstructors = 3 : Public, Static, Literal, HasDefault
    System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes NonPublicConstructors = 4 : Public, Static, Literal, HasDefault
    System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes PublicMethods = 8 : Public, Static, Literal, HasDefault
    System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes NonPublicMethods = 16 : Public, Static, Literal, HasDefault
    System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes PublicFields = 32 : Public, Static, Literal, HasDefault
    System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes NonPublicFields = 64 : Public, Static, Literal, HasDefault
    System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes PublicNestedTypes = 128 : Public, Static, Literal, HasDefault
    System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes NonPublicNestedTypes = 256 : Public, Static, Literal, HasDefault
    System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes PublicProperties = 512 : Public, Static, Literal, HasDefault
    System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes NonPublicProperties = 1024 : Public, Static, Literal, HasDefault
    System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes PublicEvents = 2048 : Public, Static, Literal, HasDefault
    System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes NonPublicEvents = 4096 : Public, Static, Literal, HasDefault
    System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes All = -1 : Public, Static, Literal, HasDefault
Class System.Diagnostics.CodeAnalysis.UnscopedRefAttribute: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :System.Attribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class <>f__AnonymousDelegate0: AutoLayout, AnsiClass, Class, Sealed
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(IntPtr, IntPtr, CORINFO_METHOD_INFO*, UInt32, Byte**, UInt32*): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class <>f__AnonymousDelegate1: AutoLayout, AnsiClass, Class, Sealed
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(IntPtr, AllocMemArgs*): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class MonoMod.<027f1d0e-6e0b-4adc-bc2b-a5d0603c6ea8>MMDbgLog: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Properties:
    Boolean IsWritingLog 'get ' : 
  Methods:
    get_IsWritingLog(): PrivateScope, Public, Static, HideBySig, SpecialName
    LogVersion(): PrivateScope, Assembly, Static, HideBySig
    Log(LogLevel, String): PrivateScope, Public, Static, HideBySig
    Log(LogLevel, DebugLogInterpolatedStringHandler&): PrivateScope, Public, Static, HideBySig
    Spam(String): PrivateScope, Public, Static, HideBySig
    Spam(DebugLogSpamStringHandler&): PrivateScope, Public, Static, HideBySig
    Trace(String): PrivateScope, Public, Static, HideBySig
    Trace(DebugLogTraceStringHandler&): PrivateScope, Public, Static, HideBySig
    Info(String): PrivateScope, Public, Static, HideBySig
    Info(DebugLogInfoStringHandler&): PrivateScope, Public, Static, HideBySig
    Warning(String): PrivateScope, Public, Static, HideBySig
    Warning(DebugLogWarningStringHandler&): PrivateScope, Public, Static, HideBySig
    Error(String): PrivateScope, Public, Static, HideBySig
    Error(DebugLogErrorStringHandler&): PrivateScope, Public, Static, HideBySig
Struct MonoMod.<027f1d0e-6e0b-4adc-bc2b-a5d0603c6ea8>MMDbgLog+DebugLogSpamStringHandler: AutoLayout, AnsiClass, Class, NestedAssembly, SequentialLayout, Sealed, BeforeFieldInit (Obsolete)
  :System.ValueType
    Void .ctor(Int32, Int32, Boolean ByRef): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    MonoMod.Logs.DebugLogInterpolatedStringHandler handler : Assembly
  Methods:
    ToString(): PrivateScope, Public, Virtual, HideBySig
    ToStringAndClear(): PrivateScope, Public, HideBySig
    AppendLiteral(String): PrivateScope, Public, HideBySig
    AppendFormatted(String): PrivateScope, Public, HideBySig
    AppendFormatted(String, Int32(Optional, HasDefault), String(Optional, HasDefault)): PrivateScope, Public, HideBySig
    AppendFormatted(ReadOnlySpan`1): PrivateScope, Public, HideBySig
    AppendFormatted(ReadOnlySpan`1, Int32(Optional, HasDefault), String(Optional, HasDefault)): PrivateScope, Public, HideBySig
    AppendFormatted(T): PrivateScope, Public, HideBySig
    AppendFormatted(T, Int32): PrivateScope, Public, HideBySig
    AppendFormatted(T, String): PrivateScope, Public, HideBySig
    AppendFormatted(T, Int32, String): PrivateScope, Public, HideBySig
Struct MonoMod.<027f1d0e-6e0b-4adc-bc2b-a5d0603c6ea8>MMDbgLog+DebugLogTraceStringHandler: AutoLayout, AnsiClass, Class, NestedAssembly, SequentialLayout, Sealed, BeforeFieldInit (Obsolete)
  :System.ValueType
    Void .ctor(Int32, Int32, Boolean ByRef): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    MonoMod.Logs.DebugLogInterpolatedStringHandler handler : Assembly
  Methods:
    ToString(): PrivateScope, Public, Virtual, HideBySig
    ToStringAndClear(): PrivateScope, Public, HideBySig
    AppendLiteral(String): PrivateScope, Public, HideBySig
    AppendFormatted(String): PrivateScope, Public, HideBySig
    AppendFormatted(String, Int32(Optional, HasDefault), String(Optional, HasDefault)): PrivateScope, Public, HideBySig
    AppendFormatted(ReadOnlySpan`1): PrivateScope, Public, HideBySig
    AppendFormatted(ReadOnlySpan`1, Int32(Optional, HasDefault), String(Optional, HasDefault)): PrivateScope, Public, HideBySig
    AppendFormatted(T): PrivateScope, Public, HideBySig
    AppendFormatted(T, Int32): PrivateScope, Public, HideBySig
    AppendFormatted(T, String): PrivateScope, Public, HideBySig
    AppendFormatted(T, Int32, String): PrivateScope, Public, HideBySig
Struct MonoMod.<027f1d0e-6e0b-4adc-bc2b-a5d0603c6ea8>MMDbgLog+DebugLogInfoStringHandler: AutoLayout, AnsiClass, Class, NestedAssembly, SequentialLayout, Sealed, BeforeFieldInit (Obsolete)
  :System.ValueType
    Void .ctor(Int32, Int32, Boolean ByRef): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    MonoMod.Logs.DebugLogInterpolatedStringHandler handler : Assembly
  Methods:
    ToString(): PrivateScope, Public, Virtual, HideBySig
    ToStringAndClear(): PrivateScope, Public, HideBySig
    AppendLiteral(String): PrivateScope, Public, HideBySig
    AppendFormatted(String): PrivateScope, Public, HideBySig
    AppendFormatted(String, Int32(Optional, HasDefault), String(Optional, HasDefault)): PrivateScope, Public, HideBySig
    AppendFormatted(ReadOnlySpan`1): PrivateScope, Public, HideBySig
    AppendFormatted(ReadOnlySpan`1, Int32(Optional, HasDefault), String(Optional, HasDefault)): PrivateScope, Public, HideBySig
    AppendFormatted(T): PrivateScope, Public, HideBySig
    AppendFormatted(T, Int32): PrivateScope, Public, HideBySig
    AppendFormatted(T, String): PrivateScope, Public, HideBySig
    AppendFormatted(T, Int32, String): PrivateScope, Public, HideBySig
Struct MonoMod.<027f1d0e-6e0b-4adc-bc2b-a5d0603c6ea8>MMDbgLog+DebugLogWarningStringHandler: AutoLayout, AnsiClass, Class, NestedAssembly, SequentialLayout, Sealed, BeforeFieldInit (Obsolete)
  :System.ValueType
    Void .ctor(Int32, Int32, Boolean ByRef): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    MonoMod.Logs.DebugLogInterpolatedStringHandler handler : Assembly
  Methods:
    ToString(): PrivateScope, Public, Virtual, HideBySig
    ToStringAndClear(): PrivateScope, Public, HideBySig
    AppendLiteral(String): PrivateScope, Public, HideBySig
    AppendFormatted(String): PrivateScope, Public, HideBySig
    AppendFormatted(String, Int32(Optional, HasDefault), String(Optional, HasDefault)): PrivateScope, Public, HideBySig
    AppendFormatted(ReadOnlySpan`1): PrivateScope, Public, HideBySig
    AppendFormatted(ReadOnlySpan`1, Int32(Optional, HasDefault), String(Optional, HasDefault)): PrivateScope, Public, HideBySig
    AppendFormatted(T): PrivateScope, Public, HideBySig
    AppendFormatted(T, Int32): PrivateScope, Public, HideBySig
    AppendFormatted(T, String): PrivateScope, Public, HideBySig
    AppendFormatted(T, Int32, String): PrivateScope, Public, HideBySig
Struct MonoMod.<027f1d0e-6e0b-4adc-bc2b-a5d0603c6ea8>MMDbgLog+DebugLogErrorStringHandler: AutoLayout, AnsiClass, Class, NestedAssembly, SequentialLayout, Sealed, BeforeFieldInit (Obsolete)
  :System.ValueType
    Void .ctor(Int32, Int32, Boolean ByRef): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    MonoMod.Logs.DebugLogInterpolatedStringHandler handler : Assembly
  Methods:
    ToString(): PrivateScope, Public, Virtual, HideBySig
    ToStringAndClear(): PrivateScope, Public, HideBySig
    AppendLiteral(String): PrivateScope, Public, HideBySig
    AppendFormatted(String): PrivateScope, Public, HideBySig
    AppendFormatted(String, Int32(Optional, HasDefault), String(Optional, HasDefault)): PrivateScope, Public, HideBySig
    AppendFormatted(ReadOnlySpan`1): PrivateScope, Public, HideBySig
    AppendFormatted(ReadOnlySpan`1, Int32(Optional, HasDefault), String(Optional, HasDefault)): PrivateScope, Public, HideBySig
    AppendFormatted(T): PrivateScope, Public, HideBySig
    AppendFormatted(T, Int32): PrivateScope, Public, HideBySig
    AppendFormatted(T, String): PrivateScope, Public, HideBySig
    AppendFormatted(T, Int32, String): PrivateScope, Public, HideBySig
Class MonoMod.<027f1d0e-6e0b-4adc-bc2b-a5d0603c6ea8>MultiTargetShims: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Methods:
    GetConstraintType(GenericParameterConstraint): PrivateScope, Public, Static, HideBySig
Class MonoMod.SourceGen.Attributes.<027f1d0e-6e0b-4adc-bc2b-a5d0603c6ea8>EmitILOverloadsAttribute: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :System.Attribute
    Void .ctor(System.String, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class MonoMod.SourceGen.Attributes.<027f1d0e-6e0b-4adc-bc2b-a5d0603c6ea8>ILOverloadKind: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Fields:
    System.String Cursor = ILCursor : Public, Static, Literal, HasDefault
    System.String Matcher = ILMatcher : Public, Static, Literal, HasDefault
Interface MonoMod.Core.ICoreDetour: AutoLayout, AnsiClass, Class, ClassSemanticsMask, Abstract, BeforeFieldInit
  Interfaces:
    MonoMod.Core.ICoreDetourBase
    System.IDisposable
  Properties:
    System.Reflection.MethodBase Source 'get ' : 
    System.Reflection.MethodBase Target 'get ' : 
  Methods:
    get_Source(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Target(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
Interface MonoMod.Core.ICoreDetourBase: AutoLayout, AnsiClass, Class, ClassSemanticsMask, Abstract, BeforeFieldInit
  Interfaces:
    System.IDisposable
  Properties:
    Boolean IsApplied 'get ' : 
  Methods:
    get_IsApplied(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    Apply(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Undo(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Interface MonoMod.Core.ICoreNativeDetour: AutoLayout, AnsiClass, Class, ClassSemanticsMask, Abstract, BeforeFieldInit
  Interfaces:
    MonoMod.Core.ICoreDetourBase
    System.IDisposable
  Properties:
    IntPtr Source 'get ' : 
    IntPtr Target 'get ' : 
    Boolean HasOrigEntrypoint 'get ' : 
    IntPtr OrigEntrypoint 'get ' : 
  Methods:
    get_Source(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Target(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_HasOrigEntrypoint(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_OrigEntrypoint(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
Interface MonoMod.Core.IDetourFactory: AutoLayout, AnsiClass, Class, ClassSemanticsMask, Abstract, BeforeFieldInit
  Methods:
    CreateDetour(CreateDetourRequest): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    CreateNativeDetour(CreateNativeDetourRequest): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Struct MonoMod.Core.CreateDetourRequest: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(System.Reflection.MethodBase, System.Reflection.MethodBase): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IEquatable`1[MonoMod.Core.CreateDetourRequest]
  Properties:
    System.Reflection.MethodBase Source 'get set' : 
    System.Reflection.MethodBase Target 'get set' : 
    Boolean ApplyByDefault 'get set' : 
  Methods:
    get_Source(): PrivateScope, Public, HideBySig, SpecialName
    set_Source(MethodBase): PrivateScope, Public, HideBySig, SpecialName
    get_Target(): PrivateScope, Public, HideBySig, SpecialName
    set_Target(MethodBase): PrivateScope, Public, HideBySig, SpecialName
    get_ApplyByDefault(): PrivateScope, Public, HideBySig, SpecialName
    set_ApplyByDefault(Boolean): PrivateScope, Public, HideBySig, SpecialName
    ToString(): PrivateScope, Public, Virtual, HideBySig
    op_Inequality(CreateDetourRequest, CreateDetourRequest): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Equality(CreateDetourRequest, CreateDetourRequest): PrivateScope, Public, Static, HideBySig, SpecialName
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    Equals(CreateDetourRequest): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Deconstruct(MethodBase&(Out), MethodBase&(Out)): PrivateScope, Public, HideBySig
Struct MonoMod.Core.CreateNativeDetourRequest: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(IntPtr, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IEquatable`1[MonoMod.Core.CreateNativeDetourRequest]
  Properties:
    IntPtr Source 'get set' : 
    IntPtr Target 'get set' : 
    Boolean ApplyByDefault 'get set' : 
  Methods:
    get_Source(): PrivateScope, Public, HideBySig, SpecialName
    set_Source(IntPtr): PrivateScope, Public, HideBySig, SpecialName
    get_Target(): PrivateScope, Public, HideBySig, SpecialName
    set_Target(IntPtr): PrivateScope, Public, HideBySig, SpecialName
    get_ApplyByDefault(): PrivateScope, Public, HideBySig, SpecialName
    set_ApplyByDefault(Boolean): PrivateScope, Public, HideBySig, SpecialName
    ToString(): PrivateScope, Public, Virtual, HideBySig
    op_Inequality(CreateNativeDetourRequest, CreateNativeDetourRequest): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Equality(CreateNativeDetourRequest, CreateNativeDetourRequest): PrivateScope, Public, Static, HideBySig, SpecialName
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    Equals(CreateNativeDetourRequest): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Deconstruct(IntPtr&(Out), IntPtr&(Out)): PrivateScope, Public, HideBySig
Class MonoMod.Core.DetourFactory: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Properties:
    MonoMod.Core.IDetourFactory Current 'get ' : 
  Methods:
    get_Current(): PrivateScope, Public, Static, HideBySig, SpecialName
    CreateDetour(IDetourFactory, MethodBase, MethodBase, Boolean(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    CreateNativeDetour(IDetourFactory, IntPtr, IntPtr, Boolean(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
Class MonoMod.Core.AssemblyInfo: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Fields:
    System.String AssemblyName = MonoMod.Core : Public, Static, Literal, HasDefault
    System.String AssemblyVersion = 1.1.0 : Public, Static, Literal, HasDefault
Struct MonoMod.Core.Utils.AddressKind: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    MonoMod.Core.Utils.AddressKind Rel32 = 0 : Public, Static, Literal, HasDefault
    MonoMod.Core.Utils.AddressKind Rel64 = 2 : Public, Static, Literal, HasDefault
    MonoMod.Core.Utils.AddressKind Abs32 = 1 : Public, Static, Literal, HasDefault
    MonoMod.Core.Utils.AddressKind Abs64 = 3 : Public, Static, Literal, HasDefault
    MonoMod.Core.Utils.AddressKind PrecodeFixupThunkRel32 = 4 : Public, Static, Literal, HasDefault
    MonoMod.Core.Utils.AddressKind PrecodeFixupThunkRel64 = 6 : Public, Static, Literal, HasDefault
    MonoMod.Core.Utils.AddressKind PrecodeFixupThunkAbs32 = 5 : Public, Static, Literal, HasDefault
    MonoMod.Core.Utils.AddressKind PrecodeFixupThunkAbs64 = 7 : Public, Static, Literal, HasDefault
    MonoMod.Core.Utils.AddressKind Indirect = 8 : Public, Static, Literal, HasDefault
Class MonoMod.Core.Utils.AddressKindExtensions: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Fields:
    MonoMod.Core.Utils.AddressKind IsAbsoluteField = 1 : Public, Static, Literal, HasDefault
    MonoMod.Core.Utils.AddressKind Is64BitField = 2 : Public, Static, Literal, HasDefault
    MonoMod.Core.Utils.AddressKind IsPrecodeFixupField = 4 : Public, Static, Literal, HasDefault
    MonoMod.Core.Utils.AddressKind IsIndirectField = 8 : Public, Static, Literal, HasDefault
  Methods:
    IsRelative(AddressKind): PrivateScope, Public, Static, HideBySig
    IsAbsolute(AddressKind): PrivateScope, Public, Static, HideBySig
    Is32Bit(AddressKind): PrivateScope, Public, Static, HideBySig
    Is64Bit(AddressKind): PrivateScope, Public, Static, HideBySig
    IsPrecodeFixup(AddressKind): PrivateScope, Public, Static, HideBySig
    IsIndirect(AddressKind): PrivateScope, Public, Static, HideBySig
    Validate(AddressKind, String(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    FastToString(AddressKind): PrivateScope, Public, Static, HideBySig
Struct MonoMod.Core.Utils.AddressMeaning: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(MonoMod.Core.Utils.AddressKind): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(MonoMod.Core.Utils.AddressKind, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IEquatable`1[MonoMod.Core.Utils.AddressMeaning]
  Properties:
    MonoMod.Core.Utils.AddressKind Kind 'get ' : 
    Int32 RelativeToOffset 'get ' : 
  Methods:
    get_Kind(): PrivateScope, Public, HideBySig, SpecialName
    get_RelativeToOffset(): PrivateScope, Public, HideBySig, SpecialName
    ProcessAddress(IntPtr, Int32, UInt64): PrivateScope, Public, HideBySig
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    Equals(AddressMeaning): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ToString(): PrivateScope, Public, Virtual, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    op_Equality(AddressMeaning, AddressMeaning): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Inequality(AddressMeaning, AddressMeaning): PrivateScope, Public, Static, HideBySig, SpecialName
Class MonoMod.Core.Utils.BytePattern: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
    Void .ctor(MonoMod.Core.Utils.AddressMeaning, UInt16[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(MonoMod.Core.Utils.AddressMeaning, Boolean, UInt16[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(MonoMod.Core.Utils.AddressMeaning, System.ReadOnlyMemory`1[System.UInt16]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(MonoMod.Core.Utils.AddressMeaning, Boolean, System.ReadOnlyMemory`1[System.UInt16]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(MonoMod.Core.Utils.AddressMeaning, System.ReadOnlyMemory`1[System.Byte], System.ReadOnlyMemory`1[System.Byte]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(MonoMod.Core.Utils.AddressMeaning, Boolean, System.ReadOnlyMemory`1[System.Byte], System.ReadOnlyMemory`1[System.Byte]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Byte BAnyValue = 0 : Public, Static, Literal, HasDefault
    UInt16 SAnyValue = 65280 : Public, Static, Literal, HasDefault
    Byte BAnyRepeatingValue = 1 : Public, Static, Literal, HasDefault
    UInt16 SAnyRepeatingValue = 65281 : Public, Static, Literal, HasDefault
    Byte BAddressValue = 2 : Public, Static, Literal, HasDefault
    UInt16 SAddressValue = 65282 : Public, Static, Literal, HasDefault
  Properties:
    Int32 AddressBytes 'get ' : 
    Int32 MinLength 'get ' : 
    MonoMod.Core.Utils.AddressMeaning AddressMeaning 'get ' : 
    Boolean MustMatchAtStart 'get ' : 
    System.ValueTuple`2[System.ReadOnlyMemory`1[System.Byte],System.Int32] FirstLiteralSegment 'get ' : 
  Methods:
    get_AddressBytes(): PrivateScope, Public, HideBySig, SpecialName
    get_MinLength(): PrivateScope, Public, HideBySig, SpecialName
    get_AddressMeaning(): PrivateScope, Public, HideBySig, SpecialName
    get_MustMatchAtStart(): PrivateScope, Public, HideBySig, SpecialName
    TryMatchAt(ReadOnlySpan`1, UInt64&(Out), Int32&(Out)): PrivateScope, Public, HideBySig
    TryMatchAt(ReadOnlySpan`1, Span`1, Int32&(Out)): PrivateScope, Public, HideBySig
    TryFindMatch(ReadOnlySpan`1, UInt64&(Out), Int32&(Out), Int32&(Out)): PrivateScope, Public, HideBySig
    TryFindMatch(ReadOnlySpan`1, Span`1, Int32&(Out), Int32&(Out)): PrivateScope, Public, HideBySig
    get_FirstLiteralSegment(): PrivateScope, Public, HideBySig, SpecialName
    <ComputeSegmentsFromShort>g__KindForShort|31_0(ReadOnlyMemory`1, Int32): PrivateScope, Assembly, Static, HideBySig
    <ComputeSegmentsFromMaskPattern>g__KindForIdx|32_0(ValueTuple`2, Int32): PrivateScope, Assembly, Static, HideBySig
Class MonoMod.Core.Utils.BytePatternCollection: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
    Void .ctor(System.ReadOnlyMemory`1[MonoMod.Core.Utils.BytePattern]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(MonoMod.Core.Utils.BytePattern[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Collections.Generic.IEnumerable`1[MonoMod.Core.Utils.BytePattern]
    System.Collections.IEnumerable
  Properties:
    Int32 MinLength 'get ' : 
    Int32 MaxMinLength 'get ' : 
    Int32 MaxAddressLength 'get ' : 
  Methods:
    get_MinLength(): PrivateScope, Public, HideBySig, SpecialName
    get_MaxMinLength(): PrivateScope, Public, HideBySig, SpecialName
    get_MaxAddressLength(): PrivateScope, Public, HideBySig, SpecialName
    GetEnumerator(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    TryMatchAt(ReadOnlySpan`1, UInt64&(Out), BytePattern&(Out), Int32&(Out)): PrivateScope, Public, HideBySig
    TryMatchAt(ReadOnlySpan`1, Span`1, BytePattern&(Out), Int32&(Out)): PrivateScope, Public, HideBySig
    TryFindMatch(ReadOnlySpan`1, UInt64&(Out), BytePattern&(Out), Int32&(Out), Int32&(Out)): PrivateScope, Public, HideBySig
    TryFindMatch(ReadOnlySpan`1, Span`1, BytePattern&(Out), Int32&(Out), Int32&(Out)): PrivateScope, Public, HideBySig
    <ComputeLut>g__AddToPatternCollection|15_0(HomogenousPatternCollection&, ReadOnlySpan`1, BytePattern): PrivateScope, Assembly, Static, HideBySig
Class MonoMod.Core.Utils.IcedExtensions: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Methods:
    FormatInsns(IList`1): PrivateScope, Public, Static, HideBySig (Obsolete)
    FormatInsns(InstructionList): PrivateScope, Public, Static, HideBySig (Obsolete)
Interface MonoMod.Core.Utils.IInitialize: AutoLayout, AnsiClass, Class, ClassSemanticsMask, Abstract, BeforeFieldInit
  Methods:
    Initialize(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Interface MonoMod.Core.Utils.IInitialize`1[T]: AutoLayout, AnsiClass, Class, ClassSemanticsMask, Abstract, BeforeFieldInit
  Type parameter: T
  Methods:
    Initialize(T): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Struct MonoMod.Core.Platforms.TypeClassification: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    MonoMod.Core.Platforms.TypeClassification InRegister = 0 : Public, Static, Literal, HasDefault
    MonoMod.Core.Platforms.TypeClassification ByReference = 1 : Public, Static, Literal, HasDefault
    MonoMod.Core.Platforms.TypeClassification OnStack = 2 : Public, Static, Literal, HasDefault
Class MonoMod.Core.Platforms.Classifier: AutoLayout, AnsiClass, Class, Sealed
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(Type, Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(Type, Boolean, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Struct MonoMod.Core.Platforms.SpecialArgumentKind: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    MonoMod.Core.Platforms.SpecialArgumentKind ThisPointer = 0 : Public, Static, Literal, HasDefault
    MonoMod.Core.Platforms.SpecialArgumentKind ReturnBuffer = 1 : Public, Static, Literal, HasDefault
    MonoMod.Core.Platforms.SpecialArgumentKind GenericContext = 2 : Public, Static, Literal, HasDefault
    MonoMod.Core.Platforms.SpecialArgumentKind UserArguments = 3 : Public, Static, Literal, HasDefault
Struct MonoMod.Core.Platforms.Abi: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(System.ReadOnlyMemory`1[MonoMod.Core.Platforms.SpecialArgumentKind], MonoMod.Core.Platforms.Classifier, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IEquatable`1[MonoMod.Core.Platforms.Abi]
  Properties:
    System.ReadOnlyMemory`1[MonoMod.Core.Platforms.SpecialArgumentKind] ArgumentOrder 'get set' : 
    MonoMod.Core.Platforms.Classifier Classifier 'get set' : 
    Boolean ReturnsReturnBuffer 'get set' : 
  Methods:
    get_ArgumentOrder(): PrivateScope, Public, HideBySig, SpecialName
    set_ArgumentOrder(ReadOnlyMemory`1): PrivateScope, Public, HideBySig, SpecialName
    get_Classifier(): PrivateScope, Public, HideBySig, SpecialName
    set_Classifier(Classifier): PrivateScope, Public, HideBySig, SpecialName
    get_ReturnsReturnBuffer(): PrivateScope, Public, HideBySig, SpecialName
    set_ReturnsReturnBuffer(Boolean): PrivateScope, Public, HideBySig, SpecialName
    Classify(Type, Boolean): PrivateScope, Public, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
    op_Inequality(Abi, Abi): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Equality(Abi, Abi): PrivateScope, Public, Static, HideBySig, SpecialName
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    Equals(Abi): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Deconstruct(ReadOnlyMemory`1&(Out), Classifier&(Out), Boolean&(Out)): PrivateScope, Public, HideBySig
Struct MonoMod.Core.Platforms.ArchitectureFeature: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    MonoMod.Core.Platforms.ArchitectureFeature None = 0 : Public, Static, Literal, HasDefault
    MonoMod.Core.Platforms.ArchitectureFeature FixedInstructionSize = 1 : Public, Static, Literal, HasDefault
    MonoMod.Core.Platforms.ArchitectureFeature Immediate64 = 2 : Public, Static, Literal, HasDefault
    MonoMod.Core.Platforms.ArchitectureFeature CreateAltEntryPoint = 4 : Public, Static, Literal, HasDefault
Struct MonoMod.Core.Platforms.FeatureFlags: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(MonoMod.Core.Platforms.ArchitectureFeature, MonoMod.Core.Platforms.SystemFeature, MonoMod.Core.Platforms.RuntimeFeature): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IEquatable`1[MonoMod.Core.Platforms.FeatureFlags]
  Properties:
    MonoMod.Core.Platforms.ArchitectureFeature Architecture 'get ' : 
    MonoMod.Core.Platforms.SystemFeature System 'get ' : 
    MonoMod.Core.Platforms.RuntimeFeature Runtime 'get ' : 
  Methods:
    get_Architecture(): PrivateScope, Public, HideBySig, SpecialName
    get_System(): PrivateScope, Public, HideBySig, SpecialName
    get_Runtime(): PrivateScope, Public, HideBySig, SpecialName
    Has(RuntimeFeature): PrivateScope, Public, HideBySig
    Has(ArchitectureFeature): PrivateScope, Public, HideBySig
    Has(SystemFeature): PrivateScope, Public, HideBySig
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    Equals(FeatureFlags): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
    op_Equality(FeatureFlags, FeatureFlags): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Inequality(FeatureFlags, FeatureFlags): PrivateScope, Public, Static, HideBySig, SpecialName
Interface MonoMod.Core.Platforms.IAltEntryFactory: AutoLayout, AnsiClass, Class, ClassSemanticsMask, Abstract, BeforeFieldInit
  Methods:
    CreateAlternateEntrypoint(IntPtr, Int32, IDisposable&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Interface MonoMod.Core.Platforms.IArchitecture: AutoLayout, AnsiClass, Class, ClassSemanticsMask, Abstract, BeforeFieldInit
  Properties:
    MonoMod.Utils.ArchitectureKind Target 'get ' : 
    MonoMod.Core.Platforms.ArchitectureFeature Features 'get ' : 
    MonoMod.Core.Utils.BytePatternCollection KnownMethodThunks 'get ' : 
    MonoMod.Core.Platforms.IAltEntryFactory AltEntryFactory 'get ' : 
  Methods:
    get_Target(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Features(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_KnownMethodThunks(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_AltEntryFactory(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    ComputeDetourInfo(IntPtr, IntPtr, Int32(Optional, HasDefault)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetDetourBytes(NativeDetourInfo, Span`1, IDisposable&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    ComputeRetargetInfo(NativeDetourInfo, IntPtr, Int32(Optional, HasDefault)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetRetargetBytes(NativeDetourInfo, NativeDetourInfo, Span`1, IDisposable&(Out), Boolean&(Out), Boolean&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    CreateNativeVtableProxyStubs(IntPtr, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    CreateSpecialEntryStub(IntPtr, IntPtr): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Interface MonoMod.Core.Platforms.INativeDetourKind: AutoLayout, AnsiClass, Class, ClassSemanticsMask, Abstract, BeforeFieldInit
  Properties:
    Int32 Size 'get ' : 
  Methods:
    get_Size(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
Struct MonoMod.Core.Platforms.NativeDetourInfo: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(IntPtr, IntPtr, MonoMod.Core.Platforms.INativeDetourKind, System.IDisposable): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IEquatable`1[MonoMod.Core.Platforms.NativeDetourInfo]
  Properties:
    IntPtr From 'get set' : 
    IntPtr To  'get set' : 
    MonoMod.Core.Platforms.INativeDetourKind InternalKind 'get set' : 
    System.IDisposable InternalData 'get set' : 
    Int32 Size 'get ' : 
  Methods:
    get_From(): PrivateScope, Public, HideBySig, SpecialName
    set_From(IntPtr): PrivateScope, Public, HideBySig, SpecialName
    get_To(): PrivateScope, Public, HideBySig, SpecialName
    set_To(IntPtr): PrivateScope, Public, HideBySig, SpecialName
    get_InternalKind(): PrivateScope, Public, HideBySig, SpecialName
    set_InternalKind(INativeDetourKind): PrivateScope, Public, HideBySig, SpecialName
    get_InternalData(): PrivateScope, Public, HideBySig, SpecialName
    set_InternalData(IDisposable): PrivateScope, Public, HideBySig, SpecialName
    get_Size(): PrivateScope, Public, HideBySig, SpecialName
    ToString(): PrivateScope, Public, Virtual, HideBySig
    op_Inequality(NativeDetourInfo, NativeDetourInfo): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Equality(NativeDetourInfo, NativeDetourInfo): PrivateScope, Public, Static, HideBySig, SpecialName
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    Equals(NativeDetourInfo): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Deconstruct(IntPtr&(Out), IntPtr&(Out), INativeDetourKind&(Out), IDisposable&(Out)): PrivateScope, Public, HideBySig
Interface MonoMod.Core.Platforms.IMemoryAllocator: AutoLayout, AnsiClass, Class, ClassSemanticsMask, Abstract, BeforeFieldInit
  Properties:
    Int32 MaxSize 'get ' : 
  Methods:
    get_MaxSize(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    TryAllocate(AllocationRequest, IAllocatedMemory&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    TryAllocateInRange(PositionedAllocationRequest, IAllocatedMemory&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Struct MonoMod.Core.Platforms.AllocationRequest: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IEquatable`1[MonoMod.Core.Platforms.AllocationRequest]
  Properties:
    Int32 Size 'get set' : 
    Int32 Alignment 'get set' : 
    Boolean Executable 'get set' : 
  Methods:
    get_Size(): PrivateScope, Public, HideBySig, SpecialName
    set_Size(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Alignment(): PrivateScope, Public, HideBySig, SpecialName
    set_Alignment(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Executable(): PrivateScope, Public, HideBySig, SpecialName
    set_Executable(Boolean): PrivateScope, Public, HideBySig, SpecialName
    ToString(): PrivateScope, Public, Virtual, HideBySig
    op_Inequality(AllocationRequest, AllocationRequest): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Equality(AllocationRequest, AllocationRequest): PrivateScope, Public, Static, HideBySig, SpecialName
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    Equals(AllocationRequest): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Deconstruct(Int32&(Out)): PrivateScope, Public, HideBySig
Struct MonoMod.Core.Platforms.PositionedAllocationRequest: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(IntPtr, IntPtr, IntPtr, MonoMod.Core.Platforms.AllocationRequest): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IEquatable`1[MonoMod.Core.Platforms.PositionedAllocationRequest]
  Properties:
    IntPtr Target 'get set' : 
    IntPtr LowBound 'get set' : 
    IntPtr HighBound 'get set' : 
    MonoMod.Core.Platforms.AllocationRequest Base 'get set' : 
  Methods:
    get_Target(): PrivateScope, Public, HideBySig, SpecialName
    set_Target(IntPtr): PrivateScope, Public, HideBySig, SpecialName
    get_LowBound(): PrivateScope, Public, HideBySig, SpecialName
    set_LowBound(IntPtr): PrivateScope, Public, HideBySig, SpecialName
    get_HighBound(): PrivateScope, Public, HideBySig, SpecialName
    set_HighBound(IntPtr): PrivateScope, Public, HideBySig, SpecialName
    get_Base(): PrivateScope, Public, HideBySig, SpecialName
    set_Base(AllocationRequest): PrivateScope, Public, HideBySig, SpecialName
    ToString(): PrivateScope, Public, Virtual, HideBySig
    op_Inequality(PositionedAllocationRequest, PositionedAllocationRequest): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Equality(PositionedAllocationRequest, PositionedAllocationRequest): PrivateScope, Public, Static, HideBySig, SpecialName
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    Equals(PositionedAllocationRequest): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Deconstruct(IntPtr&(Out), IntPtr&(Out), IntPtr&(Out), AllocationRequest&(Out)): PrivateScope, Public, HideBySig
Interface MonoMod.Core.Platforms.IAllocatedMemory: AutoLayout, AnsiClass, Class, ClassSemanticsMask, Abstract, BeforeFieldInit
  Interfaces:
    System.IDisposable
  Properties:
    Boolean IsExecutable 'get ' : 
    IntPtr BaseAddress 'get ' : 
    Int32 Size 'get ' : 
    System.Span`1[System.Byte] Memory 'get ' : 
  Methods:
    get_IsExecutable(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_BaseAddress(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Size(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Memory(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
Interface MonoMod.Core.Platforms.INativeExceptionHelper: AutoLayout, AnsiClass, Class, ClassSemanticsMask, Abstract, BeforeFieldInit
  Properties:
    MonoMod.Core.Platforms.GetExceptionSlot GetExceptionSlot 'get ' : 
  Methods:
    get_GetExceptionSlot(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    CreateNativeToManagedHelper(IntPtr, IDisposable&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    CreateManagedToNativeHelper(IntPtr, IDisposable&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class MonoMod.Core.Platforms.GetExceptionSlot: AutoLayout, AnsiClass, Class, Sealed
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Interface MonoMod.Core.Platforms.IRuntime: AutoLayout, AnsiClass, Class, ClassSemanticsMask, Abstract, BeforeFieldInit
  Properties:
    MonoMod.Utils.RuntimeKind Target 'get ' : 
    MonoMod.Core.Platforms.RuntimeFeature Features 'get ' : 
    MonoMod.Core.Platforms.Abi Abi 'get ' : 
  Events:
    MonoMod.Core.Platforms.OnMethodCompiledCallback OnMethodCompiled: 
  Methods:
    get_Target(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Features(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Abi(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    add_OnMethodCompiled(OnMethodCompiledCallback): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    remove_OnMethodCompiled(OnMethodCompiledCallback): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    GetIdentifiable(MethodBase): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetMethodHandle(MethodBase): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    DisableInlining(MethodBase): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    PinMethodIfNeeded(MethodBase): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetMethodEntryPoint(MethodBase): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Compile(MethodBase): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class MonoMod.Core.Platforms.OnMethodCompiledCallback: AutoLayout, AnsiClass, Class, Sealed
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(RuntimeMethodHandle, MethodBase, IntPtr, IntPtr, UInt64): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(RuntimeMethodHandle, MethodBase, IntPtr, IntPtr, UInt64, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Interface MonoMod.Core.Platforms.ISystem: AutoLayout, AnsiClass, Class, ClassSemanticsMask, Abstract, BeforeFieldInit
  Properties:
    MonoMod.Utils.OSKind Target 'get ' : 
    MonoMod.Core.Platforms.SystemFeature Features 'get ' : 
    System.Nullable`1[MonoMod.Core.Platforms.Abi] DefaultAbi 'get ' : 
    MonoMod.Core.Platforms.IMemoryAllocator MemoryAllocator 'get ' : 
    MonoMod.Core.Platforms.INativeExceptionHelper NativeExceptionHelper 'get ' : 
  Methods:
    get_Target(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Features(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_DefaultAbi(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_MemoryAllocator(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_NativeExceptionHelper(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    EnumerateLoadedModuleFiles(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetSizeOfReadableMemory(IntPtr, IntPtr): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    PatchData(PatchTargetKind, IntPtr, ReadOnlySpan`1, Span`1): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Struct MonoMod.Core.Platforms.PatchTargetKind: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    MonoMod.Core.Platforms.PatchTargetKind Executable = 0 : Public, Static, Literal, HasDefault
    MonoMod.Core.Platforms.PatchTargetKind ReadOnly = 1 : Public, Static, Literal, HasDefault
Class MonoMod.Core.Platforms.PlatformTriple: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
    Void .ctor(MonoMod.Core.Platforms.IArchitecture, MonoMod.Core.Platforms.ISystem, MonoMod.Core.Platforms.IRuntime): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    MonoMod.Core.Platforms.IArchitecture Architecture 'get ' : 
    MonoMod.Core.Platforms.ISystem System 'get ' : 
    MonoMod.Core.Platforms.IRuntime Runtime 'get ' : 
    MonoMod.Core.Platforms.PlatformTriple Current 'get ' : 
    System.ValueTuple`3[MonoMod.Utils.ArchitectureKind,MonoMod.Utils.OSKind,MonoMod.Utils.RuntimeKind] HostTriple 'get ' : 
    MonoMod.Core.Platforms.FeatureFlags SupportedFeatures 'get ' : 
    MonoMod.Core.Platforms.Abi Abi 'get ' : 
  Methods:
    CreateCurrentRuntime(ISystem, IArchitecture): PrivateScope, Public, Static, HideBySig
    CreateCurrentArchitecture(ISystem): PrivateScope, Public, Static, HideBySig
    CreateCurrentSystem(): PrivateScope, Public, Static, HideBySig
    get_Architecture(): PrivateScope, Public, HideBySig, SpecialName
    get_System(): PrivateScope, Public, HideBySig, SpecialName
    get_Runtime(): PrivateScope, Public, HideBySig, SpecialName
    get_Current(): PrivateScope, Public, Static, HideBySig, SpecialName
    SetPlatformTriple(PlatformTriple): PrivateScope, Public, Static, HideBySig
    get_HostTriple(): PrivateScope, Public, HideBySig, SpecialName
    get_SupportedFeatures(): PrivateScope, Public, HideBySig, SpecialName
    get_Abi(): PrivateScope, Public, HideBySig, SpecialName
    Compile(MethodBase): PrivateScope, Public, HideBySig
    GetIdentifiable(MethodBase): PrivateScope, Public, HideBySig
    PinMethodIfNeeded(MethodBase): PrivateScope, Public, HideBySig
    TryDisableInlining(MethodBase): PrivateScope, Public, HideBySig
    CreateSimpleDetour(IntPtr, IntPtr, Int32(Optional, HasDefault), IntPtr(Optional, HasDefault)): PrivateScope, Public, HideBySig
    CreateNativeDetour(IntPtr, IntPtr, Int32(Optional, HasDefault), IntPtr(Optional, HasDefault)): PrivateScope, Public, HideBySig
    GetNativeMethodBody(MethodBase): PrivateScope, Public, HideBySig
    GetRealDetourTarget(MethodBase, MethodBase): PrivateScope, Public, HideBySig
Struct MonoMod.Core.Platforms.PlatformTriple+NativeDetour: AutoLayout, AnsiClass, Class, NestedPublic, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(MonoMod.Core.Platforms.SimpleNativeDetour, IntPtr, System.IDisposable): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IEquatable`1[MonoMod.Core.Platforms.PlatformTriple+NativeDetour]
  Properties:
    MonoMod.Core.Platforms.SimpleNativeDetour Simple 'get set' : 
    IntPtr AltEntry 'get set' : 
    System.IDisposable AltHandle 'get set' : 
    Boolean HasAltEntry 'get ' : 
  Methods:
    get_Simple(): PrivateScope, Public, HideBySig, SpecialName
    set_Simple(SimpleNativeDetour): PrivateScope, Public, HideBySig, SpecialName
    get_AltEntry(): PrivateScope, Public, HideBySig, SpecialName
    set_AltEntry(IntPtr): PrivateScope, Public, HideBySig, SpecialName
    get_AltHandle(): PrivateScope, Public, HideBySig, SpecialName
    set_AltHandle(IDisposable): PrivateScope, Public, HideBySig, SpecialName
    get_HasAltEntry(): PrivateScope, Public, HideBySig, SpecialName
    ToString(): PrivateScope, Public, Virtual, HideBySig
    op_Inequality(NativeDetour, NativeDetour): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Equality(NativeDetour, NativeDetour): PrivateScope, Public, Static, HideBySig, SpecialName
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    Equals(NativeDetour): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Deconstruct(SimpleNativeDetour&(Out), IntPtr&(Out), IDisposable&(Out)): PrivateScope, Public, HideBySig
Class MonoMod.Core.Platforms.PlatformTripleDetourFactory: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
    Void .ctor(MonoMod.Core.Platforms.PlatformTriple): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    MonoMod.Core.IDetourFactory
  Methods:
    CreateDetour(CreateDetourRequest): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CreateNativeDetour(CreateNativeDetourRequest): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Struct MonoMod.Core.Platforms.RuntimeFeature: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    MonoMod.Core.Platforms.RuntimeFeature None = 0 : Public, Static, Literal, HasDefault
    MonoMod.Core.Platforms.RuntimeFeature PreciseGC = 1 : Public, Static, Literal, HasDefault
    MonoMod.Core.Platforms.RuntimeFeature CompileMethodHook = 2 : Public, Static, Literal, HasDefault
    MonoMod.Core.Platforms.RuntimeFeature ILDetour = 4 : Public, Static, Literal, HasDefault
    MonoMod.Core.Platforms.RuntimeFeature GenericSharing = 8 : Public, Static, Literal, HasDefault
    MonoMod.Core.Platforms.RuntimeFeature ListGenericInstantiations = 64 : Public, Static, Literal, HasDefault
    MonoMod.Core.Platforms.RuntimeFeature DisableInlining = 16 : Public, Static, Literal, HasDefault
    MonoMod.Core.Platforms.RuntimeFeature Uninlining = 32 : Public, Static, Literal, HasDefault
    MonoMod.Core.Platforms.RuntimeFeature RequiresMethodPinning = 128 : Public, Static, Literal, HasDefault
    MonoMod.Core.Platforms.RuntimeFeature RequiresMethodIdentification = 256 : Public, Static, Literal, HasDefault
    MonoMod.Core.Platforms.RuntimeFeature RequiresBodyThunkWalking = 512 : Public, Static, Literal, HasDefault
    MonoMod.Core.Platforms.RuntimeFeature HasKnownABI = 1024 : Public, Static, Literal, HasDefault
    MonoMod.Core.Platforms.RuntimeFeature RequiresCustomMethodCompile = 2048 : Public, Static, Literal, HasDefault
Class MonoMod.Core.Platforms.SimpleNativeDetour: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
    Void .ctor(MonoMod.Core.Platforms.PlatformTriple, MonoMod.Core.Platforms.NativeDetourInfo, System.Memory`1[System.Byte], System.IDisposable): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Properties:
    System.ReadOnlyMemory`1[System.Byte] DetourBackup 'get ' : 
    IntPtr Source 'get ' : 
    IntPtr Destination 'get ' : 
  Methods:
    get_DetourBackup(): PrivateScope, Public, HideBySig, SpecialName
    get_Source(): PrivateScope, Public, HideBySig, SpecialName
    get_Destination(): PrivateScope, Public, HideBySig, SpecialName
    ChangeTarget(IntPtr): PrivateScope, Public, HideBySig
    Undo(): PrivateScope, Public, HideBySig
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Struct MonoMod.Core.Platforms.SystemFeature: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    MonoMod.Core.Platforms.SystemFeature None = 0 : Public, Static, Literal, HasDefault
    MonoMod.Core.Platforms.SystemFeature RWXPages = 1 : Public, Static, Literal, HasDefault
    MonoMod.Core.Platforms.SystemFeature RXPages = 2 : Public, Static, Literal, HasDefault
Class MonoMod.Core.Platforms.Systems.LinuxSystem: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    MonoMod.Core.Platforms.ISystem
    MonoMod.Core.Utils.IInitialize`1[MonoMod.Core.Platforms.IArchitecture]
  Properties:
    MonoMod.Utils.OSKind Target 'get ' : 
    MonoMod.Core.Platforms.SystemFeature Features 'get ' : 
    System.Nullable`1[MonoMod.Core.Platforms.Abi] DefaultAbi 'get ' : 
    MonoMod.Core.Platforms.IMemoryAllocator MemoryAllocator 'get ' : 
    MonoMod.Core.Platforms.INativeExceptionHelper NativeExceptionHelper 'get ' : 
  Methods:
    get_Target(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Features(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_DefaultAbi(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    EnumerateLoadedModuleFiles(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_MemoryAllocator(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    GetSizeOfReadableMemory(IntPtr, IntPtr): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    PatchData(PatchTargetKind, IntPtr, ReadOnlySpan`1, Span`1): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_NativeExceptionHelper(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
Class MonoMod.Core.Platforms.Systems.MacOSSystem: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    MonoMod.Core.Platforms.ISystem
    MonoMod.Core.Utils.IInitialize`1[MonoMod.Core.Platforms.IArchitecture]
  Properties:
    MonoMod.Utils.OSKind Target 'get ' : 
    MonoMod.Core.Platforms.SystemFeature Features 'get ' : 
    System.Nullable`1[MonoMod.Core.Platforms.Abi] DefaultAbi 'get ' : 
    MonoMod.Core.Platforms.IMemoryAllocator MemoryAllocator 'get ' : 
    MonoMod.Core.Platforms.INativeExceptionHelper NativeExceptionHelper 'get ' : 
  Methods:
    get_Target(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Features(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_DefaultAbi(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    EnumerateLoadedModuleFiles(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetSizeOfReadableMemory(IntPtr, IntPtr): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    PatchData(PatchTargetKind, IntPtr, ReadOnlySpan`1, Span`1): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_MemoryAllocator(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_NativeExceptionHelper(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
Class MonoMod.Core.Platforms.Systems.PosixExceptionHelper: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  Interfaces:
    MonoMod.Core.Platforms.INativeExceptionHelper
  Properties:
    IntPtr NativeException 'get set' : 
    MonoMod.Core.Platforms.GetExceptionSlot GetExceptionSlot 'get ' : 
  Methods:
    CreateHelper(IArchitecture, String): PrivateScope, Public, Static, HideBySig
    get_NativeException(): PrivateScope, Public, HideBySig, SpecialName
    set_NativeException(IntPtr): PrivateScope, Public, HideBySig, SpecialName
    get_GetExceptionSlot(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    CreateManagedToNativeHelper(IntPtr, IDisposable&(Out)): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CreateNativeToManagedHelper(IntPtr, IDisposable&(Out)): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class MonoMod.Core.Platforms.Systems.SystemVABI: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Methods:
    ClassifyAMD64(Type, Boolean): PrivateScope, Public, Static, HideBySig
Class MonoMod.Core.Platforms.Systems.WindowsSystem: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    MonoMod.Core.Platforms.ISystem
  Properties:
    MonoMod.Utils.OSKind Target 'get ' : 
    MonoMod.Core.Platforms.SystemFeature Features 'get ' : 
    MonoMod.Core.Platforms.INativeExceptionHelper NativeExceptionHelper 'get ' : 
    System.Nullable`1[MonoMod.Core.Platforms.Abi] DefaultAbi 'get ' : 
    MonoMod.Core.Platforms.IMemoryAllocator MemoryAllocator 'get ' : 
  Methods:
    get_Target(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Features(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_NativeExceptionHelper(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_DefaultAbi(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    PatchData(PatchTargetKind, IntPtr, ReadOnlySpan`1, Span`1): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    EnumerateLoadedModuleFiles(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetSizeOfReadableMemory(IntPtr, IntPtr): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_MemoryAllocator(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
Class MonoMod.Core.Platforms.Runtimes.Core21Runtime: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :MonoMod.Core.Platforms.Runtimes.CoreBaseRuntime
    Void .ctor(MonoMod.Core.Platforms.ISystem): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    MonoMod.Core.Platforms.RuntimeFeature Features 'get ' : 
  Methods:
    get_Features(): PrivateScope, Public, Virtual, HideBySig, SpecialName
Class MonoMod.Core.Platforms.Runtimes.Core30Runtime: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :MonoMod.Core.Platforms.Runtimes.Core21Runtime
    Void .ctor(MonoMod.Core.Platforms.ISystem): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class MonoMod.Core.Platforms.Runtimes.Core31Runtime: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :MonoMod.Core.Platforms.Runtimes.Core30Runtime
    Void .ctor(MonoMod.Core.Platforms.ISystem): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class MonoMod.Core.Platforms.Runtimes.Core50Runtime: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :MonoMod.Core.Platforms.Runtimes.Core31Runtime
    Void .ctor(MonoMod.Core.Platforms.ISystem): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class MonoMod.Core.Platforms.Runtimes.Core60Runtime: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :MonoMod.Core.Platforms.Runtimes.Core50Runtime
    Void .ctor(MonoMod.Core.Platforms.ISystem): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class MonoMod.Core.Platforms.Runtimes.Core70Runtime: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :MonoMod.Core.Platforms.Runtimes.Core60Runtime
    Void .ctor(MonoMod.Core.Platforms.ISystem, MonoMod.Core.Platforms.IArchitecture): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class MonoMod.Core.Platforms.Runtimes.Core80Runtime: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :MonoMod.Core.Platforms.Runtimes.Core70Runtime
    Void .ctor(MonoMod.Core.Platforms.ISystem, MonoMod.Core.Platforms.IArchitecture): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class MonoMod.Core.Platforms.Runtimes.CoreBaseRuntime: AutoLayout, AnsiClass, Class, Abstract, BeforeFieldInit
  :MonoMod.Core.Platforms.Runtimes.FxCoreBaseRuntime
  Interfaces:
    MonoMod.Core.Utils.IInitialize
  Properties:
    MonoMod.Utils.RuntimeKind Target 'get ' : 
  Methods:
    CreateForVersion(Version, ISystem, IArchitecture): PrivateScope, Public, Static, HideBySig
    get_Target(): PrivateScope, Public, Virtual, HideBySig, SpecialName
Class MonoMod.Core.Platforms.Runtimes.FxBaseRuntime: AutoLayout, AnsiClass, Class, Abstract, BeforeFieldInit
  :MonoMod.Core.Platforms.Runtimes.FxCoreBaseRuntime
  Properties:
    MonoMod.Utils.RuntimeKind Target 'get ' : 
  Methods:
    get_Target(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    CreateForVersion(Version, ISystem): PrivateScope, Public, Static, HideBySig
Class MonoMod.Core.Platforms.Runtimes.FxCLR2Runtime: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :MonoMod.Core.Platforms.Runtimes.FxBaseRuntime
    Void .ctor(MonoMod.Core.Platforms.ISystem): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class MonoMod.Core.Platforms.Runtimes.FxCLR4Runtime: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :MonoMod.Core.Platforms.Runtimes.FxBaseRuntime
    Void .ctor(MonoMod.Core.Platforms.ISystem): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    MonoMod.Core.Platforms.RuntimeFeature Features 'get ' : 
  Methods:
    get_Features(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    GetMethodEntryPoint(MethodBase): PrivateScope, Public, Virtual, HideBySig
Class MonoMod.Core.Platforms.Runtimes.FxCoreBaseRuntime: AutoLayout, AnsiClass, Class, Abstract, BeforeFieldInit
  Interfaces:
    MonoMod.Core.Platforms.IRuntime
  Properties:
    MonoMod.Utils.RuntimeKind Target 'get ' : 
    MonoMod.Core.Platforms.RuntimeFeature Features 'get ' : 
    MonoMod.Core.Platforms.Abi Abi 'get ' : 
  Events:
    MonoMod.Core.Platforms.OnMethodCompiledCallback OnMethodCompiled: 
  Methods:
    get_Target(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Features(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Abi(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    GetIdentifiable(MethodBase): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetMethodHandle(MethodBase): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Compile(MethodBase): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    PinMethodIfNeeded(MethodBase): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    DisableInlining(MethodBase): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetMethodEntryPoint(MethodBase): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    add_OnMethodCompiled(OnMethodCompiledCallback): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    remove_OnMethodCompiled(OnMethodCompiledCallback): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
Class MonoMod.Core.Platforms.Runtimes.MonoRuntime: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
    Void .ctor(MonoMod.Core.Platforms.ISystem): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    MonoMod.Core.Platforms.IRuntime
  Properties:
    MonoMod.Utils.RuntimeKind Target 'get ' : 
    MonoMod.Core.Platforms.RuntimeFeature Features 'get ' : 
    MonoMod.Core.Platforms.Abi Abi 'get ' : 
  Events:
    MonoMod.Core.Platforms.OnMethodCompiledCallback OnMethodCompiled: 
  Methods:
    get_Target(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Features(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Abi(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    add_OnMethodCompiled(OnMethodCompiledCallback): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    remove_OnMethodCompiled(OnMethodCompiledCallback): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    DisableInlining(MethodBase): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetMethodHandle(MethodBase): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    PinMethodIfNeeded(MethodBase): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetIdentifiable(MethodBase): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetMethodEntryPoint(MethodBase): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Compile(MethodBase): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class MonoMod.Core.Platforms.Memory.PagedMemoryAllocator: AutoLayout, AnsiClass, Class, Abstract, BeforeFieldInit
  Interfaces:
    MonoMod.Core.Platforms.IMemoryAllocator
  Properties:
    Int32 MaxSize 'get ' : 
  Methods:
    RoundDownToPageBoundary(IntPtr): PrivateScope, Public, HideBySig
    get_MaxSize(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    TryAllocateInRange(PositionedAllocationRequest, IAllocatedMemory&(Out)): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    TryAllocate(AllocationRequest, IAllocatedMemory&(Out)): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class MonoMod.Core.Platforms.Memory.QueryingMemoryPageAllocatorBase: AutoLayout, AnsiClass, Class, Abstract, BeforeFieldInit
  Properties:
    UInt32 PageSize 'get ' : 
  Methods:
    get_PageSize(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    TryQueryPage(IntPtr, Boolean&(Out), IntPtr&(Out), IntPtr&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    TryAllocatePage(IntPtr, Boolean, IntPtr&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    TryAllocatePage(IntPtr, IntPtr, Boolean, IntPtr&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    TryFreePage(IntPtr, String&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class MonoMod.Core.Platforms.Memory.QueryingPagedMemoryAllocator: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :MonoMod.Core.Platforms.Memory.PagedMemoryAllocator
    Void .ctor(MonoMod.Core.Platforms.Memory.QueryingMemoryPageAllocatorBase): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class MonoMod.Core.Platforms.Architectures.DetourKindBase: AutoLayout, AnsiClass, Class, Abstract, BeforeFieldInit
  Interfaces:
    MonoMod.Core.Platforms.INativeDetourKind
  Properties:
    Int32 Size 'get ' : 
  Methods:
    get_Size(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    GetBytes(IntPtr, IntPtr, Span`1, Object, IDisposable&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetDetourBytes(NativeDetourInfo, Span`1, IDisposable&(Out)): PrivateScope, Public, Static, HideBySig
    TryGetRetargetInfo(NativeDetourInfo, IntPtr, Int32, NativeDetourInfo&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    TryFindRetargetInfo(NativeDetourInfo, IntPtr, Int32, NativeDetourInfo&(Out)): PrivateScope, Public, Static, HideBySig
    DoRetarget(NativeDetourInfo, IntPtr, Span`1, Object, IDisposable&(Out), Boolean&(Out), Boolean&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    DoRetarget(NativeDetourInfo, NativeDetourInfo, Span`1, IDisposable&(Out), Boolean&(Out), Boolean&(Out)): PrivateScope, Public, Static, HideBySig
Class MonoMod.Core.Platforms.Architectures.Shared: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Methods:
    CreateVtableStubs(ISystem, IntPtr, Int32, ReadOnlySpan`1, Int32, Boolean): PrivateScope, Public, Static, HideBySig
    <CreateVtableStubs>g__FillBufferIndicies|0_0(Int32, Int32, Int32, Int32, Span`1, Boolean): PrivateScope, Assembly, Static, HideBySig
    <CreateVtableStubs>g__FillVtbl|0_1(Int32, Int32, IntPtr&, Int32, IntPtr): PrivateScope, Assembly, Static, HideBySig
Class MonoMod.Core.Platforms.Architectures.x86Arch: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
    Void .ctor(MonoMod.Core.Platforms.ISystem): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    MonoMod.Core.Platforms.IArchitecture
  Properties:
    MonoMod.Utils.ArchitectureKind Target 'get ' : 
    MonoMod.Core.Platforms.ArchitectureFeature Features 'get ' : 
    MonoMod.Core.Utils.BytePatternCollection KnownMethodThunks 'get ' : 
    MonoMod.Core.Platforms.IAltEntryFactory AltEntryFactory 'get ' : 
  Methods:
    get_Target(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Features(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_KnownMethodThunks(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_AltEntryFactory(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    ComputeDetourInfo(IntPtr, IntPtr, Int32(Optional, HasDefault)): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetDetourBytes(NativeDetourInfo, Span`1, IDisposable&(Out)): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ComputeRetargetInfo(NativeDetourInfo, IntPtr, Int32(Optional, HasDefault)): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetRetargetBytes(NativeDetourInfo, NativeDetourInfo, Span`1, IDisposable&(Out), Boolean&(Out), Boolean&(Out)): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CreateNativeVtableProxyStubs(IntPtr, Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CreateSpecialEntryStub(IntPtr, IntPtr): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class MonoMod.Core.Platforms.Architectures.x86Shared: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Methods:
    FixSizeHint(Int32&): PrivateScope, Public, Static, HideBySig
    TryRel32Detour(IntPtr, IntPtr, Int32, NativeDetourInfo&(Out)): PrivateScope, Public, Static, HideBySig
    Is32Bit(Int64): PrivateScope, Public, Static, HideBySig
Class MonoMod.Core.Platforms.Architectures.x86Shared+Rel32Kind: AutoLayout, AnsiClass, Class, NestedPublic, Sealed, BeforeFieldInit
  :MonoMod.Core.Platforms.Architectures.DetourKindBase
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Rel32Kind Instance : Public, Static, InitOnly
  Properties:
    Int32 Size 'get ' : 
  Methods:
    get_Size(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    GetBytes(IntPtr, IntPtr, Span`1, Object, IDisposable&(Out)): PrivateScope, Public, Virtual, HideBySig
    TryGetRetargetInfo(NativeDetourInfo, IntPtr, Int32, NativeDetourInfo&(Out)): PrivateScope, Public, Virtual, HideBySig
    DoRetarget(NativeDetourInfo, IntPtr, Span`1, Object, IDisposable&(Out), Boolean&(Out), Boolean&(Out)): PrivateScope, Public, Virtual, HideBySig
Class MonoMod.Core.Platforms.Architectures.x86_64Arch: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
    Void .ctor(MonoMod.Core.Platforms.ISystem): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    MonoMod.Core.Platforms.IArchitecture
  Properties:
    MonoMod.Utils.ArchitectureKind Target 'get ' : 
    MonoMod.Core.Platforms.ArchitectureFeature Features 'get ' : 
    MonoMod.Core.Utils.BytePatternCollection KnownMethodThunks 'get ' : 
    MonoMod.Core.Platforms.IAltEntryFactory AltEntryFactory 'get ' : 
  Methods:
    get_Target(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Features(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_KnownMethodThunks(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_AltEntryFactory(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    ComputeDetourInfo(IntPtr, IntPtr, Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetDetourBytes(NativeDetourInfo, Span`1, IDisposable&(Out)): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ComputeRetargetInfo(NativeDetourInfo, IntPtr, Int32(Optional, HasDefault)): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetRetargetBytes(NativeDetourInfo, NativeDetourInfo, Span`1, IDisposable&(Out), Boolean&(Out), Boolean&(Out)): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CreateNativeVtableProxyStubs(IntPtr, Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CreateSpecialEntryStub(IntPtr, IntPtr): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class MonoMod.Core.Platforms.Architectures.AltEntryFactories.IcedAltEntryFactory: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
    Void .ctor(MonoMod.Core.Platforms.ISystem, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    MonoMod.Core.Platforms.IAltEntryFactory
  Methods:
    CreateAlternateEntrypoint(IntPtr, Int32, IDisposable&(Out)): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class MonoMod.Core.Interop.CoreCLR: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
Struct MonoMod.Core.Interop.CoreCLR+CorJitResult: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    CorJitResult CORJIT_OK = 0 : Public, Static, Literal, HasDefault
Struct MonoMod.Core.Interop.CoreCLR+InvokeCompileMethodPtr: AutoLayout, AnsiClass, Class, NestedPublic, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    IntPtr InvokeCompileMethod 'get ' : 
  Methods:
    get_InvokeCompileMethod(): PrivateScope, Public, HideBySig, SpecialName
Class MonoMod.Core.Interop.CoreCLR+V21: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    InvokeCompileMethodPtr InvokeCompileMethodPtr 'get ' : 
  Methods:
    get_InvokeCompileMethodPtr(): PrivateScope, Public, Static, HideBySig, SpecialName
    InvokeCompileMethod(IntPtr, IntPtr, IntPtr, CORINFO_METHOD_INFO*, UInt32, Byte**, UInt32*): PrivateScope, Public, Static, HideBySig
Struct MonoMod.Core.Interop.CoreCLR+V21+CORINFO_SIG_INST: AutoLayout, AnsiClass, Class, NestedPublic, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    UInt32 classInstCount : Public
    IntPtr* classInst : Public
    UInt32 methInstCount : Public
    IntPtr* methInst : Public
Struct MonoMod.Core.Interop.CoreCLR+V21+CORINFO_SIG_INFO: AutoLayout, AnsiClass, Class, NestedPublic, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    Int32 callConv : Public
    IntPtr retTypeClass : Public
    IntPtr retTypeSigClass : Public
    Byte retType : Public
    Byte flags : Public
    UInt16 numArgs : Public
    CORINFO_SIG_INST sigInst : Public
    IntPtr args : Public
    IntPtr pSig : Public
    UInt32 sbSig : Public
    IntPtr scope : Public
    UInt32 token : Public
Struct MonoMod.Core.Interop.CoreCLR+V21+CORINFO_METHOD_INFO: AutoLayout, AnsiClass, Class, NestedPublic, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    IntPtr ftn : Public
    IntPtr scope : Public
    Byte* ILCode : Public
    UInt32 ILCodeSize : Public
    UInt32 maxStack : Public
    UInt32 EHcount : Public
    Int32 options : Public
    Int32 regionKind : Public
    CORINFO_SIG_INFO args : Public
    CORINFO_SIG_INFO locals : Public
Class MonoMod.Core.Interop.CoreCLR+V21+CompileMethodDelegate: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(IntPtr, IntPtr, CORINFO_METHOD_INFO*, UInt32, Byte**, UInt32*): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(IntPtr, IntPtr, CORINFO_METHOD_INFO*, UInt32, Byte**, UInt32*, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class MonoMod.Core.Interop.CoreCLR+V30: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :MonoMod.Core.Interop.CoreCLR+V21
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class MonoMod.Core.Interop.CoreCLR+V31: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :MonoMod.Core.Interop.CoreCLR+V30
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class MonoMod.Core.Interop.CoreCLR+V50: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :MonoMod.Core.Interop.CoreCLR+V31
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class MonoMod.Core.Interop.CoreCLR+V60: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :MonoMod.Core.Interop.CoreCLR+V50
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    InvokeCompileMethodPtr InvokeCompileMethodPtr 'get ' : 
  Methods:
    get_InvokeCompileMethodPtr(): PrivateScope, Public, Static, HideBySig, SpecialName
    InvokeCompileMethod(IntPtr, IntPtr, IntPtr, CORINFO_METHOD_INFO*, UInt32, Byte**, UInt32*): PrivateScope, Public, Static, HideBySig
Class MonoMod.Core.Interop.CoreCLR+V60+CompileMethodDelegate: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(IntPtr, IntPtr, CORINFO_METHOD_INFO*, UInt32, Byte**, UInt32*): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(IntPtr, IntPtr, CORINFO_METHOD_INFO*, UInt32, Byte**, UInt32*, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Struct MonoMod.Core.Interop.CoreCLR+V60+MethodClassification: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    MethodClassification IL = 0 : Public, Static, Literal, HasDefault
    MethodClassification FCall = 1 : Public, Static, Literal, HasDefault
    MethodClassification NDirect = 2 : Public, Static, Literal, HasDefault
    MethodClassification EEImpl = 3 : Public, Static, Literal, HasDefault
    MethodClassification Array = 4 : Public, Static, Literal, HasDefault
    MethodClassification Instantiated = 5 : Public, Static, Literal, HasDefault
    MethodClassification ComInterop = 6 : Public, Static, Literal, HasDefault
    MethodClassification Dynamic = 7 : Public, Static, Literal, HasDefault
Struct MonoMod.Core.Interop.CoreCLR+V60+MethodDescClassification: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.Enum
  Fields:
    UInt16 value__ : Public, SpecialName, RTSpecialName
    MethodDescClassification ClassificationMask = 7 : Public, Static, Literal, HasDefault
    MethodDescClassification HasNonVtableSlot = 8 : Public, Static, Literal, HasDefault
    MethodDescClassification MethodImpl = 16 : Public, Static, Literal, HasDefault
    MethodDescClassification HasNativeCodeSlot = 32 : Public, Static, Literal, HasDefault
    MethodDescClassification HasComPlusCallInfo = 64 : Public, Static, Literal, HasDefault
    MethodDescClassification Static = 128 : Public, Static, Literal, HasDefault
    MethodDescClassification Duplicate = 1024 : Public, Static, Literal, HasDefault
    MethodDescClassification VerifiedState = 2048 : Public, Static, Literal, HasDefault
    MethodDescClassification Verifiable = 4096 : Public, Static, Literal, HasDefault
    MethodDescClassification NotInline = 8192 : Public, Static, Literal, HasDefault
    MethodDescClassification Synchronized = 16384 : Public, Static, Literal, HasDefault
    MethodDescClassification RequiresFullSlotNumber = 32768 : Public, Static, Literal, HasDefault
Struct MonoMod.Core.Interop.CoreCLR+V60+RelativePointer: AutoLayout, AnsiClass, Class, NestedPublic, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Void* Value 'get ' : 
  Methods:
    get_Value(): PrivateScope, Public, HideBySig, SpecialName
Struct MonoMod.Core.Interop.CoreCLR+V60+RelativeFixupPointer: AutoLayout, AnsiClass, Class, NestedPublic, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    IntPtr FIXUP_POINTER_INDIRECTION = 1 : Public, Static, Literal, HasDefault
  Properties:
    Void* Value 'get ' : 
  Methods:
    get_Value(): PrivateScope, Public, HideBySig, SpecialName
Struct MonoMod.Core.Interop.CoreCLR+V60+MethodDesc: AutoLayout, AnsiClass, Class, NestedPublic, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    Flags3 m_wFlags3AndTokenRemainder : Public
    Byte m_chunkIndex : Public
    Flags2 m_bFlags2 : Public
    UInt16 m_wSlotNumber : Public
    MethodDescClassification m_wFlags : Public
    UIntPtr Alignment : Public, Static, InitOnly
    UInt16 PackedSlot_SlotMask = 1023 : Public, Static, Literal, HasDefault
    UInt16 PackedSlot_NameHashMask = 64512 : Public, Static, Literal, HasDefault
  Properties:
    UInt16 SlotNumber 'get ' : 
    MethodClassification Classification 'get ' : 
    MethodDescChunk* MethodDescChunk 'get ' : 
    MethodTable* MethodTable 'get ' : 
    Boolean HasNonVtableSlot 'get ' : 
    Boolean HasStableEntryPoint 'get ' : 
    Boolean HasPrecode 'get ' : 
    Boolean HasNativeCodeSlot 'get ' : 
    Boolean IsUnboxingStub 'get ' : 
    Boolean HasMethodInstantiation 'get ' : 
    Boolean IsGenericMethodDefinition 'get ' : 
    Boolean IsInstantiatingStub 'get ' : 
    Boolean IsWrapperStub 'get ' : 
    Boolean IsTightlyBoundToMethodTable 'get ' : 
  Methods:
    get_SlotNumber(): PrivateScope, Public, HideBySig, SpecialName
    get_Classification(): PrivateScope, Public, HideBySig, SpecialName
    get_MethodDescChunk(): PrivateScope, Public, HideBySig, SpecialName
    get_MethodTable(): PrivateScope, Public, HideBySig, SpecialName
    GetMethodEntryPoint(): PrivateScope, Public, HideBySig
    TryAsFCall(FCallMethodDescPtr&(Out)): PrivateScope, Public, HideBySig
    TryAsNDirect(NDirectMethodDescPtr&(Out)): PrivateScope, Public, HideBySig
    TryAsEEImpl(EEImplMethodDescPtr&(Out)): PrivateScope, Public, HideBySig
    TryAsArray(ArrayMethodDescPtr&(Out)): PrivateScope, Public, HideBySig
    TryAsInstantiated(InstantiatedMethodDesc*&(Out)): PrivateScope, Public, HideBySig
    TryAsComPlusCall(ComPlusCallMethodDesc*&(Out)): PrivateScope, Public, HideBySig
    TryAsDynamic(DynamicMethodDescPtr&(Out)): PrivateScope, Public, HideBySig
    SizeOf(Boolean(Optional, HasDefault), Boolean(Optional, HasDefault), Boolean(Optional, HasDefault), Boolean(Optional, HasDefault)): PrivateScope, Public, HideBySig
    GetNativeCode(): PrivateScope, Public, HideBySig
    GetStableEntryPoint(): PrivateScope, Public, HideBySig
    get_HasNonVtableSlot(): PrivateScope, Public, HideBySig, SpecialName
    get_HasStableEntryPoint(): PrivateScope, Public, HideBySig, SpecialName
    get_HasPrecode(): PrivateScope, Public, HideBySig, SpecialName
    get_HasNativeCodeSlot(): PrivateScope, Public, HideBySig, SpecialName
    get_IsUnboxingStub(): PrivateScope, Public, HideBySig, SpecialName
    get_HasMethodInstantiation(): PrivateScope, Public, HideBySig, SpecialName
    get_IsGenericMethodDefinition(): PrivateScope, Public, HideBySig, SpecialName
    get_IsInstantiatingStub(): PrivateScope, Public, HideBySig, SpecialName
    get_IsWrapperStub(): PrivateScope, Public, HideBySig, SpecialName
    get_IsTightlyBoundToMethodTable(): PrivateScope, Public, HideBySig, SpecialName
    FindTightlyBoundWrappedMethodDesc(MethodDesc*): PrivateScope, Public, Static, HideBySig
    GetNextIntroducedMethod(MethodDesc*): PrivateScope, Public, Static, HideBySig
    GetCanonicalMethodTable(): PrivateScope, Public, HideBySig
    GetAddrOfNativeCodeSlot(): PrivateScope, Public, HideBySig
    GetBaseSize(): PrivateScope, Public, HideBySig
    GetBaseSize(MethodClassification): PrivateScope, Public, Static, HideBySig
Struct MonoMod.Core.Interop.CoreCLR+V60+MethodDesc+Flags3: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.Enum
  Fields:
    UInt16 value__ : Public, SpecialName, RTSpecialName
    Flags3 TokenRemainderMask = 16383 : Public, Static, Literal, HasDefault
    Flags3 HasForwardedValuetypeParameter = 16384 : Public, Static, Literal, HasDefault
    Flags3 ValueTypeParametersWalked = 16384 : Public, Static, Literal, HasDefault
    Flags3 DoesNotHaveEquivalentValuetypeParameters = 32768 : Public, Static, Literal, HasDefault
Struct MonoMod.Core.Interop.CoreCLR+V60+MethodDesc+Flags2: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.Enum
  Fields:
    Byte value__ : Public, SpecialName, RTSpecialName
    Flags2 HasStableEntryPoint = 1 : Public, Static, Literal, HasDefault
    Flags2 HasPrecode = 2 : Public, Static, Literal, HasDefault
    Flags2 IsUnboxingStub = 4 : Public, Static, Literal, HasDefault
    Flags2 IsJitIntrinsic = 16 : Public, Static, Literal, HasDefault
    Flags2 IsEligibleForTieredCompilation = 32 : Public, Static, Literal, HasDefault
    Flags2 RequiresCovariantReturnTypeChecking = 64 : Public, Static, Literal, HasDefault
Struct MonoMod.Core.Interop.CoreCLR+V60+MethodDescChunk: AutoLayout, AnsiClass, Class, NestedPublic, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    MethodTable* m_methodTable : Public
    MethodDescChunk* m_next : Public
    Byte m_size : Public
    Byte m_count : Public
    Flags m_flagsAndTokenRange : Public
  Properties:
    MethodDesc* FirstMethodDesc 'get ' : 
    UInt32 Size 'get ' : 
    UInt32 Count 'get ' : 
    UIntPtr SizeOf 'get ' : 
  Methods:
    get_FirstMethodDesc(): PrivateScope, Public, HideBySig, SpecialName
    get_Size(): PrivateScope, Public, HideBySig, SpecialName
    get_Count(): PrivateScope, Public, HideBySig, SpecialName
    get_SizeOf(): PrivateScope, Public, HideBySig, SpecialName
Struct MonoMod.Core.Interop.CoreCLR+V60+MethodDescChunk+Flags: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.Enum
  Fields:
    UInt16 value__ : Public, SpecialName, RTSpecialName
    Flags TokenRangeMask = 1023 : Public, Static, Literal, HasDefault
    Flags HasCompactEntrypoints = 16384 : Public, Static, Literal, HasDefault
    Flags IsZapped = 32768 : Public, Static, Literal, HasDefault
Struct MonoMod.Core.Interop.CoreCLR+V60+StoredSigMethodDescPtr: AutoLayout, AnsiClass, Class, NestedPublic, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Void*, IntPtr[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    IntPtr[] CurrentVtable 'get ' : 
    Int32 CurrentSize 'get ' : 
    Void* m_pSig 'get ' : 
    UInt32 m_cSig 'get ' : 
  Methods:
    get_CurrentVtable(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_CurrentSize(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_m_pSig(): PrivateScope, Public, HideBySig, SpecialName
    get_m_cSig(): PrivateScope, Public, HideBySig, SpecialName
Struct MonoMod.Core.Interop.CoreCLR+V60+StoredSigMethodDesc_64: AutoLayout, AnsiClass, Class, NestedPublic, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    MethodDesc base : Public
    Void* m_pSig : Public
    UInt32 m_cSig : Public
    UInt32 m_dwExtendedFlags : Public
  Properties:
    IntPtr[] FatVtable_ 'get ' : 
  Methods:
    get_FatVtable_(): PrivateScope, Public, Static, HideBySig, SpecialName
    <get_FatVtable_>g__S_GetPSig_0|8_0(Void*): PrivateScope, Assembly, Static, HideBySig
    <get_FatVtable_>g__S_GetCSig_1|8_1(Void*): PrivateScope, Assembly, Static, HideBySig
Struct MonoMod.Core.Interop.CoreCLR+V60+StoredSigMethodDesc_32: AutoLayout, AnsiClass, Class, NestedPublic, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    MethodDesc base : Public
    Void* m_pSig : Public
    UInt32 m_cSig : Public
  Properties:
    IntPtr[] FatVtable_ 'get ' : 
  Methods:
    get_FatVtable_(): PrivateScope, Public, Static, HideBySig, SpecialName
    <get_FatVtable_>g__S_GetPSig_0|7_0(Void*): PrivateScope, Assembly, Static, HideBySig
    <get_FatVtable_>g__S_GetCSig_1|7_1(Void*): PrivateScope, Assembly, Static, HideBySig
Struct MonoMod.Core.Interop.CoreCLR+V60+FCallMethodDescPtr: AutoLayout, AnsiClass, Class, NestedPublic, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Void*, IntPtr[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    IntPtr[] CurrentVtable 'get ' : 
    Int32 CurrentSize 'get ' : 
    UInt32 m_dwECallID 'get ' : 
  Methods:
    get_CurrentVtable(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_CurrentSize(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_m_dwECallID(): PrivateScope, Public, HideBySig, SpecialName
Struct MonoMod.Core.Interop.CoreCLR+V60+FCallMethodDesc_64: AutoLayout, AnsiClass, Class, NestedPublic, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    MethodDesc base : Public
    UInt32 m_dwECallID : Public
    UInt32 m_padding : Public
  Properties:
    IntPtr[] FatVtable_ 'get ' : 
  Methods:
    get_FatVtable_(): PrivateScope, Public, Static, HideBySig, SpecialName
    <get_FatVtable_>g__S_GetECallID_0|6_0(Void*): PrivateScope, Assembly, Static, HideBySig
Struct MonoMod.Core.Interop.CoreCLR+V60+FCallMethodDesc_32: AutoLayout, AnsiClass, Class, NestedPublic, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    MethodDesc base : Public
    UInt32 m_dwECallID : Public
  Properties:
    IntPtr[] FatVtable_ 'get ' : 
  Methods:
    get_FatVtable_(): PrivateScope, Public, Static, HideBySig, SpecialName
    <get_FatVtable_>g__S_GetECallID_0|5_0(Void*): PrivateScope, Assembly, Static, HideBySig
Struct MonoMod.Core.Interop.CoreCLR+V60+DynamicResolver: AutoLayout, AnsiClass, Class, NestedPublic, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
Struct MonoMod.Core.Interop.CoreCLR+V60+DynamicMethodDesc_ExtendedFlags: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    DynamicMethodDesc_ExtendedFlags Attrs = 65535 : Public, Static, Literal, HasDefault
    DynamicMethodDesc_ExtendedFlags ILStubAttrs = 23 : Public, Static, Literal, HasDefault
    DynamicMethodDesc_ExtendedFlags MemberAccessMask = 7 : Public, Static, Literal, HasDefault
    DynamicMethodDesc_ExtendedFlags ReverseStub = 8 : Public, Static, Literal, HasDefault
    DynamicMethodDesc_ExtendedFlags Static = 16 : Public, Static, Literal, HasDefault
    DynamicMethodDesc_ExtendedFlags CALLIStub = 32 : Public, Static, Literal, HasDefault
    DynamicMethodDesc_ExtendedFlags DelegateStub = 64 : Public, Static, Literal, HasDefault
    DynamicMethodDesc_ExtendedFlags StructMarshalStub = 128 : Public, Static, Literal, HasDefault
    DynamicMethodDesc_ExtendedFlags Unbreakable = 256 : Public, Static, Literal, HasDefault
    DynamicMethodDesc_ExtendedFlags SignatureNeedsResture = 1024 : Public, Static, Literal, HasDefault
    DynamicMethodDesc_ExtendedFlags StubNeedsCOMStarted = 2048 : Public, Static, Literal, HasDefault
    DynamicMethodDesc_ExtendedFlags MulticastStub = 4096 : Public, Static, Literal, HasDefault
    DynamicMethodDesc_ExtendedFlags UnboxingILStub = 8192 : Public, Static, Literal, HasDefault
    DynamicMethodDesc_ExtendedFlags WrapperDelegateStub = 16384 : Public, Static, Literal, HasDefault
    DynamicMethodDesc_ExtendedFlags UnmanagedCallersOnlyStub = 32768 : Public, Static, Literal, HasDefault
    DynamicMethodDesc_ExtendedFlags ILStub = 65536 : Public, Static, Literal, HasDefault
    DynamicMethodDesc_ExtendedFlags LCGMethod = 131072 : Public, Static, Literal, HasDefault
    DynamicMethodDesc_ExtendedFlags StackArgSize = 268173312 : Public, Static, Literal, HasDefault
Struct MonoMod.Core.Interop.CoreCLR+V60+DynamicMethodDescPtr: AutoLayout, AnsiClass, Class, NestedPublic, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Void*, IntPtr[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    IntPtr[] CurrentVtable 'get ' : 
    Int32 CurrentSize 'get ' : 
    DynamicMethodDesc_ExtendedFlags Flags 'get ' : 
  Methods:
    get_CurrentVtable(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_CurrentSize(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Flags(): PrivateScope, Public, HideBySig, SpecialName
Struct MonoMod.Core.Interop.CoreCLR+V60+DynamicMethodDesc_64: AutoLayout, AnsiClass, Class, NestedPublic, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    StoredSigMethodDesc_64 base : Public
    Byte* m_pszMethodName : Public
    DynamicResolver* m_pResolver : Public
  Properties:
    DynamicMethodDesc_ExtendedFlags Flags 'get ' : 
    IntPtr[] FatVtable_ 'get ' : 
  Methods:
    get_Flags(): PrivateScope, Public, HideBySig, SpecialName
    get_FatVtable_(): PrivateScope, Public, Static, HideBySig, SpecialName
    <get_FatVtable_>g__S_GetFlags_0|8_0(Void*): PrivateScope, Assembly, Static, HideBySig
Struct MonoMod.Core.Interop.CoreCLR+V60+DynamicMethodDesc_32: AutoLayout, AnsiClass, Class, NestedPublic, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    StoredSigMethodDesc_32 base : Public
    Byte* m_pszMethodName : Public
    DynamicResolver* m_pResolver : Public
    UInt32 m_dwExtendedFlags : Public
  Properties:
    DynamicMethodDesc_ExtendedFlags Flags 'get ' : 
    IntPtr[] FatVtable_ 'get ' : 
  Methods:
    get_Flags(): PrivateScope, Public, HideBySig, SpecialName
    get_FatVtable_(): PrivateScope, Public, Static, HideBySig, SpecialName
    <get_FatVtable_>g__S_GetFlags_0|9_0(Void*): PrivateScope, Assembly, Static, HideBySig
Struct MonoMod.Core.Interop.CoreCLR+V60+ArrayMethodDescPtr: AutoLayout, AnsiClass, Class, NestedPublic, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Void*, IntPtr[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    IntPtr[] CurrentVtable 'get ' : 
    Int32 CurrentSize 'get ' : 
  Methods:
    get_CurrentVtable(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_CurrentSize(): PrivateScope, Public, Static, HideBySig, SpecialName
Struct MonoMod.Core.Interop.CoreCLR+V60+ArrayFunc: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    ArrayFunc Get = 0 : Public, Static, Literal, HasDefault
    ArrayFunc Set = 1 : Public, Static, Literal, HasDefault
    ArrayFunc Address = 2 : Public, Static, Literal, HasDefault
    ArrayFunc Ctor = 3 : Public, Static, Literal, HasDefault
Struct MonoMod.Core.Interop.CoreCLR+V60+ArrayMethodDesc_64: AutoLayout, AnsiClass, Class, NestedPublic, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    StoredSigMethodDesc_64 base : Public
  Properties:
    IntPtr[] FatVtable_ 'get ' : 
  Methods:
    get_FatVtable_(): PrivateScope, Public, Static, HideBySig, SpecialName
Struct MonoMod.Core.Interop.CoreCLR+V60+ArrayMethodDesc_32: AutoLayout, AnsiClass, Class, NestedPublic, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    StoredSigMethodDesc_32 base : Public
  Properties:
    IntPtr[] FatVtable_ 'get ' : 
  Methods:
    get_FatVtable_(): PrivateScope, Public, Static, HideBySig, SpecialName
Struct MonoMod.Core.Interop.CoreCLR+V60+NDirectWriteableData: AutoLayout, AnsiClass, Class, NestedPublic, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
Struct MonoMod.Core.Interop.CoreCLR+V60+NDirectMethodDesc_Flags: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.Enum
  Fields:
    UInt16 value__ : Public, SpecialName, RTSpecialName
    NDirectMethodDesc_Flags EarlyBound = 1 : Public, Static, Literal, HasDefault
    NDirectMethodDesc_Flags HasSuppressUnmanagedCodeAccess = 2 : Public, Static, Literal, HasDefault
    NDirectMethodDesc_Flags DefaultDllImportSearchPathIsCached = 4 : Public, Static, Literal, HasDefault
    NDirectMethodDesc_Flags IsMarshalingRequiredCached = 16 : Public, Static, Literal, HasDefault
    NDirectMethodDesc_Flags CachedMarshalingRequired = 32 : Public, Static, Literal, HasDefault
    NDirectMethodDesc_Flags NativeAnsi = 64 : Public, Static, Literal, HasDefault
    NDirectMethodDesc_Flags LastError = 128 : Public, Static, Literal, HasDefault
    NDirectMethodDesc_Flags NativeNoMangle = 256 : Public, Static, Literal, HasDefault
    NDirectMethodDesc_Flags VarArgs = 512 : Public, Static, Literal, HasDefault
    NDirectMethodDesc_Flags StdCall = 1024 : Public, Static, Literal, HasDefault
    NDirectMethodDesc_Flags ThisCall = 2048 : Public, Static, Literal, HasDefault
    NDirectMethodDesc_Flags IsQCall = 4096 : Public, Static, Literal, HasDefault
    NDirectMethodDesc_Flags DefaultDllImportSearchPathsStatus = 8192 : Public, Static, Literal, HasDefault
    NDirectMethodDesc_Flags NDirectPopulated = 32768 : Public, Static, Literal, HasDefault
Struct MonoMod.Core.Interop.CoreCLR+V60+NDirectMethodDescPtr: AutoLayout, AnsiClass, Class, NestedPublic, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Void*, IntPtr[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    IntPtr[] CurrentVtable 'get ' : 
    Int32 CurrentSize 'get ' : 
  Methods:
    get_CurrentVtable(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_CurrentSize(): PrivateScope, Public, Static, HideBySig, SpecialName
Struct MonoMod.Core.Interop.CoreCLR+V60+NDirectMethodDesc_other: AutoLayout, AnsiClass, Class, NestedPublic, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    MethodDesc base : Public
  Properties:
    IntPtr[] FatVtable_ 'get ' : 
  Methods:
    get_FatVtable_(): PrivateScope, Public, Static, HideBySig, SpecialName
Struct MonoMod.Core.Interop.CoreCLR+V60+NDirectMethodDesc_other+NDirect: AutoLayout, AnsiClass, Class, NestedPublic, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    Void* m_pNativeNDirectTarget : Public
    Byte* m_pszEntrypointName : Public
    UIntPtr union_pszLibName_dwECallID : Public
    NDirectWriteableData* m_pWriteableData : Public
    Void* m_pImportThunkGlue : Public
    UInt32 m_DefaultDllImportSearchPathsAttributeValue : Public
    NDirectMethodDesc_Flags m_wFlags : Public
    MethodDesc* m_pStubMD : Public
Struct MonoMod.Core.Interop.CoreCLR+V60+NDirectMethodDesc_x86: AutoLayout, AnsiClass, Class, NestedPublic, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    MethodDesc base : Public
  Properties:
    IntPtr[] FatVtable_ 'get ' : 
  Methods:
    get_FatVtable_(): PrivateScope, Public, Static, HideBySig, SpecialName
Struct MonoMod.Core.Interop.CoreCLR+V60+NDirectMethodDesc_x86+NDirect: AutoLayout, AnsiClass, Class, NestedPublic, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    Void* m_pNativeNDirectTarget : Public
    Byte* m_pszEntrypointName : Public
    UIntPtr union_pszLibName_dwECallID : Public
    NDirectWriteableData* m_pWriteableData : Public
    Void* m_pImportThunkGlue : Public
    UInt32 m_DefaultDllImportSearchPathsAttributeValue : Public
    NDirectMethodDesc_Flags m_wFlags : Public
    UInt16 m_cbStackArgumentSize : Public
    MethodDesc* m_pStubMD : Public
Struct MonoMod.Core.Interop.CoreCLR+V60+EEImplMethodDescPtr: AutoLayout, AnsiClass, Class, NestedPublic, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Void*, IntPtr[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    IntPtr[] CurrentVtable 'get ' : 
    Int32 CurrentSize 'get ' : 
  Methods:
    get_CurrentVtable(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_CurrentSize(): PrivateScope, Public, Static, HideBySig, SpecialName
Struct MonoMod.Core.Interop.CoreCLR+V60+EEImplMethodDesc_64: AutoLayout, AnsiClass, Class, NestedPublic, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    StoredSigMethodDesc_64 base : Public
  Properties:
    IntPtr[] FatVtable_ 'get ' : 
  Methods:
    get_FatVtable_(): PrivateScope, Public, Static, HideBySig, SpecialName
Struct MonoMod.Core.Interop.CoreCLR+V60+EEImplMethodDesc_32: AutoLayout, AnsiClass, Class, NestedPublic, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    StoredSigMethodDesc_32 base : Public
  Properties:
    IntPtr[] FatVtable_ 'get ' : 
  Methods:
    get_FatVtable_(): PrivateScope, Public, Static, HideBySig, SpecialName
Struct MonoMod.Core.Interop.CoreCLR+V60+ComPlusCallMethodDesc: AutoLayout, AnsiClass, Class, NestedPublic, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    MethodDesc base : Public
    Void* m_pComPlusCallInfo : Public
Struct MonoMod.Core.Interop.CoreCLR+V60+InstantiatedMethodDesc: AutoLayout, AnsiClass, Class, NestedPublic, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    MethodDesc base : Public
    Void* union_pDictLayout_pWrappedMethodDesc : Public
    Dictionary* m_pPerInstInfo : Public
    Flags m_wFlags2 : Public
    UInt16 m_wNumGenericArgs : Public
  Properties:
    Boolean IMD_HasMethodInstantiation 'get ' : 
    Boolean IMD_IsGenericMethodDefinition 'get ' : 
    Boolean IMD_IsWrapperStubWithInstantiations 'get ' : 
  Methods:
    get_IMD_HasMethodInstantiation(): PrivateScope, Public, HideBySig, SpecialName
    get_IMD_IsGenericMethodDefinition(): PrivateScope, Public, HideBySig, SpecialName
    get_IMD_IsWrapperStubWithInstantiations(): PrivateScope, Public, HideBySig, SpecialName
    IMD_GetWrappedMethodDesc(): PrivateScope, Public, HideBySig
Struct MonoMod.Core.Interop.CoreCLR+V60+InstantiatedMethodDesc+Flags: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.Enum
  Fields:
    UInt16 value__ : Public, SpecialName, RTSpecialName
    Flags KindMask = 7 : Public, Static, Literal, HasDefault
    Flags GenericMethodDefinition = 0 : Public, Static, Literal, HasDefault
    Flags UnsharedMethodInstantiation = 1 : Public, Static, Literal, HasDefault
    Flags SharedMethodInstantiation = 2 : Public, Static, Literal, HasDefault
    Flags WrapperStubWithInstantiations = 3 : Public, Static, Literal, HasDefault
    Flags EnCAddedMethod = 7 : Public, Static, Literal, HasDefault
    Flags Unrestored = 8 : Public, Static, Literal, HasDefault
    Flags HasComPlusCallInfo = 16 : Public, Static, Literal, HasDefault
Struct MonoMod.Core.Interop.CoreCLR+V60+Dictionary: AutoLayout, AnsiClass, Class, NestedPublic, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
Struct MonoMod.Core.Interop.CoreCLR+V60+Module: AutoLayout, AnsiClass, Class, NestedPublic, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
Struct MonoMod.Core.Interop.CoreCLR+V60+MethodTableWriteableData: AutoLayout, AnsiClass, Class, NestedPublic, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
Struct MonoMod.Core.Interop.CoreCLR+V60+VTableIndir2_t: AutoLayout, AnsiClass, Class, NestedPublic, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    Void* pCode : Public
  Properties:
    Void* Value 'get ' : 
  Methods:
    get_Value(): PrivateScope, Public, HideBySig, SpecialName
Struct MonoMod.Core.Interop.CoreCLR+V60+VTableIndir_t: AutoLayout, AnsiClass, Class, NestedPublic, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    VTableIndir2_t* Value : Public
Struct MonoMod.Core.Interop.CoreCLR+V60+MethodTable: AutoLayout, AnsiClass, Class, NestedPublic, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    UInt32 m_dwFlags : Public
    UInt32 m_BaseSize : Public
    Flags2 m_wFlags2 : Public
    UInt16 m_wToken : Public
    UInt16 m_wNumVirtuals : Public
    UInt16 m_wNumInterfaces : Public
    Module* m_pLoaderModule : Public
    MethodTableWriteableData* m_pWriteableData : Public
    Void* union_pEEClass_pCanonMT : Public
    Void* union_pPerInstInfo_ElementTypeHnd_pMultipurposeSlot1 : Public
    Void* union_p_InterfaceMap_pMultipurposeSlot2 : Public
    Int32 VTABLE_SLOTS_PER_CHUNK = 8 : Public, Static, Literal, HasDefault
    Int32 VTABLE_SLOTS_PER_CHUNK_LOG2 = 3 : Public, Static, Literal, HasDefault
  Properties:
    Boolean IsInterface 'get ' : 
    Boolean HasIndirectParent 'get ' : 
    Boolean HasSingleNonVirtualSlot 'get ' : 
  Methods:
    GetCanonicalMethodTable(): PrivateScope, Public, HideBySig
    GetParallelMethodDesc(MethodDesc*): PrivateScope, Public, HideBySig
    get_IsInterface(): PrivateScope, Public, HideBySig, SpecialName
    GetMethodDescForSlot(UInt32): PrivateScope, Public, HideBySig
    GetRestoredSlot(UInt32): PrivateScope, Public, HideBySig
    get_HasIndirectParent(): PrivateScope, Public, HideBySig, SpecialName
    GetParentMethodTable(): PrivateScope, Public, HideBySig
    GetSlot(UInt32): PrivateScope, Public, HideBySig
    GetSlotPtrRaw(UInt32): PrivateScope, Public, HideBySig
    GetNumVirtuals(): PrivateScope, Public, HideBySig
    GetIndexOfVtableIndirection(UInt32): PrivateScope, Public, Static, HideBySig
    GetVtableIndirections(): PrivateScope, Public, HideBySig
    VTableIndir_t__GetValueMaybeNullAtPtr(IntPtr): PrivateScope, Public, Static, HideBySig
    GetIndexAfterVtableIndirection(UInt32): PrivateScope, Public, Static, HideBySig
    get_HasSingleNonVirtualSlot(): PrivateScope, Public, HideBySig, SpecialName
    GetNonVirtualSlotsPtr(): PrivateScope, Public, HideBySig
    GetMultipurposeSlotPtr(Flags2, Byte[]): PrivateScope, Public, HideBySig
    GetNonVirtualSlotsArray(): PrivateScope, Public, HideBySig
    GetNumVTableIndirections(): PrivateScope, Public, HideBySig
    GetNumVtableIndirections(UInt32): PrivateScope, Public, Static, HideBySig
Struct MonoMod.Core.Interop.CoreCLR+V60+MethodTable+Flags2: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.Enum
  Fields:
    UInt16 value__ : Public, SpecialName, RTSpecialName
    Flags2 MultipurposeSlotsMask = 31 : Public, Static, Literal, HasDefault
    Flags2 HasPerInstInfo = 1 : Public, Static, Literal, HasDefault
    Flags2 HasInterfaceMap = 2 : Public, Static, Literal, HasDefault
    Flags2 HasDispatchMapSlot = 4 : Public, Static, Literal, HasDefault
    Flags2 HasNonVirtualSlots = 8 : Public, Static, Literal, HasDefault
    Flags2 HasModuleOverride = 16 : Public, Static, Literal, HasDefault
    Flags2 IsZapped = 32 : Public, Static, Literal, HasDefault
    Flags2 IsPreRestored = 64 : Public, Static, Literal, HasDefault
    Flags2 HasModuleDependencies = 128 : Public, Static, Literal, HasDefault
    Flags2 IsIntrinsicType = 256 : Public, Static, Literal, HasDefault
    Flags2 RequiresDispatchTokenFat = 512 : Public, Static, Literal, HasDefault
    Flags2 HasCctor = 1024 : Public, Static, Literal, HasDefault
    Flags2 HasVirtualStaticMethods = 2048 : Public, Static, Literal, HasDefault
    Flags2 REquiresAlign8 = 4096 : Public, Static, Literal, HasDefault
    Flags2 HasBoxedRegularStatics = 8192 : Public, Static, Literal, HasDefault
    Flags2 HasSingleNonVirtualSlot = 16384 : Public, Static, Literal, HasDefault
    Flags2 DependsOnEquivalentOrForwardedStructs = 32768 : Public, Static, Literal, HasDefault
Struct MonoMod.Core.Interop.CoreCLR+V60+MethodTable+UnionLowBits: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    UnionLowBits EEClass = 0 : Public, Static, Literal, HasDefault
    UnionLowBits Invalid = 1 : Public, Static, Literal, HasDefault
    UnionLowBits MethodTable = 2 : Public, Static, Literal, HasDefault
    UnionLowBits Indirection = 3 : Public, Static, Literal, HasDefault
Struct MonoMod.Core.Interop.CoreCLR+InvokeAllocMemPtr: AutoLayout, AnsiClass, Class, NestedPublic, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    IntPtr InvokeAllocMem 'get ' : 
  Methods:
    get_InvokeAllocMem(): PrivateScope, Public, HideBySig, SpecialName
Class MonoMod.Core.Interop.CoreCLR+V70: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :MonoMod.Core.Interop.CoreCLR+V60
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    InvokeAllocMemPtr InvokeAllocMemPtr 'get ' : 
  Methods:
    get_InvokeAllocMemPtr(): PrivateScope, Public, Static, HideBySig, SpecialName
    InvokeAllocMem(IntPtr, IntPtr, AllocMemArgs*): PrivateScope, Public, Static, HideBySig
Class MonoMod.Core.Interop.CoreCLR+V70+ICorJitInfoVtable: AutoLayout, AnsiClass, Class, NestedPublic, Abstract, Sealed, BeforeFieldInit
  Fields:
    Int32 AllocMemIndex = 159 : Public, Static, Literal, HasDefault
    Int32 TotalVtableCount = 175 : Public, Static, Literal, HasDefault
Struct MonoMod.Core.Interop.CoreCLR+V70+AllocMemArgs: AutoLayout, AnsiClass, Class, NestedPublic, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    UInt32 hotCodeSize : Public
    UInt32 coldCodeSize : Public
    UInt32 roDataSize : Public
    UInt32 xcptnsCount : Public
    Int32 flag : Public
    IntPtr hotCodeBlock : Public
    IntPtr hotCodeBlockRW : Public
    IntPtr coldCodeBlock : Public
    IntPtr coldCodeBlockRW : Public
    IntPtr roDataBlock : Public
    IntPtr roDataBlockRW : Public
Class MonoMod.Core.Interop.CoreCLR+V70+AllocMemDelegate: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(IntPtr, AllocMemArgs*): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(IntPtr, AllocMemArgs*, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class MonoMod.Core.Interop.CoreCLR+V80: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :MonoMod.Core.Interop.CoreCLR+V70
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class MonoMod.Core.Interop.CoreCLR+V80+ICorJitInfoVtableV80: AutoLayout, AnsiClass, Class, NestedPublic, Abstract, Sealed, BeforeFieldInit
  Fields:
    Int32 AllocMemIndex = 154 : Public, Static, Literal, HasDefault
    Int32 TotalVtableCount = 170 : Public, Static, Literal, HasDefault
Class MonoMod.Core.Interop.Fx: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
Class MonoMod.Core.Interop.Fx+V48: AutoLayout, AnsiClass, Class, NestedPublic, Abstract, Sealed, BeforeFieldInit
Struct MonoMod.Core.Interop.Fx+V48+MethodClassification: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    MethodClassification IL = 0 : Public, Static, Literal, HasDefault
    MethodClassification FCall = 1 : Public, Static, Literal, HasDefault
    MethodClassification NDirect = 2 : Public, Static, Literal, HasDefault
    MethodClassification EEImpl = 3 : Public, Static, Literal, HasDefault
    MethodClassification Array = 4 : Public, Static, Literal, HasDefault
    MethodClassification Instantiated = 5 : Public, Static, Literal, HasDefault
    MethodClassification ComInterop = 6 : Public, Static, Literal, HasDefault
    MethodClassification Dynamic = 7 : Public, Static, Literal, HasDefault
Struct MonoMod.Core.Interop.Fx+V48+MethodDescClassification: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.Enum
  Fields:
    UInt16 value__ : Public, SpecialName, RTSpecialName
    MethodDescClassification ClassificationMask = 7 : Public, Static, Literal, HasDefault
    MethodDescClassification HasNonVtableSlot = 8 : Public, Static, Literal, HasDefault
    MethodDescClassification MethodImpl = 16 : Public, Static, Literal, HasDefault
    MethodDescClassification Static = 32 : Public, Static, Literal, HasDefault
    MethodDescClassification Intercepted = 64 : Public, Static, Literal, HasDefault
    MethodDescClassification RequiresLinktimeCheck = 128 : Public, Static, Literal, HasDefault
    MethodDescClassification RequiresInheritanceCheck = 256 : Public, Static, Literal, HasDefault
    MethodDescClassification ParentRequiresInheritanceCheck = 512 : Public, Static, Literal, HasDefault
    MethodDescClassification Duplicate = 1024 : Public, Static, Literal, HasDefault
    MethodDescClassification VerifiedState = 2048 : Public, Static, Literal, HasDefault
    MethodDescClassification Verifiable = 4096 : Public, Static, Literal, HasDefault
    MethodDescClassification NotInline = 8192 : Public, Static, Literal, HasDefault
    MethodDescClassification Synchronized = 16384 : Public, Static, Literal, HasDefault
    MethodDescClassification RequiresFullSlotNumber = 32768 : Public, Static, Literal, HasDefault
Struct MonoMod.Core.Interop.Fx+V48+MethodImpl: AutoLayout, AnsiClass, Class, NestedPublic, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    UInt32* pdwSlots : Public
    MethodDesc* pImplementedMD : Public
Struct MonoMod.Core.Interop.Fx+V48+MethodDesc: AutoLayout, AnsiClass, Class, NestedPublic, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    Flags3 m_wFlags3AndTokenRemainder : Public
    Byte m_chunkIndex : Public
    Flags2 m_bFlags2 : Public
    UInt16 m_wSlotNumber : Public
    MethodDescClassification m_wFlags : Public
    UIntPtr Alignment : Public, Static, InitOnly
    UInt16 PackedSlot_SlotMask = 1023 : Public, Static, Literal, HasDefault
    UInt16 PackedSlot_NameHashMask = 64512 : Public, Static, Literal, HasDefault
  Properties:
    UInt16 SlotNumber 'get ' : 
    MethodClassification Classification 'get ' : 
    MethodDescChunk* MethodDescChunk 'get ' : 
    MethodTable* MethodTable 'get ' : 
    Boolean HasNonVtableSlot 'get ' : 
    Boolean HasStableEntryPoint 'get ' : 
    Boolean HasPrecode 'get ' : 
    Boolean HasNativeCodeSlot 'get ' : 
    Boolean IsUnboxingStub 'get ' : 
    Boolean HasMethodInstantiation 'get ' : 
    Boolean IsGenericMethodDefinition 'get ' : 
    Boolean IsInstantiatingStub 'get ' : 
    Boolean IsGenericComPlusCall 'get ' : 
    Boolean IsWrapperStub 'get ' : 
    Boolean IsTightlyBoundToMethodTable 'get ' : 
  Methods:
    get_SlotNumber(): PrivateScope, Public, HideBySig, SpecialName
    get_Classification(): PrivateScope, Public, HideBySig, SpecialName
    get_MethodDescChunk(): PrivateScope, Public, HideBySig, SpecialName
    get_MethodTable(): PrivateScope, Public, HideBySig, SpecialName
    GetMethodEntryPoint(): PrivateScope, Public, HideBySig
    TryAsInstantiated(InstantiatedMethodDesc*&(Out)): PrivateScope, Public, HideBySig
    SizeOf(Boolean(Optional, HasDefault), Boolean(Optional, HasDefault), Boolean(Optional, HasDefault), Boolean(Optional, HasDefault)): PrivateScope, Public, HideBySig
    GetNativeCode(): PrivateScope, Public, HideBySig
    GetStableEntryPoint(): PrivateScope, Public, HideBySig
    get_HasNonVtableSlot(): PrivateScope, Public, HideBySig, SpecialName
    get_HasStableEntryPoint(): PrivateScope, Public, HideBySig, SpecialName
    get_HasPrecode(): PrivateScope, Public, HideBySig, SpecialName
    get_HasNativeCodeSlot(): PrivateScope, Public, HideBySig, SpecialName
    get_IsUnboxingStub(): PrivateScope, Public, HideBySig, SpecialName
    get_HasMethodInstantiation(): PrivateScope, Public, HideBySig, SpecialName
    get_IsGenericMethodDefinition(): PrivateScope, Public, HideBySig, SpecialName
    get_IsInstantiatingStub(): PrivateScope, Public, HideBySig, SpecialName
    get_IsGenericComPlusCall(): PrivateScope, Public, HideBySig, SpecialName
    get_IsWrapperStub(): PrivateScope, Public, HideBySig, SpecialName
    get_IsTightlyBoundToMethodTable(): PrivateScope, Public, HideBySig, SpecialName
    FindTightlyBoundWrappedMethodDesc(MethodDesc*): PrivateScope, Public, Static, HideBySig
    GetNextIntroducedMethod(MethodDesc*): PrivateScope, Public, Static, HideBySig
    GetCanonicalMethodTable(): PrivateScope, Public, HideBySig
    GetAddrOfNativeCodeSlot(): PrivateScope, Public, HideBySig
    GetBaseSize(): PrivateScope, Public, HideBySig
    GetBaseSize(MethodClassification): PrivateScope, Public, Static, HideBySig
Struct MonoMod.Core.Interop.Fx+V48+MethodDesc+Flags3: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.Enum
  Fields:
    UInt16 value__ : Public, SpecialName, RTSpecialName
    Flags3 TokenRemainderMask = 16383 : Public, Static, Literal, HasDefault
    Flags3 HasForwardedValuetypeParameter = 16384 : Public, Static, Literal, HasDefault
    Flags3 ValueTypeParametersWalked = 16384 : Public, Static, Literal, HasDefault
    Flags3 DoesNotHaveEquivalentValuetypeParameters = 32768 : Public, Static, Literal, HasDefault
Struct MonoMod.Core.Interop.Fx+V48+MethodDesc+Flags2: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.Enum
  Fields:
    Byte value__ : Public, SpecialName, RTSpecialName
    Flags2 HasStableEntryPoint = 1 : Public, Static, Literal, HasDefault
    Flags2 HasPrecode = 2 : Public, Static, Literal, HasDefault
    Flags2 IsUnboxingStub = 4 : Public, Static, Literal, HasDefault
    Flags2 HasNativeCodeSlot = 8 : Public, Static, Literal, HasDefault
    Flags2 TransparencyMask = 48 : Public, Static, Literal, HasDefault
    Flags2 TransparencyUnknown = 0 : Public, Static, Literal, HasDefault
    Flags2 TransparencyTransparent = 16 : Public, Static, Literal, HasDefault
    Flags2 TransparencyCritical = 32 : Public, Static, Literal, HasDefault
    Flags2 TransparencyTreatAsSafe = 48 : Public, Static, Literal, HasDefault
    Flags2 CASDemandsOnly = 64 : Public, Static, Literal, HasDefault
    Flags2 HostProtectionLinkChecksOnly = 128 : Public, Static, Literal, HasDefault
Struct MonoMod.Core.Interop.Fx+V48+StoredSigMethodDescPtr: AutoLayout, AnsiClass, Class, NestedPublic, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Void*, IntPtr[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    IntPtr[] CurrentVtable 'get ' : 
    Int32 CurrentSize 'get ' : 
    Void* m_pSig 'get ' : 
    UInt32 m_cSig 'get ' : 
  Methods:
    get_CurrentVtable(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_CurrentSize(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_m_pSig(): PrivateScope, Public, HideBySig, SpecialName
    get_m_cSig(): PrivateScope, Public, HideBySig, SpecialName
Struct MonoMod.Core.Interop.Fx+V48+StoredSigMethodDesc_64: AutoLayout, AnsiClass, Class, NestedPublic, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    MethodDesc base : Public
    Void* m_pSig : Public
    UInt32 m_cSig : Public
    UInt32 m_dwExtendedFlags : Public
  Properties:
    IntPtr[] FatVtable_ 'get ' : 
  Methods:
    get_FatVtable_(): PrivateScope, Public, Static, HideBySig, SpecialName
    <get_FatVtable_>g__S_GetPSig_0|8_0(Void*): PrivateScope, Assembly, Static, HideBySig
    <get_FatVtable_>g__S_GetCSig_1|8_1(Void*): PrivateScope, Assembly, Static, HideBySig
Struct MonoMod.Core.Interop.Fx+V48+StoredSigMethodDesc_32: AutoLayout, AnsiClass, Class, NestedPublic, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    MethodDesc base : Public
    Void* m_pSig : Public
    UInt32 m_cSig : Public
  Properties:
    IntPtr[] FatVtable_ 'get ' : 
  Methods:
    get_FatVtable_(): PrivateScope, Public, Static, HideBySig, SpecialName
    <get_FatVtable_>g__S_GetPSig_0|7_0(Void*): PrivateScope, Assembly, Static, HideBySig
    <get_FatVtable_>g__S_GetCSig_1|7_1(Void*): PrivateScope, Assembly, Static, HideBySig
Struct MonoMod.Core.Interop.Fx+V48+FCallMethodDescPtr: AutoLayout, AnsiClass, Class, NestedPublic, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Void*, IntPtr[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    IntPtr[] CurrentVtable 'get ' : 
    Int32 CurrentSize 'get ' : 
    UInt32 m_dwECallID 'get ' : 
  Methods:
    get_CurrentVtable(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_CurrentSize(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_m_dwECallID(): PrivateScope, Public, HideBySig, SpecialName
Struct MonoMod.Core.Interop.Fx+V48+FCallMethodDesc_64: AutoLayout, AnsiClass, Class, NestedPublic, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    MethodDesc base : Public
    UInt32 m_dwECallID : Public
    UInt32 m_padding : Public
  Properties:
    IntPtr[] FatVtable_ 'get ' : 
  Methods:
    get_FatVtable_(): PrivateScope, Public, Static, HideBySig, SpecialName
    <get_FatVtable_>g__S_GetECallID_0|6_0(Void*): PrivateScope, Assembly, Static, HideBySig
Struct MonoMod.Core.Interop.Fx+V48+FCallMethodDesc_32: AutoLayout, AnsiClass, Class, NestedPublic, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    MethodDesc base : Public
    UInt32 m_dwECallID : Public
  Properties:
    IntPtr[] FatVtable_ 'get ' : 
  Methods:
    get_FatVtable_(): PrivateScope, Public, Static, HideBySig, SpecialName
    <get_FatVtable_>g__S_GetECallID_0|5_0(Void*): PrivateScope, Assembly, Static, HideBySig
Struct MonoMod.Core.Interop.Fx+V48+DynamicResolver: AutoLayout, AnsiClass, Class, NestedPublic, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
Struct MonoMod.Core.Interop.Fx+V48+DynamicMethodDesc_ExtendedFlags: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.Enum
  Fields:
    UInt32 value__ : Public, SpecialName, RTSpecialName
    DynamicMethodDesc_ExtendedFlags Attrs = 65535 : Public, Static, Literal, HasDefault
    DynamicMethodDesc_ExtendedFlags ILStubAttrs = 23 : Public, Static, Literal, HasDefault
    DynamicMethodDesc_ExtendedFlags MemberAccessMask = 7 : Public, Static, Literal, HasDefault
    DynamicMethodDesc_ExtendedFlags ReverseStub = 8 : Public, Static, Literal, HasDefault
    DynamicMethodDesc_ExtendedFlags Static = 16 : Public, Static, Literal, HasDefault
    DynamicMethodDesc_ExtendedFlags CALLIStub = 32 : Public, Static, Literal, HasDefault
    DynamicMethodDesc_ExtendedFlags DelegateStub = 64 : Public, Static, Literal, HasDefault
    DynamicMethodDesc_ExtendedFlags CopyCtorArgs = 128 : Public, Static, Literal, HasDefault
    DynamicMethodDesc_ExtendedFlags Unbreakable = 256 : Public, Static, Literal, HasDefault
    DynamicMethodDesc_ExtendedFlags DelegateCOMStub = 512 : Public, Static, Literal, HasDefault
    DynamicMethodDesc_ExtendedFlags SignatureNeedsResture = 1024 : Public, Static, Literal, HasDefault
    DynamicMethodDesc_ExtendedFlags StubNeedsCOMStarted = 2048 : Public, Static, Literal, HasDefault
    DynamicMethodDesc_ExtendedFlags MulticastStub = 4096 : Public, Static, Literal, HasDefault
    DynamicMethodDesc_ExtendedFlags UnboxingILStub = 8192 : Public, Static, Literal, HasDefault
    DynamicMethodDesc_ExtendedFlags ILStub = 65536 : Public, Static, Literal, HasDefault
    DynamicMethodDesc_ExtendedFlags LCGMethod = 131072 : Public, Static, Literal, HasDefault
    DynamicMethodDesc_ExtendedFlags StackArgSize = 4294705152 : Public, Static, Literal, HasDefault
Struct MonoMod.Core.Interop.Fx+V48+DynamicMethodDescPtr: AutoLayout, AnsiClass, Class, NestedPublic, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Void*, IntPtr[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    IntPtr[] CurrentVtable 'get ' : 
    Int32 CurrentSize 'get ' : 
    DynamicMethodDesc_ExtendedFlags Flags 'get ' : 
  Methods:
    get_CurrentVtable(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_CurrentSize(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Flags(): PrivateScope, Public, HideBySig, SpecialName
Struct MonoMod.Core.Interop.Fx+V48+DynamicMethodDesc_64: AutoLayout, AnsiClass, Class, NestedPublic, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    StoredSigMethodDesc_64 base : Public
    Byte* m_pszMethodName : Public
    DynamicResolver* m_pResolver : Public
  Properties:
    DynamicMethodDesc_ExtendedFlags Flags 'get ' : 
    IntPtr[] FatVtable_ 'get ' : 
  Methods:
    get_Flags(): PrivateScope, Public, HideBySig, SpecialName
    get_FatVtable_(): PrivateScope, Public, Static, HideBySig, SpecialName
    <get_FatVtable_>g__S_GetFlags_0|8_0(Void*): PrivateScope, Assembly, Static, HideBySig
Struct MonoMod.Core.Interop.Fx+V48+DynamicMethodDesc_32: AutoLayout, AnsiClass, Class, NestedPublic, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    StoredSigMethodDesc_32 base : Public
    Byte* m_pszMethodName : Public
    DynamicResolver* m_pResolver : Public
    UInt32 m_dwExtendedFlags : Public
  Properties:
    DynamicMethodDesc_ExtendedFlags Flags 'get ' : 
    IntPtr[] FatVtable_ 'get ' : 
  Methods:
    get_Flags(): PrivateScope, Public, HideBySig, SpecialName
    get_FatVtable_(): PrivateScope, Public, Static, HideBySig, SpecialName
    <get_FatVtable_>g__S_GetFlags_0|9_0(Void*): PrivateScope, Assembly, Static, HideBySig
Struct MonoMod.Core.Interop.Fx+V48+ArrayMethodDescPtr: AutoLayout, AnsiClass, Class, NestedPublic, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Void*, IntPtr[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    IntPtr[] CurrentVtable 'get ' : 
    Int32 CurrentSize 'get ' : 
  Methods:
    get_CurrentVtable(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_CurrentSize(): PrivateScope, Public, Static, HideBySig, SpecialName
Struct MonoMod.Core.Interop.Fx+V48+ArrayFunc: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    ArrayFunc Get = 0 : Public, Static, Literal, HasDefault
    ArrayFunc Set = 1 : Public, Static, Literal, HasDefault
    ArrayFunc Address = 2 : Public, Static, Literal, HasDefault
    ArrayFunc Ctor = 3 : Public, Static, Literal, HasDefault
Struct MonoMod.Core.Interop.Fx+V48+ArrayMethodDesc_64: AutoLayout, AnsiClass, Class, NestedPublic, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    StoredSigMethodDesc_64 base : Public
  Properties:
    IntPtr[] FatVtable_ 'get ' : 
  Methods:
    get_FatVtable_(): PrivateScope, Public, Static, HideBySig, SpecialName
Struct MonoMod.Core.Interop.Fx+V48+ArrayMethodDesc_32: AutoLayout, AnsiClass, Class, NestedPublic, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    StoredSigMethodDesc_32 base : Public
  Properties:
    IntPtr[] FatVtable_ 'get ' : 
  Methods:
    get_FatVtable_(): PrivateScope, Public, Static, HideBySig, SpecialName
Struct MonoMod.Core.Interop.Fx+V48+NDirectWriteableData: AutoLayout, AnsiClass, Class, NestedPublic, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
Struct MonoMod.Core.Interop.Fx+V48+NDirectMethodDesc_Flags: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.Enum
  Fields:
    UInt16 value__ : Public, SpecialName, RTSpecialName
    NDirectMethodDesc_Flags EarlyBound = 1 : Public, Static, Literal, HasDefault
    NDirectMethodDesc_Flags HasSuppressUnmanagedCodeAccess = 2 : Public, Static, Literal, HasDefault
    NDirectMethodDesc_Flags DefaultDllImportSearchPathIsCached = 4 : Public, Static, Literal, HasDefault
    NDirectMethodDesc_Flags IsMarshalingRequiredCached = 16 : Public, Static, Literal, HasDefault
    NDirectMethodDesc_Flags CachedMarshalingRequired = 32 : Public, Static, Literal, HasDefault
    NDirectMethodDesc_Flags NativeAnsi = 64 : Public, Static, Literal, HasDefault
    NDirectMethodDesc_Flags LastError = 128 : Public, Static, Literal, HasDefault
    NDirectMethodDesc_Flags NativeNoMangle = 256 : Public, Static, Literal, HasDefault
    NDirectMethodDesc_Flags VarArgs = 512 : Public, Static, Literal, HasDefault
    NDirectMethodDesc_Flags StdCall = 1024 : Public, Static, Literal, HasDefault
    NDirectMethodDesc_Flags ThisCall = 2048 : Public, Static, Literal, HasDefault
    NDirectMethodDesc_Flags IsQCall = 4096 : Public, Static, Literal, HasDefault
    NDirectMethodDesc_Flags DefaultDllImportSearchPathsStatus = 8192 : Public, Static, Literal, HasDefault
    NDirectMethodDesc_Flags NDirectPopulated = 32768 : Public, Static, Literal, HasDefault
Struct MonoMod.Core.Interop.Fx+V48+NDirectMethodDescPtr: AutoLayout, AnsiClass, Class, NestedPublic, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Void*, IntPtr[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    IntPtr[] CurrentVtable 'get ' : 
    Int32 CurrentSize 'get ' : 
  Methods:
    get_CurrentVtable(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_CurrentSize(): PrivateScope, Public, Static, HideBySig, SpecialName
Struct MonoMod.Core.Interop.Fx+V48+NDirectMethodDesc_other: AutoLayout, AnsiClass, Class, NestedPublic, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    MethodDesc base : Public
  Properties:
    IntPtr[] FatVtable_ 'get ' : 
  Methods:
    get_FatVtable_(): PrivateScope, Public, Static, HideBySig, SpecialName
Struct MonoMod.Core.Interop.Fx+V48+NDirectMethodDesc_other+NDirect: AutoLayout, AnsiClass, Class, NestedPublic, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    Void* m_pNativeNDirectTarget : Public
    Byte* m_pszEntrypointName : Public
    UIntPtr union_pszLibName_dwECallID : Public
    NDirectWriteableData* m_pWriteableData : Public
    Void* m_pImportThunkGlue : Public
    UInt32 m_DefaultDllImportSearchPathsAttributeValue : Public
    NDirectMethodDesc_Flags m_wFlags : Public
    MethodDesc* m_pStubMD : Public
Struct MonoMod.Core.Interop.Fx+V48+NDirectMethodDesc_x86: AutoLayout, AnsiClass, Class, NestedPublic, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    MethodDesc base : Public
  Properties:
    IntPtr[] FatVtable_ 'get ' : 
  Methods:
    get_FatVtable_(): PrivateScope, Public, Static, HideBySig, SpecialName
Struct MonoMod.Core.Interop.Fx+V48+NDirectMethodDesc_x86+NDirect: AutoLayout, AnsiClass, Class, NestedPublic, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    Void* m_pNativeNDirectTarget : Public
    Byte* m_pszEntrypointName : Public
    UIntPtr union_pszLibName_dwECallID : Public
    NDirectWriteableData* m_pWriteableData : Public
    Void* m_pImportThunkGlue : Public
    UInt32 m_DefaultDllImportSearchPathsAttributeValue : Public
    NDirectMethodDesc_Flags m_wFlags : Public
    UInt16 m_cbStackArgumentSize : Public
    MethodDesc* m_pStubMD : Public
Struct MonoMod.Core.Interop.Fx+V48+EEImplMethodDescPtr: AutoLayout, AnsiClass, Class, NestedPublic, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Void*, IntPtr[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    IntPtr[] CurrentVtable 'get ' : 
    Int32 CurrentSize 'get ' : 
  Methods:
    get_CurrentVtable(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_CurrentSize(): PrivateScope, Public, Static, HideBySig, SpecialName
Struct MonoMod.Core.Interop.Fx+V48+EEImplMethodDesc_64: AutoLayout, AnsiClass, Class, NestedPublic, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    StoredSigMethodDesc_64 base : Public
  Properties:
    IntPtr[] FatVtable_ 'get ' : 
  Methods:
    get_FatVtable_(): PrivateScope, Public, Static, HideBySig, SpecialName
Struct MonoMod.Core.Interop.Fx+V48+EEImplMethodDesc_32: AutoLayout, AnsiClass, Class, NestedPublic, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    StoredSigMethodDesc_32 base : Public
  Properties:
    IntPtr[] FatVtable_ 'get ' : 
  Methods:
    get_FatVtable_(): PrivateScope, Public, Static, HideBySig, SpecialName
Struct MonoMod.Core.Interop.Fx+V48+ComPlusCallInfoPtr: AutoLayout, AnsiClass, Class, NestedPublic, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Void*, IntPtr[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 CurrentSize 'get ' : 
  Methods:
    get_CurrentSize(): PrivateScope, Public, Static, HideBySig, SpecialName
Struct MonoMod.Core.Interop.Fx+V48+ComPlusCallInfo_x86: AutoLayout, AnsiClass, Class, NestedPublic, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    Void* union_m_pILStub_pEventProviderMD : Public
    MethodTable* m_pInterfaceMT : Public
    Byte m_flags : Public
    UInt16 m_cachedComSlot : Public
    UInt16 m_cbStackArgumentSize : Public
    Void* union_m_pRetThunk_pInterceptStub : Public
Struct MonoMod.Core.Interop.Fx+V48+ComPlusCallInfo_other: AutoLayout, AnsiClass, Class, NestedPublic, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    Void* union_m_pILStub_pEventProviderMD : Public
    MethodTable* m_pInterfaceMT : Public
    Byte m_flags : Public
    UInt16 m_cachedComSlot : Public
Struct MonoMod.Core.Interop.Fx+V48+ComPlusCallMethodDesc: AutoLayout, AnsiClass, Class, NestedPublic, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    MethodDesc base : Public
    Void* m_pComPlusCallInfo : Public
Struct MonoMod.Core.Interop.Fx+V48+InstantiatedMethodDesc: AutoLayout, AnsiClass, Class, NestedPublic, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    MethodDesc base : Public
    Void* union_pDictLayout_pWrappedMethodDesc : Public
    Dictionary* m_pPerInstInfo : Public
    Flags m_wFlags2 : Public
    UInt16 m_wNumGenericArgs : Public
  Properties:
    Boolean IMD_HasMethodInstantiation 'get ' : 
    Boolean IMD_IsGenericMethodDefinition 'get ' : 
    Boolean IMD_IsWrapperStubWithInstantiations 'get ' : 
    Boolean IMD_HasComPlusCallInfo 'get ' : 
  Methods:
    get_IMD_HasMethodInstantiation(): PrivateScope, Public, HideBySig, SpecialName
    get_IMD_IsGenericMethodDefinition(): PrivateScope, Public, HideBySig, SpecialName
    get_IMD_IsWrapperStubWithInstantiations(): PrivateScope, Public, HideBySig, SpecialName
    get_IMD_HasComPlusCallInfo(): PrivateScope, Public, HideBySig, SpecialName
    IMD_GetWrappedMethodDesc(): PrivateScope, Public, HideBySig
Struct MonoMod.Core.Interop.Fx+V48+InstantiatedMethodDesc+Flags: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.Enum
  Fields:
    UInt16 value__ : Public, SpecialName, RTSpecialName
    Flags KindMask = 7 : Public, Static, Literal, HasDefault
    Flags GenericMethodDefinition = 0 : Public, Static, Literal, HasDefault
    Flags UnsharedMethodInstantiation = 1 : Public, Static, Literal, HasDefault
    Flags SharedMethodInstantiation = 2 : Public, Static, Literal, HasDefault
    Flags WrapperStubWithInstantiations = 3 : Public, Static, Literal, HasDefault
    Flags EnCAddedMethod = 7 : Public, Static, Literal, HasDefault
    Flags Unrestored = 8 : Public, Static, Literal, HasDefault
    Flags HasComPlusCallInfo = 16 : Public, Static, Literal, HasDefault
Struct MonoMod.Core.Interop.Fx+V48+RelativeFixupPointer: AutoLayout, AnsiClass, Class, NestedPublic, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Properties:
    Void* Value 'get ' : 
  Methods:
    get_Value(): PrivateScope, Public, HideBySig, SpecialName
Struct MonoMod.Core.Interop.Fx+V48+MethodDescChunk: AutoLayout, AnsiClass, Class, NestedPublic, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    RelativeFixupPointer m_methodTable : Public
    MethodDescChunk* m_next : Public
    Byte m_size : Public
    Byte m_count : Public
    Flags m_flagsAndTokenRange : Public
  Properties:
    MethodTable* MethodTable 'get ' : 
    MethodDesc* FirstMethodDesc 'get ' : 
    UInt32 Size 'get ' : 
    UInt32 Count 'get ' : 
    UIntPtr SizeOf 'get ' : 
  Methods:
    get_MethodTable(): PrivateScope, Public, HideBySig, SpecialName
    get_FirstMethodDesc(): PrivateScope, Public, HideBySig, SpecialName
    get_Size(): PrivateScope, Public, HideBySig, SpecialName
    get_Count(): PrivateScope, Public, HideBySig, SpecialName
    get_SizeOf(): PrivateScope, Public, HideBySig, SpecialName
Struct MonoMod.Core.Interop.Fx+V48+MethodDescChunk+Flags: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.Enum
  Fields:
    UInt16 value__ : Public, SpecialName, RTSpecialName
    Flags TokenRangeMask = 1023 : Public, Static, Literal, HasDefault
    Flags HasCompactEntrypoints = 16384 : Public, Static, Literal, HasDefault
    Flags IsZapped = 32768 : Public, Static, Literal, HasDefault
Struct MonoMod.Core.Interop.Fx+V48+Dictionary: AutoLayout, AnsiClass, Class, NestedPublic, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
Struct MonoMod.Core.Interop.Fx+V48+Module: AutoLayout, AnsiClass, Class, NestedPublic, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
Struct MonoMod.Core.Interop.Fx+V48+MethodTableWriteableData: AutoLayout, AnsiClass, Class, NestedPublic, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
Struct MonoMod.Core.Interop.Fx+V48+RelativePointer: AutoLayout, AnsiClass, Class, NestedPublic, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Void* Value 'get ' : 
  Methods:
    get_Value(): PrivateScope, Public, HideBySig, SpecialName
Struct MonoMod.Core.Interop.Fx+V48+MethodTable: AutoLayout, AnsiClass, Class, NestedPublic, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    UInt32 m_BaseSize : Public
    Flags2 m_wFlags2 : Public
    UInt16 m_wToken : Public
    UInt16 m_wNumVirtuals : Public
    UInt16 m_wNumInterfaces : Public
    Module* m_pLoaderModule : Public
    MethodTableWriteableData* m_pWriteableData : Public
    Void* union_pEEClass_pCanonMT : Public
    Void* union_pPerInstInfo_ElementTypeHnd_pMultipurposeSlot1 : Public
    Void* union_p_InterfaceMap_pMultipurposeSlot2 : Public
    Int32 VTABLE_SLOTS_PER_CHUNK = 8 : Public, Static, Literal, HasDefault
    Int32 VTABLE_SLOTS_PER_CHUNK_LOG2 = 3 : Public, Static, Literal, HasDefault
  Properties:
    WFlagsHigh FlagsHigh 'get ' : 
    WFlagsLow FlagsLow 'get ' : 
    Int32 ComponentSize 'get ' : 
    Boolean IsInterface 'get ' : 
    Boolean HasIndirectParent 'get ' : 
    MethodTable* ParentMethodTable 'get ' : 
    Boolean HasSingleNonVirtualSlot 'get ' : 
  Methods:
    get_FlagsHigh(): PrivateScope, Public, HideBySig, SpecialName
    get_FlagsLow(): PrivateScope, Public, HideBySig, SpecialName
    get_ComponentSize(): PrivateScope, Public, HideBySig, SpecialName
    GetCanonicalMethodTable(): PrivateScope, Public, HideBySig
    GetParallelMethodDesc(MethodDesc*): PrivateScope, Public, HideBySig
    get_IsInterface(): PrivateScope, Public, HideBySig, SpecialName
    GetMethodDescForSlot(UInt32): PrivateScope, Public, HideBySig
    GetRestoredSlot(UInt32): PrivateScope, Public, HideBySig
    get_HasIndirectParent(): PrivateScope, Public, HideBySig, SpecialName
    get_ParentMethodTable(): PrivateScope, Public, HideBySig, SpecialName
    GetSlot(UInt32): PrivateScope, Public, HideBySig
    GetSlotPtrRaw(UInt32): PrivateScope, Public, HideBySig
    GetNumVirtuals(): PrivateScope, Public, HideBySig
    GetIndexOfVtableIndirection(UInt32): PrivateScope, Public, Static, HideBySig
    GetVtableIndirections(): PrivateScope, Public, HideBySig
    GetIndexAfterVtableIndirection(UInt32): PrivateScope, Public, Static, HideBySig
    get_HasSingleNonVirtualSlot(): PrivateScope, Public, HideBySig, SpecialName
    GetNonVirtualSlotsPtr(): PrivateScope, Public, HideBySig
    GetMultipurposeSlotPtr(Flags2, Byte[]): PrivateScope, Public, HideBySig
    GetNonVirtualSlotsArray(): PrivateScope, Public, HideBySig
    GetNumVTableIndirections(): PrivateScope, Public, HideBySig
    GetNumVtableIndirections(UInt32): PrivateScope, Public, Static, HideBySig
Struct MonoMod.Core.Interop.Fx+V48+MethodTable+WFlagsLow: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.Enum
  Fields:
    UInt32 value__ : Public, SpecialName, RTSpecialName
    WFlagsLow UNUSED_ComponentSize_1 = 1 : Public, Static, Literal, HasDefault
    WFlagsLow StaticsMask = 6 : Public, Static, Literal, HasDefault
    WFlagsLow StaticsMask_NonDynamic = 0 : Public, Static, Literal, HasDefault
    WFlagsLow StaticsMask_Dynamic = 2 : Public, Static, Literal, HasDefault
    WFlagsLow StaticsMask_Generics = 4 : Public, Static, Literal, HasDefault
    WFlagsLow StaticsMask_CrossModuleGenerics = 6 : Public, Static, Literal, HasDefault
    WFlagsLow StaticsMask_IfGenericsThenCrossModule = 2 : Public, Static, Literal, HasDefault
    WFlagsLow NotInPZM = 8 : Public, Static, Literal, HasDefault
    WFlagsLow GenericsMask = 48 : Public, Static, Literal, HasDefault
    WFlagsLow GenericsMask_NonGeneric = 0 : Public, Static, Literal, HasDefault
    WFlagsLow GenericsMask_GenericInst = 16 : Public, Static, Literal, HasDefault
    WFlagsLow GenericsMask_SharedInst = 32 : Public, Static, Literal, HasDefault
    WFlagsLow GenericsMask_TypicalInst = 48 : Public, Static, Literal, HasDefault
    WFlagsLow ContextStatic = 64 : Public, Static, Literal, HasDefault
    WFlagsLow HasRemotingVtsInfo = 128 : Public, Static, Literal, HasDefault
    WFlagsLow HasVariance = 256 : Public, Static, Literal, HasDefault
    WFlagsLow HasDefaultCtor = 512 : Public, Static, Literal, HasDefault
    WFlagsLow HasPreciseInitCctors = 1024 : Public, Static, Literal, HasDefault
    WFlagsLow IsHFA_IsRegStructPassed = 2048 : Public, Static, Literal, HasDefault
    WFlagsLow IsByRefLike = 4096 : Public, Static, Literal, HasDefault
    WFlagsLow UNUSED_ComponentSize_5 = 8192 : Public, Static, Literal, HasDefault
    WFlagsLow UNUSED_ComponentSize_6 = 16384 : Public, Static, Literal, HasDefault
    WFlagsLow UNUSED_ComponentSize_7 = 32768 : Public, Static, Literal, HasDefault
    WFlagsLow StringArrayValues = 0 : Public, Static, Literal, HasDefault
Struct MonoMod.Core.Interop.Fx+V48+MethodTable+WFlagsHigh: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.Enum
  Fields:
    UInt32 value__ : Public, SpecialName, RTSpecialName
    WFlagsHigh Category_Mask = 983040 : Public, Static, Literal, HasDefault
    WFlagsHigh Category_Class = 0 : Public, Static, Literal, HasDefault
    WFlagsHigh Category_Unused_1 = 65536 : Public, Static, Literal, HasDefault
    WFlagsHigh Category_MarshalByRef_Mask = 917504 : Public, Static, Literal, HasDefault
    WFlagsHigh Category_MarshalByRef = 131072 : Public, Static, Literal, HasDefault
    WFlagsHigh Category_Contextful = 196608 : Public, Static, Literal, HasDefault
    WFlagsHigh Category_ValueType = 262144 : Public, Static, Literal, HasDefault
    WFlagsHigh Category_ValueType_Mask = 786432 : Public, Static, Literal, HasDefault
    WFlagsHigh Category_Nullable = 327680 : Public, Static, Literal, HasDefault
    WFlagsHigh Category_PrimitiveValueType = 393216 : Public, Static, Literal, HasDefault
    WFlagsHigh Category_TruePrimitive = 458752 : Public, Static, Literal, HasDefault
    WFlagsHigh Category_Array = 524288 : Public, Static, Literal, HasDefault
    WFlagsHigh Category_Array_Mask = 786432 : Public, Static, Literal, HasDefault
    WFlagsHigh Category_IfArrayThenSzArray = 131072 : Public, Static, Literal, HasDefault
    WFlagsHigh Category_Interface = 786432 : Public, Static, Literal, HasDefault
    WFlagsHigh Category_Unused_2 = 851968 : Public, Static, Literal, HasDefault
    WFlagsHigh Category_TransparentProxy = 917504 : Public, Static, Literal, HasDefault
    WFlagsHigh Category_AsyncPin = 983040 : Public, Static, Literal, HasDefault
    WFlagsHigh Category_ElementTypeMask = 917504 : Public, Static, Literal, HasDefault
    WFlagsHigh HasFinalizer = 1048576 : Public, Static, Literal, HasDefault
    WFlagsHigh IfNotInterfaceThenMarshalable = 2097152 : Public, Static, Literal, HasDefault
    WFlagsHigh IfInterfaceThenHasGuidInfo = 2097152 : Public, Static, Literal, HasDefault
    WFlagsHigh ICastable = 4194304 : Public, Static, Literal, HasDefault
    WFlagsHigh HasIndirectParent = 8388608 : Public, Static, Literal, HasDefault
    WFlagsHigh ContainsPointers = 16777216 : Public, Static, Literal, HasDefault
    WFlagsHigh HasTypeEquivalence = 33554432 : Public, Static, Literal, HasDefault
    WFlagsHigh HasRCWPerTypeData = 67108864 : Public, Static, Literal, HasDefault
    WFlagsHigh HasCriticalFinalizer = 134217728 : Public, Static, Literal, HasDefault
    WFlagsHigh Collectible = 268435456 : Public, Static, Literal, HasDefault
    WFlagsHigh ContainsGenericVariables = 536870912 : Public, Static, Literal, HasDefault
    WFlagsHigh ComObject = 1073741824 : Public, Static, Literal, HasDefault
    WFlagsHigh HasComponentSize = 2147483648 : Public, Static, Literal, HasDefault
    WFlagsHigh NonTrivialInterfaceCast = 1078460416 : Public, Static, Literal, HasDefault
Struct MonoMod.Core.Interop.Fx+V48+MethodTable+Flags2: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.Enum
  Fields:
    UInt16 value__ : Public, SpecialName, RTSpecialName
    Flags2 MultipurposeSlotsMask = 31 : Public, Static, Literal, HasDefault
    Flags2 HasPerInstInfo = 1 : Public, Static, Literal, HasDefault
    Flags2 HasInterfaceMap = 2 : Public, Static, Literal, HasDefault
    Flags2 HasDispatchMapSlot = 4 : Public, Static, Literal, HasDefault
    Flags2 HasNonVirtualSlots = 8 : Public, Static, Literal, HasDefault
    Flags2 HasModuleOverride = 16 : Public, Static, Literal, HasDefault
    Flags2 IsZapped = 32 : Public, Static, Literal, HasDefault
    Flags2 IsPreRestored = 64 : Public, Static, Literal, HasDefault
    Flags2 HasModuleDependencies = 128 : Public, Static, Literal, HasDefault
    Flags2 NoSecurityProperties = 256 : Public, Static, Literal, HasDefault
    Flags2 RequiresDispatchTokenFat = 512 : Public, Static, Literal, HasDefault
    Flags2 HasCctor = 1024 : Public, Static, Literal, HasDefault
    Flags2 HasCCWTemplate = 2048 : Public, Static, Literal, HasDefault
    Flags2 RequiresAlign8 = 4096 : Public, Static, Literal, HasDefault
    Flags2 HasBoxedRegularStatics = 8192 : Public, Static, Literal, HasDefault
    Flags2 HasSingleNonVirtualSlot = 16384 : Public, Static, Literal, HasDefault
    Flags2 DependsOnEquivalentOrForwardedStructs = 32768 : Public, Static, Literal, HasDefault
Struct MonoMod.Core.Interop.Fx+V48+MethodTable+UnionLowBits: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    UnionLowBits EEClass = 0 : Public, Static, Literal, HasDefault
    UnionLowBits Invalid = 1 : Public, Static, Literal, HasDefault
    UnionLowBits MethodTable = 2 : Public, Static, Literal, HasDefault
    UnionLowBits Indirection = 3 : Public, Static, Literal, HasDefault
Class MonoMod.Core.Interop.OSX: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Fields:
    System.String LibSystem = libSystem : Public, Static, Literal, HasDefault
  Properties:
    Int32 Errno 'get ' : 
  Methods:
    GetPageSize(): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    sys_icache_invalidate(Void*, UIntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    MkSTemp(Byte*): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    __error(): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    get_Errno(): PrivateScope, Public, Static, HideBySig, SpecialName
    mach_vm_region_recurse(Int32, UInt64*(In, Out), UInt64*(Out), Int32*(In, Out), vm_region_submap_short_info_64*(Out), Int32*(In, Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    mach_vm_protect(Int32, UInt64, UInt64, boolean_t, vm_prot_t): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    mach_vm_allocate(Int32, UInt64*(In, Out), UInt64, vm_flags): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    mach_vm_map(Int32, UInt64*(In, Out), UInt64, UInt64, vm_flags, Int32, UInt64, boolean_t, vm_prot_t, vm_prot_t, vm_inherit_t): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    mach_vm_remap(Int32, UInt64*(In, Out), UInt64, UInt64, vm_flags, Int32, UInt64, boolean_t, vm_prot_t*(Out), vm_prot_t*(Out), vm_inherit_t): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    mach_make_memory_entry_64(Int32, UInt64*(In, Out), UInt64, vm_prot_t, Int32*, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    mach_vm_deallocate(Int32, UInt64, UInt64): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    mach_task_self(): PrivateScope, Public, Static, HideBySig
    task_info(Int32, task_flavor_t, task_dyld_info*(Out), Int32*): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    P(vm_prot_t): PrivateScope, Public, Static, HideBySig
Struct MonoMod.Core.Interop.OSX+vm_region_submap_short_info_64: AutoLayout, AnsiClass, Class, NestedPublic, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    vm_prot_t protection : Public
    vm_prot_t max_protection : Public
    vm_inherit_t inheritance : Public
    UInt64 offset : Public
    UInt32 user_tag : Public
    UInt32 ref_count : Public
    UInt16 shadow_depth : Public
    Byte external_pager : Public
    ShareMode share_mode : Public
    boolean_t is_submap : Public
    vm_behavior_t behavior : Public
    UInt32 object_id : Public
    UInt16 user_wired_count : Public
  Properties:
    Int32 Count 'get ' : 
  Methods:
    get_Count(): PrivateScope, Public, Static, HideBySig, SpecialName
Struct MonoMod.Core.Interop.OSX+ShareMode: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.Enum
  Fields:
    Byte value__ : Public, SpecialName, RTSpecialName
    ShareMode COW = 1 : Public, Static, Literal, HasDefault
    ShareMode Private = 2 : Public, Static, Literal, HasDefault
    ShareMode Empty = 3 : Public, Static, Literal, HasDefault
    ShareMode Shared = 4 : Public, Static, Literal, HasDefault
    ShareMode TrueShared = 5 : Public, Static, Literal, HasDefault
    ShareMode PrivateAliased = 6 : Public, Static, Literal, HasDefault
    ShareMode SharedAliased = 7 : Public, Static, Literal, HasDefault
    ShareMode LargePage = 8 : Public, Static, Literal, HasDefault
Struct MonoMod.Core.Interop.OSX+task_dyld_info: AutoLayout, AnsiClass, Class, NestedPublic, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    UInt64 all_image_info_addr : Public
    UInt64 all_image_info_size : Public
    task_dyld_all_image_info_format all_image_info_format : Public
  Properties:
    dyld_all_image_infos* all_image_infos 'get ' : 
    Int32 Count 'get ' : 
  Methods:
    get_all_image_infos(): PrivateScope, Public, HideBySig, SpecialName
    get_Count(): PrivateScope, Public, Static, HideBySig, SpecialName
Struct MonoMod.Core.Interop.OSX+dyld_all_image_infos: AutoLayout, AnsiClass, Class, NestedPublic, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    UInt32 version : Public
    UInt32 infoArrayCount : Public
    dyld_image_info* infoArray : Public
  Properties:
    System.ReadOnlySpan`1[MonoMod.Core.Interop.OSX+dyld_image_info] InfoArray 'get ' : 
  Methods:
    get_InfoArray(): PrivateScope, Public, HideBySig, SpecialName
Struct MonoMod.Core.Interop.OSX+dyld_image_info: AutoLayout, AnsiClass, Class, NestedPublic, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    Void* imageLoadAddress : Public
    MonoMod.Core.Interop.PCSTR imageFilePath : Public
    UIntPtr imageFileModDate : Public
Struct MonoMod.Core.Interop.OSX+task_dyld_all_image_info_format: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    task_dyld_all_image_info_format Bits32 = 0 : Public, Static, Literal, HasDefault
    task_dyld_all_image_info_format Bits64 = 1 : Public, Static, Literal, HasDefault
Struct MonoMod.Core.Interop.OSX+task_flavor_t: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.Enum
  Fields:
    UInt32 value__ : Public, SpecialName, RTSpecialName
    task_flavor_t DyldInfo = 17 : Public, Static, Literal, HasDefault
Struct MonoMod.Core.Interop.OSX+vm_region_flavor_t: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    vm_region_flavor_t BasicInfo64 = 9 : Public, Static, Literal, HasDefault
Struct MonoMod.Core.Interop.OSX+vm_prot_t: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    vm_prot_t None = 0 : Public, Static, Literal, HasDefault
    vm_prot_t Read = 1 : Public, Static, Literal, HasDefault
    vm_prot_t Write = 2 : Public, Static, Literal, HasDefault
    vm_prot_t Execute = 4 : Public, Static, Literal, HasDefault
    vm_prot_t Default = 3 : Public, Static, Literal, HasDefault
    vm_prot_t All = 7 : Public, Static, Literal, HasDefault
    vm_prot_t NoChange = 8 : Public, Static, Literal, HasDefault (Obsolete)
    vm_prot_t Copy = 16 : Public, Static, Literal, HasDefault
    vm_prot_t WantsCopy = 16 : Public, Static, Literal, HasDefault
    vm_prot_t IsMask = 64 : Public, Static, Literal, HasDefault (Obsolete)
    vm_prot_t StripRead = 128 : Public, Static, Literal, HasDefault (Obsolete)
    vm_prot_t ExecuteOnly = 132 : Public, Static, Literal, HasDefault (Obsolete)
Struct MonoMod.Core.Interop.OSX+VmProtFmtProxy: AutoLayout, AnsiClass, Class, NestedPublic, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(vm_prot_t): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    MonoMod.Logs.IDebugFormattable
  Methods:
    TryFormatInto(Span`1, Int32&(Out)): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Struct MonoMod.Core.Interop.OSX+vm_flags: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    vm_flags Fixed = 0 : Public, Static, Literal, HasDefault
    vm_flags Anywhere = 1 : Public, Static, Literal, HasDefault
    vm_flags Purgable = 2 : Public, Static, Literal, HasDefault
    vm_flags Chunk4GB = 4 : Public, Static, Literal, HasDefault
    vm_flags RandomAddr = 8 : Public, Static, Literal, HasDefault
    vm_flags NoCache = 16 : Public, Static, Literal, HasDefault
    vm_flags Overwrite = 16384 : Public, Static, Literal, HasDefault
    vm_flags SuperpageMask = 458752 : Public, Static, Literal, HasDefault
    vm_flags SuperpageSizeAny = 65536 : Public, Static, Literal, HasDefault
    vm_flags SuperpageWSize2MB = 131072 : Public, Static, Literal, HasDefault
    vm_flags AliasMask = -16777216 : Public, Static, Literal, HasDefault
Struct MonoMod.Core.Interop.OSX+vm_inherit_t: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.Enum
  Fields:
    UInt32 value__ : Public, SpecialName, RTSpecialName
    vm_inherit_t Share = 0 : Public, Static, Literal, HasDefault
    vm_inherit_t Copy = 1 : Public, Static, Literal, HasDefault
    vm_inherit_t None = 2 : Public, Static, Literal, HasDefault
    vm_inherit_t DonateCopy = 3 : Public, Static, Literal, HasDefault
    vm_inherit_t Default = 1 : Public, Static, Literal, HasDefault
    vm_inherit_t LastValid = 2 : Public, Static, Literal, HasDefault
Struct MonoMod.Core.Interop.OSX+vm_behavior_t: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    vm_behavior_t Default = 0 : Public, Static, Literal, HasDefault
    vm_behavior_t Random = 1 : Public, Static, Literal, HasDefault
    vm_behavior_t Sequential = 2 : Public, Static, Literal, HasDefault
    vm_behavior_t ReverseSequential = 3 : Public, Static, Literal, HasDefault
    vm_behavior_t WillNeed = 4 : Public, Static, Literal, HasDefault
    vm_behavior_t DontNeed = 5 : Public, Static, Literal, HasDefault
    vm_behavior_t Free = 6 : Public, Static, Literal, HasDefault
    vm_behavior_t ZeroWiredPages = 7 : Public, Static, Literal, HasDefault
    vm_behavior_t Reusable = 8 : Public, Static, Literal, HasDefault
    vm_behavior_t Reuse = 9 : Public, Static, Literal, HasDefault
    vm_behavior_t CanReuse = 10 : Public, Static, Literal, HasDefault
    vm_behavior_t PageOut = 11 : Public, Static, Literal, HasDefault
Struct MonoMod.Core.Interop.OSX+boolean_t: AutoLayout, AnsiClass, Class, NestedPublic, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    op_Implicit(boolean_t): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Implicit(Boolean): PrivateScope, Public, Static, HideBySig, SpecialName
    op_True(boolean_t): PrivateScope, Public, Static, HideBySig, SpecialName
    op_False(boolean_t): PrivateScope, Public, Static, HideBySig, SpecialName
    ToString(): PrivateScope, Public, Virtual, HideBySig
Struct MonoMod.Core.Interop.OSX+kern_return_t: AutoLayout, AnsiClass, Class, NestedPublic, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IEquatable`1[MonoMod.Core.Interop.OSX+kern_return_t]
  Fields:
    kern_return_t Success : Public, Static
    kern_return_t InvalidAddress : Public, Static
    kern_return_t ProtectionFailure : Public, Static
    kern_return_t NoSpace : Public, Static
    kern_return_t InvalidArgument : Public, Static
    kern_return_t Failure : Public, Static
  Properties:
    Int32 Value 'get ' : 
  Methods:
    get_Value(): PrivateScope, Public, HideBySig, SpecialName
    op_Implicit(kern_return_t): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Equality(kern_return_t, kern_return_t): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Inequality(kern_return_t, kern_return_t): PrivateScope, Public, Static, HideBySig, SpecialName
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    Equals(kern_return_t): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
Struct MonoMod.Core.Interop.PCSTR: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Byte*): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IEquatable`1[MonoMod.Core.Interop.PCSTR]
  Fields:
    Byte* Value : Assembly, InitOnly
  Properties:
    Int32 Length 'get ' : 
  Methods:
    op_Implicit(PCSTR): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Explicit(Byte*): PrivateScope, Public, Static, HideBySig, SpecialName
    Equals(PCSTR): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    get_Length(): PrivateScope, Assembly, HideBySig, SpecialName
    ToString(): PrivateScope, Public, Virtual, HideBySig
    AsSpan(): PrivateScope, Assembly, HideBySig
Class MonoMod.Core.Interop.Unix: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Fields:
    System.String LibC = libc : Public, Static, Literal, HasDefault
  Properties:
    Int32 Errno 'get ' : 
  Methods:
    Read(Int32, IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    Write(Int32, IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    Pipe2(Int32*, PipeFlags): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    Mmap(IntPtr, UIntPtr, Protection, MmapFlags, Int32, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    Munmap(IntPtr, UIntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    Mprotect(IntPtr, UIntPtr, Protection): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    Sysconf(SysconfName): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    Mincore(IntPtr, UIntPtr, Byte*): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    MkSTemp(Byte*): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    __errno_location(): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    get_Errno(): PrivateScope, Public, Static, HideBySig, SpecialName
Struct MonoMod.Core.Interop.Unix+PipeFlags: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    PipeFlags CloseOnExec = 524288 : Public, Static, Literal, HasDefault
Struct MonoMod.Core.Interop.Unix+Protection: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Protection None = 0 : Public, Static, Literal, HasDefault
    Protection Read = 1 : Public, Static, Literal, HasDefault
    Protection Write = 2 : Public, Static, Literal, HasDefault
    Protection Execute = 4 : Public, Static, Literal, HasDefault
Struct MonoMod.Core.Interop.Unix+MmapFlags: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    MmapFlags Shared = 1 : Public, Static, Literal, HasDefault
    MmapFlags Private = 2 : Public, Static, Literal, HasDefault
    MmapFlags SharedValidate = 3 : Public, Static, Literal, HasDefault
    MmapFlags Fixed = 16 : Public, Static, Literal, HasDefault
    MmapFlags Anonymous = 32 : Public, Static, Literal, HasDefault
    MmapFlags GrowsDown = 256 : Public, Static, Literal, HasDefault
    MmapFlags DenyWrite = 2048 : Public, Static, Literal, HasDefault
    MmapFlags Executable = 4096 : Public, Static, Literal, HasDefault (Obsolete)
    MmapFlags Locked = 8192 : Public, Static, Literal, HasDefault
    MmapFlags NoReserve = 16384 : Public, Static, Literal, HasDefault
    MmapFlags Populate = 32768 : Public, Static, Literal, HasDefault
    MmapFlags NonBlock = 65536 : Public, Static, Literal, HasDefault
    MmapFlags Stack = 131072 : Public, Static, Literal, HasDefault
    MmapFlags HugeTLB = 262144 : Public, Static, Literal, HasDefault
    MmapFlags Sync = 524288 : Public, Static, Literal, HasDefault
    MmapFlags FixedNoReplace = 1048576 : Public, Static, Literal, HasDefault
Struct MonoMod.Core.Interop.Unix+SysconfName: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    SysconfName ArgMax = 0 : Public, Static, Literal, HasDefault
    SysconfName ChildMax = 1 : Public, Static, Literal, HasDefault
    SysconfName ClockTick = 2 : Public, Static, Literal, HasDefault
    SysconfName NGroupsMax = 3 : Public, Static, Literal, HasDefault
    SysconfName OpenMax = 4 : Public, Static, Literal, HasDefault
    SysconfName StreamMax = 5 : Public, Static, Literal, HasDefault
    SysconfName TZNameMax = 6 : Public, Static, Literal, HasDefault
    SysconfName JobControl = 7 : Public, Static, Literal, HasDefault
    SysconfName SavedIds = 8 : Public, Static, Literal, HasDefault
    SysconfName RealtimeSignals = 9 : Public, Static, Literal, HasDefault
    SysconfName PriorityScheduling = 10 : Public, Static, Literal, HasDefault
    SysconfName Timers = 11 : Public, Static, Literal, HasDefault
    SysconfName AsyncIO = 12 : Public, Static, Literal, HasDefault
    SysconfName PrioritizedIO = 13 : Public, Static, Literal, HasDefault
    SysconfName SynchronizedIO = 14 : Public, Static, Literal, HasDefault
    SysconfName FSync = 15 : Public, Static, Literal, HasDefault
    SysconfName MappedFiles = 16 : Public, Static, Literal, HasDefault
    SysconfName MemLock = 17 : Public, Static, Literal, HasDefault
    SysconfName MemLockRange = 18 : Public, Static, Literal, HasDefault
    SysconfName MemoryProtection = 19 : Public, Static, Literal, HasDefault
    SysconfName MessagePassing = 20 : Public, Static, Literal, HasDefault
    SysconfName Semaphores = 21 : Public, Static, Literal, HasDefault
    SysconfName SharedMemoryObjects = 22 : Public, Static, Literal, HasDefault
    SysconfName AIOListIOMax = 23 : Public, Static, Literal, HasDefault
    SysconfName AIOMax = 24 : Public, Static, Literal, HasDefault
    SysconfName AIOPrioDeltaMax = 25 : Public, Static, Literal, HasDefault
    SysconfName DelayTimerMax = 26 : Public, Static, Literal, HasDefault
    SysconfName MQOpenMax = 27 : Public, Static, Literal, HasDefault
    SysconfName MQPrioMax = 28 : Public, Static, Literal, HasDefault
    SysconfName Version = 29 : Public, Static, Literal, HasDefault
    SysconfName PageSize = 30 : Public, Static, Literal, HasDefault
    SysconfName RTSigMax = 31 : Public, Static, Literal, HasDefault
    SysconfName SemNSemsMax = 32 : Public, Static, Literal, HasDefault
    SysconfName SemValueMax = 33 : Public, Static, Literal, HasDefault
    SysconfName SigQueueMax = 34 : Public, Static, Literal, HasDefault
    SysconfName TimerMax = 35 : Public, Static, Literal, HasDefault
Class MonoMod.Core.Interop.Windows: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Fields:
    Int32 MEM_COMMIT = 4096 : Public, Static, Literal, HasDefault
    Int32 MEM_RESERVE = 8192 : Public, Static, Literal, HasDefault
    Int32 MEM_REPLACE_PLACEHOLDER = 16384 : Public, Static, Literal, HasDefault
    Int32 MEM_RESERVE_PLACEHOLDER = 262144 : Public, Static, Literal, HasDefault
    Int32 MEM_RESET = 524288 : Public, Static, Literal, HasDefault
    Int32 MEM_TOP_DOWN = 1048576 : Public, Static, Literal, HasDefault
    Int32 MEM_WRITE_WATCH = 2097152 : Public, Static, Literal, HasDefault
    Int32 MEM_PHYSICAL = 4194304 : Public, Static, Literal, HasDefault
    Int32 MEM_ROTATE = 8388608 : Public, Static, Literal, HasDefault
    Int32 MEM_DIFFERENT_IMAGE_BASE_OK = 8388608 : Public, Static, Literal, HasDefault
    Int32 MEM_RESET_UNDO = 16777216 : Public, Static, Literal, HasDefault
    Int32 MEM_LARGE_PAGES = 536870912 : Public, Static, Literal, HasDefault
    UInt32 MEM_4MB_PAGES = 2147483648 : Public, Static, Literal, HasDefault
    Int32 MEM_64K_PAGES = 541065216 : Public, Static, Literal, HasDefault
    Int32 MEM_UNMAP_WITH_TRANSIENT_BOOST = 1 : Public, Static, Literal, HasDefault
    Int32 MEM_COALESCE_PLACEHOLDERS = 1 : Public, Static, Literal, HasDefault
    Int32 MEM_PRESERVE_PLACEHOLDER = 2 : Public, Static, Literal, HasDefault
    Int32 MEM_DECOMMIT = 16384 : Public, Static, Literal, HasDefault
    Int32 MEM_RELEASE = 32768 : Public, Static, Literal, HasDefault
    Int32 MEM_FREE = 65536 : Public, Static, Literal, HasDefault
    Int32 MEM_EXTENDED_PARAMETER_GRAPHICS = 1 : Public, Static, Literal, HasDefault
    Int32 MEM_EXTENDED_PARAMETER_NONPAGED = 2 : Public, Static, Literal, HasDefault
    Int32 MEM_EXTENDED_PARAMETER_ZERO_PAGES_OPTIONAL = 4 : Public, Static, Literal, HasDefault
    Int32 MEM_EXTENDED_PARAMETER_NONPAGED_LARGE = 8 : Public, Static, Literal, HasDefault
    Int32 MEM_EXTENDED_PARAMETER_NONPAGED_HUGE = 16 : Public, Static, Literal, HasDefault
    Int32 MEM_EXTENDED_PARAMETER_SOFT_FAULT_PAGES = 32 : Public, Static, Literal, HasDefault
    Int32 MEM_EXTENDED_PARAMETER_EC_CODE = 64 : Public, Static, Literal, HasDefault
    Int32 MEM_EXTENDED_PARAMETER_IMAGE_NO_HPAT = 128 : Public, Static, Literal, HasDefault
    Int64 MEM_EXTENDED_PARAMETER_NUMA_NODE_MANDATORY = -9223372036854775808 : Public, Static, Literal, HasDefault
    Int32 MEM_EXTENDED_PARAMETER_TYPE_BITS = 8 : Public, Static, Literal, HasDefault
    UInt64 MEM_DEDICATED_ATTRIBUTE_NOT_SPECIFIED = 18446744073709551615 : Public, Static, Literal, HasDefault
    Int32 MEM_PRIVATE = 131072 : Public, Static, Literal, HasDefault
    Int32 MEM_MAPPED = 262144 : Public, Static, Literal, HasDefault
    Int32 MEM_IMAGE = 16777216 : Public, Static, Literal, HasDefault
    Int32 PAGE_NOACCESS = 1 : Public, Static, Literal, HasDefault
    Int32 PAGE_READONLY = 2 : Public, Static, Literal, HasDefault
    Int32 PAGE_READWRITE = 4 : Public, Static, Literal, HasDefault
    Int32 PAGE_WRITECOPY = 8 : Public, Static, Literal, HasDefault
    Int32 PAGE_EXECUTE = 16 : Public, Static, Literal, HasDefault
    Int32 PAGE_EXECUTE_READ = 32 : Public, Static, Literal, HasDefault
    Int32 PAGE_EXECUTE_READWRITE = 64 : Public, Static, Literal, HasDefault
    Int32 PAGE_EXECUTE_WRITECOPY = 128 : Public, Static, Literal, HasDefault
    Int32 PAGE_GUARD = 256 : Public, Static, Literal, HasDefault
    Int32 PAGE_NOCACHE = 512 : Public, Static, Literal, HasDefault
    Int32 PAGE_WRITECOMBINE = 1024 : Public, Static, Literal, HasDefault
    Int32 PAGE_GRAPHICS_NOACCESS = 2048 : Public, Static, Literal, HasDefault
    Int32 PAGE_GRAPHICS_READONLY = 4096 : Public, Static, Literal, HasDefault
    Int32 PAGE_GRAPHICS_READWRITE = 8192 : Public, Static, Literal, HasDefault
    Int32 PAGE_GRAPHICS_EXECUTE = 16384 : Public, Static, Literal, HasDefault
    Int32 PAGE_GRAPHICS_EXECUTE_READ = 32768 : Public, Static, Literal, HasDefault
    Int32 PAGE_GRAPHICS_EXECUTE_READWRITE = 65536 : Public, Static, Literal, HasDefault
    Int32 PAGE_GRAPHICS_COHERENT = 131072 : Public, Static, Literal, HasDefault
    Int32 PAGE_GRAPHICS_NOCACHE = 262144 : Public, Static, Literal, HasDefault
    UInt32 PAGE_ENCLAVE_THREAD_CONTROL = 2147483648 : Public, Static, Literal, HasDefault
    UInt32 PAGE_REVERT_TO_FILE_MAP = 2147483648 : Public, Static, Literal, HasDefault
    Int32 PAGE_TARGETS_NO_UPDATE = 1073741824 : Public, Static, Literal, HasDefault
    Int32 PAGE_TARGETS_INVALID = 1073741824 : Public, Static, Literal, HasDefault
    Int32 PAGE_ENCLAVE_UNVALIDATED = 536870912 : Public, Static, Literal, HasDefault
    Int32 PAGE_ENCLAVE_MASK = 268435456 : Public, Static, Literal, HasDefault
    Int32 PAGE_ENCLAVE_DECOMMIT = 268435456 : Public, Static, Literal, HasDefault
    Int32 PAGE_ENCLAVE_SS_FIRST = 268435457 : Public, Static, Literal, HasDefault
    Int32 PAGE_ENCLAVE_SS_REST = 268435458 : Public, Static, Literal, HasDefault
    Int32 PROCESSOR_ARCHITECTURE_INTEL = 0 : Public, Static, Literal, HasDefault
    Int32 PROCESSOR_ARCHITECTURE_MIPS = 1 : Public, Static, Literal, HasDefault
    Int32 PROCESSOR_ARCHITECTURE_ALPHA = 2 : Public, Static, Literal, HasDefault
    Int32 PROCESSOR_ARCHITECTURE_PPC = 3 : Public, Static, Literal, HasDefault
    Int32 PROCESSOR_ARCHITECTURE_SHX = 4 : Public, Static, Literal, HasDefault
    Int32 PROCESSOR_ARCHITECTURE_ARM = 5 : Public, Static, Literal, HasDefault
    Int32 PROCESSOR_ARCHITECTURE_IA64 = 6 : Public, Static, Literal, HasDefault
    Int32 PROCESSOR_ARCHITECTURE_ALPHA64 = 7 : Public, Static, Literal, HasDefault
    Int32 PROCESSOR_ARCHITECTURE_MSIL = 8 : Public, Static, Literal, HasDefault
    Int32 PROCESSOR_ARCHITECTURE_AMD64 = 9 : Public, Static, Literal, HasDefault
    Int32 PROCESSOR_ARCHITECTURE_IA32_ON_WIN64 = 10 : Public, Static, Literal, HasDefault
    Int32 PROCESSOR_ARCHITECTURE_NEUTRAL = 11 : Public, Static, Literal, HasDefault
    Int32 PROCESSOR_ARCHITECTURE_ARM64 = 12 : Public, Static, Literal, HasDefault
    Int32 PROCESSOR_ARCHITECTURE_ARM32_ON_WIN64 = 13 : Public, Static, Literal, HasDefault
    Int32 PROCESSOR_ARCHITECTURE_IA32_ON_ARM64 = 14 : Public, Static, Literal, HasDefault
    Int32 PROCESSOR_ARCHITECTURE_UNKNOWN = 65535 : Public, Static, Literal, HasDefault
  Methods:
    VirtualAlloc(Void*, UIntPtr, UInt32, UInt32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    VirtualProtect(Void*, UIntPtr, UInt32, UInt32*): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    VirtualFree(Void*, UIntPtr, UInt32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    VirtualQuery(Void*, MEMORY_BASIC_INFORMATION*, UIntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    GetSystemInfo(SYSTEM_INFO*): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    GetCurrentProcess(): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    FlushInstructionCache(HANDLE, Void*, UIntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    GetLastError(): PrivateScope, Public, Static, HideBySig, PinvokeImpl
Struct MonoMod.Core.Interop.Windows+MEMORY_BASIC_INFORMATION: AutoLayout, AnsiClass, Class, NestedPublic, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    Void* BaseAddress : Public
    Void* AllocationBase : Public
    UInt32 AllocationProtect : Public
    UIntPtr RegionSize : Public
    UInt32 State : Public
    UInt32 Protect : Public
    UInt32 Type : Public
Struct MonoMod.Core.Interop.Windows+SYSTEM_INFO: AutoLayout, AnsiClass, Class, NestedPublic, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    _Anonymous_e__Union Anonymous : Public
    UInt32 dwPageSize : Public
    Void* lpMinimumApplicationAddress : Public
    Void* lpMaximumApplicationAddress : Public
    UIntPtr dwActiveProcessorMask : Public
    UInt32 dwNumberOfProcessors : Public
    UInt32 dwProcessorType : Public
    UInt32 dwAllocationGranularity : Public
    UInt16 wProcessorLevel : Public
    UInt16 wProcessorRevision : Public
  Properties:
    UInt32& dwOemId 'get ' : 
    UInt16& wProcessorArchitecture 'get ' : 
    UInt16& wReserved 'get ' : 
  Methods:
    get_dwOemId(): PrivateScope, Public, HideBySig, SpecialName
    get_wProcessorArchitecture(): PrivateScope, Public, HideBySig, SpecialName
    get_wReserved(): PrivateScope, Public, HideBySig, SpecialName
Struct MonoMod.Core.Interop.Windows+SYSTEM_INFO+_Anonymous_e__Union: AutoLayout, AnsiClass, Class, NestedPublic, ExplicitLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    UInt32 dwOemId : Public
    _Anonymous_e__Struct Anonymous : Public
Struct MonoMod.Core.Interop.Windows+SYSTEM_INFO+_Anonymous_e__Union+_Anonymous_e__Struct: AutoLayout, AnsiClass, Class, NestedPublic, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    UInt16 wProcessorArchitecture : Public
    UInt16 wReserved : Public
Struct MonoMod.Core.Interop.Windows+BOOL: AutoLayout, AnsiClass, Class, NestedPublic, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IComparable
    System.IComparable`1[MonoMod.Core.Interop.Windows+BOOL]
    System.IEquatable`1[MonoMod.Core.Interop.Windows+BOOL]
    System.IFormattable
  Fields:
    Int32 Value : Public, InitOnly
  Properties:
    BOOL FALSE 'get ' : 
    BOOL TRUE  'get ' : 
  Methods:
    get_FALSE(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_TRUE(): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Equality(BOOL, BOOL): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Inequality(BOOL, BOOL): PrivateScope, Public, Static, HideBySig, SpecialName
    op_LessThan(BOOL, BOOL): PrivateScope, Public, Static, HideBySig, SpecialName
    op_LessThanOrEqual(BOOL, BOOL): PrivateScope, Public, Static, HideBySig, SpecialName
    op_GreaterThan(BOOL, BOOL): PrivateScope, Public, Static, HideBySig, SpecialName
    op_GreaterThanOrEqual(BOOL, BOOL): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Implicit(BOOL): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Implicit(Boolean): PrivateScope, Public, Static, HideBySig, SpecialName
    op_False(BOOL): PrivateScope, Public, Static, HideBySig, SpecialName
    op_True(BOOL): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Implicit(Byte): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Explicit(BOOL): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Implicit(Int16): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Explicit(BOOL): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Implicit(Int32): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Implicit(BOOL): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Explicit(Int64): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Implicit(BOOL): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Explicit(IntPtr): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Implicit(BOOL): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Implicit(SByte): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Explicit(BOOL): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Implicit(UInt16): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Explicit(BOOL): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Explicit(UInt32): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Explicit(BOOL): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Explicit(UInt64): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Explicit(BOOL): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Explicit(UIntPtr): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Explicit(BOOL): PrivateScope, Public, Static, HideBySig, SpecialName
    CompareTo(Object): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CompareTo(BOOL): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    Equals(BOOL): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
    ToString(String, IFormatProvider): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Struct MonoMod.Core.Interop.Windows+HANDLE: AutoLayout, AnsiClass, Class, NestedPublic, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Void*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IComparable
    System.IComparable`1[MonoMod.Core.Interop.Windows+HANDLE]
    System.IEquatable`1[MonoMod.Core.Interop.Windows+HANDLE]
    System.IFormattable
  Fields:
    Void* Value : Public, InitOnly
  Properties:
    HANDLE INVALID_VALUE 'get ' : 
    HANDLE NULL 'get ' : 
  Methods:
    get_INVALID_VALUE(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_NULL(): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Equality(HANDLE, HANDLE): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Inequality(HANDLE, HANDLE): PrivateScope, Public, Static, HideBySig, SpecialName
    op_LessThan(HANDLE, HANDLE): PrivateScope, Public, Static, HideBySig, SpecialName
    op_LessThanOrEqual(HANDLE, HANDLE): PrivateScope, Public, Static, HideBySig, SpecialName
    op_GreaterThan(HANDLE, HANDLE): PrivateScope, Public, Static, HideBySig, SpecialName
    op_GreaterThanOrEqual(HANDLE, HANDLE): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Explicit(Void*): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Implicit(HANDLE): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Explicit(Byte): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Explicit(HANDLE): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Explicit(Int16): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Explicit(HANDLE): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Explicit(Int32): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Explicit(HANDLE): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Explicit(Int64): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Explicit(HANDLE): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Explicit(IntPtr): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Implicit(HANDLE): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Explicit(SByte): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Explicit(HANDLE): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Explicit(UInt16): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Explicit(HANDLE): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Explicit(UInt32): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Explicit(HANDLE): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Explicit(UInt64): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Explicit(HANDLE): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Explicit(UIntPtr): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Implicit(HANDLE): PrivateScope, Public, Static, HideBySig, SpecialName
    CompareTo(Object): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CompareTo(HANDLE): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    Equals(HANDLE): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
    ToString(String, IFormatProvider): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class MonoMod.Core.Interop.Attributes.FatInterfaceAttribute: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :System.Attribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class MonoMod.Core.Interop.Attributes.FatInterfaceImplAttribute: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :System.Attribute
    Void .ctor(System.Type): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Type FatInterface 'get ' : 
  Methods:
    get_FatInterface(): PrivateScope, Public, HideBySig, SpecialName
Class MonoMod.Core.Interop.Attributes.FatInterfaceIgnoreAttribute: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :System.Attribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class MonoMod.Core.Interop.Attributes.MultipurposeSlotOffsetTableAttribute: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :System.Attribute
    Void .ctor(Int32, System.Type): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 Bits 'get ' : 
    System.Type HelperType 'get ' : 
  Methods:
    get_Bits(): PrivateScope, Public, HideBySig, SpecialName
    get_HelperType(): PrivateScope, Public, HideBySig, SpecialName
Class System.Runtime.CompilerServices.<027f1d0e-6e0b-4adc-bc2b-a5d0603c6ea8>IsExternalInit: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
Class System.Diagnostics.CodeAnalysis.<027f1d0e-6e0b-4adc-bc2b-a5d0603c6ea8>AllowNullAttribute: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :System.Attribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class System.Diagnostics.CodeAnalysis.<027f1d0e-6e0b-4adc-bc2b-a5d0603c6ea8>DisallowNullAttribute: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :System.Attribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class System.Diagnostics.CodeAnalysis.<027f1d0e-6e0b-4adc-bc2b-a5d0603c6ea8>DoesNotReturnAttribute: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :System.Attribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class System.Diagnostics.CodeAnalysis.<027f1d0e-6e0b-4adc-bc2b-a5d0603c6ea8>DoesNotReturnIfAttribute: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :System.Attribute
    Void .ctor(Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean ParameterValue 'get ' : 
  Methods:
    get_ParameterValue(): PrivateScope, Public, HideBySig, SpecialName
Class System.Diagnostics.CodeAnalysis.<027f1d0e-6e0b-4adc-bc2b-a5d0603c6ea8>MaybeNullAttribute: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :System.Attribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class System.Diagnostics.CodeAnalysis.<027f1d0e-6e0b-4adc-bc2b-a5d0603c6ea8>MaybeNullWhenAttribute: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :System.Attribute
    Void .ctor(Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean ReturnValue 'get ' : 
  Methods:
    get_ReturnValue(): PrivateScope, Public, HideBySig, SpecialName
Class System.Diagnostics.CodeAnalysis.<027f1d0e-6e0b-4adc-bc2b-a5d0603c6ea8>MemberNotNullAttribute: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :System.Attribute
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String[] Members 'get ' : 
  Methods:
    get_Members(): PrivateScope, Public, HideBySig, SpecialName
Class System.Diagnostics.CodeAnalysis.<027f1d0e-6e0b-4adc-bc2b-a5d0603c6ea8>MemberNotNullWhenAttribute: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :System.Attribute
    Void .ctor(Boolean, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Boolean, System.String[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean ReturnValue 'get ' : 
    System.String[] Members 'get ' : 
  Methods:
    get_ReturnValue(): PrivateScope, Public, HideBySig, SpecialName
    get_Members(): PrivateScope, Public, HideBySig, SpecialName
Class System.Diagnostics.CodeAnalysis.<027f1d0e-6e0b-4adc-bc2b-a5d0603c6ea8>NotNullAttribute: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :System.Attribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class System.Diagnostics.CodeAnalysis.<027f1d0e-6e0b-4adc-bc2b-a5d0603c6ea8>NotNullIfNotNullAttribute: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :System.Attribute
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String ParameterName 'get ' : 
  Methods:
    get_ParameterName(): PrivateScope, Public, HideBySig, SpecialName
Class System.Diagnostics.CodeAnalysis.<027f1d0e-6e0b-4adc-bc2b-a5d0603c6ea8>NotNullWhenAttribute: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :System.Attribute
    Void .ctor(Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean ReturnValue 'get ' : 
  Methods:
    get_ReturnValue(): PrivateScope, Public, HideBySig, SpecialName
Class System.Runtime.CompilerServices.NullablePublicOnlyAttribute: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :System.Attribute
    Void .ctor(Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Boolean IncludesInternals : Public, InitOnly
Struct Iced.Intel.RelocKind: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Iced.Intel.RelocKind Offset64 = 0 : Public, Static, Literal, HasDefault
Struct Iced.Intel.RelocInfo: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Iced.Intel.RelocKind, UInt64): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    UInt64 Address : Public, InitOnly
    Iced.Intel.RelocKind Kind : Public, InitOnly
Struct Iced.Intel.InstructionBlock: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Iced.Intel.CodeWriter, System.Collections.Generic.IList`1[Iced.Intel.Instruction], UInt64): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Iced.Intel.CodeWriter CodeWriter : Public, InitOnly
    System.Collections.Generic.IList`1[Iced.Intel.Instruction] Instructions : Public, InitOnly
    UInt64 RIP : Public, InitOnly
Struct Iced.Intel.BlockEncoderResult: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(UInt64, System.Collections.Generic.List`1[Iced.Intel.RelocInfo], UInt32[], Iced.Intel.ConstantOffsets[]): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Fields:
    UInt64 RIP : Public, InitOnly
    System.Collections.Generic.List`1[Iced.Intel.RelocInfo] RelocInfos : Public, InitOnly
    UInt32[] NewInstructionOffsets : Public, InitOnly
    Iced.Intel.ConstantOffsets[] ConstantOffsets : Public, InitOnly
Struct Iced.Intel.BlockEncoderOptions: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Iced.Intel.BlockEncoderOptions None = 0 : Public, Static, Literal, HasDefault
    Iced.Intel.BlockEncoderOptions DontFixBranches = 1 : Public, Static, Literal, HasDefault
    Iced.Intel.BlockEncoderOptions ReturnRelocInfos = 2 : Public, Static, Literal, HasDefault
    Iced.Intel.BlockEncoderOptions ReturnNewInstructionOffsets = 4 : Public, Static, Literal, HasDefault
    Iced.Intel.BlockEncoderOptions ReturnConstantOffsets = 8 : Public, Static, Literal, HasDefault
Class Iced.Intel.BlockEncoder: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  Properties:
    Int32 Bitness 'get ' : 
    Boolean FixBranches 'get ' : 
  Methods:
    get_Bitness(): PrivateScope, Assembly, HideBySig, SpecialName
    get_FixBranches(): PrivateScope, Assembly, HideBySig, SpecialName
    TryEncode(Int32, InstructionBlock, String&(Out), BlockEncoderResult&(Out), BlockEncoderOptions(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    TryEncode(Int32, InstructionBlock[], String&(Out), BlockEncoderResult[]&(Out), BlockEncoderOptions(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    GetTarget(UInt64): PrivateScope, Assembly, HideBySig
    GetInstructionSize(Instruction&(In), UInt64): PrivateScope, Assembly, HideBySig
Class Iced.Intel.ByteArrayCodeReader: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.CodeReader
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Byte[], Int32, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.ArraySegment`1[System.Byte]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 Position 'get set' : 
    Int32 Count 'get ' : 
    Boolean CanReadByte 'get ' : 
  Methods:
    get_Position(): PrivateScope, Public, HideBySig, SpecialName
    set_Position(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Count(): PrivateScope, Public, HideBySig, SpecialName
    get_CanReadByte(): PrivateScope, Public, HideBySig, SpecialName
    ReadByte(): PrivateScope, Public, Virtual, HideBySig
Struct Iced.Intel.Code: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Iced.Intel.Code INVALID = 0 : Public, Static, Literal, HasDefault
    Iced.Intel.Code DeclareByte = 1 : Public, Static, Literal, HasDefault
    Iced.Intel.Code DeclareWord = 2 : Public, Static, Literal, HasDefault
    Iced.Intel.Code DeclareDword = 3 : Public, Static, Literal, HasDefault
    Iced.Intel.Code DeclareQword = 4 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Add_rm8_r8 = 5 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Add_rm16_r16 = 6 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Add_rm32_r32 = 7 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Add_rm64_r64 = 8 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Add_r8_rm8 = 9 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Add_r16_rm16 = 10 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Add_r32_rm32 = 11 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Add_r64_rm64 = 12 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Add_AL_imm8 = 13 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Add_AX_imm16 = 14 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Add_EAX_imm32 = 15 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Add_RAX_imm32 = 16 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Pushw_ES = 17 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Pushd_ES = 18 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Popw_ES = 19 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Popd_ES = 20 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Or_rm8_r8 = 21 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Or_rm16_r16 = 22 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Or_rm32_r32 = 23 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Or_rm64_r64 = 24 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Or_r8_rm8 = 25 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Or_r16_rm16 = 26 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Or_r32_rm32 = 27 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Or_r64_rm64 = 28 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Or_AL_imm8 = 29 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Or_AX_imm16 = 30 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Or_EAX_imm32 = 31 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Or_RAX_imm32 = 32 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Pushw_CS = 33 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Pushd_CS = 34 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Popw_CS = 35 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Adc_rm8_r8 = 36 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Adc_rm16_r16 = 37 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Adc_rm32_r32 = 38 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Adc_rm64_r64 = 39 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Adc_r8_rm8 = 40 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Adc_r16_rm16 = 41 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Adc_r32_rm32 = 42 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Adc_r64_rm64 = 43 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Adc_AL_imm8 = 44 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Adc_AX_imm16 = 45 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Adc_EAX_imm32 = 46 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Adc_RAX_imm32 = 47 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Pushw_SS = 48 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Pushd_SS = 49 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Popw_SS = 50 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Popd_SS = 51 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Sbb_rm8_r8 = 52 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Sbb_rm16_r16 = 53 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Sbb_rm32_r32 = 54 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Sbb_rm64_r64 = 55 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Sbb_r8_rm8 = 56 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Sbb_r16_rm16 = 57 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Sbb_r32_rm32 = 58 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Sbb_r64_rm64 = 59 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Sbb_AL_imm8 = 60 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Sbb_AX_imm16 = 61 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Sbb_EAX_imm32 = 62 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Sbb_RAX_imm32 = 63 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Pushw_DS = 64 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Pushd_DS = 65 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Popw_DS = 66 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Popd_DS = 67 : Public, Static, Literal, HasDefault
    Iced.Intel.Code And_rm8_r8 = 68 : Public, Static, Literal, HasDefault
    Iced.Intel.Code And_rm16_r16 = 69 : Public, Static, Literal, HasDefault
    Iced.Intel.Code And_rm32_r32 = 70 : Public, Static, Literal, HasDefault
    Iced.Intel.Code And_rm64_r64 = 71 : Public, Static, Literal, HasDefault
    Iced.Intel.Code And_r8_rm8 = 72 : Public, Static, Literal, HasDefault
    Iced.Intel.Code And_r16_rm16 = 73 : Public, Static, Literal, HasDefault
    Iced.Intel.Code And_r32_rm32 = 74 : Public, Static, Literal, HasDefault
    Iced.Intel.Code And_r64_rm64 = 75 : Public, Static, Literal, HasDefault
    Iced.Intel.Code And_AL_imm8 = 76 : Public, Static, Literal, HasDefault
    Iced.Intel.Code And_AX_imm16 = 77 : Public, Static, Literal, HasDefault
    Iced.Intel.Code And_EAX_imm32 = 78 : Public, Static, Literal, HasDefault
    Iced.Intel.Code And_RAX_imm32 = 79 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Daa = 80 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Sub_rm8_r8 = 81 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Sub_rm16_r16 = 82 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Sub_rm32_r32 = 83 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Sub_rm64_r64 = 84 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Sub_r8_rm8 = 85 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Sub_r16_rm16 = 86 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Sub_r32_rm32 = 87 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Sub_r64_rm64 = 88 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Sub_AL_imm8 = 89 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Sub_AX_imm16 = 90 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Sub_EAX_imm32 = 91 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Sub_RAX_imm32 = 92 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Das = 93 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Xor_rm8_r8 = 94 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Xor_rm16_r16 = 95 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Xor_rm32_r32 = 96 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Xor_rm64_r64 = 97 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Xor_r8_rm8 = 98 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Xor_r16_rm16 = 99 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Xor_r32_rm32 = 100 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Xor_r64_rm64 = 101 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Xor_AL_imm8 = 102 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Xor_AX_imm16 = 103 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Xor_EAX_imm32 = 104 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Xor_RAX_imm32 = 105 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Aaa = 106 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Cmp_rm8_r8 = 107 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Cmp_rm16_r16 = 108 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Cmp_rm32_r32 = 109 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Cmp_rm64_r64 = 110 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Cmp_r8_rm8 = 111 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Cmp_r16_rm16 = 112 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Cmp_r32_rm32 = 113 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Cmp_r64_rm64 = 114 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Cmp_AL_imm8 = 115 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Cmp_AX_imm16 = 116 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Cmp_EAX_imm32 = 117 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Cmp_RAX_imm32 = 118 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Aas = 119 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Inc_r16 = 120 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Inc_r32 = 121 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Dec_r16 = 122 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Dec_r32 = 123 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Push_r16 = 124 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Push_r32 = 125 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Push_r64 = 126 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Pop_r16 = 127 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Pop_r32 = 128 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Pop_r64 = 129 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Pushaw = 130 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Pushad = 131 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Popaw = 132 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Popad = 133 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Bound_r16_m1616 = 134 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Bound_r32_m3232 = 135 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Arpl_rm16_r16 = 136 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Arpl_r32m16_r32 = 137 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Movsxd_r16_rm16 = 138 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Movsxd_r32_rm32 = 139 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Movsxd_r64_rm32 = 140 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Push_imm16 = 141 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Pushd_imm32 = 142 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Pushq_imm32 = 143 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Imul_r16_rm16_imm16 = 144 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Imul_r32_rm32_imm32 = 145 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Imul_r64_rm64_imm32 = 146 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Pushw_imm8 = 147 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Pushd_imm8 = 148 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Pushq_imm8 = 149 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Imul_r16_rm16_imm8 = 150 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Imul_r32_rm32_imm8 = 151 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Imul_r64_rm64_imm8 = 152 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Insb_m8_DX = 153 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Insw_m16_DX = 154 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Insd_m32_DX = 155 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Outsb_DX_m8 = 156 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Outsw_DX_m16 = 157 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Outsd_DX_m32 = 158 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Jo_rel8_16 = 159 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Jo_rel8_32 = 160 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Jo_rel8_64 = 161 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Jno_rel8_16 = 162 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Jno_rel8_32 = 163 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Jno_rel8_64 = 164 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Jb_rel8_16 = 165 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Jb_rel8_32 = 166 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Jb_rel8_64 = 167 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Jae_rel8_16 = 168 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Jae_rel8_32 = 169 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Jae_rel8_64 = 170 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Je_rel8_16 = 171 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Je_rel8_32 = 172 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Je_rel8_64 = 173 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Jne_rel8_16 = 174 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Jne_rel8_32 = 175 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Jne_rel8_64 = 176 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Jbe_rel8_16 = 177 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Jbe_rel8_32 = 178 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Jbe_rel8_64 = 179 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Ja_rel8_16 = 180 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Ja_rel8_32 = 181 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Ja_rel8_64 = 182 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Js_rel8_16 = 183 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Js_rel8_32 = 184 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Js_rel8_64 = 185 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Jns_rel8_16 = 186 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Jns_rel8_32 = 187 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Jns_rel8_64 = 188 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Jp_rel8_16 = 189 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Jp_rel8_32 = 190 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Jp_rel8_64 = 191 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Jnp_rel8_16 = 192 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Jnp_rel8_32 = 193 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Jnp_rel8_64 = 194 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Jl_rel8_16 = 195 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Jl_rel8_32 = 196 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Jl_rel8_64 = 197 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Jge_rel8_16 = 198 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Jge_rel8_32 = 199 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Jge_rel8_64 = 200 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Jle_rel8_16 = 201 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Jle_rel8_32 = 202 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Jle_rel8_64 = 203 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Jg_rel8_16 = 204 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Jg_rel8_32 = 205 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Jg_rel8_64 = 206 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Add_rm8_imm8 = 207 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Or_rm8_imm8 = 208 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Adc_rm8_imm8 = 209 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Sbb_rm8_imm8 = 210 : Public, Static, Literal, HasDefault
    Iced.Intel.Code And_rm8_imm8 = 211 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Sub_rm8_imm8 = 212 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Xor_rm8_imm8 = 213 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Cmp_rm8_imm8 = 214 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Add_rm16_imm16 = 215 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Add_rm32_imm32 = 216 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Add_rm64_imm32 = 217 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Or_rm16_imm16 = 218 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Or_rm32_imm32 = 219 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Or_rm64_imm32 = 220 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Adc_rm16_imm16 = 221 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Adc_rm32_imm32 = 222 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Adc_rm64_imm32 = 223 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Sbb_rm16_imm16 = 224 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Sbb_rm32_imm32 = 225 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Sbb_rm64_imm32 = 226 : Public, Static, Literal, HasDefault
    Iced.Intel.Code And_rm16_imm16 = 227 : Public, Static, Literal, HasDefault
    Iced.Intel.Code And_rm32_imm32 = 228 : Public, Static, Literal, HasDefault
    Iced.Intel.Code And_rm64_imm32 = 229 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Sub_rm16_imm16 = 230 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Sub_rm32_imm32 = 231 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Sub_rm64_imm32 = 232 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Xor_rm16_imm16 = 233 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Xor_rm32_imm32 = 234 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Xor_rm64_imm32 = 235 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Cmp_rm16_imm16 = 236 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Cmp_rm32_imm32 = 237 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Cmp_rm64_imm32 = 238 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Add_rm8_imm8_82 = 239 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Or_rm8_imm8_82 = 240 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Adc_rm8_imm8_82 = 241 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Sbb_rm8_imm8_82 = 242 : Public, Static, Literal, HasDefault
    Iced.Intel.Code And_rm8_imm8_82 = 243 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Sub_rm8_imm8_82 = 244 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Xor_rm8_imm8_82 = 245 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Cmp_rm8_imm8_82 = 246 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Add_rm16_imm8 = 247 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Add_rm32_imm8 = 248 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Add_rm64_imm8 = 249 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Or_rm16_imm8 = 250 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Or_rm32_imm8 = 251 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Or_rm64_imm8 = 252 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Adc_rm16_imm8 = 253 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Adc_rm32_imm8 = 254 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Adc_rm64_imm8 = 255 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Sbb_rm16_imm8 = 256 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Sbb_rm32_imm8 = 257 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Sbb_rm64_imm8 = 258 : Public, Static, Literal, HasDefault
    Iced.Intel.Code And_rm16_imm8 = 259 : Public, Static, Literal, HasDefault
    Iced.Intel.Code And_rm32_imm8 = 260 : Public, Static, Literal, HasDefault
    Iced.Intel.Code And_rm64_imm8 = 261 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Sub_rm16_imm8 = 262 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Sub_rm32_imm8 = 263 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Sub_rm64_imm8 = 264 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Xor_rm16_imm8 = 265 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Xor_rm32_imm8 = 266 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Xor_rm64_imm8 = 267 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Cmp_rm16_imm8 = 268 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Cmp_rm32_imm8 = 269 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Cmp_rm64_imm8 = 270 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Test_rm8_r8 = 271 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Test_rm16_r16 = 272 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Test_rm32_r32 = 273 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Test_rm64_r64 = 274 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Xchg_rm8_r8 = 275 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Xchg_rm16_r16 = 276 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Xchg_rm32_r32 = 277 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Xchg_rm64_r64 = 278 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Mov_rm8_r8 = 279 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Mov_rm16_r16 = 280 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Mov_rm32_r32 = 281 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Mov_rm64_r64 = 282 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Mov_r8_rm8 = 283 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Mov_r16_rm16 = 284 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Mov_r32_rm32 = 285 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Mov_r64_rm64 = 286 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Mov_rm16_Sreg = 287 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Mov_r32m16_Sreg = 288 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Mov_r64m16_Sreg = 289 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Lea_r16_m = 290 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Lea_r32_m = 291 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Lea_r64_m = 292 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Mov_Sreg_rm16 = 293 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Mov_Sreg_r32m16 = 294 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Mov_Sreg_r64m16 = 295 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Pop_rm16 = 296 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Pop_rm32 = 297 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Pop_rm64 = 298 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Nopw = 299 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Nopd = 300 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Nopq = 301 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Xchg_r16_AX = 302 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Xchg_r32_EAX = 303 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Xchg_r64_RAX = 304 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Pause = 305 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Cbw = 306 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Cwde = 307 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Cdqe = 308 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Cwd = 309 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Cdq = 310 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Cqo = 311 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Call_ptr1616 = 312 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Call_ptr1632 = 313 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Wait = 314 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Pushfw = 315 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Pushfd = 316 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Pushfq = 317 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Popfw = 318 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Popfd = 319 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Popfq = 320 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Sahf = 321 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Lahf = 322 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Mov_AL_moffs8 = 323 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Mov_AX_moffs16 = 324 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Mov_EAX_moffs32 = 325 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Mov_RAX_moffs64 = 326 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Mov_moffs8_AL = 327 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Mov_moffs16_AX = 328 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Mov_moffs32_EAX = 329 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Mov_moffs64_RAX = 330 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Movsb_m8_m8 = 331 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Movsw_m16_m16 = 332 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Movsd_m32_m32 = 333 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Movsq_m64_m64 = 334 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Cmpsb_m8_m8 = 335 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Cmpsw_m16_m16 = 336 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Cmpsd_m32_m32 = 337 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Cmpsq_m64_m64 = 338 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Test_AL_imm8 = 339 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Test_AX_imm16 = 340 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Test_EAX_imm32 = 341 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Test_RAX_imm32 = 342 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Stosb_m8_AL = 343 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Stosw_m16_AX = 344 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Stosd_m32_EAX = 345 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Stosq_m64_RAX = 346 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Lodsb_AL_m8 = 347 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Lodsw_AX_m16 = 348 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Lodsd_EAX_m32 = 349 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Lodsq_RAX_m64 = 350 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Scasb_AL_m8 = 351 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Scasw_AX_m16 = 352 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Scasd_EAX_m32 = 353 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Scasq_RAX_m64 = 354 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Mov_r8_imm8 = 355 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Mov_r16_imm16 = 356 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Mov_r32_imm32 = 357 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Mov_r64_imm64 = 358 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Rol_rm8_imm8 = 359 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Ror_rm8_imm8 = 360 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Rcl_rm8_imm8 = 361 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Rcr_rm8_imm8 = 362 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Shl_rm8_imm8 = 363 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Shr_rm8_imm8 = 364 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Sal_rm8_imm8 = 365 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Sar_rm8_imm8 = 366 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Rol_rm16_imm8 = 367 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Rol_rm32_imm8 = 368 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Rol_rm64_imm8 = 369 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Ror_rm16_imm8 = 370 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Ror_rm32_imm8 = 371 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Ror_rm64_imm8 = 372 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Rcl_rm16_imm8 = 373 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Rcl_rm32_imm8 = 374 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Rcl_rm64_imm8 = 375 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Rcr_rm16_imm8 = 376 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Rcr_rm32_imm8 = 377 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Rcr_rm64_imm8 = 378 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Shl_rm16_imm8 = 379 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Shl_rm32_imm8 = 380 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Shl_rm64_imm8 = 381 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Shr_rm16_imm8 = 382 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Shr_rm32_imm8 = 383 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Shr_rm64_imm8 = 384 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Sal_rm16_imm8 = 385 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Sal_rm32_imm8 = 386 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Sal_rm64_imm8 = 387 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Sar_rm16_imm8 = 388 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Sar_rm32_imm8 = 389 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Sar_rm64_imm8 = 390 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Retnw_imm16 = 391 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Retnd_imm16 = 392 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Retnq_imm16 = 393 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Retnw = 394 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Retnd = 395 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Retnq = 396 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Les_r16_m1616 = 397 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Les_r32_m1632 = 398 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Lds_r16_m1616 = 399 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Lds_r32_m1632 = 400 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Mov_rm8_imm8 = 401 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Xabort_imm8 = 402 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Mov_rm16_imm16 = 403 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Mov_rm32_imm32 = 404 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Mov_rm64_imm32 = 405 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Xbegin_rel16 = 406 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Xbegin_rel32 = 407 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Enterw_imm16_imm8 = 408 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Enterd_imm16_imm8 = 409 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Enterq_imm16_imm8 = 410 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Leavew = 411 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Leaved = 412 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Leaveq = 413 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Retfw_imm16 = 414 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Retfd_imm16 = 415 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Retfq_imm16 = 416 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Retfw = 417 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Retfd = 418 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Retfq = 419 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Int3 = 420 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Int_imm8 = 421 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Into = 422 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Iretw = 423 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Iretd = 424 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Iretq = 425 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Rol_rm8_1 = 426 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Ror_rm8_1 = 427 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Rcl_rm8_1 = 428 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Rcr_rm8_1 = 429 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Shl_rm8_1 = 430 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Shr_rm8_1 = 431 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Sal_rm8_1 = 432 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Sar_rm8_1 = 433 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Rol_rm16_1 = 434 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Rol_rm32_1 = 435 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Rol_rm64_1 = 436 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Ror_rm16_1 = 437 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Ror_rm32_1 = 438 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Ror_rm64_1 = 439 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Rcl_rm16_1 = 440 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Rcl_rm32_1 = 441 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Rcl_rm64_1 = 442 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Rcr_rm16_1 = 443 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Rcr_rm32_1 = 444 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Rcr_rm64_1 = 445 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Shl_rm16_1 = 446 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Shl_rm32_1 = 447 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Shl_rm64_1 = 448 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Shr_rm16_1 = 449 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Shr_rm32_1 = 450 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Shr_rm64_1 = 451 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Sal_rm16_1 = 452 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Sal_rm32_1 = 453 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Sal_rm64_1 = 454 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Sar_rm16_1 = 455 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Sar_rm32_1 = 456 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Sar_rm64_1 = 457 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Rol_rm8_CL = 458 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Ror_rm8_CL = 459 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Rcl_rm8_CL = 460 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Rcr_rm8_CL = 461 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Shl_rm8_CL = 462 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Shr_rm8_CL = 463 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Sal_rm8_CL = 464 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Sar_rm8_CL = 465 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Rol_rm16_CL = 466 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Rol_rm32_CL = 467 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Rol_rm64_CL = 468 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Ror_rm16_CL = 469 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Ror_rm32_CL = 470 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Ror_rm64_CL = 471 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Rcl_rm16_CL = 472 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Rcl_rm32_CL = 473 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Rcl_rm64_CL = 474 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Rcr_rm16_CL = 475 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Rcr_rm32_CL = 476 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Rcr_rm64_CL = 477 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Shl_rm16_CL = 478 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Shl_rm32_CL = 479 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Shl_rm64_CL = 480 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Shr_rm16_CL = 481 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Shr_rm32_CL = 482 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Shr_rm64_CL = 483 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Sal_rm16_CL = 484 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Sal_rm32_CL = 485 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Sal_rm64_CL = 486 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Sar_rm16_CL = 487 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Sar_rm32_CL = 488 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Sar_rm64_CL = 489 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Aam_imm8 = 490 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Aad_imm8 = 491 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Salc = 492 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Xlat_m8 = 493 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Fadd_m32fp = 494 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Fmul_m32fp = 495 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Fcom_m32fp = 496 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Fcomp_m32fp = 497 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Fsub_m32fp = 498 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Fsubr_m32fp = 499 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Fdiv_m32fp = 500 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Fdivr_m32fp = 501 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Fadd_st0_sti = 502 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Fmul_st0_sti = 503 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Fcom_st0_sti = 504 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Fcomp_st0_sti = 505 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Fsub_st0_sti = 506 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Fsubr_st0_sti = 507 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Fdiv_st0_sti = 508 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Fdivr_st0_sti = 509 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Fld_m32fp = 510 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Fst_m32fp = 511 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Fstp_m32fp = 512 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Fldenv_m14byte = 513 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Fldenv_m28byte = 514 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Fldcw_m2byte = 515 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Fnstenv_m14byte = 516 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Fstenv_m14byte = 517 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Fnstenv_m28byte = 518 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Fstenv_m28byte = 519 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Fnstcw_m2byte = 520 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Fstcw_m2byte = 521 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Fld_sti = 522 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Fxch_st0_sti = 523 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Fnop = 524 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Fstpnce_sti = 525 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Fchs = 526 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Fabs = 527 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Ftst = 528 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Fxam = 529 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Fld1 = 530 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Fldl2t = 531 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Fldl2e = 532 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Fldpi = 533 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Fldlg2 = 534 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Fldln2 = 535 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Fldz = 536 : Public, Static, Literal, HasDefault
    Iced.Intel.Code F2xm1 = 537 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Fyl2x = 538 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Fptan = 539 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Fpatan = 540 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Fxtract = 541 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Fprem1 = 542 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Fdecstp = 543 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Fincstp = 544 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Fprem = 545 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Fyl2xp1 = 546 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Fsqrt = 547 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Fsincos = 548 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Frndint = 549 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Fscale = 550 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Fsin = 551 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Fcos = 552 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Fiadd_m32int = 553 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Fimul_m32int = 554 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Ficom_m32int = 555 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Ficomp_m32int = 556 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Fisub_m32int = 557 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Fisubr_m32int = 558 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Fidiv_m32int = 559 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Fidivr_m32int = 560 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Fcmovb_st0_sti = 561 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Fcmove_st0_sti = 562 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Fcmovbe_st0_sti = 563 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Fcmovu_st0_sti = 564 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Fucompp = 565 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Fild_m32int = 566 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Fisttp_m32int = 567 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Fist_m32int = 568 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Fistp_m32int = 569 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Fld_m80fp = 570 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Fstp_m80fp = 571 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Fcmovnb_st0_sti = 572 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Fcmovne_st0_sti = 573 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Fcmovnbe_st0_sti = 574 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Fcmovnu_st0_sti = 575 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Fneni = 576 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Feni = 577 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Fndisi = 578 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Fdisi = 579 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Fnclex = 580 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Fclex = 581 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Fninit = 582 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Finit = 583 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Fnsetpm = 584 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Fsetpm = 585 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Frstpm = 586 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Fucomi_st0_sti = 587 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Fcomi_st0_sti = 588 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Fadd_m64fp = 589 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Fmul_m64fp = 590 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Fcom_m64fp = 591 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Fcomp_m64fp = 592 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Fsub_m64fp = 593 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Fsubr_m64fp = 594 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Fdiv_m64fp = 595 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Fdivr_m64fp = 596 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Fadd_sti_st0 = 597 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Fmul_sti_st0 = 598 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Fcom_st0_sti_DCD0 = 599 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Fcomp_st0_sti_DCD8 = 600 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Fsubr_sti_st0 = 601 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Fsub_sti_st0 = 602 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Fdivr_sti_st0 = 603 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Fdiv_sti_st0 = 604 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Fld_m64fp = 605 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Fisttp_m64int = 606 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Fst_m64fp = 607 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Fstp_m64fp = 608 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Frstor_m94byte = 609 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Frstor_m108byte = 610 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Fnsave_m94byte = 611 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Fsave_m94byte = 612 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Fnsave_m108byte = 613 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Fsave_m108byte = 614 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Fnstsw_m2byte = 615 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Fstsw_m2byte = 616 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Ffree_sti = 617 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Fxch_st0_sti_DDC8 = 618 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Fst_sti = 619 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Fstp_sti = 620 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Fucom_st0_sti = 621 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Fucomp_st0_sti = 622 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Fiadd_m16int = 623 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Fimul_m16int = 624 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Ficom_m16int = 625 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Ficomp_m16int = 626 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Fisub_m16int = 627 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Fisubr_m16int = 628 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Fidiv_m16int = 629 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Fidivr_m16int = 630 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Faddp_sti_st0 = 631 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Fmulp_sti_st0 = 632 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Fcomp_st0_sti_DED0 = 633 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Fcompp = 634 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Fsubrp_sti_st0 = 635 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Fsubp_sti_st0 = 636 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Fdivrp_sti_st0 = 637 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Fdivp_sti_st0 = 638 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Fild_m16int = 639 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Fisttp_m16int = 640 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Fist_m16int = 641 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Fistp_m16int = 642 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Fbld_m80bcd = 643 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Fild_m64int = 644 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Fbstp_m80bcd = 645 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Fistp_m64int = 646 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Ffreep_sti = 647 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Fxch_st0_sti_DFC8 = 648 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Fstp_sti_DFD0 = 649 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Fstp_sti_DFD8 = 650 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Fnstsw_AX = 651 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Fstsw_AX = 652 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Fstdw_AX = 653 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Fstsg_AX = 654 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Fucomip_st0_sti = 655 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Fcomip_st0_sti = 656 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Loopne_rel8_16_CX = 657 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Loopne_rel8_32_CX = 658 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Loopne_rel8_16_ECX = 659 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Loopne_rel8_32_ECX = 660 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Loopne_rel8_64_ECX = 661 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Loopne_rel8_16_RCX = 662 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Loopne_rel8_64_RCX = 663 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Loope_rel8_16_CX = 664 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Loope_rel8_32_CX = 665 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Loope_rel8_16_ECX = 666 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Loope_rel8_32_ECX = 667 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Loope_rel8_64_ECX = 668 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Loope_rel8_16_RCX = 669 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Loope_rel8_64_RCX = 670 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Loop_rel8_16_CX = 671 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Loop_rel8_32_CX = 672 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Loop_rel8_16_ECX = 673 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Loop_rel8_32_ECX = 674 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Loop_rel8_64_ECX = 675 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Loop_rel8_16_RCX = 676 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Loop_rel8_64_RCX = 677 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Jcxz_rel8_16 = 678 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Jcxz_rel8_32 = 679 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Jecxz_rel8_16 = 680 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Jecxz_rel8_32 = 681 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Jecxz_rel8_64 = 682 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Jrcxz_rel8_16 = 683 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Jrcxz_rel8_64 = 684 : Public, Static, Literal, HasDefault
    Iced.Intel.Code In_AL_imm8 = 685 : Public, Static, Literal, HasDefault
    Iced.Intel.Code In_AX_imm8 = 686 : Public, Static, Literal, HasDefault
    Iced.Intel.Code In_EAX_imm8 = 687 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Out_imm8_AL = 688 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Out_imm8_AX = 689 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Out_imm8_EAX = 690 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Call_rel16 = 691 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Call_rel32_32 = 692 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Call_rel32_64 = 693 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Jmp_rel16 = 694 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Jmp_rel32_32 = 695 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Jmp_rel32_64 = 696 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Jmp_ptr1616 = 697 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Jmp_ptr1632 = 698 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Jmp_rel8_16 = 699 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Jmp_rel8_32 = 700 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Jmp_rel8_64 = 701 : Public, Static, Literal, HasDefault
    Iced.Intel.Code In_AL_DX = 702 : Public, Static, Literal, HasDefault
    Iced.Intel.Code In_AX_DX = 703 : Public, Static, Literal, HasDefault
    Iced.Intel.Code In_EAX_DX = 704 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Out_DX_AL = 705 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Out_DX_AX = 706 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Out_DX_EAX = 707 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Int1 = 708 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Hlt = 709 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Cmc = 710 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Test_rm8_imm8 = 711 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Test_rm8_imm8_F6r1 = 712 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Not_rm8 = 713 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Neg_rm8 = 714 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Mul_rm8 = 715 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Imul_rm8 = 716 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Div_rm8 = 717 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Idiv_rm8 = 718 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Test_rm16_imm16 = 719 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Test_rm32_imm32 = 720 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Test_rm64_imm32 = 721 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Test_rm16_imm16_F7r1 = 722 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Test_rm32_imm32_F7r1 = 723 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Test_rm64_imm32_F7r1 = 724 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Not_rm16 = 725 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Not_rm32 = 726 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Not_rm64 = 727 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Neg_rm16 = 728 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Neg_rm32 = 729 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Neg_rm64 = 730 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Mul_rm16 = 731 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Mul_rm32 = 732 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Mul_rm64 = 733 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Imul_rm16 = 734 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Imul_rm32 = 735 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Imul_rm64 = 736 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Div_rm16 = 737 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Div_rm32 = 738 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Div_rm64 = 739 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Idiv_rm16 = 740 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Idiv_rm32 = 741 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Idiv_rm64 = 742 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Clc = 743 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Stc = 744 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Cli = 745 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Sti = 746 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Cld = 747 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Std = 748 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Inc_rm8 = 749 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Dec_rm8 = 750 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Inc_rm16 = 751 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Inc_rm32 = 752 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Inc_rm64 = 753 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Dec_rm16 = 754 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Dec_rm32 = 755 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Dec_rm64 = 756 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Call_rm16 = 757 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Call_rm32 = 758 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Call_rm64 = 759 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Call_m1616 = 760 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Call_m1632 = 761 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Call_m1664 = 762 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Jmp_rm16 = 763 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Jmp_rm32 = 764 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Jmp_rm64 = 765 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Jmp_m1616 = 766 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Jmp_m1632 = 767 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Jmp_m1664 = 768 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Push_rm16 = 769 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Push_rm32 = 770 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Push_rm64 = 771 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Sldt_rm16 = 772 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Sldt_r32m16 = 773 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Sldt_r64m16 = 774 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Str_rm16 = 775 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Str_r32m16 = 776 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Str_r64m16 = 777 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Lldt_rm16 = 778 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Lldt_r32m16 = 779 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Lldt_r64m16 = 780 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Ltr_rm16 = 781 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Ltr_r32m16 = 782 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Ltr_r64m16 = 783 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Verr_rm16 = 784 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Verr_r32m16 = 785 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Verr_r64m16 = 786 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Verw_rm16 = 787 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Verw_r32m16 = 788 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Verw_r64m16 = 789 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Jmpe_rm16 = 790 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Jmpe_rm32 = 791 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Sgdt_m1632_16 = 792 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Sgdt_m1632 = 793 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Sgdt_m1664 = 794 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Sidt_m1632_16 = 795 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Sidt_m1632 = 796 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Sidt_m1664 = 797 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Lgdt_m1632_16 = 798 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Lgdt_m1632 = 799 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Lgdt_m1664 = 800 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Lidt_m1632_16 = 801 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Lidt_m1632 = 802 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Lidt_m1664 = 803 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Smsw_rm16 = 804 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Smsw_r32m16 = 805 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Smsw_r64m16 = 806 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Rstorssp_m64 = 807 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Lmsw_rm16 = 808 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Lmsw_r32m16 = 809 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Lmsw_r64m16 = 810 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Invlpg_m = 811 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Enclv = 812 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Vmcall = 813 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Vmlaunch = 814 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Vmresume = 815 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Vmxoff = 816 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Pconfig = 817 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Monitorw = 818 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Monitord = 819 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Monitorq = 820 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Mwait = 821 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Clac = 822 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Stac = 823 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Encls = 824 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Xgetbv = 825 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Xsetbv = 826 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Vmfunc = 827 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Xend = 828 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Xtest = 829 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Enclu = 830 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Vmrunw = 831 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Vmrund = 832 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Vmrunq = 833 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Vmmcall = 834 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Vmloadw = 835 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Vmloadd = 836 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Vmloadq = 837 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Vmsavew = 838 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Vmsaved = 839 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Vmsaveq = 840 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Stgi = 841 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Clgi = 842 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Skinit = 843 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Invlpgaw = 844 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Invlpgad = 845 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Invlpgaq = 846 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Setssbsy = 847 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Saveprevssp = 848 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Rdpkru = 849 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Wrpkru = 850 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Swapgs = 851 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Rdtscp = 852 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Monitorxw = 853 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Monitorxd = 854 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Monitorxq = 855 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Mcommit = 856 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Mwaitx = 857 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Clzerow = 858 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Clzerod = 859 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Clzeroq = 860 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Rdpru = 861 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Lar_r16_rm16 = 862 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Lar_r32_r32m16 = 863 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Lar_r64_r64m16 = 864 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Lsl_r16_rm16 = 865 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Lsl_r32_r32m16 = 866 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Lsl_r64_r64m16 = 867 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Storeall = 868 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Loadall286 = 869 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Syscall = 870 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Clts = 871 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Loadall386 = 872 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Sysretd = 873 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Sysretq = 874 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Invd = 875 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Wbinvd = 876 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Wbnoinvd = 877 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Cl1invmb = 878 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Ud2 = 879 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Reservednop_rm16_r16_0F0D = 880 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Reservednop_rm32_r32_0F0D = 881 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Reservednop_rm64_r64_0F0D = 882 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Prefetch_m8 = 883 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Prefetchw_m8 = 884 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Prefetchwt1_m8 = 885 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Femms = 886 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Umov_rm8_r8 = 887 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Umov_rm16_r16 = 888 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Umov_rm32_r32 = 889 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Umov_r8_rm8 = 890 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Umov_r16_rm16 = 891 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Umov_r32_rm32 = 892 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Movups_xmm_xmmm128 = 893 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vmovups_xmm_xmmm128 = 894 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vmovups_ymm_ymmm256 = 895 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vmovups_xmm_k1z_xmmm128 = 896 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vmovups_ymm_k1z_ymmm256 = 897 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vmovups_zmm_k1z_zmmm512 = 898 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Movupd_xmm_xmmm128 = 899 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vmovupd_xmm_xmmm128 = 900 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vmovupd_ymm_ymmm256 = 901 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vmovupd_xmm_k1z_xmmm128 = 902 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vmovupd_ymm_k1z_ymmm256 = 903 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vmovupd_zmm_k1z_zmmm512 = 904 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Movss_xmm_xmmm32 = 905 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vmovss_xmm_xmm_xmm = 906 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vmovss_xmm_m32 = 907 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vmovss_xmm_k1z_xmm_xmm = 908 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vmovss_xmm_k1z_m32 = 909 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Movsd_xmm_xmmm64 = 910 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vmovsd_xmm_xmm_xmm = 911 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vmovsd_xmm_m64 = 912 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vmovsd_xmm_k1z_xmm_xmm = 913 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vmovsd_xmm_k1z_m64 = 914 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Movups_xmmm128_xmm = 915 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vmovups_xmmm128_xmm = 916 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vmovups_ymmm256_ymm = 917 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vmovups_xmmm128_k1z_xmm = 918 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vmovups_ymmm256_k1z_ymm = 919 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vmovups_zmmm512_k1z_zmm = 920 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Movupd_xmmm128_xmm = 921 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vmovupd_xmmm128_xmm = 922 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vmovupd_ymmm256_ymm = 923 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vmovupd_xmmm128_k1z_xmm = 924 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vmovupd_ymmm256_k1z_ymm = 925 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vmovupd_zmmm512_k1z_zmm = 926 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Movss_xmmm32_xmm = 927 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vmovss_xmm_xmm_xmm_0F11 = 928 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vmovss_m32_xmm = 929 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vmovss_xmm_k1z_xmm_xmm_0F11 = 930 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vmovss_m32_k1_xmm = 931 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Movsd_xmmm64_xmm = 932 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vmovsd_xmm_xmm_xmm_0F11 = 933 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vmovsd_m64_xmm = 934 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vmovsd_xmm_k1z_xmm_xmm_0F11 = 935 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vmovsd_m64_k1_xmm = 936 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Movhlps_xmm_xmm = 937 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Movlps_xmm_m64 = 938 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vmovhlps_xmm_xmm_xmm = 939 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vmovlps_xmm_xmm_m64 = 940 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vmovhlps_xmm_xmm_xmm = 941 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vmovlps_xmm_xmm_m64 = 942 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Movlpd_xmm_m64 = 943 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vmovlpd_xmm_xmm_m64 = 944 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vmovlpd_xmm_xmm_m64 = 945 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Movsldup_xmm_xmmm128 = 946 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vmovsldup_xmm_xmmm128 = 947 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vmovsldup_ymm_ymmm256 = 948 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vmovsldup_xmm_k1z_xmmm128 = 949 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vmovsldup_ymm_k1z_ymmm256 = 950 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vmovsldup_zmm_k1z_zmmm512 = 951 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Movddup_xmm_xmmm64 = 952 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vmovddup_xmm_xmmm64 = 953 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vmovddup_ymm_ymmm256 = 954 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vmovddup_xmm_k1z_xmmm64 = 955 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vmovddup_ymm_k1z_ymmm256 = 956 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vmovddup_zmm_k1z_zmmm512 = 957 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Movlps_m64_xmm = 958 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vmovlps_m64_xmm = 959 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vmovlps_m64_xmm = 960 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Movlpd_m64_xmm = 961 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vmovlpd_m64_xmm = 962 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vmovlpd_m64_xmm = 963 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Unpcklps_xmm_xmmm128 = 964 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vunpcklps_xmm_xmm_xmmm128 = 965 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vunpcklps_ymm_ymm_ymmm256 = 966 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vunpcklps_xmm_k1z_xmm_xmmm128b32 = 967 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vunpcklps_ymm_k1z_ymm_ymmm256b32 = 968 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vunpcklps_zmm_k1z_zmm_zmmm512b32 = 969 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Unpcklpd_xmm_xmmm128 = 970 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vunpcklpd_xmm_xmm_xmmm128 = 971 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vunpcklpd_ymm_ymm_ymmm256 = 972 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vunpcklpd_xmm_k1z_xmm_xmmm128b64 = 973 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vunpcklpd_ymm_k1z_ymm_ymmm256b64 = 974 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vunpcklpd_zmm_k1z_zmm_zmmm512b64 = 975 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Unpckhps_xmm_xmmm128 = 976 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vunpckhps_xmm_xmm_xmmm128 = 977 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vunpckhps_ymm_ymm_ymmm256 = 978 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vunpckhps_xmm_k1z_xmm_xmmm128b32 = 979 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vunpckhps_ymm_k1z_ymm_ymmm256b32 = 980 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vunpckhps_zmm_k1z_zmm_zmmm512b32 = 981 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Unpckhpd_xmm_xmmm128 = 982 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vunpckhpd_xmm_xmm_xmmm128 = 983 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vunpckhpd_ymm_ymm_ymmm256 = 984 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vunpckhpd_xmm_k1z_xmm_xmmm128b64 = 985 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vunpckhpd_ymm_k1z_ymm_ymmm256b64 = 986 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vunpckhpd_zmm_k1z_zmm_zmmm512b64 = 987 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Movlhps_xmm_xmm = 988 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vmovlhps_xmm_xmm_xmm = 989 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vmovlhps_xmm_xmm_xmm = 990 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Movhps_xmm_m64 = 991 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vmovhps_xmm_xmm_m64 = 992 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vmovhps_xmm_xmm_m64 = 993 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Movhpd_xmm_m64 = 994 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vmovhpd_xmm_xmm_m64 = 995 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vmovhpd_xmm_xmm_m64 = 996 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Movshdup_xmm_xmmm128 = 997 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vmovshdup_xmm_xmmm128 = 998 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vmovshdup_ymm_ymmm256 = 999 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vmovshdup_xmm_k1z_xmmm128 = 1000 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vmovshdup_ymm_k1z_ymmm256 = 1001 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vmovshdup_zmm_k1z_zmmm512 = 1002 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Movhps_m64_xmm = 1003 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vmovhps_m64_xmm = 1004 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vmovhps_m64_xmm = 1005 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Movhpd_m64_xmm = 1006 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vmovhpd_m64_xmm = 1007 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vmovhpd_m64_xmm = 1008 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Reservednop_rm16_r16_0F18 = 1009 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Reservednop_rm32_r32_0F18 = 1010 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Reservednop_rm64_r64_0F18 = 1011 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Reservednop_rm16_r16_0F19 = 1012 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Reservednop_rm32_r32_0F19 = 1013 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Reservednop_rm64_r64_0F19 = 1014 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Reservednop_rm16_r16_0F1A = 1015 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Reservednop_rm32_r32_0F1A = 1016 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Reservednop_rm64_r64_0F1A = 1017 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Reservednop_rm16_r16_0F1B = 1018 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Reservednop_rm32_r32_0F1B = 1019 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Reservednop_rm64_r64_0F1B = 1020 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Reservednop_rm16_r16_0F1C = 1021 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Reservednop_rm32_r32_0F1C = 1022 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Reservednop_rm64_r64_0F1C = 1023 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Reservednop_rm16_r16_0F1D = 1024 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Reservednop_rm32_r32_0F1D = 1025 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Reservednop_rm64_r64_0F1D = 1026 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Reservednop_rm16_r16_0F1E = 1027 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Reservednop_rm32_r32_0F1E = 1028 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Reservednop_rm64_r64_0F1E = 1029 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Reservednop_rm16_r16_0F1F = 1030 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Reservednop_rm32_r32_0F1F = 1031 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Reservednop_rm64_r64_0F1F = 1032 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Prefetchnta_m8 = 1033 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Prefetcht0_m8 = 1034 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Prefetcht1_m8 = 1035 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Prefetcht2_m8 = 1036 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Bndldx_bnd_mib = 1037 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Bndmov_bnd_bndm64 = 1038 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Bndmov_bnd_bndm128 = 1039 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Bndcl_bnd_rm32 = 1040 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Bndcl_bnd_rm64 = 1041 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Bndcu_bnd_rm32 = 1042 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Bndcu_bnd_rm64 = 1043 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Bndstx_mib_bnd = 1044 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Bndmov_bndm64_bnd = 1045 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Bndmov_bndm128_bnd = 1046 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Bndmk_bnd_m32 = 1047 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Bndmk_bnd_m64 = 1048 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Bndcn_bnd_rm32 = 1049 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Bndcn_bnd_rm64 = 1050 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Cldemote_m8 = 1051 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Rdsspd_r32 = 1052 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Rdsspq_r64 = 1053 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Endbr64 = 1054 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Endbr32 = 1055 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Nop_rm16 = 1056 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Nop_rm32 = 1057 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Nop_rm64 = 1058 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Mov_r32_cr = 1059 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Mov_r64_cr = 1060 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Mov_r32_dr = 1061 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Mov_r64_dr = 1062 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Mov_cr_r32 = 1063 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Mov_cr_r64 = 1064 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Mov_dr_r32 = 1065 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Mov_dr_r64 = 1066 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Mov_r32_tr = 1067 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Mov_tr_r32 = 1068 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Movaps_xmm_xmmm128 = 1069 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vmovaps_xmm_xmmm128 = 1070 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vmovaps_ymm_ymmm256 = 1071 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vmovaps_xmm_k1z_xmmm128 = 1072 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vmovaps_ymm_k1z_ymmm256 = 1073 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vmovaps_zmm_k1z_zmmm512 = 1074 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Movapd_xmm_xmmm128 = 1075 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vmovapd_xmm_xmmm128 = 1076 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vmovapd_ymm_ymmm256 = 1077 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vmovapd_xmm_k1z_xmmm128 = 1078 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vmovapd_ymm_k1z_ymmm256 = 1079 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vmovapd_zmm_k1z_zmmm512 = 1080 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Movaps_xmmm128_xmm = 1081 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vmovaps_xmmm128_xmm = 1082 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vmovaps_ymmm256_ymm = 1083 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vmovaps_xmmm128_k1z_xmm = 1084 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vmovaps_ymmm256_k1z_ymm = 1085 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vmovaps_zmmm512_k1z_zmm = 1086 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Movapd_xmmm128_xmm = 1087 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vmovapd_xmmm128_xmm = 1088 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vmovapd_ymmm256_ymm = 1089 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vmovapd_xmmm128_k1z_xmm = 1090 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vmovapd_ymmm256_k1z_ymm = 1091 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vmovapd_zmmm512_k1z_zmm = 1092 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Cvtpi2ps_xmm_mmm64 = 1093 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Cvtpi2pd_xmm_mmm64 = 1094 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Cvtsi2ss_xmm_rm32 = 1095 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Cvtsi2ss_xmm_rm64 = 1096 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vcvtsi2ss_xmm_xmm_rm32 = 1097 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vcvtsi2ss_xmm_xmm_rm64 = 1098 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vcvtsi2ss_xmm_xmm_rm32_er = 1099 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vcvtsi2ss_xmm_xmm_rm64_er = 1100 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Cvtsi2sd_xmm_rm32 = 1101 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Cvtsi2sd_xmm_rm64 = 1102 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vcvtsi2sd_xmm_xmm_rm32 = 1103 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vcvtsi2sd_xmm_xmm_rm64 = 1104 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vcvtsi2sd_xmm_xmm_rm32_er = 1105 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vcvtsi2sd_xmm_xmm_rm64_er = 1106 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Movntps_m128_xmm = 1107 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vmovntps_m128_xmm = 1108 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vmovntps_m256_ymm = 1109 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vmovntps_m128_xmm = 1110 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vmovntps_m256_ymm = 1111 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vmovntps_m512_zmm = 1112 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Movntpd_m128_xmm = 1113 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vmovntpd_m128_xmm = 1114 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vmovntpd_m256_ymm = 1115 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vmovntpd_m128_xmm = 1116 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vmovntpd_m256_ymm = 1117 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vmovntpd_m512_zmm = 1118 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Movntss_m32_xmm = 1119 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Movntsd_m64_xmm = 1120 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Cvttps2pi_mm_xmmm64 = 1121 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Cvttpd2pi_mm_xmmm128 = 1122 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Cvttss2si_r32_xmmm32 = 1123 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Cvttss2si_r64_xmmm32 = 1124 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vcvttss2si_r32_xmmm32 = 1125 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vcvttss2si_r64_xmmm32 = 1126 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vcvttss2si_r32_xmmm32_sae = 1127 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vcvttss2si_r64_xmmm32_sae = 1128 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Cvttsd2si_r32_xmmm64 = 1129 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Cvttsd2si_r64_xmmm64 = 1130 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vcvttsd2si_r32_xmmm64 = 1131 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vcvttsd2si_r64_xmmm64 = 1132 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vcvttsd2si_r32_xmmm64_sae = 1133 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vcvttsd2si_r64_xmmm64_sae = 1134 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Cvtps2pi_mm_xmmm64 = 1135 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Cvtpd2pi_mm_xmmm128 = 1136 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Cvtss2si_r32_xmmm32 = 1137 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Cvtss2si_r64_xmmm32 = 1138 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vcvtss2si_r32_xmmm32 = 1139 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vcvtss2si_r64_xmmm32 = 1140 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vcvtss2si_r32_xmmm32_er = 1141 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vcvtss2si_r64_xmmm32_er = 1142 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Cvtsd2si_r32_xmmm64 = 1143 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Cvtsd2si_r64_xmmm64 = 1144 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vcvtsd2si_r32_xmmm64 = 1145 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vcvtsd2si_r64_xmmm64 = 1146 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vcvtsd2si_r32_xmmm64_er = 1147 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vcvtsd2si_r64_xmmm64_er = 1148 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Ucomiss_xmm_xmmm32 = 1149 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vucomiss_xmm_xmmm32 = 1150 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vucomiss_xmm_xmmm32_sae = 1151 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Ucomisd_xmm_xmmm64 = 1152 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vucomisd_xmm_xmmm64 = 1153 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vucomisd_xmm_xmmm64_sae = 1154 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Comiss_xmm_xmmm32 = 1155 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Comisd_xmm_xmmm64 = 1156 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vcomiss_xmm_xmmm32 = 1157 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vcomisd_xmm_xmmm64 = 1158 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vcomiss_xmm_xmmm32_sae = 1159 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vcomisd_xmm_xmmm64_sae = 1160 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Wrmsr = 1161 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Rdtsc = 1162 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Rdmsr = 1163 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Rdpmc = 1164 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Sysenter = 1165 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Sysexitd = 1166 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Sysexitq = 1167 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Getsecd = 1168 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Cmovo_r16_rm16 = 1169 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Cmovo_r32_rm32 = 1170 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Cmovo_r64_rm64 = 1171 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Cmovno_r16_rm16 = 1172 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Cmovno_r32_rm32 = 1173 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Cmovno_r64_rm64 = 1174 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Cmovb_r16_rm16 = 1175 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Cmovb_r32_rm32 = 1176 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Cmovb_r64_rm64 = 1177 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Cmovae_r16_rm16 = 1178 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Cmovae_r32_rm32 = 1179 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Cmovae_r64_rm64 = 1180 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Cmove_r16_rm16 = 1181 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Cmove_r32_rm32 = 1182 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Cmove_r64_rm64 = 1183 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Cmovne_r16_rm16 = 1184 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Cmovne_r32_rm32 = 1185 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Cmovne_r64_rm64 = 1186 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Cmovbe_r16_rm16 = 1187 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Cmovbe_r32_rm32 = 1188 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Cmovbe_r64_rm64 = 1189 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Cmova_r16_rm16 = 1190 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Cmova_r32_rm32 = 1191 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Cmova_r64_rm64 = 1192 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Cmovs_r16_rm16 = 1193 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Cmovs_r32_rm32 = 1194 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Cmovs_r64_rm64 = 1195 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Cmovns_r16_rm16 = 1196 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Cmovns_r32_rm32 = 1197 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Cmovns_r64_rm64 = 1198 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Cmovp_r16_rm16 = 1199 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Cmovp_r32_rm32 = 1200 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Cmovp_r64_rm64 = 1201 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Cmovnp_r16_rm16 = 1202 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Cmovnp_r32_rm32 = 1203 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Cmovnp_r64_rm64 = 1204 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Cmovl_r16_rm16 = 1205 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Cmovl_r32_rm32 = 1206 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Cmovl_r64_rm64 = 1207 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Cmovge_r16_rm16 = 1208 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Cmovge_r32_rm32 = 1209 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Cmovge_r64_rm64 = 1210 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Cmovle_r16_rm16 = 1211 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Cmovle_r32_rm32 = 1212 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Cmovle_r64_rm64 = 1213 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Cmovg_r16_rm16 = 1214 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Cmovg_r32_rm32 = 1215 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Cmovg_r64_rm64 = 1216 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Kandw_kr_kr_kr = 1217 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Kandq_kr_kr_kr = 1218 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Kandb_kr_kr_kr = 1219 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Kandd_kr_kr_kr = 1220 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Kandnw_kr_kr_kr = 1221 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Kandnq_kr_kr_kr = 1222 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Kandnb_kr_kr_kr = 1223 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Kandnd_kr_kr_kr = 1224 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Knotw_kr_kr = 1225 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Knotq_kr_kr = 1226 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Knotb_kr_kr = 1227 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Knotd_kr_kr = 1228 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Korw_kr_kr_kr = 1229 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Korq_kr_kr_kr = 1230 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Korb_kr_kr_kr = 1231 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Kord_kr_kr_kr = 1232 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Kxnorw_kr_kr_kr = 1233 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Kxnorq_kr_kr_kr = 1234 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Kxnorb_kr_kr_kr = 1235 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Kxnord_kr_kr_kr = 1236 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Kxorw_kr_kr_kr = 1237 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Kxorq_kr_kr_kr = 1238 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Kxorb_kr_kr_kr = 1239 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Kxord_kr_kr_kr = 1240 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Kaddw_kr_kr_kr = 1241 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Kaddq_kr_kr_kr = 1242 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Kaddb_kr_kr_kr = 1243 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Kaddd_kr_kr_kr = 1244 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Kunpckwd_kr_kr_kr = 1245 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Kunpckdq_kr_kr_kr = 1246 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Kunpckbw_kr_kr_kr = 1247 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Movmskps_r32_xmm = 1248 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Movmskps_r64_xmm = 1249 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vmovmskps_r32_xmm = 1250 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vmovmskps_r64_xmm = 1251 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vmovmskps_r32_ymm = 1252 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vmovmskps_r64_ymm = 1253 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Movmskpd_r32_xmm = 1254 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Movmskpd_r64_xmm = 1255 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vmovmskpd_r32_xmm = 1256 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vmovmskpd_r64_xmm = 1257 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vmovmskpd_r32_ymm = 1258 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vmovmskpd_r64_ymm = 1259 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Sqrtps_xmm_xmmm128 = 1260 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vsqrtps_xmm_xmmm128 = 1261 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vsqrtps_ymm_ymmm256 = 1262 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vsqrtps_xmm_k1z_xmmm128b32 = 1263 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vsqrtps_ymm_k1z_ymmm256b32 = 1264 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vsqrtps_zmm_k1z_zmmm512b32_er = 1265 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Sqrtpd_xmm_xmmm128 = 1266 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vsqrtpd_xmm_xmmm128 = 1267 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vsqrtpd_ymm_ymmm256 = 1268 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vsqrtpd_xmm_k1z_xmmm128b64 = 1269 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vsqrtpd_ymm_k1z_ymmm256b64 = 1270 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vsqrtpd_zmm_k1z_zmmm512b64_er = 1271 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Sqrtss_xmm_xmmm32 = 1272 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vsqrtss_xmm_xmm_xmmm32 = 1273 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vsqrtss_xmm_k1z_xmm_xmmm32_er = 1274 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Sqrtsd_xmm_xmmm64 = 1275 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vsqrtsd_xmm_xmm_xmmm64 = 1276 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vsqrtsd_xmm_k1z_xmm_xmmm64_er = 1277 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Rsqrtps_xmm_xmmm128 = 1278 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vrsqrtps_xmm_xmmm128 = 1279 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vrsqrtps_ymm_ymmm256 = 1280 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Rsqrtss_xmm_xmmm32 = 1281 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vrsqrtss_xmm_xmm_xmmm32 = 1282 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Rcpps_xmm_xmmm128 = 1283 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vrcpps_xmm_xmmm128 = 1284 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vrcpps_ymm_ymmm256 = 1285 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Rcpss_xmm_xmmm32 = 1286 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vrcpss_xmm_xmm_xmmm32 = 1287 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Andps_xmm_xmmm128 = 1288 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vandps_xmm_xmm_xmmm128 = 1289 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vandps_ymm_ymm_ymmm256 = 1290 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vandps_xmm_k1z_xmm_xmmm128b32 = 1291 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vandps_ymm_k1z_ymm_ymmm256b32 = 1292 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vandps_zmm_k1z_zmm_zmmm512b32 = 1293 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Andpd_xmm_xmmm128 = 1294 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vandpd_xmm_xmm_xmmm128 = 1295 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vandpd_ymm_ymm_ymmm256 = 1296 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vandpd_xmm_k1z_xmm_xmmm128b64 = 1297 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vandpd_ymm_k1z_ymm_ymmm256b64 = 1298 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vandpd_zmm_k1z_zmm_zmmm512b64 = 1299 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Andnps_xmm_xmmm128 = 1300 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vandnps_xmm_xmm_xmmm128 = 1301 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vandnps_ymm_ymm_ymmm256 = 1302 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vandnps_xmm_k1z_xmm_xmmm128b32 = 1303 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vandnps_ymm_k1z_ymm_ymmm256b32 = 1304 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vandnps_zmm_k1z_zmm_zmmm512b32 = 1305 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Andnpd_xmm_xmmm128 = 1306 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vandnpd_xmm_xmm_xmmm128 = 1307 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vandnpd_ymm_ymm_ymmm256 = 1308 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vandnpd_xmm_k1z_xmm_xmmm128b64 = 1309 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vandnpd_ymm_k1z_ymm_ymmm256b64 = 1310 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vandnpd_zmm_k1z_zmm_zmmm512b64 = 1311 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Orps_xmm_xmmm128 = 1312 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vorps_xmm_xmm_xmmm128 = 1313 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vorps_ymm_ymm_ymmm256 = 1314 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vorps_xmm_k1z_xmm_xmmm128b32 = 1315 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vorps_ymm_k1z_ymm_ymmm256b32 = 1316 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vorps_zmm_k1z_zmm_zmmm512b32 = 1317 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Orpd_xmm_xmmm128 = 1318 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vorpd_xmm_xmm_xmmm128 = 1319 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vorpd_ymm_ymm_ymmm256 = 1320 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vorpd_xmm_k1z_xmm_xmmm128b64 = 1321 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vorpd_ymm_k1z_ymm_ymmm256b64 = 1322 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vorpd_zmm_k1z_zmm_zmmm512b64 = 1323 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Xorps_xmm_xmmm128 = 1324 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vxorps_xmm_xmm_xmmm128 = 1325 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vxorps_ymm_ymm_ymmm256 = 1326 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vxorps_xmm_k1z_xmm_xmmm128b32 = 1327 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vxorps_ymm_k1z_ymm_ymmm256b32 = 1328 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vxorps_zmm_k1z_zmm_zmmm512b32 = 1329 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Xorpd_xmm_xmmm128 = 1330 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vxorpd_xmm_xmm_xmmm128 = 1331 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vxorpd_ymm_ymm_ymmm256 = 1332 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vxorpd_xmm_k1z_xmm_xmmm128b64 = 1333 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vxorpd_ymm_k1z_ymm_ymmm256b64 = 1334 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vxorpd_zmm_k1z_zmm_zmmm512b64 = 1335 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Addps_xmm_xmmm128 = 1336 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vaddps_xmm_xmm_xmmm128 = 1337 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vaddps_ymm_ymm_ymmm256 = 1338 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vaddps_xmm_k1z_xmm_xmmm128b32 = 1339 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vaddps_ymm_k1z_ymm_ymmm256b32 = 1340 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vaddps_zmm_k1z_zmm_zmmm512b32_er = 1341 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Addpd_xmm_xmmm128 = 1342 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vaddpd_xmm_xmm_xmmm128 = 1343 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vaddpd_ymm_ymm_ymmm256 = 1344 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vaddpd_xmm_k1z_xmm_xmmm128b64 = 1345 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vaddpd_ymm_k1z_ymm_ymmm256b64 = 1346 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vaddpd_zmm_k1z_zmm_zmmm512b64_er = 1347 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Addss_xmm_xmmm32 = 1348 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vaddss_xmm_xmm_xmmm32 = 1349 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vaddss_xmm_k1z_xmm_xmmm32_er = 1350 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Addsd_xmm_xmmm64 = 1351 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vaddsd_xmm_xmm_xmmm64 = 1352 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vaddsd_xmm_k1z_xmm_xmmm64_er = 1353 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Mulps_xmm_xmmm128 = 1354 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vmulps_xmm_xmm_xmmm128 = 1355 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vmulps_ymm_ymm_ymmm256 = 1356 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vmulps_xmm_k1z_xmm_xmmm128b32 = 1357 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vmulps_ymm_k1z_ymm_ymmm256b32 = 1358 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vmulps_zmm_k1z_zmm_zmmm512b32_er = 1359 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Mulpd_xmm_xmmm128 = 1360 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vmulpd_xmm_xmm_xmmm128 = 1361 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vmulpd_ymm_ymm_ymmm256 = 1362 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vmulpd_xmm_k1z_xmm_xmmm128b64 = 1363 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vmulpd_ymm_k1z_ymm_ymmm256b64 = 1364 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vmulpd_zmm_k1z_zmm_zmmm512b64_er = 1365 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Mulss_xmm_xmmm32 = 1366 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vmulss_xmm_xmm_xmmm32 = 1367 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vmulss_xmm_k1z_xmm_xmmm32_er = 1368 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Mulsd_xmm_xmmm64 = 1369 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vmulsd_xmm_xmm_xmmm64 = 1370 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vmulsd_xmm_k1z_xmm_xmmm64_er = 1371 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Cvtps2pd_xmm_xmmm64 = 1372 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vcvtps2pd_xmm_xmmm64 = 1373 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vcvtps2pd_ymm_xmmm128 = 1374 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vcvtps2pd_xmm_k1z_xmmm64b32 = 1375 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vcvtps2pd_ymm_k1z_xmmm128b32 = 1376 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vcvtps2pd_zmm_k1z_ymmm256b32_sae = 1377 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Cvtpd2ps_xmm_xmmm128 = 1378 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vcvtpd2ps_xmm_xmmm128 = 1379 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vcvtpd2ps_xmm_ymmm256 = 1380 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vcvtpd2ps_xmm_k1z_xmmm128b64 = 1381 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vcvtpd2ps_xmm_k1z_ymmm256b64 = 1382 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vcvtpd2ps_ymm_k1z_zmmm512b64_er = 1383 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Cvtss2sd_xmm_xmmm32 = 1384 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vcvtss2sd_xmm_xmm_xmmm32 = 1385 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vcvtss2sd_xmm_k1z_xmm_xmmm32_sae = 1386 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Cvtsd2ss_xmm_xmmm64 = 1387 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vcvtsd2ss_xmm_xmm_xmmm64 = 1388 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vcvtsd2ss_xmm_k1z_xmm_xmmm64_er = 1389 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Cvtdq2ps_xmm_xmmm128 = 1390 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vcvtdq2ps_xmm_xmmm128 = 1391 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vcvtdq2ps_ymm_ymmm256 = 1392 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vcvtdq2ps_xmm_k1z_xmmm128b32 = 1393 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vcvtdq2ps_ymm_k1z_ymmm256b32 = 1394 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vcvtdq2ps_zmm_k1z_zmmm512b32_er = 1395 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vcvtqq2ps_xmm_k1z_xmmm128b64 = 1396 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vcvtqq2ps_xmm_k1z_ymmm256b64 = 1397 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vcvtqq2ps_ymm_k1z_zmmm512b64_er = 1398 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Cvtps2dq_xmm_xmmm128 = 1399 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vcvtps2dq_xmm_xmmm128 = 1400 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vcvtps2dq_ymm_ymmm256 = 1401 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vcvtps2dq_xmm_k1z_xmmm128b32 = 1402 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vcvtps2dq_ymm_k1z_ymmm256b32 = 1403 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vcvtps2dq_zmm_k1z_zmmm512b32_er = 1404 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Cvttps2dq_xmm_xmmm128 = 1405 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vcvttps2dq_xmm_xmmm128 = 1406 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vcvttps2dq_ymm_ymmm256 = 1407 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vcvttps2dq_xmm_k1z_xmmm128b32 = 1408 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vcvttps2dq_ymm_k1z_ymmm256b32 = 1409 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vcvttps2dq_zmm_k1z_zmmm512b32_sae = 1410 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Subps_xmm_xmmm128 = 1411 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vsubps_xmm_xmm_xmmm128 = 1412 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vsubps_ymm_ymm_ymmm256 = 1413 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vsubps_xmm_k1z_xmm_xmmm128b32 = 1414 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vsubps_ymm_k1z_ymm_ymmm256b32 = 1415 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vsubps_zmm_k1z_zmm_zmmm512b32_er = 1416 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Subpd_xmm_xmmm128 = 1417 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vsubpd_xmm_xmm_xmmm128 = 1418 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vsubpd_ymm_ymm_ymmm256 = 1419 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vsubpd_xmm_k1z_xmm_xmmm128b64 = 1420 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vsubpd_ymm_k1z_ymm_ymmm256b64 = 1421 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vsubpd_zmm_k1z_zmm_zmmm512b64_er = 1422 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Subss_xmm_xmmm32 = 1423 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vsubss_xmm_xmm_xmmm32 = 1424 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vsubss_xmm_k1z_xmm_xmmm32_er = 1425 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Subsd_xmm_xmmm64 = 1426 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vsubsd_xmm_xmm_xmmm64 = 1427 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vsubsd_xmm_k1z_xmm_xmmm64_er = 1428 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Minps_xmm_xmmm128 = 1429 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vminps_xmm_xmm_xmmm128 = 1430 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vminps_ymm_ymm_ymmm256 = 1431 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vminps_xmm_k1z_xmm_xmmm128b32 = 1432 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vminps_ymm_k1z_ymm_ymmm256b32 = 1433 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vminps_zmm_k1z_zmm_zmmm512b32_sae = 1434 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Minpd_xmm_xmmm128 = 1435 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vminpd_xmm_xmm_xmmm128 = 1436 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vminpd_ymm_ymm_ymmm256 = 1437 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vminpd_xmm_k1z_xmm_xmmm128b64 = 1438 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vminpd_ymm_k1z_ymm_ymmm256b64 = 1439 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vminpd_zmm_k1z_zmm_zmmm512b64_sae = 1440 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Minss_xmm_xmmm32 = 1441 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vminss_xmm_xmm_xmmm32 = 1442 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vminss_xmm_k1z_xmm_xmmm32_sae = 1443 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Minsd_xmm_xmmm64 = 1444 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vminsd_xmm_xmm_xmmm64 = 1445 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vminsd_xmm_k1z_xmm_xmmm64_sae = 1446 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Divps_xmm_xmmm128 = 1447 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vdivps_xmm_xmm_xmmm128 = 1448 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vdivps_ymm_ymm_ymmm256 = 1449 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vdivps_xmm_k1z_xmm_xmmm128b32 = 1450 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vdivps_ymm_k1z_ymm_ymmm256b32 = 1451 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vdivps_zmm_k1z_zmm_zmmm512b32_er = 1452 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Divpd_xmm_xmmm128 = 1453 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vdivpd_xmm_xmm_xmmm128 = 1454 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vdivpd_ymm_ymm_ymmm256 = 1455 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vdivpd_xmm_k1z_xmm_xmmm128b64 = 1456 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vdivpd_ymm_k1z_ymm_ymmm256b64 = 1457 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vdivpd_zmm_k1z_zmm_zmmm512b64_er = 1458 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Divss_xmm_xmmm32 = 1459 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vdivss_xmm_xmm_xmmm32 = 1460 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vdivss_xmm_k1z_xmm_xmmm32_er = 1461 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Divsd_xmm_xmmm64 = 1462 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vdivsd_xmm_xmm_xmmm64 = 1463 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vdivsd_xmm_k1z_xmm_xmmm64_er = 1464 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Maxps_xmm_xmmm128 = 1465 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vmaxps_xmm_xmm_xmmm128 = 1466 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vmaxps_ymm_ymm_ymmm256 = 1467 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vmaxps_xmm_k1z_xmm_xmmm128b32 = 1468 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vmaxps_ymm_k1z_ymm_ymmm256b32 = 1469 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vmaxps_zmm_k1z_zmm_zmmm512b32_sae = 1470 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Maxpd_xmm_xmmm128 = 1471 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vmaxpd_xmm_xmm_xmmm128 = 1472 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vmaxpd_ymm_ymm_ymmm256 = 1473 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vmaxpd_xmm_k1z_xmm_xmmm128b64 = 1474 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vmaxpd_ymm_k1z_ymm_ymmm256b64 = 1475 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vmaxpd_zmm_k1z_zmm_zmmm512b64_sae = 1476 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Maxss_xmm_xmmm32 = 1477 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vmaxss_xmm_xmm_xmmm32 = 1478 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vmaxss_xmm_k1z_xmm_xmmm32_sae = 1479 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Maxsd_xmm_xmmm64 = 1480 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vmaxsd_xmm_xmm_xmmm64 = 1481 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vmaxsd_xmm_k1z_xmm_xmmm64_sae = 1482 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Punpcklbw_mm_mmm32 = 1483 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Punpcklbw_xmm_xmmm128 = 1484 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpunpcklbw_xmm_xmm_xmmm128 = 1485 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpunpcklbw_ymm_ymm_ymmm256 = 1486 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpunpcklbw_xmm_k1z_xmm_xmmm128 = 1487 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpunpcklbw_ymm_k1z_ymm_ymmm256 = 1488 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpunpcklbw_zmm_k1z_zmm_zmmm512 = 1489 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Punpcklwd_mm_mmm32 = 1490 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Punpcklwd_xmm_xmmm128 = 1491 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpunpcklwd_xmm_xmm_xmmm128 = 1492 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpunpcklwd_ymm_ymm_ymmm256 = 1493 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpunpcklwd_xmm_k1z_xmm_xmmm128 = 1494 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpunpcklwd_ymm_k1z_ymm_ymmm256 = 1495 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpunpcklwd_zmm_k1z_zmm_zmmm512 = 1496 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Punpckldq_mm_mmm32 = 1497 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Punpckldq_xmm_xmmm128 = 1498 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpunpckldq_xmm_xmm_xmmm128 = 1499 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpunpckldq_ymm_ymm_ymmm256 = 1500 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpunpckldq_xmm_k1z_xmm_xmmm128b32 = 1501 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpunpckldq_ymm_k1z_ymm_ymmm256b32 = 1502 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpunpckldq_zmm_k1z_zmm_zmmm512b32 = 1503 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Packsswb_mm_mmm64 = 1504 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Packsswb_xmm_xmmm128 = 1505 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpacksswb_xmm_xmm_xmmm128 = 1506 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpacksswb_ymm_ymm_ymmm256 = 1507 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpacksswb_xmm_k1z_xmm_xmmm128 = 1508 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpacksswb_ymm_k1z_ymm_ymmm256 = 1509 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpacksswb_zmm_k1z_zmm_zmmm512 = 1510 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Pcmpgtb_mm_mmm64 = 1511 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Pcmpgtb_xmm_xmmm128 = 1512 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpcmpgtb_xmm_xmm_xmmm128 = 1513 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpcmpgtb_ymm_ymm_ymmm256 = 1514 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpcmpgtb_kr_k1_xmm_xmmm128 = 1515 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpcmpgtb_kr_k1_ymm_ymmm256 = 1516 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpcmpgtb_kr_k1_zmm_zmmm512 = 1517 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Pcmpgtw_mm_mmm64 = 1518 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Pcmpgtw_xmm_xmmm128 = 1519 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpcmpgtw_xmm_xmm_xmmm128 = 1520 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpcmpgtw_ymm_ymm_ymmm256 = 1521 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpcmpgtw_kr_k1_xmm_xmmm128 = 1522 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpcmpgtw_kr_k1_ymm_ymmm256 = 1523 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpcmpgtw_kr_k1_zmm_zmmm512 = 1524 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Pcmpgtd_mm_mmm64 = 1525 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Pcmpgtd_xmm_xmmm128 = 1526 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpcmpgtd_xmm_xmm_xmmm128 = 1527 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpcmpgtd_ymm_ymm_ymmm256 = 1528 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpcmpgtd_kr_k1_xmm_xmmm128b32 = 1529 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpcmpgtd_kr_k1_ymm_ymmm256b32 = 1530 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpcmpgtd_kr_k1_zmm_zmmm512b32 = 1531 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Packuswb_mm_mmm64 = 1532 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Packuswb_xmm_xmmm128 = 1533 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpackuswb_xmm_xmm_xmmm128 = 1534 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpackuswb_ymm_ymm_ymmm256 = 1535 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpackuswb_xmm_k1z_xmm_xmmm128 = 1536 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpackuswb_ymm_k1z_ymm_ymmm256 = 1537 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpackuswb_zmm_k1z_zmm_zmmm512 = 1538 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Punpckhbw_mm_mmm64 = 1539 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Punpckhbw_xmm_xmmm128 = 1540 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpunpckhbw_xmm_xmm_xmmm128 = 1541 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpunpckhbw_ymm_ymm_ymmm256 = 1542 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpunpckhbw_xmm_k1z_xmm_xmmm128 = 1543 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpunpckhbw_ymm_k1z_ymm_ymmm256 = 1544 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpunpckhbw_zmm_k1z_zmm_zmmm512 = 1545 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Punpckhwd_mm_mmm64 = 1546 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Punpckhwd_xmm_xmmm128 = 1547 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpunpckhwd_xmm_xmm_xmmm128 = 1548 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpunpckhwd_ymm_ymm_ymmm256 = 1549 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpunpckhwd_xmm_k1z_xmm_xmmm128 = 1550 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpunpckhwd_ymm_k1z_ymm_ymmm256 = 1551 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpunpckhwd_zmm_k1z_zmm_zmmm512 = 1552 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Punpckhdq_mm_mmm64 = 1553 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Punpckhdq_xmm_xmmm128 = 1554 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpunpckhdq_xmm_xmm_xmmm128 = 1555 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpunpckhdq_ymm_ymm_ymmm256 = 1556 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpunpckhdq_xmm_k1z_xmm_xmmm128b32 = 1557 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpunpckhdq_ymm_k1z_ymm_ymmm256b32 = 1558 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpunpckhdq_zmm_k1z_zmm_zmmm512b32 = 1559 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Packssdw_mm_mmm64 = 1560 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Packssdw_xmm_xmmm128 = 1561 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpackssdw_xmm_xmm_xmmm128 = 1562 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpackssdw_ymm_ymm_ymmm256 = 1563 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpackssdw_xmm_k1z_xmm_xmmm128b32 = 1564 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpackssdw_ymm_k1z_ymm_ymmm256b32 = 1565 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpackssdw_zmm_k1z_zmm_zmmm512b32 = 1566 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Punpcklqdq_xmm_xmmm128 = 1567 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpunpcklqdq_xmm_xmm_xmmm128 = 1568 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpunpcklqdq_ymm_ymm_ymmm256 = 1569 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpunpcklqdq_xmm_k1z_xmm_xmmm128b64 = 1570 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpunpcklqdq_ymm_k1z_ymm_ymmm256b64 = 1571 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpunpcklqdq_zmm_k1z_zmm_zmmm512b64 = 1572 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Punpckhqdq_xmm_xmmm128 = 1573 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpunpckhqdq_xmm_xmm_xmmm128 = 1574 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpunpckhqdq_ymm_ymm_ymmm256 = 1575 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpunpckhqdq_xmm_k1z_xmm_xmmm128b64 = 1576 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpunpckhqdq_ymm_k1z_ymm_ymmm256b64 = 1577 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpunpckhqdq_zmm_k1z_zmm_zmmm512b64 = 1578 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Movd_mm_rm32 = 1579 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Movq_mm_rm64 = 1580 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Movd_xmm_rm32 = 1581 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Movq_xmm_rm64 = 1582 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vmovd_xmm_rm32 = 1583 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vmovq_xmm_rm64 = 1584 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vmovd_xmm_rm32 = 1585 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vmovq_xmm_rm64 = 1586 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Movq_mm_mmm64 = 1587 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Movdqa_xmm_xmmm128 = 1588 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vmovdqa_xmm_xmmm128 = 1589 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vmovdqa_ymm_ymmm256 = 1590 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vmovdqa32_xmm_k1z_xmmm128 = 1591 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vmovdqa32_ymm_k1z_ymmm256 = 1592 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vmovdqa32_zmm_k1z_zmmm512 = 1593 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vmovdqa64_xmm_k1z_xmmm128 = 1594 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vmovdqa64_ymm_k1z_ymmm256 = 1595 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vmovdqa64_zmm_k1z_zmmm512 = 1596 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Movdqu_xmm_xmmm128 = 1597 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vmovdqu_xmm_xmmm128 = 1598 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vmovdqu_ymm_ymmm256 = 1599 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vmovdqu32_xmm_k1z_xmmm128 = 1600 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vmovdqu32_ymm_k1z_ymmm256 = 1601 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vmovdqu32_zmm_k1z_zmmm512 = 1602 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vmovdqu64_xmm_k1z_xmmm128 = 1603 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vmovdqu64_ymm_k1z_ymmm256 = 1604 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vmovdqu64_zmm_k1z_zmmm512 = 1605 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vmovdqu8_xmm_k1z_xmmm128 = 1606 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vmovdqu8_ymm_k1z_ymmm256 = 1607 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vmovdqu8_zmm_k1z_zmmm512 = 1608 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vmovdqu16_xmm_k1z_xmmm128 = 1609 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vmovdqu16_ymm_k1z_ymmm256 = 1610 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vmovdqu16_zmm_k1z_zmmm512 = 1611 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Pshufw_mm_mmm64_imm8 = 1612 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Pshufd_xmm_xmmm128_imm8 = 1613 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpshufd_xmm_xmmm128_imm8 = 1614 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpshufd_ymm_ymmm256_imm8 = 1615 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpshufd_xmm_k1z_xmmm128b32_imm8 = 1616 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpshufd_ymm_k1z_ymmm256b32_imm8 = 1617 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpshufd_zmm_k1z_zmmm512b32_imm8 = 1618 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Pshufhw_xmm_xmmm128_imm8 = 1619 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpshufhw_xmm_xmmm128_imm8 = 1620 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpshufhw_ymm_ymmm256_imm8 = 1621 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpshufhw_xmm_k1z_xmmm128_imm8 = 1622 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpshufhw_ymm_k1z_ymmm256_imm8 = 1623 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpshufhw_zmm_k1z_zmmm512_imm8 = 1624 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Pshuflw_xmm_xmmm128_imm8 = 1625 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpshuflw_xmm_xmmm128_imm8 = 1626 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpshuflw_ymm_ymmm256_imm8 = 1627 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpshuflw_xmm_k1z_xmmm128_imm8 = 1628 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpshuflw_ymm_k1z_ymmm256_imm8 = 1629 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpshuflw_zmm_k1z_zmmm512_imm8 = 1630 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Psrlw_mm_imm8 = 1631 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Psrlw_xmm_imm8 = 1632 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpsrlw_xmm_xmm_imm8 = 1633 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpsrlw_ymm_ymm_imm8 = 1634 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpsrlw_xmm_k1z_xmmm128_imm8 = 1635 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpsrlw_ymm_k1z_ymmm256_imm8 = 1636 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpsrlw_zmm_k1z_zmmm512_imm8 = 1637 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Psraw_mm_imm8 = 1638 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Psraw_xmm_imm8 = 1639 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpsraw_xmm_xmm_imm8 = 1640 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpsraw_ymm_ymm_imm8 = 1641 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpsraw_xmm_k1z_xmmm128_imm8 = 1642 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpsraw_ymm_k1z_ymmm256_imm8 = 1643 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpsraw_zmm_k1z_zmmm512_imm8 = 1644 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Psllw_mm_imm8 = 1645 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Psllw_xmm_imm8 = 1646 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpsllw_xmm_xmm_imm8 = 1647 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpsllw_ymm_ymm_imm8 = 1648 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpsllw_xmm_k1z_xmmm128_imm8 = 1649 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpsllw_ymm_k1z_ymmm256_imm8 = 1650 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpsllw_zmm_k1z_zmmm512_imm8 = 1651 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vprord_xmm_k1z_xmmm128b32_imm8 = 1652 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vprord_ymm_k1z_ymmm256b32_imm8 = 1653 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vprord_zmm_k1z_zmmm512b32_imm8 = 1654 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vprorq_xmm_k1z_xmmm128b64_imm8 = 1655 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vprorq_ymm_k1z_ymmm256b64_imm8 = 1656 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vprorq_zmm_k1z_zmmm512b64_imm8 = 1657 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vprold_xmm_k1z_xmmm128b32_imm8 = 1658 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vprold_ymm_k1z_ymmm256b32_imm8 = 1659 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vprold_zmm_k1z_zmmm512b32_imm8 = 1660 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vprolq_xmm_k1z_xmmm128b64_imm8 = 1661 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vprolq_ymm_k1z_ymmm256b64_imm8 = 1662 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vprolq_zmm_k1z_zmmm512b64_imm8 = 1663 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Psrld_mm_imm8 = 1664 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Psrld_xmm_imm8 = 1665 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpsrld_xmm_xmm_imm8 = 1666 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpsrld_ymm_ymm_imm8 = 1667 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpsrld_xmm_k1z_xmmm128b32_imm8 = 1668 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpsrld_ymm_k1z_ymmm256b32_imm8 = 1669 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpsrld_zmm_k1z_zmmm512b32_imm8 = 1670 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Psrad_mm_imm8 = 1671 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Psrad_xmm_imm8 = 1672 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpsrad_xmm_xmm_imm8 = 1673 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpsrad_ymm_ymm_imm8 = 1674 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpsrad_xmm_k1z_xmmm128b32_imm8 = 1675 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpsrad_ymm_k1z_ymmm256b32_imm8 = 1676 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpsrad_zmm_k1z_zmmm512b32_imm8 = 1677 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpsraq_xmm_k1z_xmmm128b64_imm8 = 1678 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpsraq_ymm_k1z_ymmm256b64_imm8 = 1679 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpsraq_zmm_k1z_zmmm512b64_imm8 = 1680 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Pslld_mm_imm8 = 1681 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Pslld_xmm_imm8 = 1682 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpslld_xmm_xmm_imm8 = 1683 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpslld_ymm_ymm_imm8 = 1684 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpslld_xmm_k1z_xmmm128b32_imm8 = 1685 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpslld_ymm_k1z_ymmm256b32_imm8 = 1686 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpslld_zmm_k1z_zmmm512b32_imm8 = 1687 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Psrlq_mm_imm8 = 1688 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Psrlq_xmm_imm8 = 1689 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpsrlq_xmm_xmm_imm8 = 1690 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpsrlq_ymm_ymm_imm8 = 1691 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpsrlq_xmm_k1z_xmmm128b64_imm8 = 1692 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpsrlq_ymm_k1z_ymmm256b64_imm8 = 1693 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpsrlq_zmm_k1z_zmmm512b64_imm8 = 1694 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Psrldq_xmm_imm8 = 1695 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpsrldq_xmm_xmm_imm8 = 1696 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpsrldq_ymm_ymm_imm8 = 1697 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpsrldq_xmm_xmmm128_imm8 = 1698 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpsrldq_ymm_ymmm256_imm8 = 1699 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpsrldq_zmm_zmmm512_imm8 = 1700 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Psllq_mm_imm8 = 1701 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Psllq_xmm_imm8 = 1702 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpsllq_xmm_xmm_imm8 = 1703 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpsllq_ymm_ymm_imm8 = 1704 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpsllq_xmm_k1z_xmmm128b64_imm8 = 1705 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpsllq_ymm_k1z_ymmm256b64_imm8 = 1706 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpsllq_zmm_k1z_zmmm512b64_imm8 = 1707 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Pslldq_xmm_imm8 = 1708 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpslldq_xmm_xmm_imm8 = 1709 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpslldq_ymm_ymm_imm8 = 1710 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpslldq_xmm_xmmm128_imm8 = 1711 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpslldq_ymm_ymmm256_imm8 = 1712 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpslldq_zmm_zmmm512_imm8 = 1713 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Pcmpeqb_mm_mmm64 = 1714 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Pcmpeqb_xmm_xmmm128 = 1715 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpcmpeqb_xmm_xmm_xmmm128 = 1716 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpcmpeqb_ymm_ymm_ymmm256 = 1717 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpcmpeqb_kr_k1_xmm_xmmm128 = 1718 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpcmpeqb_kr_k1_ymm_ymmm256 = 1719 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpcmpeqb_kr_k1_zmm_zmmm512 = 1720 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Pcmpeqw_mm_mmm64 = 1721 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Pcmpeqw_xmm_xmmm128 = 1722 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpcmpeqw_xmm_xmm_xmmm128 = 1723 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpcmpeqw_ymm_ymm_ymmm256 = 1724 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpcmpeqw_kr_k1_xmm_xmmm128 = 1725 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpcmpeqw_kr_k1_ymm_ymmm256 = 1726 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpcmpeqw_kr_k1_zmm_zmmm512 = 1727 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Pcmpeqd_mm_mmm64 = 1728 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Pcmpeqd_xmm_xmmm128 = 1729 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpcmpeqd_xmm_xmm_xmmm128 = 1730 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpcmpeqd_ymm_ymm_ymmm256 = 1731 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpcmpeqd_kr_k1_xmm_xmmm128b32 = 1732 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpcmpeqd_kr_k1_ymm_ymmm256b32 = 1733 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpcmpeqd_kr_k1_zmm_zmmm512b32 = 1734 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Emms = 1735 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vzeroupper = 1736 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vzeroall = 1737 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Vmread_rm32_r32 = 1738 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Vmread_rm64_r64 = 1739 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vcvttps2udq_xmm_k1z_xmmm128b32 = 1740 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vcvttps2udq_ymm_k1z_ymmm256b32 = 1741 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vcvttps2udq_zmm_k1z_zmmm512b32_sae = 1742 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vcvttpd2udq_xmm_k1z_xmmm128b64 = 1743 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vcvttpd2udq_xmm_k1z_ymmm256b64 = 1744 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vcvttpd2udq_ymm_k1z_zmmm512b64_sae = 1745 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Extrq_xmm_imm8_imm8 = 1746 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vcvttps2uqq_xmm_k1z_xmmm64b32 = 1747 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vcvttps2uqq_ymm_k1z_xmmm128b32 = 1748 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vcvttps2uqq_zmm_k1z_ymmm256b32_sae = 1749 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vcvttpd2uqq_xmm_k1z_xmmm128b64 = 1750 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vcvttpd2uqq_ymm_k1z_ymmm256b64 = 1751 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vcvttpd2uqq_zmm_k1z_zmmm512b64_sae = 1752 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vcvttss2usi_r32_xmmm32_sae = 1753 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vcvttss2usi_r64_xmmm32_sae = 1754 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Insertq_xmm_xmm_imm8_imm8 = 1755 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vcvttsd2usi_r32_xmmm64_sae = 1756 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vcvttsd2usi_r64_xmmm64_sae = 1757 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Vmwrite_r32_rm32 = 1758 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Vmwrite_r64_rm64 = 1759 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vcvtps2udq_xmm_k1z_xmmm128b32 = 1760 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vcvtps2udq_ymm_k1z_ymmm256b32 = 1761 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vcvtps2udq_zmm_k1z_zmmm512b32_er = 1762 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vcvtpd2udq_xmm_k1z_xmmm128b64 = 1763 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vcvtpd2udq_xmm_k1z_ymmm256b64 = 1764 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vcvtpd2udq_ymm_k1z_zmmm512b64_er = 1765 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Extrq_xmm_xmm = 1766 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vcvtps2uqq_xmm_k1z_xmmm64b32 = 1767 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vcvtps2uqq_ymm_k1z_xmmm128b32 = 1768 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vcvtps2uqq_zmm_k1z_ymmm256b32_er = 1769 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vcvtpd2uqq_xmm_k1z_xmmm128b64 = 1770 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vcvtpd2uqq_ymm_k1z_ymmm256b64 = 1771 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vcvtpd2uqq_zmm_k1z_zmmm512b64_er = 1772 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vcvtss2usi_r32_xmmm32_er = 1773 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vcvtss2usi_r64_xmmm32_er = 1774 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Insertq_xmm_xmm = 1775 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vcvtsd2usi_r32_xmmm64_er = 1776 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vcvtsd2usi_r64_xmmm64_er = 1777 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vcvttps2qq_xmm_k1z_xmmm64b32 = 1778 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vcvttps2qq_ymm_k1z_xmmm128b32 = 1779 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vcvttps2qq_zmm_k1z_ymmm256b32_sae = 1780 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vcvttpd2qq_xmm_k1z_xmmm128b64 = 1781 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vcvttpd2qq_ymm_k1z_ymmm256b64 = 1782 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vcvttpd2qq_zmm_k1z_zmmm512b64_sae = 1783 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vcvtudq2pd_xmm_k1z_xmmm64b32 = 1784 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vcvtudq2pd_ymm_k1z_xmmm128b32 = 1785 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vcvtudq2pd_zmm_k1z_ymmm256b32_er = 1786 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vcvtuqq2pd_xmm_k1z_xmmm128b64 = 1787 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vcvtuqq2pd_ymm_k1z_ymmm256b64 = 1788 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vcvtuqq2pd_zmm_k1z_zmmm512b64_er = 1789 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vcvtudq2ps_xmm_k1z_xmmm128b32 = 1790 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vcvtudq2ps_ymm_k1z_ymmm256b32 = 1791 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vcvtudq2ps_zmm_k1z_zmmm512b32_er = 1792 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vcvtuqq2ps_xmm_k1z_xmmm128b64 = 1793 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vcvtuqq2ps_xmm_k1z_ymmm256b64 = 1794 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vcvtuqq2ps_ymm_k1z_zmmm512b64_er = 1795 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vcvtps2qq_xmm_k1z_xmmm64b32 = 1796 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vcvtps2qq_ymm_k1z_xmmm128b32 = 1797 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vcvtps2qq_zmm_k1z_ymmm256b32_er = 1798 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vcvtpd2qq_xmm_k1z_xmmm128b64 = 1799 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vcvtpd2qq_ymm_k1z_ymmm256b64 = 1800 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vcvtpd2qq_zmm_k1z_zmmm512b64_er = 1801 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vcvtusi2ss_xmm_xmm_rm32_er = 1802 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vcvtusi2ss_xmm_xmm_rm64_er = 1803 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vcvtusi2sd_xmm_xmm_rm32_er = 1804 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vcvtusi2sd_xmm_xmm_rm64_er = 1805 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Haddpd_xmm_xmmm128 = 1806 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vhaddpd_xmm_xmm_xmmm128 = 1807 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vhaddpd_ymm_ymm_ymmm256 = 1808 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Haddps_xmm_xmmm128 = 1809 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vhaddps_xmm_xmm_xmmm128 = 1810 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vhaddps_ymm_ymm_ymmm256 = 1811 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Hsubpd_xmm_xmmm128 = 1812 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vhsubpd_xmm_xmm_xmmm128 = 1813 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vhsubpd_ymm_ymm_ymmm256 = 1814 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Hsubps_xmm_xmmm128 = 1815 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vhsubps_xmm_xmm_xmmm128 = 1816 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vhsubps_ymm_ymm_ymmm256 = 1817 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Movd_rm32_mm = 1818 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Movq_rm64_mm = 1819 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Movd_rm32_xmm = 1820 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Movq_rm64_xmm = 1821 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vmovd_rm32_xmm = 1822 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vmovq_rm64_xmm = 1823 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vmovd_rm32_xmm = 1824 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vmovq_rm64_xmm = 1825 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Movq_xmm_xmmm64 = 1826 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vmovq_xmm_xmmm64 = 1827 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vmovq_xmm_xmmm64 = 1828 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Movq_mmm64_mm = 1829 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Movdqa_xmmm128_xmm = 1830 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vmovdqa_xmmm128_xmm = 1831 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vmovdqa_ymmm256_ymm = 1832 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vmovdqa32_xmmm128_k1z_xmm = 1833 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vmovdqa32_ymmm256_k1z_ymm = 1834 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vmovdqa32_zmmm512_k1z_zmm = 1835 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vmovdqa64_xmmm128_k1z_xmm = 1836 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vmovdqa64_ymmm256_k1z_ymm = 1837 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vmovdqa64_zmmm512_k1z_zmm = 1838 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Movdqu_xmmm128_xmm = 1839 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vmovdqu_xmmm128_xmm = 1840 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vmovdqu_ymmm256_ymm = 1841 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vmovdqu32_xmmm128_k1z_xmm = 1842 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vmovdqu32_ymmm256_k1z_ymm = 1843 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vmovdqu32_zmmm512_k1z_zmm = 1844 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vmovdqu64_xmmm128_k1z_xmm = 1845 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vmovdqu64_ymmm256_k1z_ymm = 1846 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vmovdqu64_zmmm512_k1z_zmm = 1847 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vmovdqu8_xmmm128_k1z_xmm = 1848 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vmovdqu8_ymmm256_k1z_ymm = 1849 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vmovdqu8_zmmm512_k1z_zmm = 1850 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vmovdqu16_xmmm128_k1z_xmm = 1851 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vmovdqu16_ymmm256_k1z_ymm = 1852 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vmovdqu16_zmmm512_k1z_zmm = 1853 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Jo_rel16 = 1854 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Jo_rel32_32 = 1855 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Jo_rel32_64 = 1856 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Jno_rel16 = 1857 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Jno_rel32_32 = 1858 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Jno_rel32_64 = 1859 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Jb_rel16 = 1860 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Jb_rel32_32 = 1861 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Jb_rel32_64 = 1862 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Jae_rel16 = 1863 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Jae_rel32_32 = 1864 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Jae_rel32_64 = 1865 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Je_rel16 = 1866 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Je_rel32_32 = 1867 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Je_rel32_64 = 1868 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Jne_rel16 = 1869 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Jne_rel32_32 = 1870 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Jne_rel32_64 = 1871 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Jbe_rel16 = 1872 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Jbe_rel32_32 = 1873 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Jbe_rel32_64 = 1874 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Ja_rel16 = 1875 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Ja_rel32_32 = 1876 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Ja_rel32_64 = 1877 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Js_rel16 = 1878 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Js_rel32_32 = 1879 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Js_rel32_64 = 1880 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Jns_rel16 = 1881 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Jns_rel32_32 = 1882 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Jns_rel32_64 = 1883 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Jp_rel16 = 1884 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Jp_rel32_32 = 1885 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Jp_rel32_64 = 1886 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Jnp_rel16 = 1887 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Jnp_rel32_32 = 1888 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Jnp_rel32_64 = 1889 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Jl_rel16 = 1890 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Jl_rel32_32 = 1891 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Jl_rel32_64 = 1892 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Jge_rel16 = 1893 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Jge_rel32_32 = 1894 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Jge_rel32_64 = 1895 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Jle_rel16 = 1896 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Jle_rel32_32 = 1897 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Jle_rel32_64 = 1898 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Jg_rel16 = 1899 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Jg_rel32_32 = 1900 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Jg_rel32_64 = 1901 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Seto_rm8 = 1902 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Setno_rm8 = 1903 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Setb_rm8 = 1904 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Setae_rm8 = 1905 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Sete_rm8 = 1906 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Setne_rm8 = 1907 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Setbe_rm8 = 1908 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Seta_rm8 = 1909 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Sets_rm8 = 1910 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Setns_rm8 = 1911 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Setp_rm8 = 1912 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Setnp_rm8 = 1913 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Setl_rm8 = 1914 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Setge_rm8 = 1915 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Setle_rm8 = 1916 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Setg_rm8 = 1917 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Kmovw_kr_km16 = 1918 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Kmovq_kr_km64 = 1919 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Kmovb_kr_km8 = 1920 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Kmovd_kr_km32 = 1921 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Kmovw_m16_kr = 1922 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Kmovq_m64_kr = 1923 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Kmovb_m8_kr = 1924 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Kmovd_m32_kr = 1925 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Kmovw_kr_r32 = 1926 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Kmovb_kr_r32 = 1927 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Kmovd_kr_r32 = 1928 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Kmovq_kr_r64 = 1929 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Kmovw_r32_kr = 1930 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Kmovb_r32_kr = 1931 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Kmovd_r32_kr = 1932 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Kmovq_r64_kr = 1933 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Kortestw_kr_kr = 1934 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Kortestq_kr_kr = 1935 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Kortestb_kr_kr = 1936 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Kortestd_kr_kr = 1937 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Ktestw_kr_kr = 1938 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Ktestq_kr_kr = 1939 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Ktestb_kr_kr = 1940 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Ktestd_kr_kr = 1941 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Pushw_FS = 1942 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Pushd_FS = 1943 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Pushq_FS = 1944 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Popw_FS = 1945 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Popd_FS = 1946 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Popq_FS = 1947 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Cpuid = 1948 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Bt_rm16_r16 = 1949 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Bt_rm32_r32 = 1950 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Bt_rm64_r64 = 1951 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Shld_rm16_r16_imm8 = 1952 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Shld_rm32_r32_imm8 = 1953 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Shld_rm64_r64_imm8 = 1954 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Shld_rm16_r16_CL = 1955 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Shld_rm32_r32_CL = 1956 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Shld_rm64_r64_CL = 1957 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Montmul_16 = 1958 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Montmul_32 = 1959 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Montmul_64 = 1960 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Xsha1_16 = 1961 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Xsha1_32 = 1962 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Xsha1_64 = 1963 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Xsha256_16 = 1964 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Xsha256_32 = 1965 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Xsha256_64 = 1966 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Xbts_r16_rm16 = 1967 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Xbts_r32_rm32 = 1968 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Xstore_16 = 1969 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Xstore_32 = 1970 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Xstore_64 = 1971 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Xcryptecb_16 = 1972 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Xcryptecb_32 = 1973 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Xcryptecb_64 = 1974 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Xcryptcbc_16 = 1975 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Xcryptcbc_32 = 1976 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Xcryptcbc_64 = 1977 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Xcryptctr_16 = 1978 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Xcryptctr_32 = 1979 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Xcryptctr_64 = 1980 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Xcryptcfb_16 = 1981 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Xcryptcfb_32 = 1982 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Xcryptcfb_64 = 1983 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Xcryptofb_16 = 1984 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Xcryptofb_32 = 1985 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Xcryptofb_64 = 1986 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Ibts_rm16_r16 = 1987 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Ibts_rm32_r32 = 1988 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Cmpxchg486_rm8_r8 = 1989 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Cmpxchg486_rm16_r16 = 1990 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Cmpxchg486_rm32_r32 = 1991 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Pushw_GS = 1992 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Pushd_GS = 1993 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Pushq_GS = 1994 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Popw_GS = 1995 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Popd_GS = 1996 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Popq_GS = 1997 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Rsm = 1998 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Bts_rm16_r16 = 1999 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Bts_rm32_r32 = 2000 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Bts_rm64_r64 = 2001 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Shrd_rm16_r16_imm8 = 2002 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Shrd_rm32_r32_imm8 = 2003 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Shrd_rm64_r64_imm8 = 2004 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Shrd_rm16_r16_CL = 2005 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Shrd_rm32_r32_CL = 2006 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Shrd_rm64_r64_CL = 2007 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Fxsave_m512byte = 2008 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Fxsave64_m512byte = 2009 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Rdfsbase_r32 = 2010 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Rdfsbase_r64 = 2011 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Fxrstor_m512byte = 2012 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Fxrstor64_m512byte = 2013 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Rdgsbase_r32 = 2014 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Rdgsbase_r64 = 2015 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Ldmxcsr_m32 = 2016 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Wrfsbase_r32 = 2017 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Wrfsbase_r64 = 2018 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vldmxcsr_m32 = 2019 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Stmxcsr_m32 = 2020 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Wrgsbase_r32 = 2021 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Wrgsbase_r64 = 2022 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vstmxcsr_m32 = 2023 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Xsave_mem = 2024 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Xsave64_mem = 2025 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Ptwrite_rm32 = 2026 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Ptwrite_rm64 = 2027 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Xrstor_mem = 2028 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Xrstor64_mem = 2029 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Incsspd_r32 = 2030 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Incsspq_r64 = 2031 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Xsaveopt_mem = 2032 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Xsaveopt64_mem = 2033 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Clwb_m8 = 2034 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Tpause_r32 = 2035 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Tpause_r64 = 2036 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Clrssbsy_m64 = 2037 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Umonitor_r16 = 2038 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Umonitor_r32 = 2039 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Umonitor_r64 = 2040 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Umwait_r32 = 2041 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Umwait_r64 = 2042 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Clflush_m8 = 2043 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Clflushopt_m8 = 2044 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Lfence = 2045 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Lfence_E9 = 2046 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Lfence_EA = 2047 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Lfence_EB = 2048 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Lfence_EC = 2049 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Lfence_ED = 2050 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Lfence_EE = 2051 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Lfence_EF = 2052 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Mfence = 2053 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Mfence_F1 = 2054 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Mfence_F2 = 2055 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Mfence_F3 = 2056 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Mfence_F4 = 2057 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Mfence_F5 = 2058 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Mfence_F6 = 2059 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Mfence_F7 = 2060 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Sfence = 2061 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Sfence_F9 = 2062 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Sfence_FA = 2063 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Sfence_FB = 2064 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Sfence_FC = 2065 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Sfence_FD = 2066 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Sfence_FE = 2067 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Sfence_FF = 2068 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Pcommit = 2069 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Imul_r16_rm16 = 2070 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Imul_r32_rm32 = 2071 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Imul_r64_rm64 = 2072 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Cmpxchg_rm8_r8 = 2073 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Cmpxchg_rm16_r16 = 2074 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Cmpxchg_rm32_r32 = 2075 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Cmpxchg_rm64_r64 = 2076 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Lss_r16_m1616 = 2077 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Lss_r32_m1632 = 2078 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Lss_r64_m1664 = 2079 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Btr_rm16_r16 = 2080 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Btr_rm32_r32 = 2081 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Btr_rm64_r64 = 2082 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Lfs_r16_m1616 = 2083 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Lfs_r32_m1632 = 2084 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Lfs_r64_m1664 = 2085 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Lgs_r16_m1616 = 2086 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Lgs_r32_m1632 = 2087 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Lgs_r64_m1664 = 2088 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Movzx_r16_rm8 = 2089 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Movzx_r32_rm8 = 2090 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Movzx_r64_rm8 = 2091 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Movzx_r16_rm16 = 2092 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Movzx_r32_rm16 = 2093 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Movzx_r64_rm16 = 2094 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Jmpe_disp16 = 2095 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Jmpe_disp32 = 2096 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Popcnt_r16_rm16 = 2097 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Popcnt_r32_rm32 = 2098 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Popcnt_r64_rm64 = 2099 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Ud1_r16_rm16 = 2100 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Ud1_r32_rm32 = 2101 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Ud1_r64_rm64 = 2102 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Bt_rm16_imm8 = 2103 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Bt_rm32_imm8 = 2104 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Bt_rm64_imm8 = 2105 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Bts_rm16_imm8 = 2106 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Bts_rm32_imm8 = 2107 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Bts_rm64_imm8 = 2108 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Btr_rm16_imm8 = 2109 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Btr_rm32_imm8 = 2110 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Btr_rm64_imm8 = 2111 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Btc_rm16_imm8 = 2112 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Btc_rm32_imm8 = 2113 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Btc_rm64_imm8 = 2114 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Btc_rm16_r16 = 2115 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Btc_rm32_r32 = 2116 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Btc_rm64_r64 = 2117 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Bsf_r16_rm16 = 2118 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Bsf_r32_rm32 = 2119 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Bsf_r64_rm64 = 2120 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Tzcnt_r16_rm16 = 2121 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Tzcnt_r32_rm32 = 2122 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Tzcnt_r64_rm64 = 2123 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Bsr_r16_rm16 = 2124 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Bsr_r32_rm32 = 2125 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Bsr_r64_rm64 = 2126 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Lzcnt_r16_rm16 = 2127 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Lzcnt_r32_rm32 = 2128 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Lzcnt_r64_rm64 = 2129 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Movsx_r16_rm8 = 2130 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Movsx_r32_rm8 = 2131 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Movsx_r64_rm8 = 2132 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Movsx_r16_rm16 = 2133 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Movsx_r32_rm16 = 2134 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Movsx_r64_rm16 = 2135 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Xadd_rm8_r8 = 2136 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Xadd_rm16_r16 = 2137 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Xadd_rm32_r32 = 2138 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Xadd_rm64_r64 = 2139 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Cmpps_xmm_xmmm128_imm8 = 2140 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vcmpps_xmm_xmm_xmmm128_imm8 = 2141 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vcmpps_ymm_ymm_ymmm256_imm8 = 2142 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vcmpps_kr_k1_xmm_xmmm128b32_imm8 = 2143 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vcmpps_kr_k1_ymm_ymmm256b32_imm8 = 2144 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vcmpps_kr_k1_zmm_zmmm512b32_imm8_sae = 2145 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Cmppd_xmm_xmmm128_imm8 = 2146 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vcmppd_xmm_xmm_xmmm128_imm8 = 2147 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vcmppd_ymm_ymm_ymmm256_imm8 = 2148 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vcmppd_kr_k1_xmm_xmmm128b64_imm8 = 2149 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vcmppd_kr_k1_ymm_ymmm256b64_imm8 = 2150 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vcmppd_kr_k1_zmm_zmmm512b64_imm8_sae = 2151 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Cmpss_xmm_xmmm32_imm8 = 2152 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vcmpss_xmm_xmm_xmmm32_imm8 = 2153 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vcmpss_kr_k1_xmm_xmmm32_imm8_sae = 2154 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Cmpsd_xmm_xmmm64_imm8 = 2155 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vcmpsd_xmm_xmm_xmmm64_imm8 = 2156 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vcmpsd_kr_k1_xmm_xmmm64_imm8_sae = 2157 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Movnti_m32_r32 = 2158 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Movnti_m64_r64 = 2159 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Pinsrw_mm_r32m16_imm8 = 2160 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Pinsrw_mm_r64m16_imm8 = 2161 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Pinsrw_xmm_r32m16_imm8 = 2162 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Pinsrw_xmm_r64m16_imm8 = 2163 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpinsrw_xmm_xmm_r32m16_imm8 = 2164 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpinsrw_xmm_xmm_r64m16_imm8 = 2165 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpinsrw_xmm_xmm_r32m16_imm8 = 2166 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpinsrw_xmm_xmm_r64m16_imm8 = 2167 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Pextrw_r32_mm_imm8 = 2168 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Pextrw_r64_mm_imm8 = 2169 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Pextrw_r32_xmm_imm8 = 2170 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Pextrw_r64_xmm_imm8 = 2171 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpextrw_r32_xmm_imm8 = 2172 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpextrw_r64_xmm_imm8 = 2173 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpextrw_r32_xmm_imm8 = 2174 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpextrw_r64_xmm_imm8 = 2175 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Shufps_xmm_xmmm128_imm8 = 2176 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vshufps_xmm_xmm_xmmm128_imm8 = 2177 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vshufps_ymm_ymm_ymmm256_imm8 = 2178 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vshufps_xmm_k1z_xmm_xmmm128b32_imm8 = 2179 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vshufps_ymm_k1z_ymm_ymmm256b32_imm8 = 2180 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vshufps_zmm_k1z_zmm_zmmm512b32_imm8 = 2181 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Shufpd_xmm_xmmm128_imm8 = 2182 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vshufpd_xmm_xmm_xmmm128_imm8 = 2183 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vshufpd_ymm_ymm_ymmm256_imm8 = 2184 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vshufpd_xmm_k1z_xmm_xmmm128b64_imm8 = 2185 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vshufpd_ymm_k1z_ymm_ymmm256b64_imm8 = 2186 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vshufpd_zmm_k1z_zmm_zmmm512b64_imm8 = 2187 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Cmpxchg8b_m64 = 2188 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Cmpxchg16b_m128 = 2189 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Xrstors_mem = 2190 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Xrstors64_mem = 2191 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Xsavec_mem = 2192 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Xsavec64_mem = 2193 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Xsaves_mem = 2194 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Xsaves64_mem = 2195 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Vmptrld_m64 = 2196 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Vmclear_m64 = 2197 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Vmxon_m64 = 2198 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Rdrand_r16 = 2199 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Rdrand_r32 = 2200 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Rdrand_r64 = 2201 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Vmptrst_m64 = 2202 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Rdseed_r16 = 2203 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Rdseed_r32 = 2204 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Rdseed_r64 = 2205 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Rdpid_r32 = 2206 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Rdpid_r64 = 2207 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Bswap_r16 = 2208 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Bswap_r32 = 2209 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Bswap_r64 = 2210 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Addsubpd_xmm_xmmm128 = 2211 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vaddsubpd_xmm_xmm_xmmm128 = 2212 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vaddsubpd_ymm_ymm_ymmm256 = 2213 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Addsubps_xmm_xmmm128 = 2214 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vaddsubps_xmm_xmm_xmmm128 = 2215 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vaddsubps_ymm_ymm_ymmm256 = 2216 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Psrlw_mm_mmm64 = 2217 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Psrlw_xmm_xmmm128 = 2218 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpsrlw_xmm_xmm_xmmm128 = 2219 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpsrlw_ymm_ymm_xmmm128 = 2220 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpsrlw_xmm_k1z_xmm_xmmm128 = 2221 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpsrlw_ymm_k1z_ymm_xmmm128 = 2222 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpsrlw_zmm_k1z_zmm_xmmm128 = 2223 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Psrld_mm_mmm64 = 2224 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Psrld_xmm_xmmm128 = 2225 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpsrld_xmm_xmm_xmmm128 = 2226 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpsrld_ymm_ymm_xmmm128 = 2227 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpsrld_xmm_k1z_xmm_xmmm128 = 2228 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpsrld_ymm_k1z_ymm_xmmm128 = 2229 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpsrld_zmm_k1z_zmm_xmmm128 = 2230 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Psrlq_mm_mmm64 = 2231 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Psrlq_xmm_xmmm128 = 2232 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpsrlq_xmm_xmm_xmmm128 = 2233 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpsrlq_ymm_ymm_xmmm128 = 2234 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpsrlq_xmm_k1z_xmm_xmmm128 = 2235 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpsrlq_ymm_k1z_ymm_xmmm128 = 2236 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpsrlq_zmm_k1z_zmm_xmmm128 = 2237 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Paddq_mm_mmm64 = 2238 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Paddq_xmm_xmmm128 = 2239 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpaddq_xmm_xmm_xmmm128 = 2240 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpaddq_ymm_ymm_ymmm256 = 2241 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpaddq_xmm_k1z_xmm_xmmm128b64 = 2242 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpaddq_ymm_k1z_ymm_ymmm256b64 = 2243 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpaddq_zmm_k1z_zmm_zmmm512b64 = 2244 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Pmullw_mm_mmm64 = 2245 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Pmullw_xmm_xmmm128 = 2246 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpmullw_xmm_xmm_xmmm128 = 2247 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpmullw_ymm_ymm_ymmm256 = 2248 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpmullw_xmm_k1z_xmm_xmmm128 = 2249 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpmullw_ymm_k1z_ymm_ymmm256 = 2250 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpmullw_zmm_k1z_zmm_zmmm512 = 2251 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Movq_xmmm64_xmm = 2252 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vmovq_xmmm64_xmm = 2253 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vmovq_xmmm64_xmm = 2254 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Movq2dq_xmm_mm = 2255 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Movdq2q_mm_xmm = 2256 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Pmovmskb_r32_mm = 2257 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Pmovmskb_r64_mm = 2258 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Pmovmskb_r32_xmm = 2259 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Pmovmskb_r64_xmm = 2260 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpmovmskb_r32_xmm = 2261 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpmovmskb_r64_xmm = 2262 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpmovmskb_r32_ymm = 2263 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpmovmskb_r64_ymm = 2264 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Psubusb_mm_mmm64 = 2265 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Psubusb_xmm_xmmm128 = 2266 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpsubusb_xmm_xmm_xmmm128 = 2267 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpsubusb_ymm_ymm_ymmm256 = 2268 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpsubusb_xmm_k1z_xmm_xmmm128 = 2269 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpsubusb_ymm_k1z_ymm_ymmm256 = 2270 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpsubusb_zmm_k1z_zmm_zmmm512 = 2271 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Psubusw_mm_mmm64 = 2272 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Psubusw_xmm_xmmm128 = 2273 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpsubusw_xmm_xmm_xmmm128 = 2274 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpsubusw_ymm_ymm_ymmm256 = 2275 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpsubusw_xmm_k1z_xmm_xmmm128 = 2276 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpsubusw_ymm_k1z_ymm_ymmm256 = 2277 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpsubusw_zmm_k1z_zmm_zmmm512 = 2278 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Pminub_mm_mmm64 = 2279 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Pminub_xmm_xmmm128 = 2280 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpminub_xmm_xmm_xmmm128 = 2281 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpminub_ymm_ymm_ymmm256 = 2282 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpminub_xmm_k1z_xmm_xmmm128 = 2283 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpminub_ymm_k1z_ymm_ymmm256 = 2284 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpminub_zmm_k1z_zmm_zmmm512 = 2285 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Pand_mm_mmm64 = 2286 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Pand_xmm_xmmm128 = 2287 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpand_xmm_xmm_xmmm128 = 2288 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpand_ymm_ymm_ymmm256 = 2289 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpandd_xmm_k1z_xmm_xmmm128b32 = 2290 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpandd_ymm_k1z_ymm_ymmm256b32 = 2291 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpandd_zmm_k1z_zmm_zmmm512b32 = 2292 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpandq_xmm_k1z_xmm_xmmm128b64 = 2293 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpandq_ymm_k1z_ymm_ymmm256b64 = 2294 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpandq_zmm_k1z_zmm_zmmm512b64 = 2295 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Paddusb_mm_mmm64 = 2296 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Paddusb_xmm_xmmm128 = 2297 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpaddusb_xmm_xmm_xmmm128 = 2298 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpaddusb_ymm_ymm_ymmm256 = 2299 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpaddusb_xmm_k1z_xmm_xmmm128 = 2300 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpaddusb_ymm_k1z_ymm_ymmm256 = 2301 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpaddusb_zmm_k1z_zmm_zmmm512 = 2302 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Paddusw_mm_mmm64 = 2303 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Paddusw_xmm_xmmm128 = 2304 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpaddusw_xmm_xmm_xmmm128 = 2305 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpaddusw_ymm_ymm_ymmm256 = 2306 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpaddusw_xmm_k1z_xmm_xmmm128 = 2307 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpaddusw_ymm_k1z_ymm_ymmm256 = 2308 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpaddusw_zmm_k1z_zmm_zmmm512 = 2309 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Pmaxub_mm_mmm64 = 2310 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Pmaxub_xmm_xmmm128 = 2311 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpmaxub_xmm_xmm_xmmm128 = 2312 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpmaxub_ymm_ymm_ymmm256 = 2313 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpmaxub_xmm_k1z_xmm_xmmm128 = 2314 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpmaxub_ymm_k1z_ymm_ymmm256 = 2315 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpmaxub_zmm_k1z_zmm_zmmm512 = 2316 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Pandn_mm_mmm64 = 2317 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Pandn_xmm_xmmm128 = 2318 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpandn_xmm_xmm_xmmm128 = 2319 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpandn_ymm_ymm_ymmm256 = 2320 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpandnd_xmm_k1z_xmm_xmmm128b32 = 2321 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpandnd_ymm_k1z_ymm_ymmm256b32 = 2322 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpandnd_zmm_k1z_zmm_zmmm512b32 = 2323 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpandnq_xmm_k1z_xmm_xmmm128b64 = 2324 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpandnq_ymm_k1z_ymm_ymmm256b64 = 2325 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpandnq_zmm_k1z_zmm_zmmm512b64 = 2326 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Pavgb_mm_mmm64 = 2327 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Pavgb_xmm_xmmm128 = 2328 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpavgb_xmm_xmm_xmmm128 = 2329 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpavgb_ymm_ymm_ymmm256 = 2330 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpavgb_xmm_k1z_xmm_xmmm128 = 2331 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpavgb_ymm_k1z_ymm_ymmm256 = 2332 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpavgb_zmm_k1z_zmm_zmmm512 = 2333 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Psraw_mm_mmm64 = 2334 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Psraw_xmm_xmmm128 = 2335 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpsraw_xmm_xmm_xmmm128 = 2336 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpsraw_ymm_ymm_xmmm128 = 2337 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpsraw_xmm_k1z_xmm_xmmm128 = 2338 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpsraw_ymm_k1z_ymm_xmmm128 = 2339 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpsraw_zmm_k1z_zmm_xmmm128 = 2340 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Psrad_mm_mmm64 = 2341 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Psrad_xmm_xmmm128 = 2342 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpsrad_xmm_xmm_xmmm128 = 2343 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpsrad_ymm_ymm_xmmm128 = 2344 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpsrad_xmm_k1z_xmm_xmmm128 = 2345 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpsrad_ymm_k1z_ymm_xmmm128 = 2346 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpsrad_zmm_k1z_zmm_xmmm128 = 2347 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpsraq_xmm_k1z_xmm_xmmm128 = 2348 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpsraq_ymm_k1z_ymm_xmmm128 = 2349 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpsraq_zmm_k1z_zmm_xmmm128 = 2350 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Pavgw_mm_mmm64 = 2351 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Pavgw_xmm_xmmm128 = 2352 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpavgw_xmm_xmm_xmmm128 = 2353 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpavgw_ymm_ymm_ymmm256 = 2354 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpavgw_xmm_k1z_xmm_xmmm128 = 2355 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpavgw_ymm_k1z_ymm_ymmm256 = 2356 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpavgw_zmm_k1z_zmm_zmmm512 = 2357 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Pmulhuw_mm_mmm64 = 2358 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Pmulhuw_xmm_xmmm128 = 2359 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpmulhuw_xmm_xmm_xmmm128 = 2360 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpmulhuw_ymm_ymm_ymmm256 = 2361 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpmulhuw_xmm_k1z_xmm_xmmm128 = 2362 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpmulhuw_ymm_k1z_ymm_ymmm256 = 2363 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpmulhuw_zmm_k1z_zmm_zmmm512 = 2364 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Pmulhw_mm_mmm64 = 2365 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Pmulhw_xmm_xmmm128 = 2366 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpmulhw_xmm_xmm_xmmm128 = 2367 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpmulhw_ymm_ymm_ymmm256 = 2368 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpmulhw_xmm_k1z_xmm_xmmm128 = 2369 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpmulhw_ymm_k1z_ymm_ymmm256 = 2370 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpmulhw_zmm_k1z_zmm_zmmm512 = 2371 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Cvttpd2dq_xmm_xmmm128 = 2372 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vcvttpd2dq_xmm_xmmm128 = 2373 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vcvttpd2dq_xmm_ymmm256 = 2374 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vcvttpd2dq_xmm_k1z_xmmm128b64 = 2375 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vcvttpd2dq_xmm_k1z_ymmm256b64 = 2376 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vcvttpd2dq_ymm_k1z_zmmm512b64_sae = 2377 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Cvtdq2pd_xmm_xmmm64 = 2378 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vcvtdq2pd_xmm_xmmm64 = 2379 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vcvtdq2pd_ymm_xmmm128 = 2380 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vcvtdq2pd_xmm_k1z_xmmm64b32 = 2381 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vcvtdq2pd_ymm_k1z_xmmm128b32 = 2382 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vcvtdq2pd_zmm_k1z_ymmm256b32_er = 2383 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vcvtqq2pd_xmm_k1z_xmmm128b64 = 2384 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vcvtqq2pd_ymm_k1z_ymmm256b64 = 2385 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vcvtqq2pd_zmm_k1z_zmmm512b64_er = 2386 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Cvtpd2dq_xmm_xmmm128 = 2387 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vcvtpd2dq_xmm_xmmm128 = 2388 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vcvtpd2dq_xmm_ymmm256 = 2389 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vcvtpd2dq_xmm_k1z_xmmm128b64 = 2390 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vcvtpd2dq_xmm_k1z_ymmm256b64 = 2391 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vcvtpd2dq_ymm_k1z_zmmm512b64_er = 2392 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Movntq_m64_mm = 2393 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Movntdq_m128_xmm = 2394 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vmovntdq_m128_xmm = 2395 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vmovntdq_m256_ymm = 2396 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vmovntdq_m128_xmm = 2397 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vmovntdq_m256_ymm = 2398 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vmovntdq_m512_zmm = 2399 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Psubsb_mm_mmm64 = 2400 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Psubsb_xmm_xmmm128 = 2401 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpsubsb_xmm_xmm_xmmm128 = 2402 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpsubsb_ymm_ymm_ymmm256 = 2403 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpsubsb_xmm_k1z_xmm_xmmm128 = 2404 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpsubsb_ymm_k1z_ymm_ymmm256 = 2405 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpsubsb_zmm_k1z_zmm_zmmm512 = 2406 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Psubsw_mm_mmm64 = 2407 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Psubsw_xmm_xmmm128 = 2408 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpsubsw_xmm_xmm_xmmm128 = 2409 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpsubsw_ymm_ymm_ymmm256 = 2410 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpsubsw_xmm_k1z_xmm_xmmm128 = 2411 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpsubsw_ymm_k1z_ymm_ymmm256 = 2412 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpsubsw_zmm_k1z_zmm_zmmm512 = 2413 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Pminsw_mm_mmm64 = 2414 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Pminsw_xmm_xmmm128 = 2415 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpminsw_xmm_xmm_xmmm128 = 2416 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpminsw_ymm_ymm_ymmm256 = 2417 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpminsw_xmm_k1z_xmm_xmmm128 = 2418 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpminsw_ymm_k1z_ymm_ymmm256 = 2419 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpminsw_zmm_k1z_zmm_zmmm512 = 2420 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Por_mm_mmm64 = 2421 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Por_xmm_xmmm128 = 2422 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpor_xmm_xmm_xmmm128 = 2423 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpor_ymm_ymm_ymmm256 = 2424 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpord_xmm_k1z_xmm_xmmm128b32 = 2425 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpord_ymm_k1z_ymm_ymmm256b32 = 2426 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpord_zmm_k1z_zmm_zmmm512b32 = 2427 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vporq_xmm_k1z_xmm_xmmm128b64 = 2428 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vporq_ymm_k1z_ymm_ymmm256b64 = 2429 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vporq_zmm_k1z_zmm_zmmm512b64 = 2430 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Paddsb_mm_mmm64 = 2431 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Paddsb_xmm_xmmm128 = 2432 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpaddsb_xmm_xmm_xmmm128 = 2433 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpaddsb_ymm_ymm_ymmm256 = 2434 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpaddsb_xmm_k1z_xmm_xmmm128 = 2435 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpaddsb_ymm_k1z_ymm_ymmm256 = 2436 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpaddsb_zmm_k1z_zmm_zmmm512 = 2437 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Paddsw_mm_mmm64 = 2438 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Paddsw_xmm_xmmm128 = 2439 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpaddsw_xmm_xmm_xmmm128 = 2440 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpaddsw_ymm_ymm_ymmm256 = 2441 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpaddsw_xmm_k1z_xmm_xmmm128 = 2442 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpaddsw_ymm_k1z_ymm_ymmm256 = 2443 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpaddsw_zmm_k1z_zmm_zmmm512 = 2444 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Pmaxsw_mm_mmm64 = 2445 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Pmaxsw_xmm_xmmm128 = 2446 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpmaxsw_xmm_xmm_xmmm128 = 2447 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpmaxsw_ymm_ymm_ymmm256 = 2448 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpmaxsw_xmm_k1z_xmm_xmmm128 = 2449 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpmaxsw_ymm_k1z_ymm_ymmm256 = 2450 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpmaxsw_zmm_k1z_zmm_zmmm512 = 2451 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Pxor_mm_mmm64 = 2452 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Pxor_xmm_xmmm128 = 2453 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpxor_xmm_xmm_xmmm128 = 2454 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpxor_ymm_ymm_ymmm256 = 2455 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpxord_xmm_k1z_xmm_xmmm128b32 = 2456 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpxord_ymm_k1z_ymm_ymmm256b32 = 2457 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpxord_zmm_k1z_zmm_zmmm512b32 = 2458 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpxorq_xmm_k1z_xmm_xmmm128b64 = 2459 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpxorq_ymm_k1z_ymm_ymmm256b64 = 2460 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpxorq_zmm_k1z_zmm_zmmm512b64 = 2461 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Lddqu_xmm_m128 = 2462 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vlddqu_xmm_m128 = 2463 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vlddqu_ymm_m256 = 2464 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Psllw_mm_mmm64 = 2465 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Psllw_xmm_xmmm128 = 2466 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpsllw_xmm_xmm_xmmm128 = 2467 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpsllw_ymm_ymm_xmmm128 = 2468 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpsllw_xmm_k1z_xmm_xmmm128 = 2469 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpsllw_ymm_k1z_ymm_xmmm128 = 2470 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpsllw_zmm_k1z_zmm_xmmm128 = 2471 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Pslld_mm_mmm64 = 2472 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Pslld_xmm_xmmm128 = 2473 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpslld_xmm_xmm_xmmm128 = 2474 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpslld_ymm_ymm_xmmm128 = 2475 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpslld_xmm_k1z_xmm_xmmm128 = 2476 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpslld_ymm_k1z_ymm_xmmm128 = 2477 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpslld_zmm_k1z_zmm_xmmm128 = 2478 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Psllq_mm_mmm64 = 2479 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Psllq_xmm_xmmm128 = 2480 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpsllq_xmm_xmm_xmmm128 = 2481 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpsllq_ymm_ymm_xmmm128 = 2482 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpsllq_xmm_k1z_xmm_xmmm128 = 2483 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpsllq_ymm_k1z_ymm_xmmm128 = 2484 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpsllq_zmm_k1z_zmm_xmmm128 = 2485 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Pmuludq_mm_mmm64 = 2486 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Pmuludq_xmm_xmmm128 = 2487 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpmuludq_xmm_xmm_xmmm128 = 2488 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpmuludq_ymm_ymm_ymmm256 = 2489 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpmuludq_xmm_k1z_xmm_xmmm128b64 = 2490 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpmuludq_ymm_k1z_ymm_ymmm256b64 = 2491 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpmuludq_zmm_k1z_zmm_zmmm512b64 = 2492 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Pmaddwd_mm_mmm64 = 2493 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Pmaddwd_xmm_xmmm128 = 2494 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpmaddwd_xmm_xmm_xmmm128 = 2495 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpmaddwd_ymm_ymm_ymmm256 = 2496 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpmaddwd_xmm_k1z_xmm_xmmm128 = 2497 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpmaddwd_ymm_k1z_ymm_ymmm256 = 2498 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpmaddwd_zmm_k1z_zmm_zmmm512 = 2499 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Psadbw_mm_mmm64 = 2500 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Psadbw_xmm_xmmm128 = 2501 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpsadbw_xmm_xmm_xmmm128 = 2502 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpsadbw_ymm_ymm_ymmm256 = 2503 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpsadbw_xmm_xmm_xmmm128 = 2504 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpsadbw_ymm_ymm_ymmm256 = 2505 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpsadbw_zmm_zmm_zmmm512 = 2506 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Maskmovq_rDI_mm_mm = 2507 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Maskmovdqu_rDI_xmm_xmm = 2508 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vmaskmovdqu_rDI_xmm_xmm = 2509 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Psubb_mm_mmm64 = 2510 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Psubb_xmm_xmmm128 = 2511 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpsubb_xmm_xmm_xmmm128 = 2512 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpsubb_ymm_ymm_ymmm256 = 2513 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpsubb_xmm_k1z_xmm_xmmm128 = 2514 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpsubb_ymm_k1z_ymm_ymmm256 = 2515 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpsubb_zmm_k1z_zmm_zmmm512 = 2516 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Psubw_mm_mmm64 = 2517 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Psubw_xmm_xmmm128 = 2518 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpsubw_xmm_xmm_xmmm128 = 2519 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpsubw_ymm_ymm_ymmm256 = 2520 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpsubw_xmm_k1z_xmm_xmmm128 = 2521 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpsubw_ymm_k1z_ymm_ymmm256 = 2522 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpsubw_zmm_k1z_zmm_zmmm512 = 2523 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Psubd_mm_mmm64 = 2524 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Psubd_xmm_xmmm128 = 2525 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpsubd_xmm_xmm_xmmm128 = 2526 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpsubd_ymm_ymm_ymmm256 = 2527 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpsubd_xmm_k1z_xmm_xmmm128b32 = 2528 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpsubd_ymm_k1z_ymm_ymmm256b32 = 2529 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpsubd_zmm_k1z_zmm_zmmm512b32 = 2530 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Psubq_mm_mmm64 = 2531 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Psubq_xmm_xmmm128 = 2532 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpsubq_xmm_xmm_xmmm128 = 2533 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpsubq_ymm_ymm_ymmm256 = 2534 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpsubq_xmm_k1z_xmm_xmmm128b64 = 2535 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpsubq_ymm_k1z_ymm_ymmm256b64 = 2536 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpsubq_zmm_k1z_zmm_zmmm512b64 = 2537 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Paddb_mm_mmm64 = 2538 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Paddb_xmm_xmmm128 = 2539 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpaddb_xmm_xmm_xmmm128 = 2540 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpaddb_ymm_ymm_ymmm256 = 2541 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpaddb_xmm_k1z_xmm_xmmm128 = 2542 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpaddb_ymm_k1z_ymm_ymmm256 = 2543 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpaddb_zmm_k1z_zmm_zmmm512 = 2544 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Paddw_mm_mmm64 = 2545 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Paddw_xmm_xmmm128 = 2546 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpaddw_xmm_xmm_xmmm128 = 2547 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpaddw_ymm_ymm_ymmm256 = 2548 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpaddw_xmm_k1z_xmm_xmmm128 = 2549 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpaddw_ymm_k1z_ymm_ymmm256 = 2550 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpaddw_zmm_k1z_zmm_zmmm512 = 2551 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Paddd_mm_mmm64 = 2552 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Paddd_xmm_xmmm128 = 2553 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpaddd_xmm_xmm_xmmm128 = 2554 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpaddd_ymm_ymm_ymmm256 = 2555 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpaddd_xmm_k1z_xmm_xmmm128b32 = 2556 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpaddd_ymm_k1z_ymm_ymmm256b32 = 2557 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpaddd_zmm_k1z_zmm_zmmm512b32 = 2558 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Ud0_r16_rm16 = 2559 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Ud0_r32_rm32 = 2560 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Ud0_r64_rm64 = 2561 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Pshufb_mm_mmm64 = 2562 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Pshufb_xmm_xmmm128 = 2563 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpshufb_xmm_xmm_xmmm128 = 2564 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpshufb_ymm_ymm_ymmm256 = 2565 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpshufb_xmm_k1z_xmm_xmmm128 = 2566 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpshufb_ymm_k1z_ymm_ymmm256 = 2567 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpshufb_zmm_k1z_zmm_zmmm512 = 2568 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Phaddw_mm_mmm64 = 2569 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Phaddw_xmm_xmmm128 = 2570 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vphaddw_xmm_xmm_xmmm128 = 2571 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vphaddw_ymm_ymm_ymmm256 = 2572 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Phaddd_mm_mmm64 = 2573 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Phaddd_xmm_xmmm128 = 2574 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vphaddd_xmm_xmm_xmmm128 = 2575 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vphaddd_ymm_ymm_ymmm256 = 2576 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Phaddsw_mm_mmm64 = 2577 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Phaddsw_xmm_xmmm128 = 2578 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vphaddsw_xmm_xmm_xmmm128 = 2579 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vphaddsw_ymm_ymm_ymmm256 = 2580 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Pmaddubsw_mm_mmm64 = 2581 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Pmaddubsw_xmm_xmmm128 = 2582 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpmaddubsw_xmm_xmm_xmmm128 = 2583 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpmaddubsw_ymm_ymm_ymmm256 = 2584 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpmaddubsw_xmm_k1z_xmm_xmmm128 = 2585 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpmaddubsw_ymm_k1z_ymm_ymmm256 = 2586 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpmaddubsw_zmm_k1z_zmm_zmmm512 = 2587 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Phsubw_mm_mmm64 = 2588 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Phsubw_xmm_xmmm128 = 2589 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vphsubw_xmm_xmm_xmmm128 = 2590 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vphsubw_ymm_ymm_ymmm256 = 2591 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Phsubd_mm_mmm64 = 2592 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Phsubd_xmm_xmmm128 = 2593 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vphsubd_xmm_xmm_xmmm128 = 2594 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vphsubd_ymm_ymm_ymmm256 = 2595 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Phsubsw_mm_mmm64 = 2596 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Phsubsw_xmm_xmmm128 = 2597 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vphsubsw_xmm_xmm_xmmm128 = 2598 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vphsubsw_ymm_ymm_ymmm256 = 2599 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Psignb_mm_mmm64 = 2600 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Psignb_xmm_xmmm128 = 2601 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpsignb_xmm_xmm_xmmm128 = 2602 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpsignb_ymm_ymm_ymmm256 = 2603 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Psignw_mm_mmm64 = 2604 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Psignw_xmm_xmmm128 = 2605 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpsignw_xmm_xmm_xmmm128 = 2606 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpsignw_ymm_ymm_ymmm256 = 2607 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Psignd_mm_mmm64 = 2608 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Psignd_xmm_xmmm128 = 2609 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpsignd_xmm_xmm_xmmm128 = 2610 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpsignd_ymm_ymm_ymmm256 = 2611 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Pmulhrsw_mm_mmm64 = 2612 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Pmulhrsw_xmm_xmmm128 = 2613 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpmulhrsw_xmm_xmm_xmmm128 = 2614 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpmulhrsw_ymm_ymm_ymmm256 = 2615 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpmulhrsw_xmm_k1z_xmm_xmmm128 = 2616 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpmulhrsw_ymm_k1z_ymm_ymmm256 = 2617 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpmulhrsw_zmm_k1z_zmm_zmmm512 = 2618 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpermilps_xmm_xmm_xmmm128 = 2619 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpermilps_ymm_ymm_ymmm256 = 2620 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpermilps_xmm_k1z_xmm_xmmm128b32 = 2621 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpermilps_ymm_k1z_ymm_ymmm256b32 = 2622 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpermilps_zmm_k1z_zmm_zmmm512b32 = 2623 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpermilpd_xmm_xmm_xmmm128 = 2624 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpermilpd_ymm_ymm_ymmm256 = 2625 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpermilpd_xmm_k1z_xmm_xmmm128b64 = 2626 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpermilpd_ymm_k1z_ymm_ymmm256b64 = 2627 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpermilpd_zmm_k1z_zmm_zmmm512b64 = 2628 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vtestps_xmm_xmmm128 = 2629 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vtestps_ymm_ymmm256 = 2630 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vtestpd_xmm_xmmm128 = 2631 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vtestpd_ymm_ymmm256 = 2632 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Pblendvb_xmm_xmmm128 = 2633 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpsrlvw_xmm_k1z_xmm_xmmm128 = 2634 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpsrlvw_ymm_k1z_ymm_ymmm256 = 2635 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpsrlvw_zmm_k1z_zmm_zmmm512 = 2636 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpmovuswb_xmmm64_k1z_xmm = 2637 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpmovuswb_xmmm128_k1z_ymm = 2638 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpmovuswb_ymmm256_k1z_zmm = 2639 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpsravw_xmm_k1z_xmm_xmmm128 = 2640 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpsravw_ymm_k1z_ymm_ymmm256 = 2641 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpsravw_zmm_k1z_zmm_zmmm512 = 2642 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpmovusdb_xmmm32_k1z_xmm = 2643 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpmovusdb_xmmm64_k1z_ymm = 2644 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpmovusdb_xmmm128_k1z_zmm = 2645 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpsllvw_xmm_k1z_xmm_xmmm128 = 2646 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpsllvw_ymm_k1z_ymm_ymmm256 = 2647 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpsllvw_zmm_k1z_zmm_zmmm512 = 2648 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpmovusqb_xmmm16_k1z_xmm = 2649 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpmovusqb_xmmm32_k1z_ymm = 2650 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpmovusqb_xmmm64_k1z_zmm = 2651 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vcvtph2ps_xmm_xmmm64 = 2652 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vcvtph2ps_ymm_xmmm128 = 2653 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vcvtph2ps_xmm_k1z_xmmm64 = 2654 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vcvtph2ps_ymm_k1z_xmmm128 = 2655 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vcvtph2ps_zmm_k1z_ymmm256_sae = 2656 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpmovusdw_xmmm64_k1z_xmm = 2657 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpmovusdw_xmmm128_k1z_ymm = 2658 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpmovusdw_ymmm256_k1z_zmm = 2659 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Blendvps_xmm_xmmm128 = 2660 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vprorvd_xmm_k1z_xmm_xmmm128b32 = 2661 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vprorvd_ymm_k1z_ymm_ymmm256b32 = 2662 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vprorvd_zmm_k1z_zmm_zmmm512b32 = 2663 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vprorvq_xmm_k1z_xmm_xmmm128b64 = 2664 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vprorvq_ymm_k1z_ymm_ymmm256b64 = 2665 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vprorvq_zmm_k1z_zmm_zmmm512b64 = 2666 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpmovusqw_xmmm32_k1z_xmm = 2667 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpmovusqw_xmmm64_k1z_ymm = 2668 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpmovusqw_xmmm128_k1z_zmm = 2669 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Blendvpd_xmm_xmmm128 = 2670 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vprolvd_xmm_k1z_xmm_xmmm128b32 = 2671 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vprolvd_ymm_k1z_ymm_ymmm256b32 = 2672 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vprolvd_zmm_k1z_zmm_zmmm512b32 = 2673 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vprolvq_xmm_k1z_xmm_xmmm128b64 = 2674 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vprolvq_ymm_k1z_ymm_ymmm256b64 = 2675 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vprolvq_zmm_k1z_zmm_zmmm512b64 = 2676 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpmovusqd_xmmm64_k1z_xmm = 2677 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpmovusqd_xmmm128_k1z_ymm = 2678 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpmovusqd_ymmm256_k1z_zmm = 2679 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpermps_ymm_ymm_ymmm256 = 2680 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpermps_ymm_k1z_ymm_ymmm256b32 = 2681 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpermps_zmm_k1z_zmm_zmmm512b32 = 2682 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpermpd_ymm_k1z_ymm_ymmm256b64 = 2683 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpermpd_zmm_k1z_zmm_zmmm512b64 = 2684 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Ptest_xmm_xmmm128 = 2685 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vptest_xmm_xmmm128 = 2686 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vptest_ymm_ymmm256 = 2687 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vbroadcastss_xmm_m32 = 2688 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vbroadcastss_ymm_m32 = 2689 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vbroadcastss_xmm_k1z_xmmm32 = 2690 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vbroadcastss_ymm_k1z_xmmm32 = 2691 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vbroadcastss_zmm_k1z_xmmm32 = 2692 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vbroadcastsd_ymm_m64 = 2693 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vbroadcastf32x2_ymm_k1z_xmmm64 = 2694 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vbroadcastf32x2_zmm_k1z_xmmm64 = 2695 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vbroadcastsd_ymm_k1z_xmmm64 = 2696 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vbroadcastsd_zmm_k1z_xmmm64 = 2697 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vbroadcastf128_ymm_m128 = 2698 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vbroadcastf32x4_ymm_k1z_m128 = 2699 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vbroadcastf32x4_zmm_k1z_m128 = 2700 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vbroadcastf64x2_ymm_k1z_m128 = 2701 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vbroadcastf64x2_zmm_k1z_m128 = 2702 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vbroadcastf32x8_zmm_k1z_m256 = 2703 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vbroadcastf64x4_zmm_k1z_m256 = 2704 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Pabsb_mm_mmm64 = 2705 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Pabsb_xmm_xmmm128 = 2706 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpabsb_xmm_xmmm128 = 2707 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpabsb_ymm_ymmm256 = 2708 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpabsb_xmm_k1z_xmmm128 = 2709 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpabsb_ymm_k1z_ymmm256 = 2710 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpabsb_zmm_k1z_zmmm512 = 2711 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Pabsw_mm_mmm64 = 2712 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Pabsw_xmm_xmmm128 = 2713 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpabsw_xmm_xmmm128 = 2714 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpabsw_ymm_ymmm256 = 2715 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpabsw_xmm_k1z_xmmm128 = 2716 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpabsw_ymm_k1z_ymmm256 = 2717 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpabsw_zmm_k1z_zmmm512 = 2718 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Pabsd_mm_mmm64 = 2719 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Pabsd_xmm_xmmm128 = 2720 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpabsd_xmm_xmmm128 = 2721 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpabsd_ymm_ymmm256 = 2722 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpabsd_xmm_k1z_xmmm128b32 = 2723 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpabsd_ymm_k1z_ymmm256b32 = 2724 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpabsd_zmm_k1z_zmmm512b32 = 2725 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpabsq_xmm_k1z_xmmm128b64 = 2726 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpabsq_ymm_k1z_ymmm256b64 = 2727 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpabsq_zmm_k1z_zmmm512b64 = 2728 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Pmovsxbw_xmm_xmmm64 = 2729 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpmovsxbw_xmm_xmmm64 = 2730 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpmovsxbw_ymm_xmmm128 = 2731 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpmovsxbw_xmm_k1z_xmmm64 = 2732 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpmovsxbw_ymm_k1z_xmmm128 = 2733 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpmovsxbw_zmm_k1z_ymmm256 = 2734 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpmovswb_xmmm64_k1z_xmm = 2735 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpmovswb_xmmm128_k1z_ymm = 2736 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpmovswb_ymmm256_k1z_zmm = 2737 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Pmovsxbd_xmm_xmmm32 = 2738 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpmovsxbd_xmm_xmmm32 = 2739 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpmovsxbd_ymm_xmmm64 = 2740 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpmovsxbd_xmm_k1z_xmmm32 = 2741 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpmovsxbd_ymm_k1z_xmmm64 = 2742 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpmovsxbd_zmm_k1z_xmmm128 = 2743 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpmovsdb_xmmm32_k1z_xmm = 2744 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpmovsdb_xmmm64_k1z_ymm = 2745 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpmovsdb_xmmm128_k1z_zmm = 2746 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Pmovsxbq_xmm_xmmm16 = 2747 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpmovsxbq_xmm_xmmm16 = 2748 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpmovsxbq_ymm_xmmm32 = 2749 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpmovsxbq_xmm_k1z_xmmm16 = 2750 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpmovsxbq_ymm_k1z_xmmm32 = 2751 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpmovsxbq_zmm_k1z_xmmm64 = 2752 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpmovsqb_xmmm16_k1z_xmm = 2753 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpmovsqb_xmmm32_k1z_ymm = 2754 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpmovsqb_xmmm64_k1z_zmm = 2755 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Pmovsxwd_xmm_xmmm64 = 2756 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpmovsxwd_xmm_xmmm64 = 2757 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpmovsxwd_ymm_xmmm128 = 2758 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpmovsxwd_xmm_k1z_xmmm64 = 2759 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpmovsxwd_ymm_k1z_xmmm128 = 2760 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpmovsxwd_zmm_k1z_ymmm256 = 2761 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpmovsdw_xmmm64_k1z_xmm = 2762 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpmovsdw_xmmm128_k1z_ymm = 2763 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpmovsdw_ymmm256_k1z_zmm = 2764 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Pmovsxwq_xmm_xmmm32 = 2765 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpmovsxwq_xmm_xmmm32 = 2766 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpmovsxwq_ymm_xmmm64 = 2767 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpmovsxwq_xmm_k1z_xmmm32 = 2768 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpmovsxwq_ymm_k1z_xmmm64 = 2769 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpmovsxwq_zmm_k1z_xmmm128 = 2770 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpmovsqw_xmmm32_k1z_xmm = 2771 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpmovsqw_xmmm64_k1z_ymm = 2772 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpmovsqw_xmmm128_k1z_zmm = 2773 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Pmovsxdq_xmm_xmmm64 = 2774 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpmovsxdq_xmm_xmmm64 = 2775 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpmovsxdq_ymm_xmmm128 = 2776 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpmovsxdq_xmm_k1z_xmmm64 = 2777 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpmovsxdq_ymm_k1z_xmmm128 = 2778 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpmovsxdq_zmm_k1z_ymmm256 = 2779 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpmovsqd_xmmm64_k1z_xmm = 2780 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpmovsqd_xmmm128_k1z_ymm = 2781 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpmovsqd_ymmm256_k1z_zmm = 2782 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vptestmb_kr_k1_xmm_xmmm128 = 2783 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vptestmb_kr_k1_ymm_ymmm256 = 2784 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vptestmb_kr_k1_zmm_zmmm512 = 2785 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vptestmw_kr_k1_xmm_xmmm128 = 2786 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vptestmw_kr_k1_ymm_ymmm256 = 2787 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vptestmw_kr_k1_zmm_zmmm512 = 2788 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vptestnmb_kr_k1_xmm_xmmm128 = 2789 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vptestnmb_kr_k1_ymm_ymmm256 = 2790 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vptestnmb_kr_k1_zmm_zmmm512 = 2791 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vptestnmw_kr_k1_xmm_xmmm128 = 2792 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vptestnmw_kr_k1_ymm_ymmm256 = 2793 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vptestnmw_kr_k1_zmm_zmmm512 = 2794 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vptestmd_kr_k1_xmm_xmmm128b32 = 2795 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vptestmd_kr_k1_ymm_ymmm256b32 = 2796 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vptestmd_kr_k1_zmm_zmmm512b32 = 2797 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vptestmq_kr_k1_xmm_xmmm128b64 = 2798 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vptestmq_kr_k1_ymm_ymmm256b64 = 2799 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vptestmq_kr_k1_zmm_zmmm512b64 = 2800 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vptestnmd_kr_k1_xmm_xmmm128b32 = 2801 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vptestnmd_kr_k1_ymm_ymmm256b32 = 2802 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vptestnmd_kr_k1_zmm_zmmm512b32 = 2803 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vptestnmq_kr_k1_xmm_xmmm128b64 = 2804 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vptestnmq_kr_k1_ymm_ymmm256b64 = 2805 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vptestnmq_kr_k1_zmm_zmmm512b64 = 2806 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Pmuldq_xmm_xmmm128 = 2807 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpmuldq_xmm_xmm_xmmm128 = 2808 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpmuldq_ymm_ymm_ymmm256 = 2809 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpmuldq_xmm_k1z_xmm_xmmm128b64 = 2810 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpmuldq_ymm_k1z_ymm_ymmm256b64 = 2811 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpmuldq_zmm_k1z_zmm_zmmm512b64 = 2812 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpmovm2b_xmm_kr = 2813 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpmovm2b_ymm_kr = 2814 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpmovm2b_zmm_kr = 2815 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpmovm2w_xmm_kr = 2816 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpmovm2w_ymm_kr = 2817 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpmovm2w_zmm_kr = 2818 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Pcmpeqq_xmm_xmmm128 = 2819 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpcmpeqq_xmm_xmm_xmmm128 = 2820 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpcmpeqq_ymm_ymm_ymmm256 = 2821 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpcmpeqq_kr_k1_xmm_xmmm128b64 = 2822 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpcmpeqq_kr_k1_ymm_ymmm256b64 = 2823 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpcmpeqq_kr_k1_zmm_zmmm512b64 = 2824 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpmovb2m_kr_xmm = 2825 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpmovb2m_kr_ymm = 2826 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpmovb2m_kr_zmm = 2827 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpmovw2m_kr_xmm = 2828 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpmovw2m_kr_ymm = 2829 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpmovw2m_kr_zmm = 2830 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Movntdqa_xmm_m128 = 2831 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vmovntdqa_xmm_m128 = 2832 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vmovntdqa_ymm_m256 = 2833 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vmovntdqa_xmm_m128 = 2834 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vmovntdqa_ymm_m256 = 2835 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vmovntdqa_zmm_m512 = 2836 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpbroadcastmb2q_xmm_kr = 2837 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpbroadcastmb2q_ymm_kr = 2838 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpbroadcastmb2q_zmm_kr = 2839 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Packusdw_xmm_xmmm128 = 2840 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpackusdw_xmm_xmm_xmmm128 = 2841 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpackusdw_ymm_ymm_ymmm256 = 2842 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpackusdw_xmm_k1z_xmm_xmmm128b32 = 2843 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpackusdw_ymm_k1z_ymm_ymmm256b32 = 2844 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpackusdw_zmm_k1z_zmm_zmmm512b32 = 2845 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vmaskmovps_xmm_xmm_m128 = 2846 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vmaskmovps_ymm_ymm_m256 = 2847 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vscalefps_xmm_k1z_xmm_xmmm128b32 = 2848 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vscalefps_ymm_k1z_ymm_ymmm256b32 = 2849 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vscalefps_zmm_k1z_zmm_zmmm512b32_er = 2850 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vscalefpd_xmm_k1z_xmm_xmmm128b64 = 2851 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vscalefpd_ymm_k1z_ymm_ymmm256b64 = 2852 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vscalefpd_zmm_k1z_zmm_zmmm512b64_er = 2853 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vmaskmovpd_xmm_xmm_m128 = 2854 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vmaskmovpd_ymm_ymm_m256 = 2855 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vscalefss_xmm_k1z_xmm_xmmm32_er = 2856 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vscalefsd_xmm_k1z_xmm_xmmm64_er = 2857 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vmaskmovps_m128_xmm_xmm = 2858 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vmaskmovps_m256_ymm_ymm = 2859 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vmaskmovpd_m128_xmm_xmm = 2860 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vmaskmovpd_m256_ymm_ymm = 2861 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Pmovzxbw_xmm_xmmm64 = 2862 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpmovzxbw_xmm_xmmm64 = 2863 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpmovzxbw_ymm_xmmm128 = 2864 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpmovzxbw_xmm_k1z_xmmm64 = 2865 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpmovzxbw_ymm_k1z_xmmm128 = 2866 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpmovzxbw_zmm_k1z_ymmm256 = 2867 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpmovwb_xmmm64_k1z_xmm = 2868 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpmovwb_xmmm128_k1z_ymm = 2869 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpmovwb_ymmm256_k1z_zmm = 2870 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Pmovzxbd_xmm_xmmm32 = 2871 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpmovzxbd_xmm_xmmm32 = 2872 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpmovzxbd_ymm_xmmm64 = 2873 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpmovzxbd_xmm_k1z_xmmm32 = 2874 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpmovzxbd_ymm_k1z_xmmm64 = 2875 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpmovzxbd_zmm_k1z_xmmm128 = 2876 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpmovdb_xmmm32_k1z_xmm = 2877 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpmovdb_xmmm64_k1z_ymm = 2878 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpmovdb_xmmm128_k1z_zmm = 2879 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Pmovzxbq_xmm_xmmm16 = 2880 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpmovzxbq_xmm_xmmm16 = 2881 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpmovzxbq_ymm_xmmm32 = 2882 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpmovzxbq_xmm_k1z_xmmm16 = 2883 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpmovzxbq_ymm_k1z_xmmm32 = 2884 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpmovzxbq_zmm_k1z_xmmm64 = 2885 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpmovqb_xmmm16_k1z_xmm = 2886 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpmovqb_xmmm32_k1z_ymm = 2887 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpmovqb_xmmm64_k1z_zmm = 2888 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Pmovzxwd_xmm_xmmm64 = 2889 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpmovzxwd_xmm_xmmm64 = 2890 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpmovzxwd_ymm_xmmm128 = 2891 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpmovzxwd_xmm_k1z_xmmm64 = 2892 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpmovzxwd_ymm_k1z_xmmm128 = 2893 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpmovzxwd_zmm_k1z_ymmm256 = 2894 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpmovdw_xmmm64_k1z_xmm = 2895 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpmovdw_xmmm128_k1z_ymm = 2896 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpmovdw_ymmm256_k1z_zmm = 2897 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Pmovzxwq_xmm_xmmm32 = 2898 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpmovzxwq_xmm_xmmm32 = 2899 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpmovzxwq_ymm_xmmm64 = 2900 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpmovzxwq_xmm_k1z_xmmm32 = 2901 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpmovzxwq_ymm_k1z_xmmm64 = 2902 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpmovzxwq_zmm_k1z_xmmm128 = 2903 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpmovqw_xmmm32_k1z_xmm = 2904 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpmovqw_xmmm64_k1z_ymm = 2905 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpmovqw_xmmm128_k1z_zmm = 2906 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Pmovzxdq_xmm_xmmm64 = 2907 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpmovzxdq_xmm_xmmm64 = 2908 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpmovzxdq_ymm_xmmm128 = 2909 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpmovzxdq_xmm_k1z_xmmm64 = 2910 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpmovzxdq_ymm_k1z_xmmm128 = 2911 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpmovzxdq_zmm_k1z_ymmm256 = 2912 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpmovqd_xmmm64_k1z_xmm = 2913 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpmovqd_xmmm128_k1z_ymm = 2914 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpmovqd_ymmm256_k1z_zmm = 2915 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpermd_ymm_ymm_ymmm256 = 2916 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpermd_ymm_k1z_ymm_ymmm256b32 = 2917 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpermd_zmm_k1z_zmm_zmmm512b32 = 2918 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpermq_ymm_k1z_ymm_ymmm256b64 = 2919 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpermq_zmm_k1z_zmm_zmmm512b64 = 2920 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Pcmpgtq_xmm_xmmm128 = 2921 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpcmpgtq_xmm_xmm_xmmm128 = 2922 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpcmpgtq_ymm_ymm_ymmm256 = 2923 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpcmpgtq_kr_k1_xmm_xmmm128b64 = 2924 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpcmpgtq_kr_k1_ymm_ymmm256b64 = 2925 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpcmpgtq_kr_k1_zmm_zmmm512b64 = 2926 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Pminsb_xmm_xmmm128 = 2927 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpminsb_xmm_xmm_xmmm128 = 2928 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpminsb_ymm_ymm_ymmm256 = 2929 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpminsb_xmm_k1z_xmm_xmmm128 = 2930 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpminsb_ymm_k1z_ymm_ymmm256 = 2931 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpminsb_zmm_k1z_zmm_zmmm512 = 2932 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpmovm2d_xmm_kr = 2933 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpmovm2d_ymm_kr = 2934 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpmovm2d_zmm_kr = 2935 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpmovm2q_xmm_kr = 2936 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpmovm2q_ymm_kr = 2937 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpmovm2q_zmm_kr = 2938 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Pminsd_xmm_xmmm128 = 2939 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpminsd_xmm_xmm_xmmm128 = 2940 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpminsd_ymm_ymm_ymmm256 = 2941 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpminsd_xmm_k1z_xmm_xmmm128b32 = 2942 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpminsd_ymm_k1z_ymm_ymmm256b32 = 2943 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpminsd_zmm_k1z_zmm_zmmm512b32 = 2944 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpminsq_xmm_k1z_xmm_xmmm128b64 = 2945 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpminsq_ymm_k1z_ymm_ymmm256b64 = 2946 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpminsq_zmm_k1z_zmm_zmmm512b64 = 2947 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpmovd2m_kr_xmm = 2948 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpmovd2m_kr_ymm = 2949 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpmovd2m_kr_zmm = 2950 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpmovq2m_kr_xmm = 2951 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpmovq2m_kr_ymm = 2952 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpmovq2m_kr_zmm = 2953 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Pminuw_xmm_xmmm128 = 2954 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpminuw_xmm_xmm_xmmm128 = 2955 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpminuw_ymm_ymm_ymmm256 = 2956 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpminuw_xmm_k1z_xmm_xmmm128 = 2957 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpminuw_ymm_k1z_ymm_ymmm256 = 2958 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpminuw_zmm_k1z_zmm_zmmm512 = 2959 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpbroadcastmw2d_xmm_kr = 2960 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpbroadcastmw2d_ymm_kr = 2961 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpbroadcastmw2d_zmm_kr = 2962 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Pminud_xmm_xmmm128 = 2963 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpminud_xmm_xmm_xmmm128 = 2964 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpminud_ymm_ymm_ymmm256 = 2965 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpminud_xmm_k1z_xmm_xmmm128b32 = 2966 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpminud_ymm_k1z_ymm_ymmm256b32 = 2967 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpminud_zmm_k1z_zmm_zmmm512b32 = 2968 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpminuq_xmm_k1z_xmm_xmmm128b64 = 2969 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpminuq_ymm_k1z_ymm_ymmm256b64 = 2970 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpminuq_zmm_k1z_zmm_zmmm512b64 = 2971 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Pmaxsb_xmm_xmmm128 = 2972 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpmaxsb_xmm_xmm_xmmm128 = 2973 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpmaxsb_ymm_ymm_ymmm256 = 2974 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpmaxsb_xmm_k1z_xmm_xmmm128 = 2975 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpmaxsb_ymm_k1z_ymm_ymmm256 = 2976 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpmaxsb_zmm_k1z_zmm_zmmm512 = 2977 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Pmaxsd_xmm_xmmm128 = 2978 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpmaxsd_xmm_xmm_xmmm128 = 2979 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpmaxsd_ymm_ymm_ymmm256 = 2980 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpmaxsd_xmm_k1z_xmm_xmmm128b32 = 2981 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpmaxsd_ymm_k1z_ymm_ymmm256b32 = 2982 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpmaxsd_zmm_k1z_zmm_zmmm512b32 = 2983 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpmaxsq_xmm_k1z_xmm_xmmm128b64 = 2984 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpmaxsq_ymm_k1z_ymm_ymmm256b64 = 2985 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpmaxsq_zmm_k1z_zmm_zmmm512b64 = 2986 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Pmaxuw_xmm_xmmm128 = 2987 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpmaxuw_xmm_xmm_xmmm128 = 2988 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpmaxuw_ymm_ymm_ymmm256 = 2989 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpmaxuw_xmm_k1z_xmm_xmmm128 = 2990 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpmaxuw_ymm_k1z_ymm_ymmm256 = 2991 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpmaxuw_zmm_k1z_zmm_zmmm512 = 2992 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Pmaxud_xmm_xmmm128 = 2993 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpmaxud_xmm_xmm_xmmm128 = 2994 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpmaxud_ymm_ymm_ymmm256 = 2995 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpmaxud_xmm_k1z_xmm_xmmm128b32 = 2996 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpmaxud_ymm_k1z_ymm_ymmm256b32 = 2997 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpmaxud_zmm_k1z_zmm_zmmm512b32 = 2998 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpmaxuq_xmm_k1z_xmm_xmmm128b64 = 2999 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpmaxuq_ymm_k1z_ymm_ymmm256b64 = 3000 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpmaxuq_zmm_k1z_zmm_zmmm512b64 = 3001 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Pmulld_xmm_xmmm128 = 3002 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpmulld_xmm_xmm_xmmm128 = 3003 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpmulld_ymm_ymm_ymmm256 = 3004 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpmulld_xmm_k1z_xmm_xmmm128b32 = 3005 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpmulld_ymm_k1z_ymm_ymmm256b32 = 3006 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpmulld_zmm_k1z_zmm_zmmm512b32 = 3007 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpmullq_xmm_k1z_xmm_xmmm128b64 = 3008 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpmullq_ymm_k1z_ymm_ymmm256b64 = 3009 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpmullq_zmm_k1z_zmm_zmmm512b64 = 3010 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Phminposuw_xmm_xmmm128 = 3011 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vphminposuw_xmm_xmmm128 = 3012 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vgetexpps_xmm_k1z_xmmm128b32 = 3013 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vgetexpps_ymm_k1z_ymmm256b32 = 3014 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vgetexpps_zmm_k1z_zmmm512b32_sae = 3015 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vgetexppd_xmm_k1z_xmmm128b64 = 3016 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vgetexppd_ymm_k1z_ymmm256b64 = 3017 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vgetexppd_zmm_k1z_zmmm512b64_sae = 3018 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vgetexpss_xmm_k1z_xmm_xmmm32_sae = 3019 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vgetexpsd_xmm_k1z_xmm_xmmm64_sae = 3020 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vplzcntd_xmm_k1z_xmmm128b32 = 3021 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vplzcntd_ymm_k1z_ymmm256b32 = 3022 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vplzcntd_zmm_k1z_zmmm512b32 = 3023 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vplzcntq_xmm_k1z_xmmm128b64 = 3024 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vplzcntq_ymm_k1z_ymmm256b64 = 3025 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vplzcntq_zmm_k1z_zmmm512b64 = 3026 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpsrlvd_xmm_xmm_xmmm128 = 3027 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpsrlvd_ymm_ymm_ymmm256 = 3028 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpsrlvq_xmm_xmm_xmmm128 = 3029 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpsrlvq_ymm_ymm_ymmm256 = 3030 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpsrlvd_xmm_k1z_xmm_xmmm128b32 = 3031 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpsrlvd_ymm_k1z_ymm_ymmm256b32 = 3032 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpsrlvd_zmm_k1z_zmm_zmmm512b32 = 3033 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpsrlvq_xmm_k1z_xmm_xmmm128b64 = 3034 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpsrlvq_ymm_k1z_ymm_ymmm256b64 = 3035 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpsrlvq_zmm_k1z_zmm_zmmm512b64 = 3036 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpsravd_xmm_xmm_xmmm128 = 3037 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpsravd_ymm_ymm_ymmm256 = 3038 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpsravd_xmm_k1z_xmm_xmmm128b32 = 3039 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpsravd_ymm_k1z_ymm_ymmm256b32 = 3040 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpsravd_zmm_k1z_zmm_zmmm512b32 = 3041 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpsravq_xmm_k1z_xmm_xmmm128b64 = 3042 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpsravq_ymm_k1z_ymm_ymmm256b64 = 3043 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpsravq_zmm_k1z_zmm_zmmm512b64 = 3044 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpsllvd_xmm_xmm_xmmm128 = 3045 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpsllvd_ymm_ymm_ymmm256 = 3046 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpsllvq_xmm_xmm_xmmm128 = 3047 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpsllvq_ymm_ymm_ymmm256 = 3048 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpsllvd_xmm_k1z_xmm_xmmm128b32 = 3049 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpsllvd_ymm_k1z_ymm_ymmm256b32 = 3050 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpsllvd_zmm_k1z_zmm_zmmm512b32 = 3051 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpsllvq_xmm_k1z_xmm_xmmm128b64 = 3052 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpsllvq_ymm_k1z_ymm_ymmm256b64 = 3053 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpsllvq_zmm_k1z_zmm_zmmm512b64 = 3054 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vrcp14ps_xmm_k1z_xmmm128b32 = 3055 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vrcp14ps_ymm_k1z_ymmm256b32 = 3056 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vrcp14ps_zmm_k1z_zmmm512b32 = 3057 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vrcp14pd_xmm_k1z_xmmm128b64 = 3058 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vrcp14pd_ymm_k1z_ymmm256b64 = 3059 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vrcp14pd_zmm_k1z_zmmm512b64 = 3060 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vrcp14ss_xmm_k1z_xmm_xmmm32 = 3061 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vrcp14sd_xmm_k1z_xmm_xmmm64 = 3062 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vrsqrt14ps_xmm_k1z_xmmm128b32 = 3063 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vrsqrt14ps_ymm_k1z_ymmm256b32 = 3064 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vrsqrt14ps_zmm_k1z_zmmm512b32 = 3065 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vrsqrt14pd_xmm_k1z_xmmm128b64 = 3066 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vrsqrt14pd_ymm_k1z_ymmm256b64 = 3067 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vrsqrt14pd_zmm_k1z_zmmm512b64 = 3068 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vrsqrt14ss_xmm_k1z_xmm_xmmm32 = 3069 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vrsqrt14sd_xmm_k1z_xmm_xmmm64 = 3070 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpdpbusd_xmm_k1z_xmm_xmmm128b32 = 3071 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpdpbusd_ymm_k1z_ymm_ymmm256b32 = 3072 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpdpbusd_zmm_k1z_zmm_zmmm512b32 = 3073 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpdpbusds_xmm_k1z_xmm_xmmm128b32 = 3074 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpdpbusds_ymm_k1z_ymm_ymmm256b32 = 3075 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpdpbusds_zmm_k1z_zmm_zmmm512b32 = 3076 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpdpwssd_xmm_k1z_xmm_xmmm128b32 = 3077 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpdpwssd_ymm_k1z_ymm_ymmm256b32 = 3078 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpdpwssd_zmm_k1z_zmm_zmmm512b32 = 3079 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vdpbf16ps_xmm_k1z_xmm_xmmm128b32 = 3080 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vdpbf16ps_ymm_k1z_ymm_ymmm256b32 = 3081 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vdpbf16ps_zmm_k1z_zmm_zmmm512b32 = 3082 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vp4dpwssd_zmm_k1z_zmmp3_m128 = 3083 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpdpwssds_xmm_k1z_xmm_xmmm128b32 = 3084 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpdpwssds_ymm_k1z_ymm_ymmm256b32 = 3085 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpdpwssds_zmm_k1z_zmm_zmmm512b32 = 3086 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vp4dpwssds_zmm_k1z_zmmp3_m128 = 3087 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpopcntb_xmm_k1z_xmmm128 = 3088 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpopcntb_ymm_k1z_ymmm256 = 3089 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpopcntb_zmm_k1z_zmmm512 = 3090 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpopcntw_xmm_k1z_xmmm128 = 3091 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpopcntw_ymm_k1z_ymmm256 = 3092 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpopcntw_zmm_k1z_zmmm512 = 3093 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpopcntd_xmm_k1z_xmmm128b32 = 3094 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpopcntd_ymm_k1z_ymmm256b32 = 3095 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpopcntd_zmm_k1z_zmmm512b32 = 3096 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpopcntq_xmm_k1z_xmmm128b64 = 3097 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpopcntq_ymm_k1z_ymmm256b64 = 3098 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpopcntq_zmm_k1z_zmmm512b64 = 3099 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpbroadcastd_xmm_xmmm32 = 3100 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpbroadcastd_ymm_xmmm32 = 3101 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpbroadcastd_xmm_k1z_xmmm32 = 3102 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpbroadcastd_ymm_k1z_xmmm32 = 3103 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpbroadcastd_zmm_k1z_xmmm32 = 3104 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpbroadcastq_xmm_xmmm64 = 3105 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpbroadcastq_ymm_xmmm64 = 3106 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vbroadcasti32x2_xmm_k1z_xmmm64 = 3107 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vbroadcasti32x2_ymm_k1z_xmmm64 = 3108 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vbroadcasti32x2_zmm_k1z_xmmm64 = 3109 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpbroadcastq_xmm_k1z_xmmm64 = 3110 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpbroadcastq_ymm_k1z_xmmm64 = 3111 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpbroadcastq_zmm_k1z_xmmm64 = 3112 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vbroadcasti128_ymm_m128 = 3113 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vbroadcasti32x4_ymm_k1z_m128 = 3114 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vbroadcasti32x4_zmm_k1z_m128 = 3115 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vbroadcasti64x2_ymm_k1z_m128 = 3116 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vbroadcasti64x2_zmm_k1z_m128 = 3117 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vbroadcasti32x8_zmm_k1z_m256 = 3118 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vbroadcasti64x4_zmm_k1z_m256 = 3119 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpexpandb_xmm_k1z_xmmm128 = 3120 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpexpandb_ymm_k1z_ymmm256 = 3121 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpexpandb_zmm_k1z_zmmm512 = 3122 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpexpandw_xmm_k1z_xmmm128 = 3123 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpexpandw_ymm_k1z_ymmm256 = 3124 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpexpandw_zmm_k1z_zmmm512 = 3125 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpcompressb_xmmm128_k1z_xmm = 3126 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpcompressb_ymmm256_k1z_ymm = 3127 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpcompressb_zmmm512_k1z_zmm = 3128 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpcompressw_xmmm128_k1z_xmm = 3129 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpcompressw_ymmm256_k1z_ymm = 3130 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpcompressw_zmmm512_k1z_zmm = 3131 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpblendmd_xmm_k1z_xmm_xmmm128b32 = 3132 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpblendmd_ymm_k1z_ymm_ymmm256b32 = 3133 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpblendmd_zmm_k1z_zmm_zmmm512b32 = 3134 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpblendmq_xmm_k1z_xmm_xmmm128b64 = 3135 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpblendmq_ymm_k1z_ymm_ymmm256b64 = 3136 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpblendmq_zmm_k1z_zmm_zmmm512b64 = 3137 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vblendmps_xmm_k1z_xmm_xmmm128b32 = 3138 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vblendmps_ymm_k1z_ymm_ymmm256b32 = 3139 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vblendmps_zmm_k1z_zmm_zmmm512b32 = 3140 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vblendmpd_xmm_k1z_xmm_xmmm128b64 = 3141 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vblendmpd_ymm_k1z_ymm_ymmm256b64 = 3142 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vblendmpd_zmm_k1z_zmm_zmmm512b64 = 3143 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpblendmb_xmm_k1z_xmm_xmmm128 = 3144 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpblendmb_ymm_k1z_ymm_ymmm256 = 3145 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpblendmb_zmm_k1z_zmm_zmmm512 = 3146 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpblendmw_xmm_k1z_xmm_xmmm128 = 3147 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpblendmw_ymm_k1z_ymm_ymmm256 = 3148 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpblendmw_zmm_k1z_zmm_zmmm512 = 3149 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vp2intersectd_kp1_xmm_xmmm128b32 = 3150 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vp2intersectd_kp1_ymm_ymmm256b32 = 3151 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vp2intersectd_kp1_zmm_zmmm512b32 = 3152 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vp2intersectq_kp1_xmm_xmmm128b64 = 3153 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vp2intersectq_kp1_ymm_ymmm256b64 = 3154 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vp2intersectq_kp1_zmm_zmmm512b64 = 3155 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpshldvw_xmm_k1z_xmm_xmmm128 = 3156 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpshldvw_ymm_k1z_ymm_ymmm256 = 3157 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpshldvw_zmm_k1z_zmm_zmmm512 = 3158 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpshldvd_xmm_k1z_xmm_xmmm128b32 = 3159 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpshldvd_ymm_k1z_ymm_ymmm256b32 = 3160 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpshldvd_zmm_k1z_zmm_zmmm512b32 = 3161 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpshldvq_xmm_k1z_xmm_xmmm128b64 = 3162 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpshldvq_ymm_k1z_ymm_ymmm256b64 = 3163 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpshldvq_zmm_k1z_zmm_zmmm512b64 = 3164 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpshrdvw_xmm_k1z_xmm_xmmm128 = 3165 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpshrdvw_ymm_k1z_ymm_ymmm256 = 3166 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpshrdvw_zmm_k1z_zmm_zmmm512 = 3167 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vcvtneps2bf16_xmm_k1z_xmmm128b32 = 3168 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vcvtneps2bf16_xmm_k1z_ymmm256b32 = 3169 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vcvtneps2bf16_ymm_k1z_zmmm512b32 = 3170 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vcvtne2ps2bf16_xmm_k1z_xmm_xmmm128b32 = 3171 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vcvtne2ps2bf16_ymm_k1z_ymm_ymmm256b32 = 3172 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vcvtne2ps2bf16_zmm_k1z_zmm_zmmm512b32 = 3173 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpshrdvd_xmm_k1z_xmm_xmmm128b32 = 3174 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpshrdvd_ymm_k1z_ymm_ymmm256b32 = 3175 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpshrdvd_zmm_k1z_zmm_zmmm512b32 = 3176 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpshrdvq_xmm_k1z_xmm_xmmm128b64 = 3177 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpshrdvq_ymm_k1z_ymm_ymmm256b64 = 3178 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpshrdvq_zmm_k1z_zmm_zmmm512b64 = 3179 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpermi2b_xmm_k1z_xmm_xmmm128 = 3180 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpermi2b_ymm_k1z_ymm_ymmm256 = 3181 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpermi2b_zmm_k1z_zmm_zmmm512 = 3182 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpermi2w_xmm_k1z_xmm_xmmm128 = 3183 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpermi2w_ymm_k1z_ymm_ymmm256 = 3184 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpermi2w_zmm_k1z_zmm_zmmm512 = 3185 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpermi2d_xmm_k1z_xmm_xmmm128b32 = 3186 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpermi2d_ymm_k1z_ymm_ymmm256b32 = 3187 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpermi2d_zmm_k1z_zmm_zmmm512b32 = 3188 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpermi2q_xmm_k1z_xmm_xmmm128b64 = 3189 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpermi2q_ymm_k1z_ymm_ymmm256b64 = 3190 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpermi2q_zmm_k1z_zmm_zmmm512b64 = 3191 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpermi2ps_xmm_k1z_xmm_xmmm128b32 = 3192 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpermi2ps_ymm_k1z_ymm_ymmm256b32 = 3193 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpermi2ps_zmm_k1z_zmm_zmmm512b32 = 3194 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpermi2pd_xmm_k1z_xmm_xmmm128b64 = 3195 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpermi2pd_ymm_k1z_ymm_ymmm256b64 = 3196 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpermi2pd_zmm_k1z_zmm_zmmm512b64 = 3197 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpbroadcastb_xmm_xmmm8 = 3198 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpbroadcastb_ymm_xmmm8 = 3199 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpbroadcastb_xmm_k1z_xmmm8 = 3200 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpbroadcastb_ymm_k1z_xmmm8 = 3201 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpbroadcastb_zmm_k1z_xmmm8 = 3202 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpbroadcastw_xmm_xmmm16 = 3203 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpbroadcastw_ymm_xmmm16 = 3204 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpbroadcastw_xmm_k1z_xmmm16 = 3205 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpbroadcastw_ymm_k1z_xmmm16 = 3206 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpbroadcastw_zmm_k1z_xmmm16 = 3207 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpbroadcastb_xmm_k1z_r32 = 3208 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpbroadcastb_ymm_k1z_r32 = 3209 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpbroadcastb_zmm_k1z_r32 = 3210 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpbroadcastw_xmm_k1z_r32 = 3211 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpbroadcastw_ymm_k1z_r32 = 3212 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpbroadcastw_zmm_k1z_r32 = 3213 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpbroadcastd_xmm_k1z_r32 = 3214 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpbroadcastd_ymm_k1z_r32 = 3215 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpbroadcastd_zmm_k1z_r32 = 3216 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpbroadcastq_xmm_k1z_r64 = 3217 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpbroadcastq_ymm_k1z_r64 = 3218 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpbroadcastq_zmm_k1z_r64 = 3219 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpermt2b_xmm_k1z_xmm_xmmm128 = 3220 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpermt2b_ymm_k1z_ymm_ymmm256 = 3221 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpermt2b_zmm_k1z_zmm_zmmm512 = 3222 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpermt2w_xmm_k1z_xmm_xmmm128 = 3223 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpermt2w_ymm_k1z_ymm_ymmm256 = 3224 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpermt2w_zmm_k1z_zmm_zmmm512 = 3225 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpermt2d_xmm_k1z_xmm_xmmm128b32 = 3226 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpermt2d_ymm_k1z_ymm_ymmm256b32 = 3227 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpermt2d_zmm_k1z_zmm_zmmm512b32 = 3228 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpermt2q_xmm_k1z_xmm_xmmm128b64 = 3229 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpermt2q_ymm_k1z_ymm_ymmm256b64 = 3230 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpermt2q_zmm_k1z_zmm_zmmm512b64 = 3231 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpermt2ps_xmm_k1z_xmm_xmmm128b32 = 3232 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpermt2ps_ymm_k1z_ymm_ymmm256b32 = 3233 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpermt2ps_zmm_k1z_zmm_zmmm512b32 = 3234 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpermt2pd_xmm_k1z_xmm_xmmm128b64 = 3235 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpermt2pd_ymm_k1z_ymm_ymmm256b64 = 3236 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpermt2pd_zmm_k1z_zmm_zmmm512b64 = 3237 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Invept_r32_m128 = 3238 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Invept_r64_m128 = 3239 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Invvpid_r32_m128 = 3240 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Invvpid_r64_m128 = 3241 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Invpcid_r32_m128 = 3242 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Invpcid_r64_m128 = 3243 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpmultishiftqb_xmm_k1z_xmm_xmmm128b64 = 3244 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpmultishiftqb_ymm_k1z_ymm_ymmm256b64 = 3245 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpmultishiftqb_zmm_k1z_zmm_zmmm512b64 = 3246 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vexpandps_xmm_k1z_xmmm128 = 3247 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vexpandps_ymm_k1z_ymmm256 = 3248 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vexpandps_zmm_k1z_zmmm512 = 3249 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vexpandpd_xmm_k1z_xmmm128 = 3250 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vexpandpd_ymm_k1z_ymmm256 = 3251 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vexpandpd_zmm_k1z_zmmm512 = 3252 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpexpandd_xmm_k1z_xmmm128 = 3253 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpexpandd_ymm_k1z_ymmm256 = 3254 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpexpandd_zmm_k1z_zmmm512 = 3255 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpexpandq_xmm_k1z_xmmm128 = 3256 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpexpandq_ymm_k1z_ymmm256 = 3257 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpexpandq_zmm_k1z_zmmm512 = 3258 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vcompressps_xmmm128_k1z_xmm = 3259 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vcompressps_ymmm256_k1z_ymm = 3260 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vcompressps_zmmm512_k1z_zmm = 3261 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vcompresspd_xmmm128_k1z_xmm = 3262 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vcompresspd_ymmm256_k1z_ymm = 3263 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vcompresspd_zmmm512_k1z_zmm = 3264 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpcompressd_xmmm128_k1z_xmm = 3265 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpcompressd_ymmm256_k1z_ymm = 3266 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpcompressd_zmmm512_k1z_zmm = 3267 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpcompressq_xmmm128_k1z_xmm = 3268 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpcompressq_ymmm256_k1z_ymm = 3269 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpcompressq_zmmm512_k1z_zmm = 3270 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpmaskmovd_xmm_xmm_m128 = 3271 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpmaskmovd_ymm_ymm_m256 = 3272 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpmaskmovq_xmm_xmm_m128 = 3273 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpmaskmovq_ymm_ymm_m256 = 3274 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpermb_xmm_k1z_xmm_xmmm128 = 3275 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpermb_ymm_k1z_ymm_ymmm256 = 3276 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpermb_zmm_k1z_zmm_zmmm512 = 3277 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpermw_xmm_k1z_xmm_xmmm128 = 3278 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpermw_ymm_k1z_ymm_ymmm256 = 3279 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpermw_zmm_k1z_zmm_zmmm512 = 3280 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpmaskmovd_m128_xmm_xmm = 3281 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpmaskmovd_m256_ymm_ymm = 3282 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpmaskmovq_m128_xmm_xmm = 3283 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpmaskmovq_m256_ymm_ymm = 3284 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpshufbitqmb_kr_k1_xmm_xmmm128 = 3285 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpshufbitqmb_kr_k1_ymm_ymmm256 = 3286 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpshufbitqmb_kr_k1_zmm_zmmm512 = 3287 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpgatherdd_xmm_vm32x_xmm = 3288 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpgatherdd_ymm_vm32y_ymm = 3289 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpgatherdq_xmm_vm32x_xmm = 3290 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpgatherdq_ymm_vm32x_ymm = 3291 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpgatherdd_xmm_k1_vm32x = 3292 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpgatherdd_ymm_k1_vm32y = 3293 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpgatherdd_zmm_k1_vm32z = 3294 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpgatherdq_xmm_k1_vm32x = 3295 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpgatherdq_ymm_k1_vm32x = 3296 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpgatherdq_zmm_k1_vm32y = 3297 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpgatherqd_xmm_vm64x_xmm = 3298 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpgatherqd_xmm_vm64y_xmm = 3299 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpgatherqq_xmm_vm64x_xmm = 3300 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpgatherqq_ymm_vm64y_ymm = 3301 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpgatherqd_xmm_k1_vm64x = 3302 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpgatherqd_xmm_k1_vm64y = 3303 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpgatherqd_ymm_k1_vm64z = 3304 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpgatherqq_xmm_k1_vm64x = 3305 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpgatherqq_ymm_k1_vm64y = 3306 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpgatherqq_zmm_k1_vm64z = 3307 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vgatherdps_xmm_vm32x_xmm = 3308 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vgatherdps_ymm_vm32y_ymm = 3309 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vgatherdpd_xmm_vm32x_xmm = 3310 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vgatherdpd_ymm_vm32x_ymm = 3311 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vgatherdps_xmm_k1_vm32x = 3312 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vgatherdps_ymm_k1_vm32y = 3313 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vgatherdps_zmm_k1_vm32z = 3314 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vgatherdpd_xmm_k1_vm32x = 3315 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vgatherdpd_ymm_k1_vm32x = 3316 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vgatherdpd_zmm_k1_vm32y = 3317 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vgatherqps_xmm_vm64x_xmm = 3318 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vgatherqps_xmm_vm64y_xmm = 3319 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vgatherqpd_xmm_vm64x_xmm = 3320 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vgatherqpd_ymm_vm64y_ymm = 3321 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vgatherqps_xmm_k1_vm64x = 3322 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vgatherqps_xmm_k1_vm64y = 3323 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vgatherqps_ymm_k1_vm64z = 3324 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vgatherqpd_xmm_k1_vm64x = 3325 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vgatherqpd_ymm_k1_vm64y = 3326 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vgatherqpd_zmm_k1_vm64z = 3327 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vfmaddsub132ps_xmm_xmm_xmmm128 = 3328 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vfmaddsub132ps_ymm_ymm_ymmm256 = 3329 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vfmaddsub132pd_xmm_xmm_xmmm128 = 3330 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vfmaddsub132pd_ymm_ymm_ymmm256 = 3331 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vfmaddsub132ps_xmm_k1z_xmm_xmmm128b32 = 3332 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vfmaddsub132ps_ymm_k1z_ymm_ymmm256b32 = 3333 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vfmaddsub132ps_zmm_k1z_zmm_zmmm512b32_er = 3334 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vfmaddsub132pd_xmm_k1z_xmm_xmmm128b64 = 3335 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vfmaddsub132pd_ymm_k1z_ymm_ymmm256b64 = 3336 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vfmaddsub132pd_zmm_k1z_zmm_zmmm512b64_er = 3337 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vfmsubadd132ps_xmm_xmm_xmmm128 = 3338 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vfmsubadd132ps_ymm_ymm_ymmm256 = 3339 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vfmsubadd132pd_xmm_xmm_xmmm128 = 3340 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vfmsubadd132pd_ymm_ymm_ymmm256 = 3341 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vfmsubadd132ps_xmm_k1z_xmm_xmmm128b32 = 3342 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vfmsubadd132ps_ymm_k1z_ymm_ymmm256b32 = 3343 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vfmsubadd132ps_zmm_k1z_zmm_zmmm512b32_er = 3344 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vfmsubadd132pd_xmm_k1z_xmm_xmmm128b64 = 3345 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vfmsubadd132pd_ymm_k1z_ymm_ymmm256b64 = 3346 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vfmsubadd132pd_zmm_k1z_zmm_zmmm512b64_er = 3347 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vfmadd132ps_xmm_xmm_xmmm128 = 3348 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vfmadd132ps_ymm_ymm_ymmm256 = 3349 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vfmadd132pd_xmm_xmm_xmmm128 = 3350 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vfmadd132pd_ymm_ymm_ymmm256 = 3351 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vfmadd132ps_xmm_k1z_xmm_xmmm128b32 = 3352 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vfmadd132ps_ymm_k1z_ymm_ymmm256b32 = 3353 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vfmadd132ps_zmm_k1z_zmm_zmmm512b32_er = 3354 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vfmadd132pd_xmm_k1z_xmm_xmmm128b64 = 3355 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vfmadd132pd_ymm_k1z_ymm_ymmm256b64 = 3356 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vfmadd132pd_zmm_k1z_zmm_zmmm512b64_er = 3357 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vfmadd132ss_xmm_xmm_xmmm32 = 3358 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vfmadd132sd_xmm_xmm_xmmm64 = 3359 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vfmadd132ss_xmm_k1z_xmm_xmmm32_er = 3360 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vfmadd132sd_xmm_k1z_xmm_xmmm64_er = 3361 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vfmsub132ps_xmm_xmm_xmmm128 = 3362 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vfmsub132ps_ymm_ymm_ymmm256 = 3363 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vfmsub132pd_xmm_xmm_xmmm128 = 3364 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vfmsub132pd_ymm_ymm_ymmm256 = 3365 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vfmsub132ps_xmm_k1z_xmm_xmmm128b32 = 3366 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vfmsub132ps_ymm_k1z_ymm_ymmm256b32 = 3367 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vfmsub132ps_zmm_k1z_zmm_zmmm512b32_er = 3368 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vfmsub132pd_xmm_k1z_xmm_xmmm128b64 = 3369 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vfmsub132pd_ymm_k1z_ymm_ymmm256b64 = 3370 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vfmsub132pd_zmm_k1z_zmm_zmmm512b64_er = 3371 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_V4fmaddps_zmm_k1z_zmmp3_m128 = 3372 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vfmsub132ss_xmm_xmm_xmmm32 = 3373 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vfmsub132sd_xmm_xmm_xmmm64 = 3374 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vfmsub132ss_xmm_k1z_xmm_xmmm32_er = 3375 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vfmsub132sd_xmm_k1z_xmm_xmmm64_er = 3376 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_V4fmaddss_xmm_k1z_xmmp3_m128 = 3377 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vfnmadd132ps_xmm_xmm_xmmm128 = 3378 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vfnmadd132ps_ymm_ymm_ymmm256 = 3379 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vfnmadd132pd_xmm_xmm_xmmm128 = 3380 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vfnmadd132pd_ymm_ymm_ymmm256 = 3381 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vfnmadd132ps_xmm_k1z_xmm_xmmm128b32 = 3382 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vfnmadd132ps_ymm_k1z_ymm_ymmm256b32 = 3383 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vfnmadd132ps_zmm_k1z_zmm_zmmm512b32_er = 3384 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vfnmadd132pd_xmm_k1z_xmm_xmmm128b64 = 3385 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vfnmadd132pd_ymm_k1z_ymm_ymmm256b64 = 3386 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vfnmadd132pd_zmm_k1z_zmm_zmmm512b64_er = 3387 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vfnmadd132ss_xmm_xmm_xmmm32 = 3388 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vfnmadd132sd_xmm_xmm_xmmm64 = 3389 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vfnmadd132ss_xmm_k1z_xmm_xmmm32_er = 3390 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vfnmadd132sd_xmm_k1z_xmm_xmmm64_er = 3391 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vfnmsub132ps_xmm_xmm_xmmm128 = 3392 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vfnmsub132ps_ymm_ymm_ymmm256 = 3393 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vfnmsub132pd_xmm_xmm_xmmm128 = 3394 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vfnmsub132pd_ymm_ymm_ymmm256 = 3395 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vfnmsub132ps_xmm_k1z_xmm_xmmm128b32 = 3396 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vfnmsub132ps_ymm_k1z_ymm_ymmm256b32 = 3397 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vfnmsub132ps_zmm_k1z_zmm_zmmm512b32_er = 3398 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vfnmsub132pd_xmm_k1z_xmm_xmmm128b64 = 3399 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vfnmsub132pd_ymm_k1z_ymm_ymmm256b64 = 3400 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vfnmsub132pd_zmm_k1z_zmm_zmmm512b64_er = 3401 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vfnmsub132ss_xmm_xmm_xmmm32 = 3402 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vfnmsub132sd_xmm_xmm_xmmm64 = 3403 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vfnmsub132ss_xmm_k1z_xmm_xmmm32_er = 3404 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vfnmsub132sd_xmm_k1z_xmm_xmmm64_er = 3405 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpscatterdd_vm32x_k1_xmm = 3406 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpscatterdd_vm32y_k1_ymm = 3407 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpscatterdd_vm32z_k1_zmm = 3408 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpscatterdq_vm32x_k1_xmm = 3409 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpscatterdq_vm32x_k1_ymm = 3410 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpscatterdq_vm32y_k1_zmm = 3411 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpscatterqd_vm64x_k1_xmm = 3412 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpscatterqd_vm64y_k1_xmm = 3413 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpscatterqd_vm64z_k1_ymm = 3414 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpscatterqq_vm64x_k1_xmm = 3415 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpscatterqq_vm64y_k1_ymm = 3416 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpscatterqq_vm64z_k1_zmm = 3417 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vscatterdps_vm32x_k1_xmm = 3418 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vscatterdps_vm32y_k1_ymm = 3419 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vscatterdps_vm32z_k1_zmm = 3420 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vscatterdpd_vm32x_k1_xmm = 3421 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vscatterdpd_vm32x_k1_ymm = 3422 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vscatterdpd_vm32y_k1_zmm = 3423 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vscatterqps_vm64x_k1_xmm = 3424 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vscatterqps_vm64y_k1_xmm = 3425 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vscatterqps_vm64z_k1_ymm = 3426 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vscatterqpd_vm64x_k1_xmm = 3427 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vscatterqpd_vm64y_k1_ymm = 3428 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vscatterqpd_vm64z_k1_zmm = 3429 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vfmaddsub213ps_xmm_xmm_xmmm128 = 3430 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vfmaddsub213ps_ymm_ymm_ymmm256 = 3431 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vfmaddsub213pd_xmm_xmm_xmmm128 = 3432 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vfmaddsub213pd_ymm_ymm_ymmm256 = 3433 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vfmaddsub213ps_xmm_k1z_xmm_xmmm128b32 = 3434 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vfmaddsub213ps_ymm_k1z_ymm_ymmm256b32 = 3435 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vfmaddsub213ps_zmm_k1z_zmm_zmmm512b32_er = 3436 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vfmaddsub213pd_xmm_k1z_xmm_xmmm128b64 = 3437 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vfmaddsub213pd_ymm_k1z_ymm_ymmm256b64 = 3438 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vfmaddsub213pd_zmm_k1z_zmm_zmmm512b64_er = 3439 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vfmsubadd213ps_xmm_xmm_xmmm128 = 3440 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vfmsubadd213ps_ymm_ymm_ymmm256 = 3441 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vfmsubadd213pd_xmm_xmm_xmmm128 = 3442 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vfmsubadd213pd_ymm_ymm_ymmm256 = 3443 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vfmsubadd213ps_xmm_k1z_xmm_xmmm128b32 = 3444 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vfmsubadd213ps_ymm_k1z_ymm_ymmm256b32 = 3445 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vfmsubadd213ps_zmm_k1z_zmm_zmmm512b32_er = 3446 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vfmsubadd213pd_xmm_k1z_xmm_xmmm128b64 = 3447 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vfmsubadd213pd_ymm_k1z_ymm_ymmm256b64 = 3448 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vfmsubadd213pd_zmm_k1z_zmm_zmmm512b64_er = 3449 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vfmadd213ps_xmm_xmm_xmmm128 = 3450 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vfmadd213ps_ymm_ymm_ymmm256 = 3451 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vfmadd213pd_xmm_xmm_xmmm128 = 3452 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vfmadd213pd_ymm_ymm_ymmm256 = 3453 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vfmadd213ps_xmm_k1z_xmm_xmmm128b32 = 3454 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vfmadd213ps_ymm_k1z_ymm_ymmm256b32 = 3455 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vfmadd213ps_zmm_k1z_zmm_zmmm512b32_er = 3456 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vfmadd213pd_xmm_k1z_xmm_xmmm128b64 = 3457 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vfmadd213pd_ymm_k1z_ymm_ymmm256b64 = 3458 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vfmadd213pd_zmm_k1z_zmm_zmmm512b64_er = 3459 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vfmadd213ss_xmm_xmm_xmmm32 = 3460 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vfmadd213sd_xmm_xmm_xmmm64 = 3461 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vfmadd213ss_xmm_k1z_xmm_xmmm32_er = 3462 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vfmadd213sd_xmm_k1z_xmm_xmmm64_er = 3463 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vfmsub213ps_xmm_xmm_xmmm128 = 3464 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vfmsub213ps_ymm_ymm_ymmm256 = 3465 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vfmsub213pd_xmm_xmm_xmmm128 = 3466 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vfmsub213pd_ymm_ymm_ymmm256 = 3467 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vfmsub213ps_xmm_k1z_xmm_xmmm128b32 = 3468 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vfmsub213ps_ymm_k1z_ymm_ymmm256b32 = 3469 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vfmsub213ps_zmm_k1z_zmm_zmmm512b32_er = 3470 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vfmsub213pd_xmm_k1z_xmm_xmmm128b64 = 3471 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vfmsub213pd_ymm_k1z_ymm_ymmm256b64 = 3472 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vfmsub213pd_zmm_k1z_zmm_zmmm512b64_er = 3473 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_V4fnmaddps_zmm_k1z_zmmp3_m128 = 3474 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vfmsub213ss_xmm_xmm_xmmm32 = 3475 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vfmsub213sd_xmm_xmm_xmmm64 = 3476 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vfmsub213ss_xmm_k1z_xmm_xmmm32_er = 3477 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vfmsub213sd_xmm_k1z_xmm_xmmm64_er = 3478 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_V4fnmaddss_xmm_k1z_xmmp3_m128 = 3479 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vfnmadd213ps_xmm_xmm_xmmm128 = 3480 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vfnmadd213ps_ymm_ymm_ymmm256 = 3481 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vfnmadd213pd_xmm_xmm_xmmm128 = 3482 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vfnmadd213pd_ymm_ymm_ymmm256 = 3483 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vfnmadd213ps_xmm_k1z_xmm_xmmm128b32 = 3484 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vfnmadd213ps_ymm_k1z_ymm_ymmm256b32 = 3485 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vfnmadd213ps_zmm_k1z_zmm_zmmm512b32_er = 3486 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vfnmadd213pd_xmm_k1z_xmm_xmmm128b64 = 3487 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vfnmadd213pd_ymm_k1z_ymm_ymmm256b64 = 3488 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vfnmadd213pd_zmm_k1z_zmm_zmmm512b64_er = 3489 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vfnmadd213ss_xmm_xmm_xmmm32 = 3490 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vfnmadd213sd_xmm_xmm_xmmm64 = 3491 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vfnmadd213ss_xmm_k1z_xmm_xmmm32_er = 3492 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vfnmadd213sd_xmm_k1z_xmm_xmmm64_er = 3493 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vfnmsub213ps_xmm_xmm_xmmm128 = 3494 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vfnmsub213ps_ymm_ymm_ymmm256 = 3495 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vfnmsub213pd_xmm_xmm_xmmm128 = 3496 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vfnmsub213pd_ymm_ymm_ymmm256 = 3497 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vfnmsub213ps_xmm_k1z_xmm_xmmm128b32 = 3498 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vfnmsub213ps_ymm_k1z_ymm_ymmm256b32 = 3499 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vfnmsub213ps_zmm_k1z_zmm_zmmm512b32_er = 3500 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vfnmsub213pd_xmm_k1z_xmm_xmmm128b64 = 3501 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vfnmsub213pd_ymm_k1z_ymm_ymmm256b64 = 3502 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vfnmsub213pd_zmm_k1z_zmm_zmmm512b64_er = 3503 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vfnmsub213ss_xmm_xmm_xmmm32 = 3504 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vfnmsub213sd_xmm_xmm_xmmm64 = 3505 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vfnmsub213ss_xmm_k1z_xmm_xmmm32_er = 3506 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vfnmsub213sd_xmm_k1z_xmm_xmmm64_er = 3507 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpmadd52luq_xmm_k1z_xmm_xmmm128b64 = 3508 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpmadd52luq_ymm_k1z_ymm_ymmm256b64 = 3509 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpmadd52luq_zmm_k1z_zmm_zmmm512b64 = 3510 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpmadd52huq_xmm_k1z_xmm_xmmm128b64 = 3511 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpmadd52huq_ymm_k1z_ymm_ymmm256b64 = 3512 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpmadd52huq_zmm_k1z_zmm_zmmm512b64 = 3513 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vfmaddsub231ps_xmm_xmm_xmmm128 = 3514 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vfmaddsub231ps_ymm_ymm_ymmm256 = 3515 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vfmaddsub231pd_xmm_xmm_xmmm128 = 3516 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vfmaddsub231pd_ymm_ymm_ymmm256 = 3517 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vfmaddsub231ps_xmm_k1z_xmm_xmmm128b32 = 3518 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vfmaddsub231ps_ymm_k1z_ymm_ymmm256b32 = 3519 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vfmaddsub231ps_zmm_k1z_zmm_zmmm512b32_er = 3520 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vfmaddsub231pd_xmm_k1z_xmm_xmmm128b64 = 3521 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vfmaddsub231pd_ymm_k1z_ymm_ymmm256b64 = 3522 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vfmaddsub231pd_zmm_k1z_zmm_zmmm512b64_er = 3523 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vfmsubadd231ps_xmm_xmm_xmmm128 = 3524 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vfmsubadd231ps_ymm_ymm_ymmm256 = 3525 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vfmsubadd231pd_xmm_xmm_xmmm128 = 3526 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vfmsubadd231pd_ymm_ymm_ymmm256 = 3527 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vfmsubadd231ps_xmm_k1z_xmm_xmmm128b32 = 3528 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vfmsubadd231ps_ymm_k1z_ymm_ymmm256b32 = 3529 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vfmsubadd231ps_zmm_k1z_zmm_zmmm512b32_er = 3530 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vfmsubadd231pd_xmm_k1z_xmm_xmmm128b64 = 3531 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vfmsubadd231pd_ymm_k1z_ymm_ymmm256b64 = 3532 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vfmsubadd231pd_zmm_k1z_zmm_zmmm512b64_er = 3533 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vfmadd231ps_xmm_xmm_xmmm128 = 3534 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vfmadd231ps_ymm_ymm_ymmm256 = 3535 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vfmadd231pd_xmm_xmm_xmmm128 = 3536 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vfmadd231pd_ymm_ymm_ymmm256 = 3537 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vfmadd231ps_xmm_k1z_xmm_xmmm128b32 = 3538 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vfmadd231ps_ymm_k1z_ymm_ymmm256b32 = 3539 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vfmadd231ps_zmm_k1z_zmm_zmmm512b32_er = 3540 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vfmadd231pd_xmm_k1z_xmm_xmmm128b64 = 3541 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vfmadd231pd_ymm_k1z_ymm_ymmm256b64 = 3542 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vfmadd231pd_zmm_k1z_zmm_zmmm512b64_er = 3543 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vfmadd231ss_xmm_xmm_xmmm32 = 3544 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vfmadd231sd_xmm_xmm_xmmm64 = 3545 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vfmadd231ss_xmm_k1z_xmm_xmmm32_er = 3546 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vfmadd231sd_xmm_k1z_xmm_xmmm64_er = 3547 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vfmsub231ps_xmm_xmm_xmmm128 = 3548 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vfmsub231ps_ymm_ymm_ymmm256 = 3549 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vfmsub231pd_xmm_xmm_xmmm128 = 3550 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vfmsub231pd_ymm_ymm_ymmm256 = 3551 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vfmsub231ps_xmm_k1z_xmm_xmmm128b32 = 3552 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vfmsub231ps_ymm_k1z_ymm_ymmm256b32 = 3553 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vfmsub231ps_zmm_k1z_zmm_zmmm512b32_er = 3554 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vfmsub231pd_xmm_k1z_xmm_xmmm128b64 = 3555 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vfmsub231pd_ymm_k1z_ymm_ymmm256b64 = 3556 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vfmsub231pd_zmm_k1z_zmm_zmmm512b64_er = 3557 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vfmsub231ss_xmm_xmm_xmmm32 = 3558 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vfmsub231sd_xmm_xmm_xmmm64 = 3559 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vfmsub231ss_xmm_k1z_xmm_xmmm32_er = 3560 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vfmsub231sd_xmm_k1z_xmm_xmmm64_er = 3561 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vfnmadd231ps_xmm_xmm_xmmm128 = 3562 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vfnmadd231ps_ymm_ymm_ymmm256 = 3563 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vfnmadd231pd_xmm_xmm_xmmm128 = 3564 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vfnmadd231pd_ymm_ymm_ymmm256 = 3565 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vfnmadd231ps_xmm_k1z_xmm_xmmm128b32 = 3566 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vfnmadd231ps_ymm_k1z_ymm_ymmm256b32 = 3567 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vfnmadd231ps_zmm_k1z_zmm_zmmm512b32_er = 3568 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vfnmadd231pd_xmm_k1z_xmm_xmmm128b64 = 3569 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vfnmadd231pd_ymm_k1z_ymm_ymmm256b64 = 3570 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vfnmadd231pd_zmm_k1z_zmm_zmmm512b64_er = 3571 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vfnmadd231ss_xmm_xmm_xmmm32 = 3572 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vfnmadd231sd_xmm_xmm_xmmm64 = 3573 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vfnmadd231ss_xmm_k1z_xmm_xmmm32_er = 3574 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vfnmadd231sd_xmm_k1z_xmm_xmmm64_er = 3575 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vfnmsub231ps_xmm_xmm_xmmm128 = 3576 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vfnmsub231ps_ymm_ymm_ymmm256 = 3577 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vfnmsub231pd_xmm_xmm_xmmm128 = 3578 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vfnmsub231pd_ymm_ymm_ymmm256 = 3579 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vfnmsub231ps_xmm_k1z_xmm_xmmm128b32 = 3580 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vfnmsub231ps_ymm_k1z_ymm_ymmm256b32 = 3581 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vfnmsub231ps_zmm_k1z_zmm_zmmm512b32_er = 3582 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vfnmsub231pd_xmm_k1z_xmm_xmmm128b64 = 3583 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vfnmsub231pd_ymm_k1z_ymm_ymmm256b64 = 3584 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vfnmsub231pd_zmm_k1z_zmm_zmmm512b64_er = 3585 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vfnmsub231ss_xmm_xmm_xmmm32 = 3586 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vfnmsub231sd_xmm_xmm_xmmm64 = 3587 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vfnmsub231ss_xmm_k1z_xmm_xmmm32_er = 3588 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vfnmsub231sd_xmm_k1z_xmm_xmmm64_er = 3589 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpconflictd_xmm_k1z_xmmm128b32 = 3590 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpconflictd_ymm_k1z_ymmm256b32 = 3591 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpconflictd_zmm_k1z_zmmm512b32 = 3592 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpconflictq_xmm_k1z_xmmm128b64 = 3593 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpconflictq_ymm_k1z_ymmm256b64 = 3594 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpconflictq_zmm_k1z_zmmm512b64 = 3595 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vgatherpf0dps_vm32z_k1 = 3596 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vgatherpf0dpd_vm32y_k1 = 3597 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vgatherpf1dps_vm32z_k1 = 3598 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vgatherpf1dpd_vm32y_k1 = 3599 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vscatterpf0dps_vm32z_k1 = 3600 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vscatterpf0dpd_vm32y_k1 = 3601 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vscatterpf1dps_vm32z_k1 = 3602 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vscatterpf1dpd_vm32y_k1 = 3603 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vgatherpf0qps_vm64z_k1 = 3604 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vgatherpf0qpd_vm64z_k1 = 3605 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vgatherpf1qps_vm64z_k1 = 3606 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vgatherpf1qpd_vm64z_k1 = 3607 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vscatterpf0qps_vm64z_k1 = 3608 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vscatterpf0qpd_vm64z_k1 = 3609 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vscatterpf1qps_vm64z_k1 = 3610 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vscatterpf1qpd_vm64z_k1 = 3611 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Sha1nexte_xmm_xmmm128 = 3612 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vexp2ps_zmm_k1z_zmmm512b32_sae = 3613 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vexp2pd_zmm_k1z_zmmm512b64_sae = 3614 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Sha1msg1_xmm_xmmm128 = 3615 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Sha1msg2_xmm_xmmm128 = 3616 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vrcp28ps_zmm_k1z_zmmm512b32_sae = 3617 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vrcp28pd_zmm_k1z_zmmm512b64_sae = 3618 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Sha256rnds2_xmm_xmmm128 = 3619 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vrcp28ss_xmm_k1z_xmm_xmmm32_sae = 3620 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vrcp28sd_xmm_k1z_xmm_xmmm64_sae = 3621 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Sha256msg1_xmm_xmmm128 = 3622 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vrsqrt28ps_zmm_k1z_zmmm512b32_sae = 3623 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vrsqrt28pd_zmm_k1z_zmmm512b64_sae = 3624 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Sha256msg2_xmm_xmmm128 = 3625 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vrsqrt28ss_xmm_k1z_xmm_xmmm32_sae = 3626 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vrsqrt28sd_xmm_k1z_xmm_xmmm64_sae = 3627 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Gf2p8mulb_xmm_xmmm128 = 3628 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vgf2p8mulb_xmm_xmm_xmmm128 = 3629 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vgf2p8mulb_ymm_ymm_ymmm256 = 3630 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vgf2p8mulb_xmm_k1z_xmm_xmmm128 = 3631 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vgf2p8mulb_ymm_k1z_ymm_ymmm256 = 3632 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vgf2p8mulb_zmm_k1z_zmm_zmmm512 = 3633 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Aesimc_xmm_xmmm128 = 3634 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vaesimc_xmm_xmmm128 = 3635 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Aesenc_xmm_xmmm128 = 3636 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vaesenc_xmm_xmm_xmmm128 = 3637 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vaesenc_ymm_ymm_ymmm256 = 3638 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vaesenc_xmm_xmm_xmmm128 = 3639 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vaesenc_ymm_ymm_ymmm256 = 3640 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vaesenc_zmm_zmm_zmmm512 = 3641 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Aesenclast_xmm_xmmm128 = 3642 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vaesenclast_xmm_xmm_xmmm128 = 3643 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vaesenclast_ymm_ymm_ymmm256 = 3644 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vaesenclast_xmm_xmm_xmmm128 = 3645 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vaesenclast_ymm_ymm_ymmm256 = 3646 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vaesenclast_zmm_zmm_zmmm512 = 3647 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Aesdec_xmm_xmmm128 = 3648 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vaesdec_xmm_xmm_xmmm128 = 3649 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vaesdec_ymm_ymm_ymmm256 = 3650 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vaesdec_xmm_xmm_xmmm128 = 3651 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vaesdec_ymm_ymm_ymmm256 = 3652 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vaesdec_zmm_zmm_zmmm512 = 3653 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Aesdeclast_xmm_xmmm128 = 3654 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vaesdeclast_xmm_xmm_xmmm128 = 3655 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vaesdeclast_ymm_ymm_ymmm256 = 3656 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vaesdeclast_xmm_xmm_xmmm128 = 3657 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vaesdeclast_ymm_ymm_ymmm256 = 3658 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vaesdeclast_zmm_zmm_zmmm512 = 3659 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Movbe_r16_m16 = 3660 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Movbe_r32_m32 = 3661 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Movbe_r64_m64 = 3662 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Crc32_r32_rm8 = 3663 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Crc32_r64_rm8 = 3664 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Movbe_m16_r16 = 3665 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Movbe_m32_r32 = 3666 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Movbe_m64_r64 = 3667 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Crc32_r32_rm16 = 3668 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Crc32_r32_rm32 = 3669 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Crc32_r64_rm64 = 3670 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Andn_r32_r32_rm32 = 3671 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Andn_r64_r64_rm64 = 3672 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Blsr_r32_rm32 = 3673 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Blsr_r64_rm64 = 3674 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Blsmsk_r32_rm32 = 3675 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Blsmsk_r64_rm64 = 3676 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Blsi_r32_rm32 = 3677 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Blsi_r64_rm64 = 3678 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Bzhi_r32_rm32_r32 = 3679 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Bzhi_r64_rm64_r64 = 3680 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Wrussd_m32_r32 = 3681 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Wrussq_m64_r64 = 3682 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Pext_r32_r32_rm32 = 3683 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Pext_r64_r64_rm64 = 3684 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Pdep_r32_r32_rm32 = 3685 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Pdep_r64_r64_rm64 = 3686 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Wrssd_m32_r32 = 3687 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Wrssq_m64_r64 = 3688 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Adcx_r32_rm32 = 3689 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Adcx_r64_rm64 = 3690 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Adox_r32_rm32 = 3691 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Adox_r64_rm64 = 3692 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Mulx_r32_r32_rm32 = 3693 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Mulx_r64_r64_rm64 = 3694 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Bextr_r32_rm32_r32 = 3695 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Bextr_r64_rm64_r64 = 3696 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Shlx_r32_rm32_r32 = 3697 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Shlx_r64_rm64_r64 = 3698 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Sarx_r32_rm32_r32 = 3699 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Sarx_r64_rm64_r64 = 3700 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Shrx_r32_rm32_r32 = 3701 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Shrx_r64_rm64_r64 = 3702 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Movdir64b_r16_m512 = 3703 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Movdir64b_r32_m512 = 3704 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Movdir64b_r64_m512 = 3705 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Enqcmds_r16_m512 = 3706 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Enqcmds_r32_m512 = 3707 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Enqcmds_r64_m512 = 3708 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Enqcmd_r16_m512 = 3709 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Enqcmd_r32_m512 = 3710 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Enqcmd_r64_m512 = 3711 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Movdiri_m32_r32 = 3712 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Movdiri_m64_r64 = 3713 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpermq_ymm_ymmm256_imm8 = 3714 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpermq_ymm_k1z_ymmm256b64_imm8 = 3715 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpermq_zmm_k1z_zmmm512b64_imm8 = 3716 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpermpd_ymm_ymmm256_imm8 = 3717 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpermpd_ymm_k1z_ymmm256b64_imm8 = 3718 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpermpd_zmm_k1z_zmmm512b64_imm8 = 3719 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpblendd_xmm_xmm_xmmm128_imm8 = 3720 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpblendd_ymm_ymm_ymmm256_imm8 = 3721 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Valignd_xmm_k1z_xmm_xmmm128b32_imm8 = 3722 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Valignd_ymm_k1z_ymm_ymmm256b32_imm8 = 3723 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Valignd_zmm_k1z_zmm_zmmm512b32_imm8 = 3724 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Valignq_xmm_k1z_xmm_xmmm128b64_imm8 = 3725 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Valignq_ymm_k1z_ymm_ymmm256b64_imm8 = 3726 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Valignq_zmm_k1z_zmm_zmmm512b64_imm8 = 3727 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpermilps_xmm_xmmm128_imm8 = 3728 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpermilps_ymm_ymmm256_imm8 = 3729 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpermilps_xmm_k1z_xmmm128b32_imm8 = 3730 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpermilps_ymm_k1z_ymmm256b32_imm8 = 3731 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpermilps_zmm_k1z_zmmm512b32_imm8 = 3732 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpermilpd_xmm_xmmm128_imm8 = 3733 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpermilpd_ymm_ymmm256_imm8 = 3734 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpermilpd_xmm_k1z_xmmm128b64_imm8 = 3735 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpermilpd_ymm_k1z_ymmm256b64_imm8 = 3736 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpermilpd_zmm_k1z_zmmm512b64_imm8 = 3737 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vperm2f128_ymm_ymm_ymmm256_imm8 = 3738 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Roundps_xmm_xmmm128_imm8 = 3739 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vroundps_xmm_xmmm128_imm8 = 3740 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vroundps_ymm_ymmm256_imm8 = 3741 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vrndscaleps_xmm_k1z_xmmm128b32_imm8 = 3742 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vrndscaleps_ymm_k1z_ymmm256b32_imm8 = 3743 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vrndscaleps_zmm_k1z_zmmm512b32_imm8_sae = 3744 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Roundpd_xmm_xmmm128_imm8 = 3745 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vroundpd_xmm_xmmm128_imm8 = 3746 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vroundpd_ymm_ymmm256_imm8 = 3747 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vrndscalepd_xmm_k1z_xmmm128b64_imm8 = 3748 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vrndscalepd_ymm_k1z_ymmm256b64_imm8 = 3749 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vrndscalepd_zmm_k1z_zmmm512b64_imm8_sae = 3750 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Roundss_xmm_xmmm32_imm8 = 3751 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vroundss_xmm_xmm_xmmm32_imm8 = 3752 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vrndscaless_xmm_k1z_xmm_xmmm32_imm8_sae = 3753 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Roundsd_xmm_xmmm64_imm8 = 3754 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vroundsd_xmm_xmm_xmmm64_imm8 = 3755 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vrndscalesd_xmm_k1z_xmm_xmmm64_imm8_sae = 3756 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Blendps_xmm_xmmm128_imm8 = 3757 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vblendps_xmm_xmm_xmmm128_imm8 = 3758 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vblendps_ymm_ymm_ymmm256_imm8 = 3759 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Blendpd_xmm_xmmm128_imm8 = 3760 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vblendpd_xmm_xmm_xmmm128_imm8 = 3761 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vblendpd_ymm_ymm_ymmm256_imm8 = 3762 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Pblendw_xmm_xmmm128_imm8 = 3763 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpblendw_xmm_xmm_xmmm128_imm8 = 3764 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpblendw_ymm_ymm_ymmm256_imm8 = 3765 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Palignr_mm_mmm64_imm8 = 3766 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Palignr_xmm_xmmm128_imm8 = 3767 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpalignr_xmm_xmm_xmmm128_imm8 = 3768 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpalignr_ymm_ymm_ymmm256_imm8 = 3769 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpalignr_xmm_k1z_xmm_xmmm128_imm8 = 3770 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpalignr_ymm_k1z_ymm_ymmm256_imm8 = 3771 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpalignr_zmm_k1z_zmm_zmmm512_imm8 = 3772 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Pextrb_r32m8_xmm_imm8 = 3773 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Pextrb_r64m8_xmm_imm8 = 3774 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpextrb_r32m8_xmm_imm8 = 3775 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpextrb_r64m8_xmm_imm8 = 3776 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpextrb_r32m8_xmm_imm8 = 3777 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpextrb_r64m8_xmm_imm8 = 3778 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Pextrw_r32m16_xmm_imm8 = 3779 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Pextrw_r64m16_xmm_imm8 = 3780 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpextrw_r32m16_xmm_imm8 = 3781 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpextrw_r64m16_xmm_imm8 = 3782 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpextrw_r32m16_xmm_imm8 = 3783 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpextrw_r64m16_xmm_imm8 = 3784 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Pextrd_rm32_xmm_imm8 = 3785 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Pextrq_rm64_xmm_imm8 = 3786 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpextrd_rm32_xmm_imm8 = 3787 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpextrq_rm64_xmm_imm8 = 3788 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpextrd_rm32_xmm_imm8 = 3789 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpextrq_rm64_xmm_imm8 = 3790 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Extractps_rm32_xmm_imm8 = 3791 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Extractps_r64m32_xmm_imm8 = 3792 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vextractps_rm32_xmm_imm8 = 3793 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vextractps_r64m32_xmm_imm8 = 3794 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vextractps_rm32_xmm_imm8 = 3795 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vextractps_r64m32_xmm_imm8 = 3796 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vinsertf128_ymm_ymm_xmmm128_imm8 = 3797 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vinsertf32x4_ymm_k1z_ymm_xmmm128_imm8 = 3798 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vinsertf32x4_zmm_k1z_zmm_xmmm128_imm8 = 3799 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vinsertf64x2_ymm_k1z_ymm_xmmm128_imm8 = 3800 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vinsertf64x2_zmm_k1z_zmm_xmmm128_imm8 = 3801 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vextractf128_xmmm128_ymm_imm8 = 3802 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vextractf32x4_xmmm128_k1z_ymm_imm8 = 3803 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vextractf32x4_xmmm128_k1z_zmm_imm8 = 3804 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vextractf64x2_xmmm128_k1z_ymm_imm8 = 3805 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vextractf64x2_xmmm128_k1z_zmm_imm8 = 3806 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vinsertf32x8_zmm_k1z_zmm_ymmm256_imm8 = 3807 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vinsertf64x4_zmm_k1z_zmm_ymmm256_imm8 = 3808 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vextractf32x8_ymmm256_k1z_zmm_imm8 = 3809 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vextractf64x4_ymmm256_k1z_zmm_imm8 = 3810 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vcvtps2ph_xmmm64_xmm_imm8 = 3811 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vcvtps2ph_xmmm128_ymm_imm8 = 3812 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vcvtps2ph_xmmm64_k1z_xmm_imm8 = 3813 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vcvtps2ph_xmmm128_k1z_ymm_imm8 = 3814 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vcvtps2ph_ymmm256_k1z_zmm_imm8_sae = 3815 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpcmpud_kr_k1_xmm_xmmm128b32_imm8 = 3816 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpcmpud_kr_k1_ymm_ymmm256b32_imm8 = 3817 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpcmpud_kr_k1_zmm_zmmm512b32_imm8 = 3818 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpcmpuq_kr_k1_xmm_xmmm128b64_imm8 = 3819 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpcmpuq_kr_k1_ymm_ymmm256b64_imm8 = 3820 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpcmpuq_kr_k1_zmm_zmmm512b64_imm8 = 3821 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpcmpd_kr_k1_xmm_xmmm128b32_imm8 = 3822 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpcmpd_kr_k1_ymm_ymmm256b32_imm8 = 3823 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpcmpd_kr_k1_zmm_zmmm512b32_imm8 = 3824 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpcmpq_kr_k1_xmm_xmmm128b64_imm8 = 3825 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpcmpq_kr_k1_ymm_ymmm256b64_imm8 = 3826 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpcmpq_kr_k1_zmm_zmmm512b64_imm8 = 3827 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Pinsrb_xmm_r32m8_imm8 = 3828 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Pinsrb_xmm_r64m8_imm8 = 3829 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpinsrb_xmm_xmm_r32m8_imm8 = 3830 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpinsrb_xmm_xmm_r64m8_imm8 = 3831 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpinsrb_xmm_xmm_r32m8_imm8 = 3832 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpinsrb_xmm_xmm_r64m8_imm8 = 3833 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Insertps_xmm_xmmm32_imm8 = 3834 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vinsertps_xmm_xmm_xmmm32_imm8 = 3835 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vinsertps_xmm_xmm_xmmm32_imm8 = 3836 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Pinsrd_xmm_rm32_imm8 = 3837 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Pinsrq_xmm_rm64_imm8 = 3838 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpinsrd_xmm_xmm_rm32_imm8 = 3839 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpinsrq_xmm_xmm_rm64_imm8 = 3840 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpinsrd_xmm_xmm_rm32_imm8 = 3841 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpinsrq_xmm_xmm_rm64_imm8 = 3842 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vshuff32x4_ymm_k1z_ymm_ymmm256b32_imm8 = 3843 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vshuff32x4_zmm_k1z_zmm_zmmm512b32_imm8 = 3844 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vshuff64x2_ymm_k1z_ymm_ymmm256b64_imm8 = 3845 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vshuff64x2_zmm_k1z_zmm_zmmm512b64_imm8 = 3846 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpternlogd_xmm_k1z_xmm_xmmm128b32_imm8 = 3847 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpternlogd_ymm_k1z_ymm_ymmm256b32_imm8 = 3848 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpternlogd_zmm_k1z_zmm_zmmm512b32_imm8 = 3849 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpternlogq_xmm_k1z_xmm_xmmm128b64_imm8 = 3850 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpternlogq_ymm_k1z_ymm_ymmm256b64_imm8 = 3851 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpternlogq_zmm_k1z_zmm_zmmm512b64_imm8 = 3852 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vgetmantps_xmm_k1z_xmmm128b32_imm8 = 3853 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vgetmantps_ymm_k1z_ymmm256b32_imm8 = 3854 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vgetmantps_zmm_k1z_zmmm512b32_imm8_sae = 3855 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vgetmantpd_xmm_k1z_xmmm128b64_imm8 = 3856 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vgetmantpd_ymm_k1z_ymmm256b64_imm8 = 3857 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vgetmantpd_zmm_k1z_zmmm512b64_imm8_sae = 3858 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vgetmantss_xmm_k1z_xmm_xmmm32_imm8_sae = 3859 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vgetmantsd_xmm_k1z_xmm_xmmm64_imm8_sae = 3860 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Kshiftrb_kr_kr_imm8 = 3861 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Kshiftrw_kr_kr_imm8 = 3862 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Kshiftrd_kr_kr_imm8 = 3863 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Kshiftrq_kr_kr_imm8 = 3864 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Kshiftlb_kr_kr_imm8 = 3865 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Kshiftlw_kr_kr_imm8 = 3866 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Kshiftld_kr_kr_imm8 = 3867 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Kshiftlq_kr_kr_imm8 = 3868 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vinserti128_ymm_ymm_xmmm128_imm8 = 3869 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vinserti32x4_ymm_k1z_ymm_xmmm128_imm8 = 3870 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vinserti32x4_zmm_k1z_zmm_xmmm128_imm8 = 3871 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vinserti64x2_ymm_k1z_ymm_xmmm128_imm8 = 3872 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vinserti64x2_zmm_k1z_zmm_xmmm128_imm8 = 3873 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vextracti128_xmmm128_ymm_imm8 = 3874 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vextracti32x4_xmmm128_k1z_ymm_imm8 = 3875 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vextracti32x4_xmmm128_k1z_zmm_imm8 = 3876 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vextracti64x2_xmmm128_k1z_ymm_imm8 = 3877 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vextracti64x2_xmmm128_k1z_zmm_imm8 = 3878 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vinserti32x8_zmm_k1z_zmm_ymmm256_imm8 = 3879 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vinserti64x4_zmm_k1z_zmm_ymmm256_imm8 = 3880 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vextracti32x8_ymmm256_k1z_zmm_imm8 = 3881 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vextracti64x4_ymmm256_k1z_zmm_imm8 = 3882 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpcmpub_kr_k1_xmm_xmmm128_imm8 = 3883 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpcmpub_kr_k1_ymm_ymmm256_imm8 = 3884 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpcmpub_kr_k1_zmm_zmmm512_imm8 = 3885 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpcmpuw_kr_k1_xmm_xmmm128_imm8 = 3886 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpcmpuw_kr_k1_ymm_ymmm256_imm8 = 3887 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpcmpuw_kr_k1_zmm_zmmm512_imm8 = 3888 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpcmpb_kr_k1_xmm_xmmm128_imm8 = 3889 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpcmpb_kr_k1_ymm_ymmm256_imm8 = 3890 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpcmpb_kr_k1_zmm_zmmm512_imm8 = 3891 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpcmpw_kr_k1_xmm_xmmm128_imm8 = 3892 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpcmpw_kr_k1_ymm_ymmm256_imm8 = 3893 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpcmpw_kr_k1_zmm_zmmm512_imm8 = 3894 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Dpps_xmm_xmmm128_imm8 = 3895 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vdpps_xmm_xmm_xmmm128_imm8 = 3896 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vdpps_ymm_ymm_ymmm256_imm8 = 3897 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Dppd_xmm_xmmm128_imm8 = 3898 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vdppd_xmm_xmm_xmmm128_imm8 = 3899 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Mpsadbw_xmm_xmmm128_imm8 = 3900 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vmpsadbw_xmm_xmm_xmmm128_imm8 = 3901 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vmpsadbw_ymm_ymm_ymmm256_imm8 = 3902 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vdbpsadbw_xmm_k1z_xmm_xmmm128_imm8 = 3903 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vdbpsadbw_ymm_k1z_ymm_ymmm256_imm8 = 3904 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vdbpsadbw_zmm_k1z_zmm_zmmm512_imm8 = 3905 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vshufi32x4_ymm_k1z_ymm_ymmm256b32_imm8 = 3906 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vshufi32x4_zmm_k1z_zmm_zmmm512b32_imm8 = 3907 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vshufi64x2_ymm_k1z_ymm_ymmm256b64_imm8 = 3908 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vshufi64x2_zmm_k1z_zmm_zmmm512b64_imm8 = 3909 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Pclmulqdq_xmm_xmmm128_imm8 = 3910 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpclmulqdq_xmm_xmm_xmmm128_imm8 = 3911 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpclmulqdq_ymm_ymm_ymmm256_imm8 = 3912 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpclmulqdq_xmm_xmm_xmmm128_imm8 = 3913 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpclmulqdq_ymm_ymm_ymmm256_imm8 = 3914 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpclmulqdq_zmm_zmm_zmmm512_imm8 = 3915 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vperm2i128_ymm_ymm_ymmm256_imm8 = 3916 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpermil2ps_xmm_xmm_xmmm128_xmm_imm4 = 3917 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpermil2ps_ymm_ymm_ymmm256_ymm_imm4 = 3918 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpermil2ps_xmm_xmm_xmm_xmmm128_imm4 = 3919 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpermil2ps_ymm_ymm_ymm_ymmm256_imm4 = 3920 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpermil2pd_xmm_xmm_xmmm128_xmm_imm4 = 3921 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpermil2pd_ymm_ymm_ymmm256_ymm_imm4 = 3922 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpermil2pd_xmm_xmm_xmm_xmmm128_imm4 = 3923 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpermil2pd_ymm_ymm_ymm_ymmm256_imm4 = 3924 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vblendvps_xmm_xmm_xmmm128_xmm = 3925 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vblendvps_ymm_ymm_ymmm256_ymm = 3926 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vblendvpd_xmm_xmm_xmmm128_xmm = 3927 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vblendvpd_ymm_ymm_ymmm256_ymm = 3928 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpblendvb_xmm_xmm_xmmm128_xmm = 3929 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpblendvb_ymm_ymm_ymmm256_ymm = 3930 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vrangeps_xmm_k1z_xmm_xmmm128b32_imm8 = 3931 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vrangeps_ymm_k1z_ymm_ymmm256b32_imm8 = 3932 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vrangeps_zmm_k1z_zmm_zmmm512b32_imm8_sae = 3933 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vrangepd_xmm_k1z_xmm_xmmm128b64_imm8 = 3934 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vrangepd_ymm_k1z_ymm_ymmm256b64_imm8 = 3935 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vrangepd_zmm_k1z_zmm_zmmm512b64_imm8_sae = 3936 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vrangess_xmm_k1z_xmm_xmmm32_imm8_sae = 3937 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vrangesd_xmm_k1z_xmm_xmmm64_imm8_sae = 3938 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vfixupimmps_xmm_k1z_xmm_xmmm128b32_imm8 = 3939 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vfixupimmps_ymm_k1z_ymm_ymmm256b32_imm8 = 3940 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vfixupimmps_zmm_k1z_zmm_zmmm512b32_imm8_sae = 3941 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vfixupimmpd_xmm_k1z_xmm_xmmm128b64_imm8 = 3942 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vfixupimmpd_ymm_k1z_ymm_ymmm256b64_imm8 = 3943 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vfixupimmpd_zmm_k1z_zmm_zmmm512b64_imm8_sae = 3944 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vfixupimmss_xmm_k1z_xmm_xmmm32_imm8_sae = 3945 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vfixupimmsd_xmm_k1z_xmm_xmmm64_imm8_sae = 3946 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vreduceps_xmm_k1z_xmmm128b32_imm8 = 3947 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vreduceps_ymm_k1z_ymmm256b32_imm8 = 3948 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vreduceps_zmm_k1z_zmmm512b32_imm8_sae = 3949 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vreducepd_xmm_k1z_xmmm128b64_imm8 = 3950 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vreducepd_ymm_k1z_ymmm256b64_imm8 = 3951 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vreducepd_zmm_k1z_zmmm512b64_imm8_sae = 3952 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vreducess_xmm_k1z_xmm_xmmm32_imm8_sae = 3953 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vreducesd_xmm_k1z_xmm_xmmm64_imm8_sae = 3954 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vfmaddsubps_xmm_xmm_xmmm128_xmm = 3955 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vfmaddsubps_ymm_ymm_ymmm256_ymm = 3956 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vfmaddsubps_xmm_xmm_xmm_xmmm128 = 3957 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vfmaddsubps_ymm_ymm_ymm_ymmm256 = 3958 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vfmaddsubpd_xmm_xmm_xmmm128_xmm = 3959 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vfmaddsubpd_ymm_ymm_ymmm256_ymm = 3960 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vfmaddsubpd_xmm_xmm_xmm_xmmm128 = 3961 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vfmaddsubpd_ymm_ymm_ymm_ymmm256 = 3962 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vfmsubaddps_xmm_xmm_xmmm128_xmm = 3963 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vfmsubaddps_ymm_ymm_ymmm256_ymm = 3964 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vfmsubaddps_xmm_xmm_xmm_xmmm128 = 3965 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vfmsubaddps_ymm_ymm_ymm_ymmm256 = 3966 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vfmsubaddpd_xmm_xmm_xmmm128_xmm = 3967 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vfmsubaddpd_ymm_ymm_ymmm256_ymm = 3968 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vfmsubaddpd_xmm_xmm_xmm_xmmm128 = 3969 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vfmsubaddpd_ymm_ymm_ymm_ymmm256 = 3970 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Pcmpestrm_xmm_xmmm128_imm8 = 3971 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Pcmpestrm64_xmm_xmmm128_imm8 = 3972 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpcmpestrm_xmm_xmmm128_imm8 = 3973 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpcmpestrm64_xmm_xmmm128_imm8 = 3974 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Pcmpestri_xmm_xmmm128_imm8 = 3975 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Pcmpestri64_xmm_xmmm128_imm8 = 3976 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpcmpestri_xmm_xmmm128_imm8 = 3977 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpcmpestri64_xmm_xmmm128_imm8 = 3978 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Pcmpistrm_xmm_xmmm128_imm8 = 3979 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpcmpistrm_xmm_xmmm128_imm8 = 3980 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Pcmpistri_xmm_xmmm128_imm8 = 3981 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpcmpistri_xmm_xmmm128_imm8 = 3982 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vfpclassps_kr_k1_xmmm128b32_imm8 = 3983 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vfpclassps_kr_k1_ymmm256b32_imm8 = 3984 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vfpclassps_kr_k1_zmmm512b32_imm8 = 3985 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vfpclasspd_kr_k1_xmmm128b64_imm8 = 3986 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vfpclasspd_kr_k1_ymmm256b64_imm8 = 3987 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vfpclasspd_kr_k1_zmmm512b64_imm8 = 3988 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vfpclassss_kr_k1_xmmm32_imm8 = 3989 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vfpclasssd_kr_k1_xmmm64_imm8 = 3990 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vfmaddps_xmm_xmm_xmmm128_xmm = 3991 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vfmaddps_ymm_ymm_ymmm256_ymm = 3992 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vfmaddps_xmm_xmm_xmm_xmmm128 = 3993 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vfmaddps_ymm_ymm_ymm_ymmm256 = 3994 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vfmaddpd_xmm_xmm_xmmm128_xmm = 3995 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vfmaddpd_ymm_ymm_ymmm256_ymm = 3996 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vfmaddpd_xmm_xmm_xmm_xmmm128 = 3997 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vfmaddpd_ymm_ymm_ymm_ymmm256 = 3998 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vfmaddss_xmm_xmm_xmmm32_xmm = 3999 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vfmaddss_xmm_xmm_xmm_xmmm32 = 4000 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vfmaddsd_xmm_xmm_xmmm64_xmm = 4001 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vfmaddsd_xmm_xmm_xmm_xmmm64 = 4002 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vfmsubps_xmm_xmm_xmmm128_xmm = 4003 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vfmsubps_ymm_ymm_ymmm256_ymm = 4004 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vfmsubps_xmm_xmm_xmm_xmmm128 = 4005 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vfmsubps_ymm_ymm_ymm_ymmm256 = 4006 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vfmsubpd_xmm_xmm_xmmm128_xmm = 4007 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vfmsubpd_ymm_ymm_ymmm256_ymm = 4008 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vfmsubpd_xmm_xmm_xmm_xmmm128 = 4009 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vfmsubpd_ymm_ymm_ymm_ymmm256 = 4010 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vfmsubss_xmm_xmm_xmmm32_xmm = 4011 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vfmsubss_xmm_xmm_xmm_xmmm32 = 4012 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vfmsubsd_xmm_xmm_xmmm64_xmm = 4013 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vfmsubsd_xmm_xmm_xmm_xmmm64 = 4014 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpshldw_xmm_k1z_xmm_xmmm128_imm8 = 4015 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpshldw_ymm_k1z_ymm_ymmm256_imm8 = 4016 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpshldw_zmm_k1z_zmm_zmmm512_imm8 = 4017 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpshldd_xmm_k1z_xmm_xmmm128b32_imm8 = 4018 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpshldd_ymm_k1z_ymm_ymmm256b32_imm8 = 4019 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpshldd_zmm_k1z_zmm_zmmm512b32_imm8 = 4020 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpshldq_xmm_k1z_xmm_xmmm128b64_imm8 = 4021 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpshldq_ymm_k1z_ymm_ymmm256b64_imm8 = 4022 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpshldq_zmm_k1z_zmm_zmmm512b64_imm8 = 4023 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpshrdw_xmm_k1z_xmm_xmmm128_imm8 = 4024 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpshrdw_ymm_k1z_ymm_ymmm256_imm8 = 4025 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpshrdw_zmm_k1z_zmm_zmmm512_imm8 = 4026 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpshrdd_xmm_k1z_xmm_xmmm128b32_imm8 = 4027 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpshrdd_ymm_k1z_ymm_ymmm256b32_imm8 = 4028 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpshrdd_zmm_k1z_zmm_zmmm512b32_imm8 = 4029 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpshrdq_xmm_k1z_xmm_xmmm128b64_imm8 = 4030 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpshrdq_ymm_k1z_ymm_ymmm256b64_imm8 = 4031 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vpshrdq_zmm_k1z_zmm_zmmm512b64_imm8 = 4032 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vfnmaddps_xmm_xmm_xmmm128_xmm = 4033 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vfnmaddps_ymm_ymm_ymmm256_ymm = 4034 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vfnmaddps_xmm_xmm_xmm_xmmm128 = 4035 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vfnmaddps_ymm_ymm_ymm_ymmm256 = 4036 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vfnmaddpd_xmm_xmm_xmmm128_xmm = 4037 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vfnmaddpd_ymm_ymm_ymmm256_ymm = 4038 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vfnmaddpd_xmm_xmm_xmm_xmmm128 = 4039 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vfnmaddpd_ymm_ymm_ymm_ymmm256 = 4040 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vfnmaddss_xmm_xmm_xmmm32_xmm = 4041 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vfnmaddss_xmm_xmm_xmm_xmmm32 = 4042 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vfnmaddsd_xmm_xmm_xmmm64_xmm = 4043 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vfnmaddsd_xmm_xmm_xmm_xmmm64 = 4044 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vfnmsubps_xmm_xmm_xmmm128_xmm = 4045 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vfnmsubps_ymm_ymm_ymmm256_ymm = 4046 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vfnmsubps_xmm_xmm_xmm_xmmm128 = 4047 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vfnmsubps_ymm_ymm_ymm_ymmm256 = 4048 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vfnmsubpd_xmm_xmm_xmmm128_xmm = 4049 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vfnmsubpd_ymm_ymm_ymmm256_ymm = 4050 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vfnmsubpd_xmm_xmm_xmm_xmmm128 = 4051 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vfnmsubpd_ymm_ymm_ymm_ymmm256 = 4052 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vfnmsubss_xmm_xmm_xmmm32_xmm = 4053 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vfnmsubss_xmm_xmm_xmm_xmmm32 = 4054 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vfnmsubsd_xmm_xmm_xmmm64_xmm = 4055 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vfnmsubsd_xmm_xmm_xmm_xmmm64 = 4056 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Sha1rnds4_xmm_xmmm128_imm8 = 4057 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Gf2p8affineqb_xmm_xmmm128_imm8 = 4058 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vgf2p8affineqb_xmm_xmm_xmmm128_imm8 = 4059 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vgf2p8affineqb_ymm_ymm_ymmm256_imm8 = 4060 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vgf2p8affineqb_xmm_k1z_xmm_xmmm128b64_imm8 = 4061 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vgf2p8affineqb_ymm_k1z_ymm_ymmm256b64_imm8 = 4062 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vgf2p8affineqb_zmm_k1z_zmm_zmmm512b64_imm8 = 4063 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Gf2p8affineinvqb_xmm_xmmm128_imm8 = 4064 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vgf2p8affineinvqb_xmm_xmm_xmmm128_imm8 = 4065 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vgf2p8affineinvqb_ymm_ymm_ymmm256_imm8 = 4066 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vgf2p8affineinvqb_xmm_k1z_xmm_xmmm128b64_imm8 = 4067 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vgf2p8affineinvqb_ymm_k1z_ymm_ymmm256b64_imm8 = 4068 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vgf2p8affineinvqb_zmm_k1z_zmm_zmmm512b64_imm8 = 4069 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Aeskeygenassist_xmm_xmmm128_imm8 = 4070 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vaeskeygenassist_xmm_xmmm128_imm8 = 4071 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Rorx_r32_rm32_imm8 = 4072 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Rorx_r64_rm64_imm8 = 4073 : Public, Static, Literal, HasDefault
    Iced.Intel.Code XOP_Vpmacssww_xmm_xmm_xmmm128_xmm = 4074 : Public, Static, Literal, HasDefault
    Iced.Intel.Code XOP_Vpmacsswd_xmm_xmm_xmmm128_xmm = 4075 : Public, Static, Literal, HasDefault
    Iced.Intel.Code XOP_Vpmacssdql_xmm_xmm_xmmm128_xmm = 4076 : Public, Static, Literal, HasDefault
    Iced.Intel.Code XOP_Vpmacssdd_xmm_xmm_xmmm128_xmm = 4077 : Public, Static, Literal, HasDefault
    Iced.Intel.Code XOP_Vpmacssdqh_xmm_xmm_xmmm128_xmm = 4078 : Public, Static, Literal, HasDefault
    Iced.Intel.Code XOP_Vpmacsww_xmm_xmm_xmmm128_xmm = 4079 : Public, Static, Literal, HasDefault
    Iced.Intel.Code XOP_Vpmacswd_xmm_xmm_xmmm128_xmm = 4080 : Public, Static, Literal, HasDefault
    Iced.Intel.Code XOP_Vpmacsdql_xmm_xmm_xmmm128_xmm = 4081 : Public, Static, Literal, HasDefault
    Iced.Intel.Code XOP_Vpmacsdd_xmm_xmm_xmmm128_xmm = 4082 : Public, Static, Literal, HasDefault
    Iced.Intel.Code XOP_Vpmacsdqh_xmm_xmm_xmmm128_xmm = 4083 : Public, Static, Literal, HasDefault
    Iced.Intel.Code XOP_Vpcmov_xmm_xmm_xmmm128_xmm = 4084 : Public, Static, Literal, HasDefault
    Iced.Intel.Code XOP_Vpcmov_ymm_ymm_ymmm256_ymm = 4085 : Public, Static, Literal, HasDefault
    Iced.Intel.Code XOP_Vpcmov_xmm_xmm_xmm_xmmm128 = 4086 : Public, Static, Literal, HasDefault
    Iced.Intel.Code XOP_Vpcmov_ymm_ymm_ymm_ymmm256 = 4087 : Public, Static, Literal, HasDefault
    Iced.Intel.Code XOP_Vpperm_xmm_xmm_xmmm128_xmm = 4088 : Public, Static, Literal, HasDefault
    Iced.Intel.Code XOP_Vpperm_xmm_xmm_xmm_xmmm128 = 4089 : Public, Static, Literal, HasDefault
    Iced.Intel.Code XOP_Vpmadcsswd_xmm_xmm_xmmm128_xmm = 4090 : Public, Static, Literal, HasDefault
    Iced.Intel.Code XOP_Vpmadcswd_xmm_xmm_xmmm128_xmm = 4091 : Public, Static, Literal, HasDefault
    Iced.Intel.Code XOP_Vprotb_xmm_xmmm128_imm8 = 4092 : Public, Static, Literal, HasDefault
    Iced.Intel.Code XOP_Vprotw_xmm_xmmm128_imm8 = 4093 : Public, Static, Literal, HasDefault
    Iced.Intel.Code XOP_Vprotd_xmm_xmmm128_imm8 = 4094 : Public, Static, Literal, HasDefault
    Iced.Intel.Code XOP_Vprotq_xmm_xmmm128_imm8 = 4095 : Public, Static, Literal, HasDefault
    Iced.Intel.Code XOP_Vpcomb_xmm_xmm_xmmm128_imm8 = 4096 : Public, Static, Literal, HasDefault
    Iced.Intel.Code XOP_Vpcomw_xmm_xmm_xmmm128_imm8 = 4097 : Public, Static, Literal, HasDefault
    Iced.Intel.Code XOP_Vpcomd_xmm_xmm_xmmm128_imm8 = 4098 : Public, Static, Literal, HasDefault
    Iced.Intel.Code XOP_Vpcomq_xmm_xmm_xmmm128_imm8 = 4099 : Public, Static, Literal, HasDefault
    Iced.Intel.Code XOP_Vpcomub_xmm_xmm_xmmm128_imm8 = 4100 : Public, Static, Literal, HasDefault
    Iced.Intel.Code XOP_Vpcomuw_xmm_xmm_xmmm128_imm8 = 4101 : Public, Static, Literal, HasDefault
    Iced.Intel.Code XOP_Vpcomud_xmm_xmm_xmmm128_imm8 = 4102 : Public, Static, Literal, HasDefault
    Iced.Intel.Code XOP_Vpcomuq_xmm_xmm_xmmm128_imm8 = 4103 : Public, Static, Literal, HasDefault
    Iced.Intel.Code XOP_Blcfill_r32_rm32 = 4104 : Public, Static, Literal, HasDefault
    Iced.Intel.Code XOP_Blcfill_r64_rm64 = 4105 : Public, Static, Literal, HasDefault
    Iced.Intel.Code XOP_Blsfill_r32_rm32 = 4106 : Public, Static, Literal, HasDefault
    Iced.Intel.Code XOP_Blsfill_r64_rm64 = 4107 : Public, Static, Literal, HasDefault
    Iced.Intel.Code XOP_Blcs_r32_rm32 = 4108 : Public, Static, Literal, HasDefault
    Iced.Intel.Code XOP_Blcs_r64_rm64 = 4109 : Public, Static, Literal, HasDefault
    Iced.Intel.Code XOP_Tzmsk_r32_rm32 = 4110 : Public, Static, Literal, HasDefault
    Iced.Intel.Code XOP_Tzmsk_r64_rm64 = 4111 : Public, Static, Literal, HasDefault
    Iced.Intel.Code XOP_Blcic_r32_rm32 = 4112 : Public, Static, Literal, HasDefault
    Iced.Intel.Code XOP_Blcic_r64_rm64 = 4113 : Public, Static, Literal, HasDefault
    Iced.Intel.Code XOP_Blsic_r32_rm32 = 4114 : Public, Static, Literal, HasDefault
    Iced.Intel.Code XOP_Blsic_r64_rm64 = 4115 : Public, Static, Literal, HasDefault
    Iced.Intel.Code XOP_T1mskc_r32_rm32 = 4116 : Public, Static, Literal, HasDefault
    Iced.Intel.Code XOP_T1mskc_r64_rm64 = 4117 : Public, Static, Literal, HasDefault
    Iced.Intel.Code XOP_Blcmsk_r32_rm32 = 4118 : Public, Static, Literal, HasDefault
    Iced.Intel.Code XOP_Blcmsk_r64_rm64 = 4119 : Public, Static, Literal, HasDefault
    Iced.Intel.Code XOP_Blci_r32_rm32 = 4120 : Public, Static, Literal, HasDefault
    Iced.Intel.Code XOP_Blci_r64_rm64 = 4121 : Public, Static, Literal, HasDefault
    Iced.Intel.Code XOP_Llwpcb_r32 = 4122 : Public, Static, Literal, HasDefault
    Iced.Intel.Code XOP_Llwpcb_r64 = 4123 : Public, Static, Literal, HasDefault
    Iced.Intel.Code XOP_Slwpcb_r32 = 4124 : Public, Static, Literal, HasDefault
    Iced.Intel.Code XOP_Slwpcb_r64 = 4125 : Public, Static, Literal, HasDefault
    Iced.Intel.Code XOP_Vfrczps_xmm_xmmm128 = 4126 : Public, Static, Literal, HasDefault
    Iced.Intel.Code XOP_Vfrczps_ymm_ymmm256 = 4127 : Public, Static, Literal, HasDefault
    Iced.Intel.Code XOP_Vfrczpd_xmm_xmmm128 = 4128 : Public, Static, Literal, HasDefault
    Iced.Intel.Code XOP_Vfrczpd_ymm_ymmm256 = 4129 : Public, Static, Literal, HasDefault
    Iced.Intel.Code XOP_Vfrczss_xmm_xmmm32 = 4130 : Public, Static, Literal, HasDefault
    Iced.Intel.Code XOP_Vfrczsd_xmm_xmmm64 = 4131 : Public, Static, Literal, HasDefault
    Iced.Intel.Code XOP_Vprotb_xmm_xmmm128_xmm = 4132 : Public, Static, Literal, HasDefault
    Iced.Intel.Code XOP_Vprotb_xmm_xmm_xmmm128 = 4133 : Public, Static, Literal, HasDefault
    Iced.Intel.Code XOP_Vprotw_xmm_xmmm128_xmm = 4134 : Public, Static, Literal, HasDefault
    Iced.Intel.Code XOP_Vprotw_xmm_xmm_xmmm128 = 4135 : Public, Static, Literal, HasDefault
    Iced.Intel.Code XOP_Vprotd_xmm_xmmm128_xmm = 4136 : Public, Static, Literal, HasDefault
    Iced.Intel.Code XOP_Vprotd_xmm_xmm_xmmm128 = 4137 : Public, Static, Literal, HasDefault
    Iced.Intel.Code XOP_Vprotq_xmm_xmmm128_xmm = 4138 : Public, Static, Literal, HasDefault
    Iced.Intel.Code XOP_Vprotq_xmm_xmm_xmmm128 = 4139 : Public, Static, Literal, HasDefault
    Iced.Intel.Code XOP_Vpshlb_xmm_xmmm128_xmm = 4140 : Public, Static, Literal, HasDefault
    Iced.Intel.Code XOP_Vpshlb_xmm_xmm_xmmm128 = 4141 : Public, Static, Literal, HasDefault
    Iced.Intel.Code XOP_Vpshlw_xmm_xmmm128_xmm = 4142 : Public, Static, Literal, HasDefault
    Iced.Intel.Code XOP_Vpshlw_xmm_xmm_xmmm128 = 4143 : Public, Static, Literal, HasDefault
    Iced.Intel.Code XOP_Vpshld_xmm_xmmm128_xmm = 4144 : Public, Static, Literal, HasDefault
    Iced.Intel.Code XOP_Vpshld_xmm_xmm_xmmm128 = 4145 : Public, Static, Literal, HasDefault
    Iced.Intel.Code XOP_Vpshlq_xmm_xmmm128_xmm = 4146 : Public, Static, Literal, HasDefault
    Iced.Intel.Code XOP_Vpshlq_xmm_xmm_xmmm128 = 4147 : Public, Static, Literal, HasDefault
    Iced.Intel.Code XOP_Vpshab_xmm_xmmm128_xmm = 4148 : Public, Static, Literal, HasDefault
    Iced.Intel.Code XOP_Vpshab_xmm_xmm_xmmm128 = 4149 : Public, Static, Literal, HasDefault
    Iced.Intel.Code XOP_Vpshaw_xmm_xmmm128_xmm = 4150 : Public, Static, Literal, HasDefault
    Iced.Intel.Code XOP_Vpshaw_xmm_xmm_xmmm128 = 4151 : Public, Static, Literal, HasDefault
    Iced.Intel.Code XOP_Vpshad_xmm_xmmm128_xmm = 4152 : Public, Static, Literal, HasDefault
    Iced.Intel.Code XOP_Vpshad_xmm_xmm_xmmm128 = 4153 : Public, Static, Literal, HasDefault
    Iced.Intel.Code XOP_Vpshaq_xmm_xmmm128_xmm = 4154 : Public, Static, Literal, HasDefault
    Iced.Intel.Code XOP_Vpshaq_xmm_xmm_xmmm128 = 4155 : Public, Static, Literal, HasDefault
    Iced.Intel.Code XOP_Vphaddbw_xmm_xmmm128 = 4156 : Public, Static, Literal, HasDefault
    Iced.Intel.Code XOP_Vphaddbd_xmm_xmmm128 = 4157 : Public, Static, Literal, HasDefault
    Iced.Intel.Code XOP_Vphaddbq_xmm_xmmm128 = 4158 : Public, Static, Literal, HasDefault
    Iced.Intel.Code XOP_Vphaddwd_xmm_xmmm128 = 4159 : Public, Static, Literal, HasDefault
    Iced.Intel.Code XOP_Vphaddwq_xmm_xmmm128 = 4160 : Public, Static, Literal, HasDefault
    Iced.Intel.Code XOP_Vphadddq_xmm_xmmm128 = 4161 : Public, Static, Literal, HasDefault
    Iced.Intel.Code XOP_Vphaddubw_xmm_xmmm128 = 4162 : Public, Static, Literal, HasDefault
    Iced.Intel.Code XOP_Vphaddubd_xmm_xmmm128 = 4163 : Public, Static, Literal, HasDefault
    Iced.Intel.Code XOP_Vphaddubq_xmm_xmmm128 = 4164 : Public, Static, Literal, HasDefault
    Iced.Intel.Code XOP_Vphadduwd_xmm_xmmm128 = 4165 : Public, Static, Literal, HasDefault
    Iced.Intel.Code XOP_Vphadduwq_xmm_xmmm128 = 4166 : Public, Static, Literal, HasDefault
    Iced.Intel.Code XOP_Vphaddudq_xmm_xmmm128 = 4167 : Public, Static, Literal, HasDefault
    Iced.Intel.Code XOP_Vphsubbw_xmm_xmmm128 = 4168 : Public, Static, Literal, HasDefault
    Iced.Intel.Code XOP_Vphsubwd_xmm_xmmm128 = 4169 : Public, Static, Literal, HasDefault
    Iced.Intel.Code XOP_Vphsubdq_xmm_xmmm128 = 4170 : Public, Static, Literal, HasDefault
    Iced.Intel.Code XOP_Bextr_r32_rm32_imm32 = 4171 : Public, Static, Literal, HasDefault
    Iced.Intel.Code XOP_Bextr_r64_rm64_imm32 = 4172 : Public, Static, Literal, HasDefault
    Iced.Intel.Code XOP_Lwpins_r32_rm32_imm32 = 4173 : Public, Static, Literal, HasDefault
    Iced.Intel.Code XOP_Lwpins_r64_rm32_imm32 = 4174 : Public, Static, Literal, HasDefault
    Iced.Intel.Code XOP_Lwpval_r32_rm32_imm32 = 4175 : Public, Static, Literal, HasDefault
    Iced.Intel.Code XOP_Lwpval_r64_rm32_imm32 = 4176 : Public, Static, Literal, HasDefault
    Iced.Intel.Code D3NOW_Pi2fw_mm_mmm64 = 4177 : Public, Static, Literal, HasDefault
    Iced.Intel.Code D3NOW_Pi2fd_mm_mmm64 = 4178 : Public, Static, Literal, HasDefault
    Iced.Intel.Code D3NOW_Pf2iw_mm_mmm64 = 4179 : Public, Static, Literal, HasDefault
    Iced.Intel.Code D3NOW_Pf2id_mm_mmm64 = 4180 : Public, Static, Literal, HasDefault
    Iced.Intel.Code D3NOW_Pfrcpv_mm_mmm64 = 4181 : Public, Static, Literal, HasDefault
    Iced.Intel.Code D3NOW_Pfrsqrtv_mm_mmm64 = 4182 : Public, Static, Literal, HasDefault
    Iced.Intel.Code D3NOW_Pfnacc_mm_mmm64 = 4183 : Public, Static, Literal, HasDefault
    Iced.Intel.Code D3NOW_Pfpnacc_mm_mmm64 = 4184 : Public, Static, Literal, HasDefault
    Iced.Intel.Code D3NOW_Pfcmpge_mm_mmm64 = 4185 : Public, Static, Literal, HasDefault
    Iced.Intel.Code D3NOW_Pfmin_mm_mmm64 = 4186 : Public, Static, Literal, HasDefault
    Iced.Intel.Code D3NOW_Pfrcp_mm_mmm64 = 4187 : Public, Static, Literal, HasDefault
    Iced.Intel.Code D3NOW_Pfrsqrt_mm_mmm64 = 4188 : Public, Static, Literal, HasDefault
    Iced.Intel.Code D3NOW_Pfsub_mm_mmm64 = 4189 : Public, Static, Literal, HasDefault
    Iced.Intel.Code D3NOW_Pfadd_mm_mmm64 = 4190 : Public, Static, Literal, HasDefault
    Iced.Intel.Code D3NOW_Pfcmpgt_mm_mmm64 = 4191 : Public, Static, Literal, HasDefault
    Iced.Intel.Code D3NOW_Pfmax_mm_mmm64 = 4192 : Public, Static, Literal, HasDefault
    Iced.Intel.Code D3NOW_Pfrcpit1_mm_mmm64 = 4193 : Public, Static, Literal, HasDefault
    Iced.Intel.Code D3NOW_Pfrsqit1_mm_mmm64 = 4194 : Public, Static, Literal, HasDefault
    Iced.Intel.Code D3NOW_Pfsubr_mm_mmm64 = 4195 : Public, Static, Literal, HasDefault
    Iced.Intel.Code D3NOW_Pfacc_mm_mmm64 = 4196 : Public, Static, Literal, HasDefault
    Iced.Intel.Code D3NOW_Pfcmpeq_mm_mmm64 = 4197 : Public, Static, Literal, HasDefault
    Iced.Intel.Code D3NOW_Pfmul_mm_mmm64 = 4198 : Public, Static, Literal, HasDefault
    Iced.Intel.Code D3NOW_Pfrcpit2_mm_mmm64 = 4199 : Public, Static, Literal, HasDefault
    Iced.Intel.Code D3NOW_Pmulhrw_mm_mmm64 = 4200 : Public, Static, Literal, HasDefault
    Iced.Intel.Code D3NOW_Pswapd_mm_mmm64 = 4201 : Public, Static, Literal, HasDefault
    Iced.Intel.Code D3NOW_Pavgusb_mm_mmm64 = 4202 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Rmpadjust = 4203 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Rmpupdate = 4204 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Psmash = 4205 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Pvalidatew = 4206 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Pvalidated = 4207 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Pvalidateq = 4208 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Serialize = 4209 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Xsusldtrk = 4210 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Xresldtrk = 4211 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Invlpgbw = 4212 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Invlpgbd = 4213 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Invlpgbq = 4214 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Tlbsync = 4215 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Prefetchreserved3_m8 = 4216 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Prefetchreserved4_m8 = 4217 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Prefetchreserved5_m8 = 4218 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Prefetchreserved6_m8 = 4219 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Prefetchreserved7_m8 = 4220 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Ud0 = 4221 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Vmgexit = 4222 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Getsecq = 4223 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Ldtilecfg_m512 = 4224 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Tilerelease = 4225 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Sttilecfg_m512 = 4226 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Tilezero_tmm = 4227 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Tileloaddt1_tmm_sibmem = 4228 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Tilestored_sibmem_tmm = 4229 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Tileloadd_tmm_sibmem = 4230 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Tdpbf16ps_tmm_tmm_tmm = 4231 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Tdpbuud_tmm_tmm_tmm = 4232 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Tdpbusd_tmm_tmm_tmm = 4233 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Tdpbsud_tmm_tmm_tmm = 4234 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Tdpbssd_tmm_tmm_tmm = 4235 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Fnstdw_AX = 4236 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Fnstsg_AX = 4237 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Rdshr_rm32 = 4238 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Wrshr_rm32 = 4239 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Smint = 4240 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Dmint = 4241 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Rdm = 4242 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Svdc_m80_Sreg = 4243 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Rsdc_Sreg_m80 = 4244 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Svldt_m80 = 4245 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Rsldt_m80 = 4246 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Svts_m80 = 4247 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Rsts_m80 = 4248 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Smint_0F7E = 4249 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Bb0_reset = 4250 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Bb1_reset = 4251 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Cpu_write = 4252 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Cpu_read = 4253 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Altinst = 4254 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Paveb_mm_mmm64 = 4255 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Paddsiw_mm_mmm64 = 4256 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Pmagw_mm_mmm64 = 4257 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Pdistib_mm_m64 = 4258 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Psubsiw_mm_mmm64 = 4259 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Pmvzb_mm_m64 = 4260 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Pmulhrw_mm_mmm64 = 4261 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Pmvnzb_mm_m64 = 4262 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Pmvlzb_mm_m64 = 4263 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Pmvgezb_mm_m64 = 4264 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Pmulhriw_mm_mmm64 = 4265 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Pmachriw_mm_m64 = 4266 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Cyrix_D9D7 = 4267 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Cyrix_D9E2 = 4268 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Ftstp = 4269 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Cyrix_D9E7 = 4270 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Frint2 = 4271 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Frichop = 4272 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Cyrix_DED8 = 4273 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Cyrix_DEDA = 4274 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Cyrix_DEDC = 4275 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Cyrix_DEDD = 4276 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Cyrix_DEDE = 4277 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Frinear = 4278 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Tdcall = 4279 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Seamret = 4280 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Seamops = 4281 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Seamcall = 4282 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Aesencwide128kl_m384 = 4283 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Aesdecwide128kl_m384 = 4284 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Aesencwide256kl_m512 = 4285 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Aesdecwide256kl_m512 = 4286 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Loadiwkey_xmm_xmm = 4287 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Aesenc128kl_xmm_m384 = 4288 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Aesdec128kl_xmm_m384 = 4289 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Aesenc256kl_xmm_m512 = 4290 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Aesdec256kl_xmm_m512 = 4291 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Encodekey128_r32_r32 = 4292 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Encodekey256_r32_r32 = 4293 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vbroadcastss_xmm_xmm = 4294 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vbroadcastss_ymm_xmm = 4295 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vbroadcastsd_ymm_xmm = 4296 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Vmgexit_F2 = 4297 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Uiret = 4298 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Testui = 4299 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Clui = 4300 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Stui = 4301 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Senduipi_r64 = 4302 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Hreset_imm8 = 4303 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpdpbusd_xmm_xmm_xmmm128 = 4304 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpdpbusd_ymm_ymm_ymmm256 = 4305 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpdpbusds_xmm_xmm_xmmm128 = 4306 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpdpbusds_ymm_ymm_ymmm256 = 4307 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpdpwssd_xmm_xmm_xmmm128 = 4308 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpdpwssd_ymm_ymm_ymmm256 = 4309 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpdpwssds_xmm_xmm_xmmm128 = 4310 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_Vpdpwssds_ymm_ymm_ymmm256 = 4311 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Ccs_hash_16 = 4312 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Ccs_hash_32 = 4313 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Ccs_hash_64 = 4314 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Ccs_encrypt_16 = 4315 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Ccs_encrypt_32 = 4316 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Ccs_encrypt_64 = 4317 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Lkgs_rm16 = 4318 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Lkgs_r32m16 = 4319 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Lkgs_r64m16 = 4320 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Eretu = 4321 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Erets = 4322 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vaddph_xmm_k1z_xmm_xmmm128b16 = 4323 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vaddph_ymm_k1z_ymm_ymmm256b16 = 4324 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vaddph_zmm_k1z_zmm_zmmm512b16_er = 4325 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vaddsh_xmm_k1z_xmm_xmmm16_er = 4326 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vcmpph_kr_k1_xmm_xmmm128b16_imm8 = 4327 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vcmpph_kr_k1_ymm_ymmm256b16_imm8 = 4328 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vcmpph_kr_k1_zmm_zmmm512b16_imm8_sae = 4329 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vcmpsh_kr_k1_xmm_xmmm16_imm8_sae = 4330 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vcomish_xmm_xmmm16_sae = 4331 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vcvtdq2ph_xmm_k1z_xmmm128b32 = 4332 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vcvtdq2ph_xmm_k1z_ymmm256b32 = 4333 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vcvtdq2ph_ymm_k1z_zmmm512b32_er = 4334 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vcvtpd2ph_xmm_k1z_xmmm128b64 = 4335 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vcvtpd2ph_xmm_k1z_ymmm256b64 = 4336 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vcvtpd2ph_xmm_k1z_zmmm512b64_er = 4337 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vcvtph2dq_xmm_k1z_xmmm64b16 = 4338 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vcvtph2dq_ymm_k1z_xmmm128b16 = 4339 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vcvtph2dq_zmm_k1z_ymmm256b16_er = 4340 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vcvtph2pd_xmm_k1z_xmmm32b16 = 4341 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vcvtph2pd_ymm_k1z_xmmm64b16 = 4342 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vcvtph2pd_zmm_k1z_xmmm128b16_sae = 4343 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vcvtph2psx_xmm_k1z_xmmm64b16 = 4344 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vcvtph2psx_ymm_k1z_xmmm128b16 = 4345 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vcvtph2psx_zmm_k1z_ymmm256b16_sae = 4346 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vcvtph2qq_xmm_k1z_xmmm32b16 = 4347 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vcvtph2qq_ymm_k1z_xmmm64b16 = 4348 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vcvtph2qq_zmm_k1z_xmmm128b16_er = 4349 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vcvtph2udq_xmm_k1z_xmmm64b16 = 4350 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vcvtph2udq_ymm_k1z_xmmm128b16 = 4351 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vcvtph2udq_zmm_k1z_ymmm256b16_er = 4352 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vcvtph2uqq_xmm_k1z_xmmm32b16 = 4353 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vcvtph2uqq_ymm_k1z_xmmm64b16 = 4354 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vcvtph2uqq_zmm_k1z_xmmm128b16_er = 4355 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vcvtph2uw_xmm_k1z_xmmm128b16 = 4356 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vcvtph2uw_ymm_k1z_ymmm256b16 = 4357 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vcvtph2uw_zmm_k1z_zmmm512b16_er = 4358 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vcvtph2w_xmm_k1z_xmmm128b16 = 4359 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vcvtph2w_ymm_k1z_ymmm256b16 = 4360 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vcvtph2w_zmm_k1z_zmmm512b16_er = 4361 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vcvtps2phx_xmm_k1z_xmmm128b32 = 4362 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vcvtps2phx_xmm_k1z_ymmm256b32 = 4363 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vcvtps2phx_ymm_k1z_zmmm512b32_er = 4364 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vcvtqq2ph_xmm_k1z_xmmm128b64 = 4365 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vcvtqq2ph_xmm_k1z_ymmm256b64 = 4366 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vcvtqq2ph_xmm_k1z_zmmm512b64_er = 4367 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vcvtsd2sh_xmm_k1z_xmm_xmmm64_er = 4368 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vcvtsh2sd_xmm_k1z_xmm_xmmm16_sae = 4369 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vcvtsh2si_r32_xmmm16_er = 4370 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vcvtsh2si_r64_xmmm16_er = 4371 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vcvtsh2ss_xmm_k1z_xmm_xmmm16_sae = 4372 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vcvtsh2usi_r32_xmmm16_er = 4373 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vcvtsh2usi_r64_xmmm16_er = 4374 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vcvtsi2sh_xmm_xmm_rm32_er = 4375 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vcvtsi2sh_xmm_xmm_rm64_er = 4376 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vcvtss2sh_xmm_k1z_xmm_xmmm32_er = 4377 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vcvttph2dq_xmm_k1z_xmmm64b16 = 4378 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vcvttph2dq_ymm_k1z_xmmm128b16 = 4379 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vcvttph2dq_zmm_k1z_ymmm256b16_sae = 4380 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vcvttph2qq_xmm_k1z_xmmm32b16 = 4381 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vcvttph2qq_ymm_k1z_xmmm64b16 = 4382 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vcvttph2qq_zmm_k1z_xmmm128b16_sae = 4383 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vcvttph2udq_xmm_k1z_xmmm64b16 = 4384 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vcvttph2udq_ymm_k1z_xmmm128b16 = 4385 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vcvttph2udq_zmm_k1z_ymmm256b16_sae = 4386 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vcvttph2uqq_xmm_k1z_xmmm32b16 = 4387 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vcvttph2uqq_ymm_k1z_xmmm64b16 = 4388 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vcvttph2uqq_zmm_k1z_xmmm128b16_sae = 4389 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vcvttph2uw_xmm_k1z_xmmm128b16 = 4390 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vcvttph2uw_ymm_k1z_ymmm256b16 = 4391 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vcvttph2uw_zmm_k1z_zmmm512b16_sae = 4392 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vcvttph2w_xmm_k1z_xmmm128b16 = 4393 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vcvttph2w_ymm_k1z_ymmm256b16 = 4394 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vcvttph2w_zmm_k1z_zmmm512b16_sae = 4395 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vcvttsh2si_r32_xmmm16_sae = 4396 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vcvttsh2si_r64_xmmm16_sae = 4397 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vcvttsh2usi_r32_xmmm16_sae = 4398 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vcvttsh2usi_r64_xmmm16_sae = 4399 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vcvtudq2ph_xmm_k1z_xmmm128b32 = 4400 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vcvtudq2ph_xmm_k1z_ymmm256b32 = 4401 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vcvtudq2ph_ymm_k1z_zmmm512b32_er = 4402 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vcvtuqq2ph_xmm_k1z_xmmm128b64 = 4403 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vcvtuqq2ph_xmm_k1z_ymmm256b64 = 4404 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vcvtuqq2ph_xmm_k1z_zmmm512b64_er = 4405 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vcvtusi2sh_xmm_xmm_rm32_er = 4406 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vcvtusi2sh_xmm_xmm_rm64_er = 4407 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vcvtuw2ph_xmm_k1z_xmmm128b16 = 4408 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vcvtuw2ph_ymm_k1z_ymmm256b16 = 4409 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vcvtuw2ph_zmm_k1z_zmmm512b16_er = 4410 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vcvtw2ph_xmm_k1z_xmmm128b16 = 4411 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vcvtw2ph_ymm_k1z_ymmm256b16 = 4412 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vcvtw2ph_zmm_k1z_zmmm512b16_er = 4413 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vdivph_xmm_k1z_xmm_xmmm128b16 = 4414 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vdivph_ymm_k1z_ymm_ymmm256b16 = 4415 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vdivph_zmm_k1z_zmm_zmmm512b16_er = 4416 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vdivsh_xmm_k1z_xmm_xmmm16_er = 4417 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vfcmaddcph_xmm_k1z_xmm_xmmm128b32 = 4418 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vfcmaddcph_ymm_k1z_ymm_ymmm256b32 = 4419 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vfcmaddcph_zmm_k1z_zmm_zmmm512b32_er = 4420 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vfmaddcph_xmm_k1z_xmm_xmmm128b32 = 4421 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vfmaddcph_ymm_k1z_ymm_ymmm256b32 = 4422 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vfmaddcph_zmm_k1z_zmm_zmmm512b32_er = 4423 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vfcmaddcsh_xmm_k1z_xmm_xmmm32_er = 4424 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vfmaddcsh_xmm_k1z_xmm_xmmm32_er = 4425 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vfcmulcph_xmm_k1z_xmm_xmmm128b32 = 4426 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vfcmulcph_ymm_k1z_ymm_ymmm256b32 = 4427 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vfcmulcph_zmm_k1z_zmm_zmmm512b32_er = 4428 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vfmulcph_xmm_k1z_xmm_xmmm128b32 = 4429 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vfmulcph_ymm_k1z_ymm_ymmm256b32 = 4430 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vfmulcph_zmm_k1z_zmm_zmmm512b32_er = 4431 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vfcmulcsh_xmm_k1z_xmm_xmmm32_er = 4432 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vfmulcsh_xmm_k1z_xmm_xmmm32_er = 4433 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vfmaddsub132ph_xmm_k1z_xmm_xmmm128b16 = 4434 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vfmaddsub132ph_ymm_k1z_ymm_ymmm256b16 = 4435 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vfmaddsub132ph_zmm_k1z_zmm_zmmm512b16_er = 4436 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vfmaddsub213ph_xmm_k1z_xmm_xmmm128b16 = 4437 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vfmaddsub213ph_ymm_k1z_ymm_ymmm256b16 = 4438 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vfmaddsub213ph_zmm_k1z_zmm_zmmm512b16_er = 4439 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vfmaddsub231ph_xmm_k1z_xmm_xmmm128b16 = 4440 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vfmaddsub231ph_ymm_k1z_ymm_ymmm256b16 = 4441 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vfmaddsub231ph_zmm_k1z_zmm_zmmm512b16_er = 4442 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vfmsubadd132ph_xmm_k1z_xmm_xmmm128b16 = 4443 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vfmsubadd132ph_ymm_k1z_ymm_ymmm256b16 = 4444 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vfmsubadd132ph_zmm_k1z_zmm_zmmm512b16_er = 4445 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vfmsubadd213ph_xmm_k1z_xmm_xmmm128b16 = 4446 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vfmsubadd213ph_ymm_k1z_ymm_ymmm256b16 = 4447 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vfmsubadd213ph_zmm_k1z_zmm_zmmm512b16_er = 4448 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vfmsubadd231ph_xmm_k1z_xmm_xmmm128b16 = 4449 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vfmsubadd231ph_ymm_k1z_ymm_ymmm256b16 = 4450 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vfmsubadd231ph_zmm_k1z_zmm_zmmm512b16_er = 4451 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vfmadd132ph_xmm_k1z_xmm_xmmm128b16 = 4452 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vfmadd132ph_ymm_k1z_ymm_ymmm256b16 = 4453 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vfmadd132ph_zmm_k1z_zmm_zmmm512b16_er = 4454 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vfmadd213ph_xmm_k1z_xmm_xmmm128b16 = 4455 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vfmadd213ph_ymm_k1z_ymm_ymmm256b16 = 4456 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vfmadd213ph_zmm_k1z_zmm_zmmm512b16_er = 4457 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vfmadd231ph_xmm_k1z_xmm_xmmm128b16 = 4458 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vfmadd231ph_ymm_k1z_ymm_ymmm256b16 = 4459 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vfmadd231ph_zmm_k1z_zmm_zmmm512b16_er = 4460 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vfnmadd132ph_xmm_k1z_xmm_xmmm128b16 = 4461 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vfnmadd132ph_ymm_k1z_ymm_ymmm256b16 = 4462 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vfnmadd132ph_zmm_k1z_zmm_zmmm512b16_er = 4463 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vfnmadd213ph_xmm_k1z_xmm_xmmm128b16 = 4464 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vfnmadd213ph_ymm_k1z_ymm_ymmm256b16 = 4465 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vfnmadd213ph_zmm_k1z_zmm_zmmm512b16_er = 4466 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vfnmadd231ph_xmm_k1z_xmm_xmmm128b16 = 4467 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vfnmadd231ph_ymm_k1z_ymm_ymmm256b16 = 4468 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vfnmadd231ph_zmm_k1z_zmm_zmmm512b16_er = 4469 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vfmadd132sh_xmm_k1z_xmm_xmmm16_er = 4470 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vfmadd213sh_xmm_k1z_xmm_xmmm16_er = 4471 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vfmadd231sh_xmm_k1z_xmm_xmmm16_er = 4472 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vfnmadd132sh_xmm_k1z_xmm_xmmm16_er = 4473 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vfnmadd213sh_xmm_k1z_xmm_xmmm16_er = 4474 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vfnmadd231sh_xmm_k1z_xmm_xmmm16_er = 4475 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vfmsub132ph_xmm_k1z_xmm_xmmm128b16 = 4476 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vfmsub132ph_ymm_k1z_ymm_ymmm256b16 = 4477 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vfmsub132ph_zmm_k1z_zmm_zmmm512b16_er = 4478 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vfmsub213ph_xmm_k1z_xmm_xmmm128b16 = 4479 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vfmsub213ph_ymm_k1z_ymm_ymmm256b16 = 4480 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vfmsub213ph_zmm_k1z_zmm_zmmm512b16_er = 4481 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vfmsub231ph_xmm_k1z_xmm_xmmm128b16 = 4482 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vfmsub231ph_ymm_k1z_ymm_ymmm256b16 = 4483 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vfmsub231ph_zmm_k1z_zmm_zmmm512b16_er = 4484 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vfnmsub132ph_xmm_k1z_xmm_xmmm128b16 = 4485 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vfnmsub132ph_ymm_k1z_ymm_ymmm256b16 = 4486 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vfnmsub132ph_zmm_k1z_zmm_zmmm512b16_er = 4487 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vfnmsub213ph_xmm_k1z_xmm_xmmm128b16 = 4488 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vfnmsub213ph_ymm_k1z_ymm_ymmm256b16 = 4489 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vfnmsub213ph_zmm_k1z_zmm_zmmm512b16_er = 4490 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vfnmsub231ph_xmm_k1z_xmm_xmmm128b16 = 4491 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vfnmsub231ph_ymm_k1z_ymm_ymmm256b16 = 4492 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vfnmsub231ph_zmm_k1z_zmm_zmmm512b16_er = 4493 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vfmsub132sh_xmm_k1z_xmm_xmmm16_er = 4494 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vfmsub213sh_xmm_k1z_xmm_xmmm16_er = 4495 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vfmsub231sh_xmm_k1z_xmm_xmmm16_er = 4496 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vfnmsub132sh_xmm_k1z_xmm_xmmm16_er = 4497 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vfnmsub213sh_xmm_k1z_xmm_xmmm16_er = 4498 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vfnmsub231sh_xmm_k1z_xmm_xmmm16_er = 4499 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vfpclassph_kr_k1_xmmm128b16_imm8 = 4500 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vfpclassph_kr_k1_ymmm256b16_imm8 = 4501 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vfpclassph_kr_k1_zmmm512b16_imm8 = 4502 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vfpclasssh_kr_k1_xmmm16_imm8 = 4503 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vgetexpph_xmm_k1z_xmmm128b16 = 4504 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vgetexpph_ymm_k1z_ymmm256b16 = 4505 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vgetexpph_zmm_k1z_zmmm512b16_sae = 4506 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vgetexpsh_xmm_k1z_xmm_xmmm16_sae = 4507 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vgetmantph_xmm_k1z_xmmm128b16_imm8 = 4508 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vgetmantph_ymm_k1z_ymmm256b16_imm8 = 4509 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vgetmantph_zmm_k1z_zmmm512b16_imm8_sae = 4510 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vgetmantsh_xmm_k1z_xmm_xmmm16_imm8_sae = 4511 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vmaxph_xmm_k1z_xmm_xmmm128b16 = 4512 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vmaxph_ymm_k1z_ymm_ymmm256b16 = 4513 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vmaxph_zmm_k1z_zmm_zmmm512b16_sae = 4514 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vmaxsh_xmm_k1z_xmm_xmmm16_sae = 4515 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vminph_xmm_k1z_xmm_xmmm128b16 = 4516 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vminph_ymm_k1z_ymm_ymmm256b16 = 4517 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vminph_zmm_k1z_zmm_zmmm512b16_sae = 4518 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vminsh_xmm_k1z_xmm_xmmm16_sae = 4519 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vmovsh_xmm_k1z_m16 = 4520 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vmovsh_m16_k1_xmm = 4521 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vmovsh_xmm_k1z_xmm_xmm = 4522 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vmovsh_xmm_k1z_xmm_xmm_MAP5_11 = 4523 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vmovw_xmm_r32m16 = 4524 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vmovw_xmm_r64m16 = 4525 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vmovw_r32m16_xmm = 4526 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vmovw_r64m16_xmm = 4527 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vmulph_xmm_k1z_xmm_xmmm128b16 = 4528 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vmulph_ymm_k1z_ymm_ymmm256b16 = 4529 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vmulph_zmm_k1z_zmm_zmmm512b16_er = 4530 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vmulsh_xmm_k1z_xmm_xmmm16_er = 4531 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vrcpph_xmm_k1z_xmmm128b16 = 4532 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vrcpph_ymm_k1z_ymmm256b16 = 4533 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vrcpph_zmm_k1z_zmmm512b16 = 4534 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vrcpsh_xmm_k1z_xmm_xmmm16 = 4535 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vreduceph_xmm_k1z_xmmm128b16_imm8 = 4536 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vreduceph_ymm_k1z_ymmm256b16_imm8 = 4537 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vreduceph_zmm_k1z_zmmm512b16_imm8_sae = 4538 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vreducesh_xmm_k1z_xmm_xmmm16_imm8_sae = 4539 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vrndscaleph_xmm_k1z_xmmm128b16_imm8 = 4540 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vrndscaleph_ymm_k1z_ymmm256b16_imm8 = 4541 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vrndscaleph_zmm_k1z_zmmm512b16_imm8_sae = 4542 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vrndscalesh_xmm_k1z_xmm_xmmm16_imm8_sae = 4543 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vrsqrtph_xmm_k1z_xmmm128b16 = 4544 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vrsqrtph_ymm_k1z_ymmm256b16 = 4545 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vrsqrtph_zmm_k1z_zmmm512b16 = 4546 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vrsqrtsh_xmm_k1z_xmm_xmmm16 = 4547 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vscalefph_xmm_k1z_xmm_xmmm128b16 = 4548 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vscalefph_ymm_k1z_ymm_ymmm256b16 = 4549 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vscalefph_zmm_k1z_zmm_zmmm512b16_er = 4550 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vscalefsh_xmm_k1z_xmm_xmmm16_er = 4551 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vsqrtph_xmm_k1z_xmmm128b16 = 4552 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vsqrtph_ymm_k1z_ymmm256b16 = 4553 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vsqrtph_zmm_k1z_zmmm512b16_er = 4554 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vsqrtsh_xmm_k1z_xmm_xmmm16_er = 4555 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vsubph_xmm_k1z_xmm_xmmm128b16 = 4556 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vsubph_ymm_k1z_ymm_ymmm256b16 = 4557 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vsubph_zmm_k1z_zmm_zmmm512b16_er = 4558 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vsubsh_xmm_k1z_xmm_xmmm16_er = 4559 : Public, Static, Literal, HasDefault
    Iced.Intel.Code EVEX_Vucomish_xmm_xmmm16_sae = 4560 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Rdudbg = 4561 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Wrudbg = 4562 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_KNC_Jkzd_kr_rel8_64 = 4563 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_KNC_Jknzd_kr_rel8_64 = 4564 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_KNC_Vprefetchnta_m8 = 4565 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_KNC_Vprefetch0_m8 = 4566 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_KNC_Vprefetch1_m8 = 4567 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_KNC_Vprefetch2_m8 = 4568 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_KNC_Vprefetchenta_m8 = 4569 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_KNC_Vprefetche0_m8 = 4570 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_KNC_Vprefetche1_m8 = 4571 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_KNC_Vprefetche2_m8 = 4572 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_KNC_Kand_kr_kr = 4573 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_KNC_Kandn_kr_kr = 4574 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_KNC_Kandnr_kr_kr = 4575 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_KNC_Knot_kr_kr = 4576 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_KNC_Kor_kr_kr = 4577 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_KNC_Kxnor_kr_kr = 4578 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_KNC_Kxor_kr_kr = 4579 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_KNC_Kmerge2l1h_kr_kr = 4580 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_KNC_Kmerge2l1l_kr_kr = 4581 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_KNC_Jkzd_kr_rel32_64 = 4582 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_KNC_Jknzd_kr_rel32_64 = 4583 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_KNC_Kmov_kr_kr = 4584 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_KNC_Kmov_kr_r32 = 4585 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_KNC_Kmov_r32_kr = 4586 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_KNC_Kconcath_r64_kr_kr = 4587 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_KNC_Kconcatl_r64_kr_kr = 4588 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_KNC_Kortest_kr_kr = 4589 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_KNC_Delay_r32 = 4590 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_KNC_Delay_r64 = 4591 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_KNC_Spflt_r32 = 4592 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_KNC_Spflt_r64 = 4593 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_KNC_Clevict1_m8 = 4594 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_KNC_Clevict0_m8 = 4595 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_KNC_Popcnt_r32_r32 = 4596 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_KNC_Popcnt_r64_r64 = 4597 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_KNC_Tzcnt_r32_r32 = 4598 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_KNC_Tzcnt_r64_r64 = 4599 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_KNC_Tzcnti_r32_r32 = 4600 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_KNC_Tzcnti_r64_r64 = 4601 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_KNC_Lzcnt_r32_r32 = 4602 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_KNC_Lzcnt_r64_r64 = 4603 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_KNC_Undoc_r32_rm32_128_F3_0F38_W0_F0 = 4604 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_KNC_Undoc_r64_rm64_128_F3_0F38_W1_F0 = 4605 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_KNC_Undoc_r32_rm32_128_F2_0F38_W0_F0 = 4606 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_KNC_Undoc_r64_rm64_128_F2_0F38_W1_F0 = 4607 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_KNC_Undoc_r32_rm32_128_F2_0F38_W0_F1 = 4608 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_KNC_Undoc_r64_rm64_128_F2_0F38_W1_F1 = 4609 : Public, Static, Literal, HasDefault
    Iced.Intel.Code VEX_KNC_Kextract_kr_r64_imm8 = 4610 : Public, Static, Literal, HasDefault
    Iced.Intel.Code MVEX_Vprefetchnta_m = 4611 : Public, Static, Literal, HasDefault
    Iced.Intel.Code MVEX_Vprefetch0_m = 4612 : Public, Static, Literal, HasDefault
    Iced.Intel.Code MVEX_Vprefetch1_m = 4613 : Public, Static, Literal, HasDefault
    Iced.Intel.Code MVEX_Vprefetch2_m = 4614 : Public, Static, Literal, HasDefault
    Iced.Intel.Code MVEX_Vprefetchenta_m = 4615 : Public, Static, Literal, HasDefault
    Iced.Intel.Code MVEX_Vprefetche0_m = 4616 : Public, Static, Literal, HasDefault
    Iced.Intel.Code MVEX_Vprefetche1_m = 4617 : Public, Static, Literal, HasDefault
    Iced.Intel.Code MVEX_Vprefetche2_m = 4618 : Public, Static, Literal, HasDefault
    Iced.Intel.Code MVEX_Vmovaps_zmm_k1_zmmmt = 4619 : Public, Static, Literal, HasDefault
    Iced.Intel.Code MVEX_Vmovapd_zmm_k1_zmmmt = 4620 : Public, Static, Literal, HasDefault
    Iced.Intel.Code MVEX_Vmovaps_mt_k1_zmm = 4621 : Public, Static, Literal, HasDefault
    Iced.Intel.Code MVEX_Vmovapd_mt_k1_zmm = 4622 : Public, Static, Literal, HasDefault
    Iced.Intel.Code MVEX_Vmovnrapd_m_k1_zmm = 4623 : Public, Static, Literal, HasDefault
    Iced.Intel.Code MVEX_Vmovnrngoapd_m_k1_zmm = 4624 : Public, Static, Literal, HasDefault
    Iced.Intel.Code MVEX_Vmovnraps_m_k1_zmm = 4625 : Public, Static, Literal, HasDefault
    Iced.Intel.Code MVEX_Vmovnrngoaps_m_k1_zmm = 4626 : Public, Static, Literal, HasDefault
    Iced.Intel.Code MVEX_Vaddps_zmm_k1_zmm_zmmmt = 4627 : Public, Static, Literal, HasDefault
    Iced.Intel.Code MVEX_Vaddpd_zmm_k1_zmm_zmmmt = 4628 : Public, Static, Literal, HasDefault
    Iced.Intel.Code MVEX_Vmulps_zmm_k1_zmm_zmmmt = 4629 : Public, Static, Literal, HasDefault
    Iced.Intel.Code MVEX_Vmulpd_zmm_k1_zmm_zmmmt = 4630 : Public, Static, Literal, HasDefault
    Iced.Intel.Code MVEX_Vcvtps2pd_zmm_k1_zmmmt = 4631 : Public, Static, Literal, HasDefault
    Iced.Intel.Code MVEX_Vcvtpd2ps_zmm_k1_zmmmt = 4632 : Public, Static, Literal, HasDefault
    Iced.Intel.Code MVEX_Vsubps_zmm_k1_zmm_zmmmt = 4633 : Public, Static, Literal, HasDefault
    Iced.Intel.Code MVEX_Vsubpd_zmm_k1_zmm_zmmmt = 4634 : Public, Static, Literal, HasDefault
    Iced.Intel.Code MVEX_Vpcmpgtd_kr_k1_zmm_zmmmt = 4635 : Public, Static, Literal, HasDefault
    Iced.Intel.Code MVEX_Vmovdqa32_zmm_k1_zmmmt = 4636 : Public, Static, Literal, HasDefault
    Iced.Intel.Code MVEX_Vmovdqa64_zmm_k1_zmmmt = 4637 : Public, Static, Literal, HasDefault
    Iced.Intel.Code MVEX_Vpshufd_zmm_k1_zmmmt_imm8 = 4638 : Public, Static, Literal, HasDefault
    Iced.Intel.Code MVEX_Vpsrld_zmm_k1_zmmmt_imm8 = 4639 : Public, Static, Literal, HasDefault
    Iced.Intel.Code MVEX_Vpsrad_zmm_k1_zmmmt_imm8 = 4640 : Public, Static, Literal, HasDefault
    Iced.Intel.Code MVEX_Vpslld_zmm_k1_zmmmt_imm8 = 4641 : Public, Static, Literal, HasDefault
    Iced.Intel.Code MVEX_Vpcmpeqd_kr_k1_zmm_zmmmt = 4642 : Public, Static, Literal, HasDefault
    Iced.Intel.Code MVEX_Vcvtudq2pd_zmm_k1_zmmmt = 4643 : Public, Static, Literal, HasDefault
    Iced.Intel.Code MVEX_Vmovdqa32_mt_k1_zmm = 4644 : Public, Static, Literal, HasDefault
    Iced.Intel.Code MVEX_Vmovdqa64_mt_k1_zmm = 4645 : Public, Static, Literal, HasDefault
    Iced.Intel.Code MVEX_Clevict1_m = 4646 : Public, Static, Literal, HasDefault
    Iced.Intel.Code MVEX_Clevict0_m = 4647 : Public, Static, Literal, HasDefault
    Iced.Intel.Code MVEX_Vcmpps_kr_k1_zmm_zmmmt_imm8 = 4648 : Public, Static, Literal, HasDefault
    Iced.Intel.Code MVEX_Vcmppd_kr_k1_zmm_zmmmt_imm8 = 4649 : Public, Static, Literal, HasDefault
    Iced.Intel.Code MVEX_Vpandd_zmm_k1_zmm_zmmmt = 4650 : Public, Static, Literal, HasDefault
    Iced.Intel.Code MVEX_Vpandq_zmm_k1_zmm_zmmmt = 4651 : Public, Static, Literal, HasDefault
    Iced.Intel.Code MVEX_Vpandnd_zmm_k1_zmm_zmmmt = 4652 : Public, Static, Literal, HasDefault
    Iced.Intel.Code MVEX_Vpandnq_zmm_k1_zmm_zmmmt = 4653 : Public, Static, Literal, HasDefault
    Iced.Intel.Code MVEX_Vcvtdq2pd_zmm_k1_zmmmt = 4654 : Public, Static, Literal, HasDefault
    Iced.Intel.Code MVEX_Vpord_zmm_k1_zmm_zmmmt = 4655 : Public, Static, Literal, HasDefault
    Iced.Intel.Code MVEX_Vporq_zmm_k1_zmm_zmmmt = 4656 : Public, Static, Literal, HasDefault
    Iced.Intel.Code MVEX_Vpxord_zmm_k1_zmm_zmmmt = 4657 : Public, Static, Literal, HasDefault
    Iced.Intel.Code MVEX_Vpxorq_zmm_k1_zmm_zmmmt = 4658 : Public, Static, Literal, HasDefault
    Iced.Intel.Code MVEX_Vpsubd_zmm_k1_zmm_zmmmt = 4659 : Public, Static, Literal, HasDefault
    Iced.Intel.Code MVEX_Vpaddd_zmm_k1_zmm_zmmmt = 4660 : Public, Static, Literal, HasDefault
    Iced.Intel.Code MVEX_Vbroadcastss_zmm_k1_mt = 4661 : Public, Static, Literal, HasDefault
    Iced.Intel.Code MVEX_Vbroadcastsd_zmm_k1_mt = 4662 : Public, Static, Literal, HasDefault
    Iced.Intel.Code MVEX_Vbroadcastf32x4_zmm_k1_mt = 4663 : Public, Static, Literal, HasDefault
    Iced.Intel.Code MVEX_Vbroadcastf64x4_zmm_k1_mt = 4664 : Public, Static, Literal, HasDefault
    Iced.Intel.Code MVEX_Vptestmd_kr_k1_zmm_zmmmt = 4665 : Public, Static, Literal, HasDefault
    Iced.Intel.Code MVEX_Vpermd_zmm_k1_zmm_zmmmt = 4666 : Public, Static, Literal, HasDefault
    Iced.Intel.Code MVEX_Vpminsd_zmm_k1_zmm_zmmmt = 4667 : Public, Static, Literal, HasDefault
    Iced.Intel.Code MVEX_Vpminud_zmm_k1_zmm_zmmmt = 4668 : Public, Static, Literal, HasDefault
    Iced.Intel.Code MVEX_Vpmaxsd_zmm_k1_zmm_zmmmt = 4669 : Public, Static, Literal, HasDefault
    Iced.Intel.Code MVEX_Vpmaxud_zmm_k1_zmm_zmmmt = 4670 : Public, Static, Literal, HasDefault
    Iced.Intel.Code MVEX_Vpmulld_zmm_k1_zmm_zmmmt = 4671 : Public, Static, Literal, HasDefault
    Iced.Intel.Code MVEX_Vgetexpps_zmm_k1_zmmmt = 4672 : Public, Static, Literal, HasDefault
    Iced.Intel.Code MVEX_Vgetexppd_zmm_k1_zmmmt = 4673 : Public, Static, Literal, HasDefault
    Iced.Intel.Code MVEX_Vpsrlvd_zmm_k1_zmm_zmmmt = 4674 : Public, Static, Literal, HasDefault
    Iced.Intel.Code MVEX_Vpsravd_zmm_k1_zmm_zmmmt = 4675 : Public, Static, Literal, HasDefault
    Iced.Intel.Code MVEX_Vpsllvd_zmm_k1_zmm_zmmmt = 4676 : Public, Static, Literal, HasDefault
    Iced.Intel.Code MVEX_Undoc_zmm_k1_zmmmt_512_66_0F38_W0_48 = 4677 : Public, Static, Literal, HasDefault
    Iced.Intel.Code MVEX_Undoc_zmm_k1_zmmmt_512_66_0F38_W0_49 = 4678 : Public, Static, Literal, HasDefault
    Iced.Intel.Code MVEX_Undoc_zmm_k1_zmmmt_512_66_0F38_W0_4A = 4679 : Public, Static, Literal, HasDefault
    Iced.Intel.Code MVEX_Undoc_zmm_k1_zmmmt_512_66_0F38_W0_4B = 4680 : Public, Static, Literal, HasDefault
    Iced.Intel.Code MVEX_Vaddnps_zmm_k1_zmm_zmmmt = 4681 : Public, Static, Literal, HasDefault
    Iced.Intel.Code MVEX_Vaddnpd_zmm_k1_zmm_zmmmt = 4682 : Public, Static, Literal, HasDefault
    Iced.Intel.Code MVEX_Vgmaxabsps_zmm_k1_zmm_zmmmt = 4683 : Public, Static, Literal, HasDefault
    Iced.Intel.Code MVEX_Vgminps_zmm_k1_zmm_zmmmt = 4684 : Public, Static, Literal, HasDefault
    Iced.Intel.Code MVEX_Vgminpd_zmm_k1_zmm_zmmmt = 4685 : Public, Static, Literal, HasDefault
    Iced.Intel.Code MVEX_Vgmaxps_zmm_k1_zmm_zmmmt = 4686 : Public, Static, Literal, HasDefault
    Iced.Intel.Code MVEX_Vgmaxpd_zmm_k1_zmm_zmmmt = 4687 : Public, Static, Literal, HasDefault
    Iced.Intel.Code MVEX_Undoc_zmm_k1_zmm_zmmmt_512_66_0F38_W0_54 = 4688 : Public, Static, Literal, HasDefault
    Iced.Intel.Code MVEX_Vfixupnanps_zmm_k1_zmm_zmmmt = 4689 : Public, Static, Literal, HasDefault
    Iced.Intel.Code MVEX_Vfixupnanpd_zmm_k1_zmm_zmmmt = 4690 : Public, Static, Literal, HasDefault
    Iced.Intel.Code MVEX_Undoc_zmm_k1_zmm_zmmmt_512_66_0F38_W0_56 = 4691 : Public, Static, Literal, HasDefault
    Iced.Intel.Code MVEX_Undoc_zmm_k1_zmm_zmmmt_512_66_0F38_W0_57 = 4692 : Public, Static, Literal, HasDefault
    Iced.Intel.Code MVEX_Vpbroadcastd_zmm_k1_mt = 4693 : Public, Static, Literal, HasDefault
    Iced.Intel.Code MVEX_Vpbroadcastq_zmm_k1_mt = 4694 : Public, Static, Literal, HasDefault
    Iced.Intel.Code MVEX_Vbroadcasti32x4_zmm_k1_mt = 4695 : Public, Static, Literal, HasDefault
    Iced.Intel.Code MVEX_Vbroadcasti64x4_zmm_k1_mt = 4696 : Public, Static, Literal, HasDefault
    Iced.Intel.Code MVEX_Vpadcd_zmm_k1_kr_zmmmt = 4697 : Public, Static, Literal, HasDefault
    Iced.Intel.Code MVEX_Vpaddsetcd_zmm_k1_kr_zmmmt = 4698 : Public, Static, Literal, HasDefault
    Iced.Intel.Code MVEX_Vpsbbd_zmm_k1_kr_zmmmt = 4699 : Public, Static, Literal, HasDefault
    Iced.Intel.Code MVEX_Vpsubsetbd_zmm_k1_kr_zmmmt = 4700 : Public, Static, Literal, HasDefault
    Iced.Intel.Code MVEX_Vpblendmd_zmm_k1_zmm_zmmmt = 4701 : Public, Static, Literal, HasDefault
    Iced.Intel.Code MVEX_Vpblendmq_zmm_k1_zmm_zmmmt = 4702 : Public, Static, Literal, HasDefault
    Iced.Intel.Code MVEX_Vblendmps_zmm_k1_zmm_zmmmt = 4703 : Public, Static, Literal, HasDefault
    Iced.Intel.Code MVEX_Vblendmpd_zmm_k1_zmm_zmmmt = 4704 : Public, Static, Literal, HasDefault
    Iced.Intel.Code MVEX_Undoc_zmm_k1_zmm_zmmmt_512_66_0F38_W0_67 = 4705 : Public, Static, Literal, HasDefault
    Iced.Intel.Code MVEX_Undoc_zmm_k1_zmmmt_512_66_0F38_W0_68 = 4706 : Public, Static, Literal, HasDefault
    Iced.Intel.Code MVEX_Undoc_zmm_k1_zmmmt_512_66_0F38_W0_69 = 4707 : Public, Static, Literal, HasDefault
    Iced.Intel.Code MVEX_Undoc_zmm_k1_zmmmt_512_66_0F38_W0_6A = 4708 : Public, Static, Literal, HasDefault
    Iced.Intel.Code MVEX_Undoc_zmm_k1_zmmmt_512_66_0F38_W0_6B = 4709 : Public, Static, Literal, HasDefault
    Iced.Intel.Code MVEX_Vpsubrd_zmm_k1_zmm_zmmmt = 4710 : Public, Static, Literal, HasDefault
    Iced.Intel.Code MVEX_Vsubrps_zmm_k1_zmm_zmmmt = 4711 : Public, Static, Literal, HasDefault
    Iced.Intel.Code MVEX_Vsubrpd_zmm_k1_zmm_zmmmt = 4712 : Public, Static, Literal, HasDefault
    Iced.Intel.Code MVEX_Vpsbbrd_zmm_k1_kr_zmmmt = 4713 : Public, Static, Literal, HasDefault
    Iced.Intel.Code MVEX_Vpsubrsetbd_zmm_k1_kr_zmmmt = 4714 : Public, Static, Literal, HasDefault
    Iced.Intel.Code MVEX_Undoc_zmm_k1_zmm_zmmmt_512_66_0F38_W0_70 = 4715 : Public, Static, Literal, HasDefault
    Iced.Intel.Code MVEX_Undoc_zmm_k1_zmm_zmmmt_512_66_0F38_W0_71 = 4716 : Public, Static, Literal, HasDefault
    Iced.Intel.Code MVEX_Undoc_zmm_k1_zmm_zmmmt_512_66_0F38_W0_72 = 4717 : Public, Static, Literal, HasDefault
    Iced.Intel.Code MVEX_Undoc_zmm_k1_zmm_zmmmt_512_66_0F38_W0_73 = 4718 : Public, Static, Literal, HasDefault
    Iced.Intel.Code MVEX_Vpcmpltd_kr_k1_zmm_zmmmt = 4719 : Public, Static, Literal, HasDefault
    Iced.Intel.Code MVEX_Vscaleps_zmm_k1_zmm_zmmmt = 4720 : Public, Static, Literal, HasDefault
    Iced.Intel.Code MVEX_Vpmulhud_zmm_k1_zmm_zmmmt = 4721 : Public, Static, Literal, HasDefault
    Iced.Intel.Code MVEX_Vpmulhd_zmm_k1_zmm_zmmmt = 4722 : Public, Static, Literal, HasDefault
    Iced.Intel.Code MVEX_Vpgatherdd_zmm_k1_mvt = 4723 : Public, Static, Literal, HasDefault
    Iced.Intel.Code MVEX_Vpgatherdq_zmm_k1_mvt = 4724 : Public, Static, Literal, HasDefault
    Iced.Intel.Code MVEX_Vgatherdps_zmm_k1_mvt = 4725 : Public, Static, Literal, HasDefault
    Iced.Intel.Code MVEX_Vgatherdpd_zmm_k1_mvt = 4726 : Public, Static, Literal, HasDefault
    Iced.Intel.Code MVEX_Undoc_zmm_k1_zmm_zmmmt_512_66_0F38_W0_94 = 4727 : Public, Static, Literal, HasDefault
    Iced.Intel.Code MVEX_Undoc_zmm_k1_zmm_zmmmt_512_66_0F38_W1_94 = 4728 : Public, Static, Literal, HasDefault
    Iced.Intel.Code MVEX_Vfmadd132ps_zmm_k1_zmm_zmmmt = 4729 : Public, Static, Literal, HasDefault
    Iced.Intel.Code MVEX_Vfmadd132pd_zmm_k1_zmm_zmmmt = 4730 : Public, Static, Literal, HasDefault
    Iced.Intel.Code MVEX_Vfmsub132ps_zmm_k1_zmm_zmmmt = 4731 : Public, Static, Literal, HasDefault
    Iced.Intel.Code MVEX_Vfmsub132pd_zmm_k1_zmm_zmmmt = 4732 : Public, Static, Literal, HasDefault
    Iced.Intel.Code MVEX_Vfnmadd132ps_zmm_k1_zmm_zmmmt = 4733 : Public, Static, Literal, HasDefault
    Iced.Intel.Code MVEX_Vfnmadd132pd_zmm_k1_zmm_zmmmt = 4734 : Public, Static, Literal, HasDefault
    Iced.Intel.Code MVEX_Vfnmsub132ps_zmm_k1_zmm_zmmmt = 4735 : Public, Static, Literal, HasDefault
    Iced.Intel.Code MVEX_Vfnmsub132pd_zmm_k1_zmm_zmmmt = 4736 : Public, Static, Literal, HasDefault
    Iced.Intel.Code MVEX_Vpscatterdd_mvt_k1_zmm = 4737 : Public, Static, Literal, HasDefault
    Iced.Intel.Code MVEX_Vpscatterdq_mvt_k1_zmm = 4738 : Public, Static, Literal, HasDefault
    Iced.Intel.Code MVEX_Vscatterdps_mvt_k1_zmm = 4739 : Public, Static, Literal, HasDefault
    Iced.Intel.Code MVEX_Vscatterdpd_mvt_k1_zmm = 4740 : Public, Static, Literal, HasDefault
    Iced.Intel.Code MVEX_Vfmadd233ps_zmm_k1_zmm_zmmmt = 4741 : Public, Static, Literal, HasDefault
    Iced.Intel.Code MVEX_Vfmadd213ps_zmm_k1_zmm_zmmmt = 4742 : Public, Static, Literal, HasDefault
    Iced.Intel.Code MVEX_Vfmadd213pd_zmm_k1_zmm_zmmmt = 4743 : Public, Static, Literal, HasDefault
    Iced.Intel.Code MVEX_Vfmsub213ps_zmm_k1_zmm_zmmmt = 4744 : Public, Static, Literal, HasDefault
    Iced.Intel.Code MVEX_Vfmsub213pd_zmm_k1_zmm_zmmmt = 4745 : Public, Static, Literal, HasDefault
    Iced.Intel.Code MVEX_Vfnmadd213ps_zmm_k1_zmm_zmmmt = 4746 : Public, Static, Literal, HasDefault
    Iced.Intel.Code MVEX_Vfnmadd213pd_zmm_k1_zmm_zmmmt = 4747 : Public, Static, Literal, HasDefault
    Iced.Intel.Code MVEX_Vfnmsub213ps_zmm_k1_zmm_zmmmt = 4748 : Public, Static, Literal, HasDefault
    Iced.Intel.Code MVEX_Vfnmsub213pd_zmm_k1_zmm_zmmmt = 4749 : Public, Static, Literal, HasDefault
    Iced.Intel.Code MVEX_Undoc_zmm_k1_mvt_512_66_0F38_W0_B0 = 4750 : Public, Static, Literal, HasDefault
    Iced.Intel.Code MVEX_Undoc_zmm_k1_mvt_512_66_0F38_W0_B2 = 4751 : Public, Static, Literal, HasDefault
    Iced.Intel.Code MVEX_Vpmadd233d_zmm_k1_zmm_zmmmt = 4752 : Public, Static, Literal, HasDefault
    Iced.Intel.Code MVEX_Vpmadd231d_zmm_k1_zmm_zmmmt = 4753 : Public, Static, Literal, HasDefault
    Iced.Intel.Code MVEX_Vfmadd231ps_zmm_k1_zmm_zmmmt = 4754 : Public, Static, Literal, HasDefault
    Iced.Intel.Code MVEX_Vfmadd231pd_zmm_k1_zmm_zmmmt = 4755 : Public, Static, Literal, HasDefault
    Iced.Intel.Code MVEX_Vfmsub231ps_zmm_k1_zmm_zmmmt = 4756 : Public, Static, Literal, HasDefault
    Iced.Intel.Code MVEX_Vfmsub231pd_zmm_k1_zmm_zmmmt = 4757 : Public, Static, Literal, HasDefault
    Iced.Intel.Code MVEX_Vfnmadd231ps_zmm_k1_zmm_zmmmt = 4758 : Public, Static, Literal, HasDefault
    Iced.Intel.Code MVEX_Vfnmadd231pd_zmm_k1_zmm_zmmmt = 4759 : Public, Static, Literal, HasDefault
    Iced.Intel.Code MVEX_Vfnmsub231ps_zmm_k1_zmm_zmmmt = 4760 : Public, Static, Literal, HasDefault
    Iced.Intel.Code MVEX_Vfnmsub231pd_zmm_k1_zmm_zmmmt = 4761 : Public, Static, Literal, HasDefault
    Iced.Intel.Code MVEX_Undoc_zmm_k1_mvt_512_66_0F38_W0_C0 = 4762 : Public, Static, Literal, HasDefault
    Iced.Intel.Code MVEX_Vgatherpf0hintdps_mvt_k1 = 4763 : Public, Static, Literal, HasDefault
    Iced.Intel.Code MVEX_Vgatherpf0hintdpd_mvt_k1 = 4764 : Public, Static, Literal, HasDefault
    Iced.Intel.Code MVEX_Vgatherpf0dps_mvt_k1 = 4765 : Public, Static, Literal, HasDefault
    Iced.Intel.Code MVEX_Vgatherpf1dps_mvt_k1 = 4766 : Public, Static, Literal, HasDefault
    Iced.Intel.Code MVEX_Vscatterpf0hintdps_mvt_k1 = 4767 : Public, Static, Literal, HasDefault
    Iced.Intel.Code MVEX_Vscatterpf0hintdpd_mvt_k1 = 4768 : Public, Static, Literal, HasDefault
    Iced.Intel.Code MVEX_Vscatterpf0dps_mvt_k1 = 4769 : Public, Static, Literal, HasDefault
    Iced.Intel.Code MVEX_Vscatterpf1dps_mvt_k1 = 4770 : Public, Static, Literal, HasDefault
    Iced.Intel.Code MVEX_Vexp223ps_zmm_k1_zmmmt = 4771 : Public, Static, Literal, HasDefault
    Iced.Intel.Code MVEX_Vlog2ps_zmm_k1_zmmmt = 4772 : Public, Static, Literal, HasDefault
    Iced.Intel.Code MVEX_Vrcp23ps_zmm_k1_zmmmt = 4773 : Public, Static, Literal, HasDefault
    Iced.Intel.Code MVEX_Vrsqrt23ps_zmm_k1_zmmmt = 4774 : Public, Static, Literal, HasDefault
    Iced.Intel.Code MVEX_Vaddsetsps_zmm_k1_zmm_zmmmt = 4775 : Public, Static, Literal, HasDefault
    Iced.Intel.Code MVEX_Vpaddsetsd_zmm_k1_zmm_zmmmt = 4776 : Public, Static, Literal, HasDefault
    Iced.Intel.Code MVEX_Undoc_zmm_k1_zmm_zmmmt_512_66_0F38_W0_CE = 4777 : Public, Static, Literal, HasDefault
    Iced.Intel.Code MVEX_Undoc_zmm_k1_zmm_zmmmt_512_66_0F38_W1_CE = 4778 : Public, Static, Literal, HasDefault
    Iced.Intel.Code MVEX_Undoc_zmm_k1_zmm_zmmmt_512_66_0F38_W0_CF = 4779 : Public, Static, Literal, HasDefault
    Iced.Intel.Code MVEX_Vloadunpackld_zmm_k1_mt = 4780 : Public, Static, Literal, HasDefault
    Iced.Intel.Code MVEX_Vloadunpacklq_zmm_k1_mt = 4781 : Public, Static, Literal, HasDefault
    Iced.Intel.Code MVEX_Vpackstoreld_mt_k1_zmm = 4782 : Public, Static, Literal, HasDefault
    Iced.Intel.Code MVEX_Vpackstorelq_mt_k1_zmm = 4783 : Public, Static, Literal, HasDefault
    Iced.Intel.Code MVEX_Vloadunpacklps_zmm_k1_mt = 4784 : Public, Static, Literal, HasDefault
    Iced.Intel.Code MVEX_Vloadunpacklpd_zmm_k1_mt = 4785 : Public, Static, Literal, HasDefault
    Iced.Intel.Code MVEX_Vpackstorelps_mt_k1_zmm = 4786 : Public, Static, Literal, HasDefault
    Iced.Intel.Code MVEX_Vpackstorelpd_mt_k1_zmm = 4787 : Public, Static, Literal, HasDefault
    Iced.Intel.Code MVEX_Undoc_zmm_k1_zmmmt_512_0F38_W0_D2 = 4788 : Public, Static, Literal, HasDefault
    Iced.Intel.Code MVEX_Undoc_zmm_k1_zmmmt_512_66_0F38_W0_D2 = 4789 : Public, Static, Literal, HasDefault
    Iced.Intel.Code MVEX_Undoc_zmm_k1_zmmmt_512_0F38_W0_D3 = 4790 : Public, Static, Literal, HasDefault
    Iced.Intel.Code MVEX_Vloadunpackhd_zmm_k1_mt = 4791 : Public, Static, Literal, HasDefault
    Iced.Intel.Code MVEX_Vloadunpackhq_zmm_k1_mt = 4792 : Public, Static, Literal, HasDefault
    Iced.Intel.Code MVEX_Vpackstorehd_mt_k1_zmm = 4793 : Public, Static, Literal, HasDefault
    Iced.Intel.Code MVEX_Vpackstorehq_mt_k1_zmm = 4794 : Public, Static, Literal, HasDefault
    Iced.Intel.Code MVEX_Vloadunpackhps_zmm_k1_mt = 4795 : Public, Static, Literal, HasDefault
    Iced.Intel.Code MVEX_Vloadunpackhpd_zmm_k1_mt = 4796 : Public, Static, Literal, HasDefault
    Iced.Intel.Code MVEX_Vpackstorehps_mt_k1_zmm = 4797 : Public, Static, Literal, HasDefault
    Iced.Intel.Code MVEX_Vpackstorehpd_mt_k1_zmm = 4798 : Public, Static, Literal, HasDefault
    Iced.Intel.Code MVEX_Undoc_zmm_k1_zmmmt_512_0F38_W0_D6 = 4799 : Public, Static, Literal, HasDefault
    Iced.Intel.Code MVEX_Undoc_zmm_k1_zmmmt_512_66_0F38_W0_D6 = 4800 : Public, Static, Literal, HasDefault
    Iced.Intel.Code MVEX_Undoc_zmm_k1_zmmmt_512_0F38_W0_D7 = 4801 : Public, Static, Literal, HasDefault
    Iced.Intel.Code MVEX_Valignd_zmm_k1_zmm_zmmmt_imm8 = 4802 : Public, Static, Literal, HasDefault
    Iced.Intel.Code MVEX_Vpermf32x4_zmm_k1_zmmmt_imm8 = 4803 : Public, Static, Literal, HasDefault
    Iced.Intel.Code MVEX_Vpcmpud_kr_k1_zmm_zmmmt_imm8 = 4804 : Public, Static, Literal, HasDefault
    Iced.Intel.Code MVEX_Vpcmpd_kr_k1_zmm_zmmmt_imm8 = 4805 : Public, Static, Literal, HasDefault
    Iced.Intel.Code MVEX_Vgetmantps_zmm_k1_zmmmt_imm8 = 4806 : Public, Static, Literal, HasDefault
    Iced.Intel.Code MVEX_Vgetmantpd_zmm_k1_zmmmt_imm8 = 4807 : Public, Static, Literal, HasDefault
    Iced.Intel.Code MVEX_Vrndfxpntps_zmm_k1_zmmmt_imm8 = 4808 : Public, Static, Literal, HasDefault
    Iced.Intel.Code MVEX_Vrndfxpntpd_zmm_k1_zmmmt_imm8 = 4809 : Public, Static, Literal, HasDefault
    Iced.Intel.Code MVEX_Vcvtfxpntudq2ps_zmm_k1_zmmmt_imm8 = 4810 : Public, Static, Literal, HasDefault
    Iced.Intel.Code MVEX_Vcvtfxpntps2udq_zmm_k1_zmmmt_imm8 = 4811 : Public, Static, Literal, HasDefault
    Iced.Intel.Code MVEX_Vcvtfxpntpd2udq_zmm_k1_zmmmt_imm8 = 4812 : Public, Static, Literal, HasDefault
    Iced.Intel.Code MVEX_Vcvtfxpntdq2ps_zmm_k1_zmmmt_imm8 = 4813 : Public, Static, Literal, HasDefault
    Iced.Intel.Code MVEX_Vcvtfxpntps2dq_zmm_k1_zmmmt_imm8 = 4814 : Public, Static, Literal, HasDefault
    Iced.Intel.Code MVEX_Undoc_zmm_k1_zmmmt_imm8_512_66_0F3A_W0_D0 = 4815 : Public, Static, Literal, HasDefault
    Iced.Intel.Code MVEX_Undoc_zmm_k1_zmmmt_imm8_512_66_0F3A_W0_D1 = 4816 : Public, Static, Literal, HasDefault
    Iced.Intel.Code MVEX_Vcvtfxpntpd2dq_zmm_k1_zmmmt_imm8 = 4817 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Via_undoc_F30FA6F0_16 = 4818 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Via_undoc_F30FA6F0_32 = 4819 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Via_undoc_F30FA6F0_64 = 4820 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Via_undoc_F30FA6F8_16 = 4821 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Via_undoc_F30FA6F8_32 = 4822 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Via_undoc_F30FA6F8_64 = 4823 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Xsha512_16 = 4824 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Xsha512_32 = 4825 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Xsha512_64 = 4826 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Xstore_alt_16 = 4827 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Xstore_alt_32 = 4828 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Xstore_alt_64 = 4829 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Xsha512_alt_16 = 4830 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Xsha512_alt_32 = 4831 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Xsha512_alt_64 = 4832 : Public, Static, Literal, HasDefault
    Iced.Intel.Code Zero_bytes = 4833 : Public, Static, Literal, HasDefault
Class Iced.Intel.CodeExtensions: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Methods:
    IgnoresSegment(Code): PrivateScope, Assembly, Static, HideBySig
    IgnoresIndex(Code): PrivateScope, Assembly, Static, HideBySig
    IsTileStrideIndex(Code): PrivateScope, Assembly, Static, HideBySig
Class Iced.Intel.CodeReader: AutoLayout, AnsiClass, Class, Abstract, BeforeFieldInit
  Methods:
    ReadByte(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Struct Iced.Intel.CodeSize: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Iced.Intel.CodeSize Unknown = 0 : Public, Static, Literal, HasDefault
    Iced.Intel.CodeSize Code16 = 1 : Public, Static, Literal, HasDefault
    Iced.Intel.CodeSize Code32 = 2 : Public, Static, Literal, HasDefault
    Iced.Intel.CodeSize Code64 = 3 : Public, Static, Literal, HasDefault
Class Iced.Intel.CodeWriter: AutoLayout, AnsiClass, Class, Abstract, BeforeFieldInit
  Methods:
    WriteByte(Byte): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Struct Iced.Intel.ConstantOffsets: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    Byte DisplacementOffset : Public
    Byte DisplacementSize : Public
    Byte ImmediateOffset : Public
    Byte ImmediateSize : Public
    Byte ImmediateOffset2 : Public
    Byte ImmediateSize2 : Public
  Properties:
    Boolean HasDisplacement 'get ' : 
    Boolean HasImmediate 'get ' : 
    Boolean HasImmediate2 'get ' : 
  Methods:
    get_HasDisplacement(): PrivateScope, Public, HideBySig, SpecialName
    get_HasImmediate(): PrivateScope, Public, HideBySig, SpecialName
    get_HasImmediate2(): PrivateScope, Public, HideBySig, SpecialName
Struct Iced.Intel.OpSize: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Byte value__ : Public, SpecialName, RTSpecialName
    Iced.Intel.OpSize Size16 = 0 : Public, Static, Literal, HasDefault
    Iced.Intel.OpSize Size32 = 1 : Public, Static, Literal, HasDefault
    Iced.Intel.OpSize Size64 = 2 : Public, Static, Literal, HasDefault
Struct Iced.Intel.StateFlags: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    UInt32 value__ : Public, SpecialName, RTSpecialName
    Iced.Intel.StateFlags IpRel64 = 1 : Public, Static, Literal, HasDefault
    Iced.Intel.StateFlags IpRel32 = 2 : Public, Static, Literal, HasDefault
    Iced.Intel.StateFlags HasRex = 8 : Public, Static, Literal, HasDefault
    Iced.Intel.StateFlags b = 16 : Public, Static, Literal, HasDefault
    Iced.Intel.StateFlags z = 32 : Public, Static, Literal, HasDefault
    Iced.Intel.StateFlags IsInvalid = 64 : Public, Static, Literal, HasDefault
    Iced.Intel.StateFlags W = 128 : Public, Static, Literal, HasDefault
    Iced.Intel.StateFlags NoImm = 256 : Public, Static, Literal, HasDefault
    Iced.Intel.StateFlags Addr64 = 512 : Public, Static, Literal, HasDefault
    Iced.Intel.StateFlags BranchImm8 = 1024 : Public, Static, Literal, HasDefault
    Iced.Intel.StateFlags Xbegin = 2048 : Public, Static, Literal, HasDefault
    Iced.Intel.StateFlags Lock = 4096 : Public, Static, Literal, HasDefault
    Iced.Intel.StateFlags AllowLock = 8192 : Public, Static, Literal, HasDefault
    Iced.Intel.StateFlags NoMoreBytes = 16384 : Public, Static, Literal, HasDefault
    Iced.Intel.StateFlags Has66 = 32768 : Public, Static, Literal, HasDefault
    Iced.Intel.StateFlags MvexSssMask = 7 : Public, Static, Literal, HasDefault
    Iced.Intel.StateFlags MvexSssShift = 16 : Public, Static, Literal, HasDefault
    Iced.Intel.StateFlags MvexEH = 524288 : Public, Static, Literal, HasDefault
    Iced.Intel.StateFlags EncodingMask = 7 : Public, Static, Literal, HasDefault
    Iced.Intel.StateFlags EncodingShift = 29 : Public, Static, Literal, HasDefault
Class Iced.Intel.Decoder: AutoLayout, AnsiClass, Class, Sealed
  Interfaces:
    System.Collections.Generic.IEnumerable`1[Iced.Intel.Instruction]
    System.Collections.IEnumerable
  Fields:
    State state : Assembly
    UInt32 displIndex : Assembly
    Iced.Intel.DecoderOptions options : Assembly, InitOnly
    UInt32 invalidCheckMask : Assembly, InitOnly
    UInt32 is64bMode_and_W : Assembly, InitOnly
    UInt32 reg15Mask : Assembly, InitOnly
    Iced.Intel.CodeSize defaultCodeSize : Assembly, InitOnly
    Iced.Intel.OpSize defaultOperandSize : Assembly, InitOnly
    Iced.Intel.OpSize defaultInvertedOperandSize : Assembly, InitOnly
    Iced.Intel.OpSize defaultInvertedAddressSize : Assembly, InitOnly
    Boolean is64bMode : Assembly, InitOnly
  Properties:
    UInt64 IP  'get set' : 
    Int32 Bitness 'get ' : 
    Iced.Intel.DecoderError LastError 'get ' : 
  Methods:
    get_IP(): PrivateScope, Public, HideBySig, SpecialName
    set_IP(UInt64): PrivateScope, Public, HideBySig, SpecialName
    get_Bitness(): PrivateScope, Public, HideBySig, SpecialName
    Create(Int32, CodeReader, UInt64, DecoderOptions(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    Create(Int32, Byte[], UInt64, DecoderOptions(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    Create(Int32, CodeReader, DecoderOptions(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    Create(Int32, Byte[], DecoderOptions(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    ReadByte(): PrivateScope, Assembly, HideBySig
    ReadUInt16(): PrivateScope, Assembly, HideBySig
    ReadUInt32(): PrivateScope, Assembly, HideBySig
    ReadUInt64(): PrivateScope, Assembly, HideBySig
    get_LastError(): PrivateScope, Public, HideBySig, SpecialName
    Decode(): PrivateScope, Public, HideBySig
    Decode(Instruction&(Out)): PrivateScope, Public, HideBySig
    ResetRexPrefixState(): PrivateScope, Assembly, HideBySig
    CallOpCodeHandlerXXTable(Instruction&): PrivateScope, Assembly, HideBySig
    GetCurrentInstructionPointer32(): PrivateScope, Assembly, HideBySig
    GetCurrentInstructionPointer64(): PrivateScope, Assembly, HideBySig
    ClearMandatoryPrefix(Instruction&): PrivateScope, Assembly, HideBySig
    SetXacquireXrelease(Instruction&): PrivateScope, Assembly, HideBySig
    ClearMandatoryPrefixF3(Instruction&): PrivateScope, Assembly, HideBySig
    ClearMandatoryPrefixF2(Instruction&): PrivateScope, Assembly, HideBySig
    SetInvalidInstruction(): PrivateScope, Assembly, HideBySig
    DecodeTable(OpCodeHandler[], Instruction&): PrivateScope, Assembly, HideBySig
    ReadModRM(): PrivateScope, Assembly, HideBySig
    VEX2(Instruction&): PrivateScope, Assembly, HideBySig
    VEX3(Instruction&): PrivateScope, Assembly, HideBySig
    XOP(Instruction&): PrivateScope, Assembly, HideBySig
    EVEX_MVEX(Instruction&): PrivateScope, Assembly, HideBySig
    ReadOpSegReg(): PrivateScope, Assembly, HideBySig
    ReadOpMem(Instruction&): PrivateScope, Assembly, HideBySig
    ReadOpMemSib(Instruction&): PrivateScope, Assembly, HideBySig
    ReadOpMem_MPX(Instruction&): PrivateScope, Assembly, HideBySig
    ReadOpMem(Instruction&, TupleType): PrivateScope, Assembly, HideBySig
    ReadOpMem_VSIB(Instruction&, Register, TupleType): PrivateScope, Assembly, HideBySig
    GetConstantOffsets(Instruction&(In)): PrivateScope, Public, HideBySig
    GetEnumerator(): PrivateScope, Public, HideBySig
Struct Iced.Intel.Decoder+ZState: AutoLayout, AnsiClass, Class, NestedAssembly, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    UInt32 instructionLength : Public
    UInt32 extraRegisterBase : Public
    UInt32 extraIndexRegisterBase : Public
    UInt32 extraBaseRegisterBase : Public
    UInt32 extraIndexRegisterBaseVSIB : Public
    Iced.Intel.StateFlags flags : Public
    Iced.Intel.MandatoryPrefixByte mandatoryPrefix : Public
    Byte segmentPrio : Public
Struct Iced.Intel.Decoder+State: AutoLayout, AnsiClass, Class, NestedAssembly, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    UInt32 modrm : Public
    UInt32 mod : Public
    UInt32 reg : Public
    UInt32 rm : Public
    ZState zs : Public
    UInt32 vvvv : Public
    UInt32 vvvv_invalidCheck : Public
    UInt32 aaa : Public
    UInt32 extraRegisterBaseEVEX : Public
    UInt32 extraBaseRegisterBaseEVEX : Public
    UInt32 vectorLength : Public
    Iced.Intel.OpSize operandSize : Public
    Iced.Intel.OpSize addressSize : Public
  Properties:
    Iced.Intel.EncodingKind Encoding 'get ' : 
  Methods:
    get_Encoding(): PrivateScope, Public, HideBySig, SpecialName
Struct Iced.Intel.Decoder+Enumerator: AutoLayout, AnsiClass, Class, NestedPublic, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Iced.Intel.Decoder): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Collections.Generic.IEnumerator`1[Iced.Intel.Instruction]
    System.IDisposable
    System.Collections.IEnumerator
  Properties:
    Iced.Intel.Instruction Current 'get ' : 
  Methods:
    get_Current(): PrivateScope, Public, HideBySig, SpecialName
    MoveNext(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Struct Iced.Intel.DecoderError: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Iced.Intel.DecoderError None = 0 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderError InvalidInstruction = 1 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderError NoMoreBytes = 2 : Public, Static, Literal, HasDefault
Struct Iced.Intel.DecoderOptions: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    UInt32 value__ : Public, SpecialName, RTSpecialName
    Iced.Intel.DecoderOptions None = 0 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderOptions NoInvalidCheck = 1 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderOptions AMD = 2 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderOptions ForceReservedNop = 4 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderOptions Umov = 8 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderOptions Xbts = 16 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderOptions Cmpxchg486A = 32 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderOptions OldFpu = 64 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderOptions Pcommit = 128 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderOptions Loadall286 = 256 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderOptions Loadall386 = 512 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderOptions Cl1invmb = 1024 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderOptions MovTr = 2048 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderOptions Jmpe = 4096 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderOptions NoPause = 8192 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderOptions NoWbnoinvd = 16384 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderOptions Udbg = 32768 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderOptions NoMPFX_0FBC = 65536 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderOptions NoMPFX_0FBD = 131072 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderOptions NoLahfSahf64 = 262144 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderOptions MPX = 524288 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderOptions Cyrix = 1048576 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderOptions Cyrix_SMINT_0F7E = 2097152 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderOptions Cyrix_DMI = 4194304 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderOptions ALTINST = 8388608 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderOptions KNC = 16777216 : Public, Static, Literal, HasDefault
Class Iced.Intel.Encoder: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  Fields:
    UInt32 Internal_PreventVEX2 : Assembly
    UInt32 Internal_VEX_WIG_LIG : Assembly
    UInt32 Internal_VEX_LIG : Assembly
    UInt32 Internal_EVEX_WIG : Assembly
    UInt32 Internal_EVEX_LIG : Assembly
    UInt32 Immediate : Assembly
    UInt32 ImmediateHi : Assembly
    UInt32 OpCode : Assembly
    Iced.Intel.EncoderInternal.EncoderFlags EncoderFlags : Assembly
    Iced.Intel.EncoderInternal.ImmSize ImmSize : Assembly
    System.String ERROR_ONLY_1632_BIT_MODE = The instruction can only be used in 16/32-bit mode : Assembly, Static, Literal, HasDefault
    System.String ERROR_ONLY_64_BIT_MODE = The instruction can only be used in 64-bit mode : Assembly, Static, Literal, HasDefault
  Properties:
    Boolean PreventVEX2 'get set' : 
    UInt32 VEX_WIG 'get set' : 
    UInt32 VEX_LIG 'get set' : 
    UInt32 EVEX_WIG 'get set' : 
    UInt32 EVEX_LIG 'get set' : 
    Int32 Bitness 'get ' : 
    System.String ErrorMessage 'set' : 
  Methods:
    get_PreventVEX2(): PrivateScope, Public, HideBySig, SpecialName
    set_PreventVEX2(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_VEX_WIG(): PrivateScope, Public, HideBySig, SpecialName
    set_VEX_WIG(UInt32): PrivateScope, Public, HideBySig, SpecialName
    get_VEX_LIG(): PrivateScope, Public, HideBySig, SpecialName
    set_VEX_LIG(UInt32): PrivateScope, Public, HideBySig, SpecialName
    get_EVEX_WIG(): PrivateScope, Public, HideBySig, SpecialName
    set_EVEX_WIG(UInt32): PrivateScope, Public, HideBySig, SpecialName
    get_EVEX_LIG(): PrivateScope, Public, HideBySig, SpecialName
    set_EVEX_LIG(UInt32): PrivateScope, Public, HideBySig, SpecialName
    get_Bitness(): PrivateScope, Public, HideBySig, SpecialName
    Create(Int32, CodeWriter): PrivateScope, Public, Static, HideBySig
    Encode(Instruction&(In), UInt64): PrivateScope, Public, HideBySig
    TryEncode(Instruction&(In), UInt64, UInt32&(Out), String&(Out)): PrivateScope, Public, HideBySig
    set_ErrorMessage(String): PrivateScope, Assembly, HideBySig, SpecialName
    Verify(Int32, OpKind, OpKind): PrivateScope, Assembly, HideBySig
    Verify(Int32, Register, Register): PrivateScope, Assembly, HideBySig
    Verify(Int32, Register, Register, Register): PrivateScope, Assembly, HideBySig
    AddBranch(OpKind, Int32, Instruction&(In), Int32): PrivateScope, Assembly, HideBySig
    AddBranchX(Int32, Instruction&(In), Int32): PrivateScope, Assembly, HideBySig
    AddBranchDisp(Int32, Instruction&(In), Int32): PrivateScope, Assembly, HideBySig
    AddFarBranch(Instruction&(In), Int32, Int32): PrivateScope, Assembly, HideBySig
    SetAddrSize(Int32): PrivateScope, Assembly, HideBySig
    AddAbsMem(Instruction&(In), Int32): PrivateScope, Assembly, HideBySig
    AddModRMRegister(Instruction&(In), Int32, Register, Register): PrivateScope, Assembly, HideBySig
    AddReg(Instruction&(In), Int32, Register, Register): PrivateScope, Assembly, HideBySig
    AddRegOrMem(Instruction&(In), Int32, Register, Register, Boolean, Boolean): PrivateScope, Assembly, HideBySig
    AddRegOrMem(Instruction&(In), Int32, Register, Register, Register, Register, Boolean, Boolean): PrivateScope, Assembly, HideBySig
    WritePrefixes(Instruction&(In), Boolean(Optional, HasDefault)): PrivateScope, Assembly, HideBySig
    WriteByte(Byte): PrivateScope, Public, HideBySig
    WriteByteInternal(UInt32): PrivateScope, Assembly, HideBySig
    GetConstantOffsets(): PrivateScope, Public, HideBySig
Class Iced.Intel.EncoderException: AutoLayout, AnsiClass, Class, Serializable, BeforeFieldInit
  :System.Exception
    Void .ctor(System.String, Iced.Intel.Instruction ByRef): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Iced.Intel.Instruction Instruction 'get ' : 
  Methods:
    get_Instruction(): PrivateScope, Public, HideBySig, SpecialName
Struct Iced.Intel.EncodingKind: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Iced.Intel.EncodingKind Legacy = 0 : Public, Static, Literal, HasDefault
    Iced.Intel.EncodingKind VEX = 1 : Public, Static, Literal, HasDefault
    Iced.Intel.EncodingKind EVEX = 2 : Public, Static, Literal, HasDefault
    Iced.Intel.EncodingKind XOP = 3 : Public, Static, Literal, HasDefault
    Iced.Intel.EncodingKind D3NOW = 4 : Public, Static, Literal, HasDefault
    Iced.Intel.EncodingKind MVEX = 5 : Public, Static, Literal, HasDefault
Class Iced.Intel.HexUtils: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Methods:
    ToByteArray(String): PrivateScope, Public, Static, HideBySig
Class Iced.Intel.IcedConstants: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Fields:
    Int32 MaxOpCount = 5 : Assembly, Static, Literal, HasDefault
    Int32 MaxInstructionLength = 15 : Assembly, Static, Literal, HasDefault
    Int32 RegisterBits = 8 : Assembly, Static, Literal, HasDefault
    Iced.Intel.Register VMM_first = 141 : Assembly, Static, Literal, HasDefault
    Iced.Intel.Register VMM_last = 172 : Assembly, Static, Literal, HasDefault
    Int32 VMM_count = 32 : Assembly, Static, Literal, HasDefault
    Iced.Intel.Register XMM_last = 108 : Assembly, Static, Literal, HasDefault
    Iced.Intel.Register YMM_last = 140 : Assembly, Static, Literal, HasDefault
    Iced.Intel.Register ZMM_last = 172 : Assembly, Static, Literal, HasDefault
    Iced.Intel.Register TMM_last = 248 : Assembly, Static, Literal, HasDefault
    Int32 MaxCpuidFeatureInternalValues = 183 : Assembly, Static, Literal, HasDefault
    Iced.Intel.MemorySize FirstBroadcastMemorySize = 110 : Assembly, Static, Literal, HasDefault
    UInt32 MvexStart = 4611 : Assembly, Static, Literal, HasDefault
    UInt32 MvexLength = 207 : Assembly, Static, Literal, HasDefault
    Int32 CC_a_EnumCount = 2 : Assembly, Static, Literal, HasDefault
    Int32 CC_ae_EnumCount = 3 : Assembly, Static, Literal, HasDefault
    Int32 CC_b_EnumCount = 3 : Assembly, Static, Literal, HasDefault
    Int32 CC_be_EnumCount = 2 : Assembly, Static, Literal, HasDefault
    Int32 CC_e_EnumCount = 2 : Assembly, Static, Literal, HasDefault
    Int32 CC_g_EnumCount = 2 : Assembly, Static, Literal, HasDefault
    Int32 CC_ge_EnumCount = 2 : Assembly, Static, Literal, HasDefault
    Int32 CC_l_EnumCount = 2 : Assembly, Static, Literal, HasDefault
    Int32 CC_le_EnumCount = 2 : Assembly, Static, Literal, HasDefault
    Int32 CC_ne_EnumCount = 2 : Assembly, Static, Literal, HasDefault
    Int32 CC_np_EnumCount = 2 : Assembly, Static, Literal, HasDefault
    Int32 CC_p_EnumCount = 2 : Assembly, Static, Literal, HasDefault
    Int32 CodeEnumCount = 4834 : Assembly, Static, Literal, HasDefault
    Int32 CodeSizeEnumCount = 4 : Assembly, Static, Literal, HasDefault
    Int32 ConditionCodeEnumCount = 17 : Assembly, Static, Literal, HasDefault
    Int32 CpuidFeatureEnumCount = 162 : Assembly, Static, Literal, HasDefault
    Int32 DecoderErrorEnumCount = 3 : Assembly, Static, Literal, HasDefault
    Int32 DecoratorKindEnumCount = 6 : Assembly, Static, Literal, HasDefault
    Int32 EncodingKindEnumCount = 6 : Assembly, Static, Literal, HasDefault
    Int32 FlowControlEnumCount = 10 : Assembly, Static, Literal, HasDefault
    Int32 FormatterSyntaxEnumCount = 4 : Assembly, Static, Literal, HasDefault
    Int32 FormatterTextKindEnumCount = 16 : Assembly, Static, Literal, HasDefault
    Int32 MandatoryPrefixEnumCount = 5 : Assembly, Static, Literal, HasDefault
    Int32 MemorySizeEnumCount = 160 : Assembly, Static, Literal, HasDefault
    Int32 MemorySizeOptionsEnumCount = 4 : Assembly, Static, Literal, HasDefault
    Int32 MnemonicEnumCount = 1838 : Assembly, Static, Literal, HasDefault
    Int32 MvexConvFnEnumCount = 13 : Assembly, Static, Literal, HasDefault
    Int32 MvexEHBitEnumCount = 3 : Assembly, Static, Literal, HasDefault
    Int32 MvexRegMemConvEnumCount = 17 : Assembly, Static, Literal, HasDefault
    Int32 MvexTupleTypeLutKindEnumCount = 14 : Assembly, Static, Literal, HasDefault
    Int32 NumberBaseEnumCount = 4 : Assembly, Static, Literal, HasDefault
    Int32 NumberKindEnumCount = 8 : Assembly, Static, Literal, HasDefault
    Int32 OpAccessEnumCount = 8 : Assembly, Static, Literal, HasDefault
    Int32 OpCodeOperandKindEnumCount = 109 : Assembly, Static, Literal, HasDefault
    Int32 OpCodeTableKindEnumCount = 9 : Assembly, Static, Literal, HasDefault
    Int32 OpKindEnumCount = 25 : Assembly, Static, Literal, HasDefault
    Int32 PrefixKindEnumCount = 18 : Assembly, Static, Literal, HasDefault
    Int32 RegisterEnumCount = 256 : Assembly, Static, Literal, HasDefault
    Int32 RelocKindEnumCount = 1 : Assembly, Static, Literal, HasDefault
    Int32 RepPrefixKindEnumCount = 3 : Assembly, Static, Literal, HasDefault
    Int32 RoundingControlEnumCount = 5 : Assembly, Static, Literal, HasDefault
    Int32 TupleTypeEnumCount = 19 : Assembly, Static, Literal, HasDefault
  Methods:
    IsMvex(Code): PrivateScope, Public, Static, HideBySig
Class Iced.Intel.IcedFeatures: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Properties:
    Boolean HasGasFormatter 'get ' : 
    Boolean HasIntelFormatter 'get ' : 
    Boolean HasMasmFormatter 'get ' : 
    Boolean HasNasmFormatter 'get ' : 
    Boolean HasFastFormatter 'get ' : 
    Boolean HasDecoder 'get ' : 
    Boolean HasEncoder 'get ' : 
    Boolean HasBlockEncoder 'get ' : 
    Boolean HasOpCodeInfo 'get ' : 
    Boolean HasInstructionInfo 'get ' : 
  Methods:
    get_HasGasFormatter(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_HasIntelFormatter(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_HasMasmFormatter(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_HasNasmFormatter(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_HasFastFormatter(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_HasDecoder(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_HasEncoder(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_HasBlockEncoder(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_HasOpCodeInfo(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_HasInstructionInfo(): PrivateScope, Public, Static, HideBySig, SpecialName
    Initialize(): PrivateScope, Public, Static, HideBySig
Struct Iced.Intel.RepPrefixKind: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Iced.Intel.RepPrefixKind None = 0 : Public, Static, Literal, HasDefault
    Iced.Intel.RepPrefixKind Repe = 1 : Public, Static, Literal, HasDefault
    Iced.Intel.RepPrefixKind Repne = 2 : Public, Static, Literal, HasDefault
Struct Iced.Intel.Instruction: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Interfaces:
    System.IEquatable`1[Iced.Intel.Instruction]
  Fields:
    Int32 TOTAL_SIZE = 40 : Assembly, Static, Literal, HasDefault
  Properties:
    UInt16 IP16 'get set' : 
    UInt32 IP32 'get set' : 
    UInt64 IP  'get set' : 
    UInt16 NextIP16 'get set' : 
    UInt32 NextIP32 'get set' : 
    UInt64 NextIP 'get set' : 
    Iced.Intel.CodeSize CodeSize 'get set' : 
    Iced.Intel.CodeSize InternalCodeSize 'set' : 
    Boolean IsInvalid 'get ' : 
    Iced.Intel.Code Code 'get set' : 
    Iced.Intel.Mnemonic Mnemonic 'get ' : 
    Int32 OpCount 'get ' : 
    Int32 Length 'get set' : 
    Boolean Internal_HasRepeOrRepnePrefix 'get ' : 
    UInt32 HasAnyOf_Lock_Rep_Repne_Prefix 'get ' : 
    Boolean HasXacquirePrefix 'get set' : 
    Boolean HasXreleasePrefix 'get set' : 
    Boolean HasRepPrefix 'get set' : 
    Boolean HasRepePrefix 'get set' : 
    Boolean HasRepnePrefix 'get set' : 
    Boolean HasLockPrefix 'get set' : 
    Iced.Intel.OpKind Op0Kind 'get set' : 
    Boolean Internal_Op0IsNotReg_or_Op1IsNotReg 'get ' : 
    Iced.Intel.OpKind Op1Kind 'get set' : 
    Iced.Intel.OpKind Op2Kind 'get set' : 
    Iced.Intel.OpKind Op3Kind 'get set' : 
    Iced.Intel.OpKind Op4Kind 'get set' : 
    Boolean HasSegmentPrefix 'get ' : 
    Iced.Intel.Register SegmentPrefix 'get set' : 
    Iced.Intel.Register MemorySegment 'get ' : 
    Int32 MemoryDisplSize 'get set' : 
    Boolean IsBroadcast 'get set' : 
    Iced.Intel.MemorySize MemorySize 'get ' : 
    Int32 MemoryIndexScale 'get set' : 
    Int32 InternalMemoryIndexScale 'get set' : 
    UInt32 MemoryDisplacement32 'get set' : 
    UInt64 MemoryDisplacement64 'get set' : 
    Byte Immediate8 'get set' : 
    UInt32 InternalImmediate8 'set' : 
    Byte Immediate8_2nd 'get set' : 
    UInt32 InternalImmediate8_2nd 'set' : 
    UInt16 Immediate16 'get set' : 
    UInt32 InternalImmediate16 'set' : 
    UInt32 Immediate32 'get set' : 
    UInt64 Immediate64 'get set' : 
    UInt32 InternalImmediate64_lo 'set' : 
    UInt32 InternalImmediate64_hi 'set' : 
    Int16 Immediate8to16 'get set' : 
    Int32 Immediate8to32 'get set' : 
    Int64 Immediate8to64 'get set' : 
    Int64 Immediate32to64 'get set' : 
    UInt16 NearBranch16 'get set' : 
    UInt32 InternalNearBranch16 'set' : 
    UInt32 NearBranch32 'get set' : 
    UInt64 NearBranch64 'get set' : 
    UInt64 NearBranchTarget 'get ' : 
    UInt16 FarBranch16 'get set' : 
    UInt32 InternalFarBranch16 'set' : 
    UInt32 FarBranch32 'get set' : 
    UInt16 FarBranchSelector 'get set' : 
    UInt32 InternalFarBranchSelector 'set' : 
    Iced.Intel.Register MemoryBase 'get set' : 
    Iced.Intel.Register InternalMemoryBase 'set' : 
    Iced.Intel.Register MemoryIndex 'get set' : 
    Iced.Intel.Register InternalMemoryIndex 'set' : 
    Iced.Intel.Register Op0Register 'get set' : 
    Iced.Intel.Register InternalOp0Register 'set' : 
    Iced.Intel.Register Op1Register 'get set' : 
    Iced.Intel.Register InternalOp1Register 'set' : 
    Iced.Intel.Register Op2Register 'get set' : 
    Iced.Intel.Register InternalOp2Register 'set' : 
    Iced.Intel.Register Op3Register 'get set' : 
    Iced.Intel.Register InternalOp3Register 'set' : 
    Iced.Intel.Register Op4Register 'get set' : 
    Iced.Intel.Register OpMask 'get set' : 
    UInt32 InternalOpMask 'get set' : 
    Boolean HasOpMask 'get ' : 
    Boolean HasOpMask_or_ZeroingMasking 'get ' : 
    Boolean ZeroingMasking 'get set' : 
    Boolean MergingMasking 'get set' : 
    Iced.Intel.RoundingControl RoundingControl 'get set' : 
    UInt32 InternalRoundingControl 'set' : 
    Boolean HasRoundingControlOrSae 'get ' : 
    Int32 DeclareDataCount 'get set' : 
    UInt32 InternalDeclareDataCount 'set' : 
    Boolean IsVsib 'get ' : 
    Boolean IsVsib32 'get ' : 
    Boolean IsVsib64 'get ' : 
    Boolean SuppressAllExceptions 'get set' : 
    Boolean IsIPRelativeMemoryOperand 'get ' : 
    UInt64 IPRelativeMemoryAddress 'get ' : 
  Methods:
    set_IsBroadcast(Boolean): PrivateScope, Public, HideBySig, SpecialName
    InternalSetIsBroadcast(): PrivateScope, Assembly, HideBySig
    get_MemorySize(): PrivateScope, Public, HideBySig, SpecialName
    get_MemoryIndexScale(): PrivateScope, Public, HideBySig, SpecialName
    set_MemoryIndexScale(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_InternalMemoryIndexScale(): PrivateScope, Assembly, HideBySig, SpecialName
    set_InternalMemoryIndexScale(Int32): PrivateScope, Assembly, HideBySig, SpecialName
    get_MemoryDisplacement32(): PrivateScope, Public, HideBySig, SpecialName
    set_MemoryDisplacement32(UInt32): PrivateScope, Public, HideBySig, SpecialName
    get_MemoryDisplacement64(): PrivateScope, Public, HideBySig, SpecialName
    set_MemoryDisplacement64(UInt64): PrivateScope, Public, HideBySig, SpecialName
    GetImmediate(Int32): PrivateScope, Public, HideBySig
    SetImmediate(Int32, Int32): PrivateScope, Public, HideBySig
    SetImmediate(Int32, UInt32): PrivateScope, Public, HideBySig
    SetImmediate(Int32, Int64): PrivateScope, Public, HideBySig
    SetImmediate(Int32, UInt64): PrivateScope, Public, HideBySig
    get_Immediate8(): PrivateScope, Public, HideBySig, SpecialName
    set_Immediate8(Byte): PrivateScope, Public, HideBySig, SpecialName
    set_InternalImmediate8(UInt32): PrivateScope, Assembly, HideBySig, SpecialName
    get_Immediate8_2nd(): PrivateScope, Public, HideBySig, SpecialName
    set_Immediate8_2nd(Byte): PrivateScope, Public, HideBySig, SpecialName
    set_InternalImmediate8_2nd(UInt32): PrivateScope, Assembly, HideBySig, SpecialName
    get_Immediate16(): PrivateScope, Public, HideBySig, SpecialName
    set_Immediate16(UInt16): PrivateScope, Public, HideBySig, SpecialName
    set_InternalImmediate16(UInt32): PrivateScope, Assembly, HideBySig, SpecialName
    get_Immediate32(): PrivateScope, Public, HideBySig, SpecialName
    set_Immediate32(UInt32): PrivateScope, Public, HideBySig, SpecialName
    get_Immediate64(): PrivateScope, Public, HideBySig, SpecialName
    set_Immediate64(UInt64): PrivateScope, Public, HideBySig, SpecialName
    set_InternalImmediate64_lo(UInt32): PrivateScope, Assembly, HideBySig, SpecialName
    set_InternalImmediate64_hi(UInt32): PrivateScope, Assembly, HideBySig, SpecialName
    get_Immediate8to16(): PrivateScope, Public, HideBySig, SpecialName
    set_Immediate8to16(Int16): PrivateScope, Public, HideBySig, SpecialName
    get_Immediate8to32(): PrivateScope, Public, HideBySig, SpecialName
    set_Immediate8to32(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Immediate8to64(): PrivateScope, Public, HideBySig, SpecialName
    set_Immediate8to64(Int64): PrivateScope, Public, HideBySig, SpecialName
    get_Immediate32to64(): PrivateScope, Public, HideBySig, SpecialName
    set_Immediate32to64(Int64): PrivateScope, Public, HideBySig, SpecialName
    get_NearBranch16(): PrivateScope, Public, HideBySig, SpecialName
    set_NearBranch16(UInt16): PrivateScope, Public, HideBySig, SpecialName
    set_InternalNearBranch16(UInt32): PrivateScope, Assembly, HideBySig, SpecialName
    get_NearBranch32(): PrivateScope, Public, HideBySig, SpecialName
    set_NearBranch32(UInt32): PrivateScope, Public, HideBySig, SpecialName
    get_NearBranch64(): PrivateScope, Public, HideBySig, SpecialName
    set_NearBranch64(UInt64): PrivateScope, Public, HideBySig, SpecialName
    get_NearBranchTarget(): PrivateScope, Public, HideBySig, SpecialName
    get_FarBranch16(): PrivateScope, Public, HideBySig, SpecialName
    set_FarBranch16(UInt16): PrivateScope, Public, HideBySig, SpecialName
    set_InternalFarBranch16(UInt32): PrivateScope, Assembly, HideBySig, SpecialName
    get_FarBranch32(): PrivateScope, Public, HideBySig, SpecialName
    set_FarBranch32(UInt32): PrivateScope, Public, HideBySig, SpecialName
    get_FarBranchSelector(): PrivateScope, Public, HideBySig, SpecialName
    set_FarBranchSelector(UInt16): PrivateScope, Public, HideBySig, SpecialName
    set_InternalFarBranchSelector(UInt32): PrivateScope, Assembly, HideBySig, SpecialName
    get_MemoryBase(): PrivateScope, Public, HideBySig, SpecialName
    set_MemoryBase(Register): PrivateScope, Public, HideBySig, SpecialName
    set_InternalMemoryBase(Register): PrivateScope, Assembly, HideBySig, SpecialName
    get_MemoryIndex(): PrivateScope, Public, HideBySig, SpecialName
    set_MemoryIndex(Register): PrivateScope, Public, HideBySig, SpecialName
    set_InternalMemoryIndex(Register): PrivateScope, Assembly, HideBySig, SpecialName
    get_Op0Register(): PrivateScope, Public, HideBySig, SpecialName
    set_Op0Register(Register): PrivateScope, Public, HideBySig, SpecialName
    set_InternalOp0Register(Register): PrivateScope, Assembly, HideBySig, SpecialName
    get_Op1Register(): PrivateScope, Public, HideBySig, SpecialName
    set_Op1Register(Register): PrivateScope, Public, HideBySig, SpecialName
    set_InternalOp1Register(Register): PrivateScope, Assembly, HideBySig, SpecialName
    get_Op2Register(): PrivateScope, Public, HideBySig, SpecialName
    set_Op2Register(Register): PrivateScope, Public, HideBySig, SpecialName
    set_InternalOp2Register(Register): PrivateScope, Assembly, HideBySig, SpecialName
    get_Op3Register(): PrivateScope, Public, HideBySig, SpecialName
    set_Op3Register(Register): PrivateScope, Public, HideBySig, SpecialName
    set_InternalOp3Register(Register): PrivateScope, Assembly, HideBySig, SpecialName
    get_Op4Register(): PrivateScope, Public, HideBySig, SpecialName
    set_Op4Register(Register): PrivateScope, Public, HideBySig, SpecialName
    GetOpRegister(Int32): PrivateScope, Public, HideBySig
    SetOpRegister(Int32, Register): PrivateScope, Public, HideBySig
    get_OpMask(): PrivateScope, Public, HideBySig, SpecialName
    set_OpMask(Register): PrivateScope, Public, HideBySig, SpecialName
    get_InternalOpMask(): PrivateScope, Assembly, HideBySig, SpecialName
    set_InternalOpMask(UInt32): PrivateScope, Assembly, HideBySig, SpecialName
    get_HasOpMask(): PrivateScope, Public, HideBySig, SpecialName
    get_HasOpMask_or_ZeroingMasking(): PrivateScope, Assembly, HideBySig, SpecialName
    get_ZeroingMasking(): PrivateScope, Public, HideBySig, SpecialName
    set_ZeroingMasking(Boolean): PrivateScope, Public, HideBySig, SpecialName
    InternalSetZeroingMasking(): PrivateScope, Assembly, HideBySig
    get_MergingMasking(): PrivateScope, Public, HideBySig, SpecialName
    set_MergingMasking(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_RoundingControl(): PrivateScope, Public, HideBySig, SpecialName
    set_RoundingControl(RoundingControl): PrivateScope, Public, HideBySig, SpecialName
    set_InternalRoundingControl(UInt32): PrivateScope, Assembly, HideBySig, SpecialName
    get_HasRoundingControlOrSae(): PrivateScope, Assembly, HideBySig, SpecialName
    get_DeclareDataCount(): PrivateScope, Public, HideBySig, SpecialName
    set_DeclareDataCount(Int32): PrivateScope, Public, HideBySig, SpecialName
    set_InternalDeclareDataCount(UInt32): PrivateScope, Assembly, HideBySig, SpecialName
    SetDeclareByteValue(Int32, SByte): PrivateScope, Public, HideBySig
    SetDeclareByteValue(Int32, Byte): PrivateScope, Public, HideBySig
    GetDeclareByteValue(Int32): PrivateScope, Public, HideBySig
    SetDeclareWordValue(Int32, Int16): PrivateScope, Public, HideBySig
    SetDeclareWordValue(Int32, UInt16): PrivateScope, Public, HideBySig
    GetDeclareWordValue(Int32): PrivateScope, Public, HideBySig
    SetDeclareDwordValue(Int32, Int32): PrivateScope, Public, HideBySig
    SetDeclareDwordValue(Int32, UInt32): PrivateScope, Public, HideBySig
    GetDeclareDwordValue(Int32): PrivateScope, Public, HideBySig
    SetDeclareQwordValue(Int32, Int64): PrivateScope, Public, HideBySig
    SetDeclareQwordValue(Int32, UInt64): PrivateScope, Public, HideBySig
    GetDeclareQwordValue(Int32): PrivateScope, Public, HideBySig
    get_IsVsib(): PrivateScope, Public, HideBySig, SpecialName
    get_IsVsib32(): PrivateScope, Public, HideBySig, SpecialName
    get_IsVsib64(): PrivateScope, Public, HideBySig, SpecialName
    TryGetVsib64(Boolean&(Out)): PrivateScope, Public, HideBySig
    get_SuppressAllExceptions(): PrivateScope, Public, HideBySig, SpecialName
    set_SuppressAllExceptions(Boolean): PrivateScope, Public, HideBySig, SpecialName
    InternalSetSuppressAllExceptions(): PrivateScope, Assembly, HideBySig
    get_IsIPRelativeMemoryOperand(): PrivateScope, Public, HideBySig, SpecialName
    get_IPRelativeMemoryAddress(): PrivateScope, Public, HideBySig, SpecialName
    ToString(): PrivateScope, Public, Virtual, HideBySig
    GetVirtualAddress(Int32, Int32, VAGetRegisterValue): PrivateScope, Public, HideBySig
    GetVirtualAddress(Int32, Int32, IVARegisterValueProvider): PrivateScope, Public, HideBySig
    TryGetVirtualAddress(Int32, Int32, UInt64&(Out), VATryGetRegisterValue): PrivateScope, Public, HideBySig
    TryGetVirtualAddress(Int32, Int32, IVATryGetRegisterValueProvider, UInt64&(Out)): PrivateScope, Public, HideBySig
    CreateDeclareByte(Byte, Byte, Byte, Byte, Byte, Byte): PrivateScope, Public, Static, HideBySig
    CreateDeclareByte(Byte, Byte, Byte, Byte, Byte, Byte, Byte): PrivateScope, Public, Static, HideBySig
    CreateDeclareByte(Byte, Byte, Byte, Byte, Byte, Byte, Byte, Byte): PrivateScope, Public, Static, HideBySig
    CreateDeclareByte(Byte, Byte, Byte, Byte, Byte, Byte, Byte, Byte, Byte): PrivateScope, Public, Static, HideBySig
    CreateDeclareByte(Byte, Byte, Byte, Byte, Byte, Byte, Byte, Byte, Byte, Byte): PrivateScope, Public, Static, HideBySig
    CreateDeclareByte(Byte, Byte, Byte, Byte, Byte, Byte, Byte, Byte, Byte, Byte, Byte): PrivateScope, Public, Static, HideBySig
    CreateDeclareByte(Byte, Byte, Byte, Byte, Byte, Byte, Byte, Byte, Byte, Byte, Byte, Byte): PrivateScope, Public, Static, HideBySig
    CreateDeclareByte(Byte, Byte, Byte, Byte, Byte, Byte, Byte, Byte, Byte, Byte, Byte, Byte, Byte): PrivateScope, Public, Static, HideBySig
    CreateDeclareByte(Byte, Byte, Byte, Byte, Byte, Byte, Byte, Byte, Byte, Byte, Byte, Byte, Byte, Byte): PrivateScope, Public, Static, HideBySig
    CreateDeclareByte(Byte, Byte, Byte, Byte, Byte, Byte, Byte, Byte, Byte, Byte, Byte, Byte, Byte, Byte, Byte): PrivateScope, Public, Static, HideBySig
    CreateDeclareByte(Byte, Byte, Byte, Byte, Byte, Byte, Byte, Byte, Byte, Byte, Byte, Byte, Byte, Byte, Byte, Byte): PrivateScope, Public, Static, HideBySig
    CreateDeclareByte(ReadOnlySpan`1): PrivateScope, Public, Static, HideBySig
    CreateDeclareByte(Byte[]): PrivateScope, Public, Static, HideBySig
    CreateDeclareByte(Byte[], Int32, Int32): PrivateScope, Public, Static, HideBySig
    CreateDeclareWord(UInt16): PrivateScope, Public, Static, HideBySig
    CreateDeclareWord(UInt16, UInt16): PrivateScope, Public, Static, HideBySig
    CreateDeclareWord(UInt16, UInt16, UInt16): PrivateScope, Public, Static, HideBySig
    CreateDeclareWord(UInt16, UInt16, UInt16, UInt16): PrivateScope, Public, Static, HideBySig
    CreateDeclareWord(UInt16, UInt16, UInt16, UInt16, UInt16): PrivateScope, Public, Static, HideBySig
    CreateDeclareWord(UInt16, UInt16, UInt16, UInt16, UInt16, UInt16): PrivateScope, Public, Static, HideBySig
    CreateDeclareWord(UInt16, UInt16, UInt16, UInt16, UInt16, UInt16, UInt16): PrivateScope, Public, Static, HideBySig
    CreateDeclareWord(UInt16, UInt16, UInt16, UInt16, UInt16, UInt16, UInt16, UInt16): PrivateScope, Public, Static, HideBySig
    CreateDeclareWord(ReadOnlySpan`1): PrivateScope, Public, Static, HideBySig
    CreateDeclareWord(Byte[]): PrivateScope, Public, Static, HideBySig
    CreateDeclareWord(Byte[], Int32, Int32): PrivateScope, Public, Static, HideBySig
    CreateDeclareWord(ReadOnlySpan`1): PrivateScope, Public, Static, HideBySig
    CreateDeclareWord(UInt16[]): PrivateScope, Public, Static, HideBySig
    CreateDeclareWord(UInt16[], Int32, Int32): PrivateScope, Public, Static, HideBySig
    CreateDeclareDword(UInt32): PrivateScope, Public, Static, HideBySig
    CreateDeclareDword(UInt32, UInt32): PrivateScope, Public, Static, HideBySig
    CreateDeclareDword(UInt32, UInt32, UInt32): PrivateScope, Public, Static, HideBySig
    CreateDeclareDword(UInt32, UInt32, UInt32, UInt32): PrivateScope, Public, Static, HideBySig
    CreateDeclareDword(ReadOnlySpan`1): PrivateScope, Public, Static, HideBySig
    CreateDeclareDword(Byte[]): PrivateScope, Public, Static, HideBySig
    CreateDeclareDword(Byte[], Int32, Int32): PrivateScope, Public, Static, HideBySig
    CreateDeclareDword(ReadOnlySpan`1): PrivateScope, Public, Static, HideBySig
    CreateDeclareDword(UInt32[]): PrivateScope, Public, Static, HideBySig
    CreateDeclareDword(UInt32[], Int32, Int32): PrivateScope, Public, Static, HideBySig
    CreateDeclareQword(UInt64): PrivateScope, Public, Static, HideBySig
    CreateDeclareQword(UInt64, UInt64): PrivateScope, Public, Static, HideBySig
    CreateDeclareQword(ReadOnlySpan`1): PrivateScope, Public, Static, HideBySig
    CreateDeclareQword(Byte[]): PrivateScope, Public, Static, HideBySig
    CreateDeclareQword(Byte[], Int32, Int32): PrivateScope, Public, Static, HideBySig
    CreateDeclareQword(ReadOnlySpan`1): PrivateScope, Public, Static, HideBySig
    CreateDeclareQword(UInt64[]): PrivateScope, Public, Static, HideBySig
    CreateDeclareQword(UInt64[], Int32, Int32): PrivateScope, Public, Static, HideBySig
    op_Equality(Instruction&(In), Instruction&(In)): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Inequality(Instruction&(In), Instruction&(In)): PrivateScope, Public, Static, HideBySig, SpecialName
    Equals(Instruction&(In)): PrivateScope, Public, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    EqualsAllBits(Instruction&(In), Instruction&(In)): PrivateScope, Public, Static, HideBySig
    get_IP16(): PrivateScope, Public, HideBySig, SpecialName
    set_IP16(UInt16): PrivateScope, Public, HideBySig, SpecialName
    get_IP32(): PrivateScope, Public, HideBySig, SpecialName
    set_IP32(UInt32): PrivateScope, Public, HideBySig, SpecialName
    get_IP(): PrivateScope, Public, HideBySig, SpecialName
    set_IP(UInt64): PrivateScope, Public, HideBySig, SpecialName
    get_NextIP16(): PrivateScope, Public, HideBySig, SpecialName
    set_NextIP16(UInt16): PrivateScope, Public, HideBySig, SpecialName
    get_NextIP32(): PrivateScope, Public, HideBySig, SpecialName
    set_NextIP32(UInt32): PrivateScope, Public, HideBySig, SpecialName
    get_NextIP(): PrivateScope, Public, HideBySig, SpecialName
    set_NextIP(UInt64): PrivateScope, Public, HideBySig, SpecialName
    get_CodeSize(): PrivateScope, Public, HideBySig, SpecialName
    set_CodeSize(CodeSize): PrivateScope, Public, HideBySig, SpecialName
    set_InternalCodeSize(CodeSize): PrivateScope, Assembly, HideBySig, SpecialName
    get_IsInvalid(): PrivateScope, Public, HideBySig, SpecialName
    get_Code(): PrivateScope, Public, HideBySig, SpecialName
    set_Code(Code): PrivateScope, Public, HideBySig, SpecialName
    InternalSetCodeNoCheck(Code): PrivateScope, Assembly, HideBySig
    get_Mnemonic(): PrivateScope, Public, HideBySig, SpecialName
    get_OpCount(): PrivateScope, Public, HideBySig, SpecialName
    get_Length(): PrivateScope, Public, HideBySig, SpecialName
    set_Length(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Internal_HasRepeOrRepnePrefix(): PrivateScope, Assembly, HideBySig, SpecialName
    get_HasAnyOf_Lock_Rep_Repne_Prefix(): PrivateScope, Assembly, HideBySig, SpecialName
    get_HasXacquirePrefix(): PrivateScope, Public, HideBySig, SpecialName
    set_HasXacquirePrefix(Boolean): PrivateScope, Public, HideBySig, SpecialName
    InternalSetHasXacquirePrefix(): PrivateScope, Assembly, HideBySig
    get_HasXreleasePrefix(): PrivateScope, Public, HideBySig, SpecialName
    set_HasXreleasePrefix(Boolean): PrivateScope, Public, HideBySig, SpecialName
    InternalSetHasXreleasePrefix(): PrivateScope, Assembly, HideBySig
    get_HasRepPrefix(): PrivateScope, Public, HideBySig, SpecialName
    set_HasRepPrefix(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_HasRepePrefix(): PrivateScope, Public, HideBySig, SpecialName
    set_HasRepePrefix(Boolean): PrivateScope, Public, HideBySig, SpecialName
    InternalSetHasRepePrefix(): PrivateScope, Assembly, HideBySig
    InternalClearHasRepePrefix(): PrivateScope, Assembly, HideBySig
    InternalClearHasRepeRepnePrefix(): PrivateScope, Assembly, HideBySig
    get_HasRepnePrefix(): PrivateScope, Public, HideBySig, SpecialName
    set_HasRepnePrefix(Boolean): PrivateScope, Public, HideBySig, SpecialName
    InternalSetHasRepnePrefix(): PrivateScope, Assembly, HideBySig
    InternalClearHasRepnePrefix(): PrivateScope, Assembly, HideBySig
    get_HasLockPrefix(): PrivateScope, Public, HideBySig, SpecialName
    set_HasLockPrefix(Boolean): PrivateScope, Public, HideBySig, SpecialName
    InternalSetHasLockPrefix(): PrivateScope, Assembly, HideBySig
    InternalClearHasLockPrefix(): PrivateScope, Assembly, HideBySig
    get_Op0Kind(): PrivateScope, Public, HideBySig, SpecialName
    set_Op0Kind(OpKind): PrivateScope, Public, HideBySig, SpecialName
    get_Internal_Op0IsNotReg_or_Op1IsNotReg(): PrivateScope, Assembly, HideBySig, SpecialName
    get_Op1Kind(): PrivateScope, Public, HideBySig, SpecialName
    set_Op1Kind(OpKind): PrivateScope, Public, HideBySig, SpecialName
    get_Op2Kind(): PrivateScope, Public, HideBySig, SpecialName
    set_Op2Kind(OpKind): PrivateScope, Public, HideBySig, SpecialName
    get_Op3Kind(): PrivateScope, Public, HideBySig, SpecialName
    set_Op3Kind(OpKind): PrivateScope, Public, HideBySig, SpecialName
    get_Op4Kind(): PrivateScope, Public, HideBySig, SpecialName
    set_Op4Kind(OpKind): PrivateScope, Public, HideBySig, SpecialName
    GetOpKind(Int32): PrivateScope, Public, HideBySig
    HasOpKind(OpKind): PrivateScope, Public, HideBySig
    SetOpKind(Int32, OpKind): PrivateScope, Public, HideBySig
    get_HasSegmentPrefix(): PrivateScope, Public, HideBySig, SpecialName
    get_SegmentPrefix(): PrivateScope, Public, HideBySig, SpecialName
    set_SegmentPrefix(Register): PrivateScope, Public, HideBySig, SpecialName
    get_MemorySegment(): PrivateScope, Public, HideBySig, SpecialName
    get_MemoryDisplSize(): PrivateScope, Public, HideBySig, SpecialName
    set_MemoryDisplSize(Int32): PrivateScope, Public, HideBySig, SpecialName
    InternalSetMemoryDisplSize(UInt32): PrivateScope, Assembly, HideBySig
    get_IsBroadcast(): PrivateScope, Public, HideBySig, SpecialName
    Create(Code): PrivateScope, Public, Static, HideBySig
    Create(Code, Register): PrivateScope, Public, Static, HideBySig
    Create(Code, Int32): PrivateScope, Public, Static, HideBySig
    Create(Code, UInt32): PrivateScope, Public, Static, HideBySig
    Create(Code, MemoryOperand&(In)): PrivateScope, Public, Static, HideBySig
    Create(Code, Register, Register): PrivateScope, Public, Static, HideBySig
    Create(Code, Register, Int32): PrivateScope, Public, Static, HideBySig
    Create(Code, Register, UInt32): PrivateScope, Public, Static, HideBySig
    Create(Code, Register, Int64): PrivateScope, Public, Static, HideBySig
    Create(Code, Register, UInt64): PrivateScope, Public, Static, HideBySig
    Create(Code, Register, MemoryOperand&(In)): PrivateScope, Public, Static, HideBySig
    Create(Code, Int32, Register): PrivateScope, Public, Static, HideBySig
    Create(Code, UInt32, Register): PrivateScope, Public, Static, HideBySig
    Create(Code, Int32, Int32): PrivateScope, Public, Static, HideBySig
    Create(Code, UInt32, UInt32): PrivateScope, Public, Static, HideBySig
    Create(Code, MemoryOperand&(In), Register): PrivateScope, Public, Static, HideBySig
    Create(Code, MemoryOperand&(In), Int32): PrivateScope, Public, Static, HideBySig
    Create(Code, MemoryOperand&(In), UInt32): PrivateScope, Public, Static, HideBySig
    Create(Code, Register, Register, Register): PrivateScope, Public, Static, HideBySig
    Create(Code, Register, Register, Int32): PrivateScope, Public, Static, HideBySig
    Create(Code, Register, Register, UInt32): PrivateScope, Public, Static, HideBySig
    Create(Code, Register, Register, MemoryOperand&(In)): PrivateScope, Public, Static, HideBySig
    Create(Code, Register, Int32, Int32): PrivateScope, Public, Static, HideBySig
    Create(Code, Register, UInt32, UInt32): PrivateScope, Public, Static, HideBySig
    Create(Code, Register, MemoryOperand&(In), Register): PrivateScope, Public, Static, HideBySig
    Create(Code, Register, MemoryOperand&(In), Int32): PrivateScope, Public, Static, HideBySig
    Create(Code, Register, MemoryOperand&(In), UInt32): PrivateScope, Public, Static, HideBySig
    Create(Code, MemoryOperand&(In), Register, Register): PrivateScope, Public, Static, HideBySig
    Create(Code, MemoryOperand&(In), Register, Int32): PrivateScope, Public, Static, HideBySig
    Create(Code, MemoryOperand&(In), Register, UInt32): PrivateScope, Public, Static, HideBySig
    Create(Code, Register, Register, Register, Register): PrivateScope, Public, Static, HideBySig
    Create(Code, Register, Register, Register, Int32): PrivateScope, Public, Static, HideBySig
    Create(Code, Register, Register, Register, UInt32): PrivateScope, Public, Static, HideBySig
    Create(Code, Register, Register, Register, MemoryOperand&(In)): PrivateScope, Public, Static, HideBySig
    Create(Code, Register, Register, Int32, Int32): PrivateScope, Public, Static, HideBySig
    Create(Code, Register, Register, UInt32, UInt32): PrivateScope, Public, Static, HideBySig
    Create(Code, Register, Register, MemoryOperand&(In), Register): PrivateScope, Public, Static, HideBySig
    Create(Code, Register, Register, MemoryOperand&(In), Int32): PrivateScope, Public, Static, HideBySig
    Create(Code, Register, Register, MemoryOperand&(In), UInt32): PrivateScope, Public, Static, HideBySig
    Create(Code, Register, Register, Register, Register, Int32): PrivateScope, Public, Static, HideBySig
    Create(Code, Register, Register, Register, Register, UInt32): PrivateScope, Public, Static, HideBySig
    Create(Code, Register, Register, Register, MemoryOperand&(In), Int32): PrivateScope, Public, Static, HideBySig
    Create(Code, Register, Register, Register, MemoryOperand&(In), UInt32): PrivateScope, Public, Static, HideBySig
    Create(Code, Register, Register, MemoryOperand&(In), Register, Int32): PrivateScope, Public, Static, HideBySig
    Create(Code, Register, Register, MemoryOperand&(In), Register, UInt32): PrivateScope, Public, Static, HideBySig
    CreateBranch(Code, UInt64): PrivateScope, Public, Static, HideBySig
    CreateBranch(Code, UInt16, UInt32): PrivateScope, Public, Static, HideBySig
    CreateXbegin(Int32, UInt64): PrivateScope, Public, Static, HideBySig
    CreateOutsb(Int32, Register(Optional, HasDefault), RepPrefixKind(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    CreateRepOutsb(Int32): PrivateScope, Public, Static, HideBySig
    CreateOutsw(Int32, Register(Optional, HasDefault), RepPrefixKind(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    CreateRepOutsw(Int32): PrivateScope, Public, Static, HideBySig
    CreateOutsd(Int32, Register(Optional, HasDefault), RepPrefixKind(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    CreateRepOutsd(Int32): PrivateScope, Public, Static, HideBySig
    CreateLodsb(Int32, Register(Optional, HasDefault), RepPrefixKind(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    CreateRepLodsb(Int32): PrivateScope, Public, Static, HideBySig
    CreateLodsw(Int32, Register(Optional, HasDefault), RepPrefixKind(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    CreateRepLodsw(Int32): PrivateScope, Public, Static, HideBySig
    CreateLodsd(Int32, Register(Optional, HasDefault), RepPrefixKind(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    CreateRepLodsd(Int32): PrivateScope, Public, Static, HideBySig
    CreateLodsq(Int32, Register(Optional, HasDefault), RepPrefixKind(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    CreateRepLodsq(Int32): PrivateScope, Public, Static, HideBySig
    CreateScasb(Int32, RepPrefixKind(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    CreateRepeScasb(Int32): PrivateScope, Public, Static, HideBySig
    CreateRepneScasb(Int32): PrivateScope, Public, Static, HideBySig
    CreateScasw(Int32, RepPrefixKind(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    CreateRepeScasw(Int32): PrivateScope, Public, Static, HideBySig
    CreateRepneScasw(Int32): PrivateScope, Public, Static, HideBySig
    CreateScasd(Int32, RepPrefixKind(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    CreateRepeScasd(Int32): PrivateScope, Public, Static, HideBySig
    CreateRepneScasd(Int32): PrivateScope, Public, Static, HideBySig
    CreateScasq(Int32, RepPrefixKind(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    CreateRepeScasq(Int32): PrivateScope, Public, Static, HideBySig
    CreateRepneScasq(Int32): PrivateScope, Public, Static, HideBySig
    CreateInsb(Int32, RepPrefixKind(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    CreateRepInsb(Int32): PrivateScope, Public, Static, HideBySig
    CreateInsw(Int32, RepPrefixKind(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    CreateRepInsw(Int32): PrivateScope, Public, Static, HideBySig
    CreateInsd(Int32, RepPrefixKind(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    CreateRepInsd(Int32): PrivateScope, Public, Static, HideBySig
    CreateStosb(Int32, RepPrefixKind(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    CreateRepStosb(Int32): PrivateScope, Public, Static, HideBySig
    CreateStosw(Int32, RepPrefixKind(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    CreateRepStosw(Int32): PrivateScope, Public, Static, HideBySig
    CreateStosd(Int32, RepPrefixKind(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    CreateRepStosd(Int32): PrivateScope, Public, Static, HideBySig
    CreateStosq(Int32, RepPrefixKind(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    CreateRepStosq(Int32): PrivateScope, Public, Static, HideBySig
    CreateCmpsb(Int32, Register(Optional, HasDefault), RepPrefixKind(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    CreateRepeCmpsb(Int32): PrivateScope, Public, Static, HideBySig
    CreateRepneCmpsb(Int32): PrivateScope, Public, Static, HideBySig
    CreateCmpsw(Int32, Register(Optional, HasDefault), RepPrefixKind(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    CreateRepeCmpsw(Int32): PrivateScope, Public, Static, HideBySig
    CreateRepneCmpsw(Int32): PrivateScope, Public, Static, HideBySig
    CreateCmpsd(Int32, Register(Optional, HasDefault), RepPrefixKind(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    CreateRepeCmpsd(Int32): PrivateScope, Public, Static, HideBySig
    CreateRepneCmpsd(Int32): PrivateScope, Public, Static, HideBySig
    CreateCmpsq(Int32, Register(Optional, HasDefault), RepPrefixKind(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    CreateRepeCmpsq(Int32): PrivateScope, Public, Static, HideBySig
    CreateRepneCmpsq(Int32): PrivateScope, Public, Static, HideBySig
    CreateMovsb(Int32, Register(Optional, HasDefault), RepPrefixKind(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    CreateRepMovsb(Int32): PrivateScope, Public, Static, HideBySig
    CreateMovsw(Int32, Register(Optional, HasDefault), RepPrefixKind(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    CreateRepMovsw(Int32): PrivateScope, Public, Static, HideBySig
    CreateMovsd(Int32, Register(Optional, HasDefault), RepPrefixKind(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    CreateRepMovsd(Int32): PrivateScope, Public, Static, HideBySig
    CreateMovsq(Int32, Register(Optional, HasDefault), RepPrefixKind(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    CreateRepMovsq(Int32): PrivateScope, Public, Static, HideBySig
    CreateMaskmovq(Int32, Register, Register, Register(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    CreateMaskmovdqu(Int32, Register, Register, Register(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    CreateVmaskmovdqu(Int32, Register, Register, Register(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    CreateDeclareByte(Byte): PrivateScope, Public, Static, HideBySig
    CreateDeclareByte(Byte, Byte): PrivateScope, Public, Static, HideBySig
    CreateDeclareByte(Byte, Byte, Byte): PrivateScope, Public, Static, HideBySig
    CreateDeclareByte(Byte, Byte, Byte, Byte): PrivateScope, Public, Static, HideBySig
    CreateDeclareByte(Byte, Byte, Byte, Byte, Byte): PrivateScope, Public, Static, HideBySig
Class Iced.Intel.VAGetRegisterValue: AutoLayout, AnsiClass, Class, Sealed
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(Register, Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(Register, Int32, Int32, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Interface Iced.Intel.IVARegisterValueProvider: AutoLayout, AnsiClass, Class, ClassSemanticsMask, Abstract, BeforeFieldInit
  Methods:
    GetRegisterValue(Register, Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class Iced.Intel.VATryGetRegisterValue: AutoLayout, AnsiClass, Class, Sealed
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(Register, Int32, Int32, UInt64&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(Register, Int32, Int32, UInt64&(Out), AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(UInt64&(Out), IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Interface Iced.Intel.IVATryGetRegisterValueProvider: AutoLayout, AnsiClass, Class, ClassSemanticsMask, Abstract, BeforeFieldInit
  Methods:
    TryGetRegisterValue(Register, Int32, Int32, UInt64&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class Iced.Intel.VARegisterValueProviderDelegateImpl: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
    Void .ctor(Iced.Intel.VAGetRegisterValue): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Iced.Intel.IVATryGetRegisterValueProvider
  Methods:
    TryGetRegisterValue(Register, Int32, Int32, UInt64&(Out)): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Iced.Intel.VARegisterValueProviderAdapter: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
    Void .ctor(Iced.Intel.IVARegisterValueProvider): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Iced.Intel.IVATryGetRegisterValueProvider
  Methods:
    TryGetRegisterValue(Register, Int32, Int32, UInt64&(Out)): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Iced.Intel.VATryGetRegisterValueDelegateImpl: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
    Void .ctor(Iced.Intel.VATryGetRegisterValue): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Iced.Intel.IVATryGetRegisterValueProvider
  Methods:
    TryGetRegisterValue(Register, Int32, Int32, UInt64&(Out)): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Iced.Intel.InstructionInfoExtensions: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Methods:
    NegateConditionCode(Code): PrivateScope, Public, Static, HideBySig
    ToShortBranch(Code): PrivateScope, Public, Static, HideBySig
    ToNearBranch(Code): PrivateScope, Public, Static, HideBySig
Class Iced.Intel.InstructionList: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Iced.Intel.InstructionList): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Collections.Generic.IEnumerable`1[Iced.Intel.Instruction]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Collections.Generic.IList`1[Iced.Intel.Instruction]
    System.Collections.Generic.ICollection`1[Iced.Intel.Instruction]
    System.Collections.Generic.IEnumerable`1[Iced.Intel.Instruction]
    System.Collections.IEnumerable
    System.Collections.Generic.IReadOnlyList`1[Iced.Intel.Instruction]
    System.Collections.Generic.IReadOnlyCollection`1[Iced.Intel.Instruction]
    System.Collections.IList
    System.Collections.ICollection
  Properties:
    Int32 Count 'get ' : 
    Int32 Capacity 'get ' : 
    Iced.Intel.Instruction& Item [Int32] 'get ' : 
  Methods:
    get_Count(): PrivateScope, Public, HideBySig, SpecialName
    get_Capacity(): PrivateScope, Public, HideBySig, SpecialName
    get_Item(Int32): PrivateScope, Public, HideBySig, SpecialName
    AllocUninitializedElement(): PrivateScope, Public, HideBySig
    Insert(Int32, Instruction&(In)): PrivateScope, Public, HideBySig
    RemoveAt(Int32): PrivateScope, Public, HideBySig
    AddRange(IEnumerable`1): PrivateScope, Public, HideBySig
    InsertRange(Int32, IEnumerable`1): PrivateScope, Public, HideBySig
    RemoveRange(Int32, Int32): PrivateScope, Public, HideBySig
    Add(Instruction&(In)): PrivateScope, Public, HideBySig
    Clear(): PrivateScope, Public, HideBySig
    Contains(Instruction&(In)): PrivateScope, Public, HideBySig
    IndexOf(Instruction&(In)): PrivateScope, Public, HideBySig
    IndexOf(Instruction&(In), Int32): PrivateScope, Public, HideBySig
    IndexOf(Instruction&(In), Int32, Int32): PrivateScope, Public, HideBySig
    LastIndexOf(Instruction&(In)): PrivateScope, Public, HideBySig
    LastIndexOf(Instruction&(In), Int32): PrivateScope, Public, HideBySig
    LastIndexOf(Instruction&(In), Int32, Int32): PrivateScope, Public, HideBySig
    Remove(Instruction&(In)): PrivateScope, Public, HideBySig
    CopyTo(Instruction[]): PrivateScope, Public, HideBySig
    CopyTo(Instruction[], Int32): PrivateScope, Public, HideBySig
    CopyTo(Int32, Instruction[], Int32, Int32): PrivateScope, Public, HideBySig
    GetRange(Int32, Int32): PrivateScope, Public, HideBySig
    GetEnumerator(): PrivateScope, Public, HideBySig
    AsReadOnly(): PrivateScope, Public, HideBySig
    ToArray(): PrivateScope, Public, HideBySig
Struct Iced.Intel.InstructionList+Enumerator: AutoLayout, AnsiClass, Class, NestedPublic, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Iced.Intel.InstructionList): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Collections.Generic.IEnumerator`1[Iced.Intel.Instruction]
    System.IDisposable
    System.Collections.IEnumerator
  Properties:
    Iced.Intel.Instruction& Current 'get ' : 
  Methods:
    get_Current(): PrivateScope, Public, HideBySig, SpecialName
    MoveNext(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Iced.Intel.InstructionListDebugView: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
    Void .ctor(Iced.Intel.InstructionList): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Iced.Intel.Instruction[] Items 'get ' : 
  Methods:
    get_Items(): PrivateScope, Public, HideBySig, SpecialName
Class Iced.Intel.InstructionMemorySizes: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Properties:
    System.ReadOnlySpan`1[System.Byte] SizesNormal 'get ' : 
    System.ReadOnlySpan`1[System.Byte] SizesBcst 'get ' : 
  Methods:
    get_SizesNormal(): PrivateScope, Assembly, Static, HideBySig, SpecialName
    get_SizesBcst(): PrivateScope, Assembly, Static, HideBySig, SpecialName
Class Iced.Intel.InstructionOpCounts: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Properties:
    System.ReadOnlySpan`1[System.Byte] OpCount 'get ' : 
  Methods:
    get_OpCount(): PrivateScope, Assembly, Static, HideBySig, SpecialName
Class Iced.Intel.InstructionUtils: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Methods:
    GetAddressSizeInBytes(Register, Register, Int32, CodeSize): PrivateScope, Public, Static, HideBySig
Struct Iced.Intel.MandatoryPrefixByte: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    UInt32 value__ : Public, SpecialName, RTSpecialName
    Iced.Intel.MandatoryPrefixByte None = 0 : Public, Static, Literal, HasDefault
    Iced.Intel.MandatoryPrefixByte P66 = 1 : Public, Static, Literal, HasDefault
    Iced.Intel.MandatoryPrefixByte PF3 = 2 : Public, Static, Literal, HasDefault
    Iced.Intel.MandatoryPrefixByte PF2 = 3 : Public, Static, Literal, HasDefault
Struct Iced.Intel.MemoryOperand: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Iced.Intel.Register, Iced.Intel.Register, Int32, Int64, Int32, Boolean, Iced.Intel.Register): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Iced.Intel.Register, Iced.Intel.Register, Int32, Boolean, Iced.Intel.Register): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Iced.Intel.Register, Int64, Int32, Boolean, Iced.Intel.Register): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Iced.Intel.Register, Int32, Int64, Int32, Boolean, Iced.Intel.Register): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Iced.Intel.Register, Int64, Boolean, Iced.Intel.Register): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Iced.Intel.Register, Iced.Intel.Register, Int32, Int64, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Iced.Intel.Register, Iced.Intel.Register, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Iced.Intel.Register, Iced.Intel.Register): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Iced.Intel.Register, Int64, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Iced.Intel.Register, Int32, Int64, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Iced.Intel.Register, Int64): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Iced.Intel.Register): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(UInt64, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Iced.Intel.Register SegmentPrefix : Public, InitOnly
    Iced.Intel.Register Base : Public, InitOnly
    Iced.Intel.Register Index : Public, InitOnly
    Int32 Scale : Public, InitOnly
    Int64 Displacement : Public, InitOnly
    Int32 DisplSize : Public, InitOnly
    Boolean IsBroadcast : Public, InitOnly
Struct Iced.Intel.MemorySize: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Iced.Intel.MemorySize Unknown = 0 : Public, Static, Literal, HasDefault
    Iced.Intel.MemorySize UInt8 = 1 : Public, Static, Literal, HasDefault
    Iced.Intel.MemorySize UInt16 = 2 : Public, Static, Literal, HasDefault
    Iced.Intel.MemorySize UInt32 = 3 : Public, Static, Literal, HasDefault
    Iced.Intel.MemorySize UInt52 = 4 : Public, Static, Literal, HasDefault
    Iced.Intel.MemorySize UInt64 = 5 : Public, Static, Literal, HasDefault
    Iced.Intel.MemorySize UInt128 = 6 : Public, Static, Literal, HasDefault
    Iced.Intel.MemorySize UInt256 = 7 : Public, Static, Literal, HasDefault
    Iced.Intel.MemorySize UInt512 = 8 : Public, Static, Literal, HasDefault
    Iced.Intel.MemorySize Int8 = 9 : Public, Static, Literal, HasDefault
    Iced.Intel.MemorySize Int16 = 10 : Public, Static, Literal, HasDefault
    Iced.Intel.MemorySize Int32 = 11 : Public, Static, Literal, HasDefault
    Iced.Intel.MemorySize Int64 = 12 : Public, Static, Literal, HasDefault
    Iced.Intel.MemorySize Int128 = 13 : Public, Static, Literal, HasDefault
    Iced.Intel.MemorySize Int256 = 14 : Public, Static, Literal, HasDefault
    Iced.Intel.MemorySize Int512 = 15 : Public, Static, Literal, HasDefault
    Iced.Intel.MemorySize SegPtr16 = 16 : Public, Static, Literal, HasDefault
    Iced.Intel.MemorySize SegPtr32 = 17 : Public, Static, Literal, HasDefault
    Iced.Intel.MemorySize SegPtr64 = 18 : Public, Static, Literal, HasDefault
    Iced.Intel.MemorySize WordOffset = 19 : Public, Static, Literal, HasDefault
    Iced.Intel.MemorySize DwordOffset = 20 : Public, Static, Literal, HasDefault
    Iced.Intel.MemorySize QwordOffset = 21 : Public, Static, Literal, HasDefault
    Iced.Intel.MemorySize Bound16_WordWord = 22 : Public, Static, Literal, HasDefault
    Iced.Intel.MemorySize Bound32_DwordDword = 23 : Public, Static, Literal, HasDefault
    Iced.Intel.MemorySize Bnd32 = 24 : Public, Static, Literal, HasDefault
    Iced.Intel.MemorySize Bnd64 = 25 : Public, Static, Literal, HasDefault
    Iced.Intel.MemorySize Fword6 = 26 : Public, Static, Literal, HasDefault
    Iced.Intel.MemorySize Fword10 = 27 : Public, Static, Literal, HasDefault
    Iced.Intel.MemorySize Float16 = 28 : Public, Static, Literal, HasDefault
    Iced.Intel.MemorySize Float32 = 29 : Public, Static, Literal, HasDefault
    Iced.Intel.MemorySize Float64 = 30 : Public, Static, Literal, HasDefault
    Iced.Intel.MemorySize Float80 = 31 : Public, Static, Literal, HasDefault
    Iced.Intel.MemorySize Float128 = 32 : Public, Static, Literal, HasDefault
    Iced.Intel.MemorySize BFloat16 = 33 : Public, Static, Literal, HasDefault
    Iced.Intel.MemorySize FpuEnv14 = 34 : Public, Static, Literal, HasDefault
    Iced.Intel.MemorySize FpuEnv28 = 35 : Public, Static, Literal, HasDefault
    Iced.Intel.MemorySize FpuState94 = 36 : Public, Static, Literal, HasDefault
    Iced.Intel.MemorySize FpuState108 = 37 : Public, Static, Literal, HasDefault
    Iced.Intel.MemorySize Fxsave_512Byte = 38 : Public, Static, Literal, HasDefault
    Iced.Intel.MemorySize Fxsave64_512Byte = 39 : Public, Static, Literal, HasDefault
    Iced.Intel.MemorySize Xsave = 40 : Public, Static, Literal, HasDefault
    Iced.Intel.MemorySize Xsave64 = 41 : Public, Static, Literal, HasDefault
    Iced.Intel.MemorySize Bcd = 42 : Public, Static, Literal, HasDefault
    Iced.Intel.MemorySize Tilecfg = 43 : Public, Static, Literal, HasDefault
    Iced.Intel.MemorySize Tile = 44 : Public, Static, Literal, HasDefault
    Iced.Intel.MemorySize SegmentDescSelector = 45 : Public, Static, Literal, HasDefault
    Iced.Intel.MemorySize KLHandleAes128 = 46 : Public, Static, Literal, HasDefault
    Iced.Intel.MemorySize KLHandleAes256 = 47 : Public, Static, Literal, HasDefault
    Iced.Intel.MemorySize Packed16_UInt8 = 48 : Public, Static, Literal, HasDefault
    Iced.Intel.MemorySize Packed16_Int8 = 49 : Public, Static, Literal, HasDefault
    Iced.Intel.MemorySize Packed32_UInt8 = 50 : Public, Static, Literal, HasDefault
    Iced.Intel.MemorySize Packed32_Int8 = 51 : Public, Static, Literal, HasDefault
    Iced.Intel.MemorySize Packed32_UInt16 = 52 : Public, Static, Literal, HasDefault
    Iced.Intel.MemorySize Packed32_Int16 = 53 : Public, Static, Literal, HasDefault
    Iced.Intel.MemorySize Packed32_Float16 = 54 : Public, Static, Literal, HasDefault
    Iced.Intel.MemorySize Packed32_BFloat16 = 55 : Public, Static, Literal, HasDefault
    Iced.Intel.MemorySize Packed64_UInt8 = 56 : Public, Static, Literal, HasDefault
    Iced.Intel.MemorySize Packed64_Int8 = 57 : Public, Static, Literal, HasDefault
    Iced.Intel.MemorySize Packed64_UInt16 = 58 : Public, Static, Literal, HasDefault
    Iced.Intel.MemorySize Packed64_Int16 = 59 : Public, Static, Literal, HasDefault
    Iced.Intel.MemorySize Packed64_UInt32 = 60 : Public, Static, Literal, HasDefault
    Iced.Intel.MemorySize Packed64_Int32 = 61 : Public, Static, Literal, HasDefault
    Iced.Intel.MemorySize Packed64_Float16 = 62 : Public, Static, Literal, HasDefault
    Iced.Intel.MemorySize Packed64_Float32 = 63 : Public, Static, Literal, HasDefault
    Iced.Intel.MemorySize Packed128_UInt8 = 64 : Public, Static, Literal, HasDefault
    Iced.Intel.MemorySize Packed128_Int8 = 65 : Public, Static, Literal, HasDefault
    Iced.Intel.MemorySize Packed128_UInt16 = 66 : Public, Static, Literal, HasDefault
    Iced.Intel.MemorySize Packed128_Int16 = 67 : Public, Static, Literal, HasDefault
    Iced.Intel.MemorySize Packed128_UInt32 = 68 : Public, Static, Literal, HasDefault
    Iced.Intel.MemorySize Packed128_Int32 = 69 : Public, Static, Literal, HasDefault
    Iced.Intel.MemorySize Packed128_UInt52 = 70 : Public, Static, Literal, HasDefault
    Iced.Intel.MemorySize Packed128_UInt64 = 71 : Public, Static, Literal, HasDefault
    Iced.Intel.MemorySize Packed128_Int64 = 72 : Public, Static, Literal, HasDefault
    Iced.Intel.MemorySize Packed128_Float16 = 73 : Public, Static, Literal, HasDefault
    Iced.Intel.MemorySize Packed128_Float32 = 74 : Public, Static, Literal, HasDefault
    Iced.Intel.MemorySize Packed128_Float64 = 75 : Public, Static, Literal, HasDefault
    Iced.Intel.MemorySize Packed128_2xFloat16 = 76 : Public, Static, Literal, HasDefault
    Iced.Intel.MemorySize Packed128_2xBFloat16 = 77 : Public, Static, Literal, HasDefault
    Iced.Intel.MemorySize Packed256_UInt8 = 78 : Public, Static, Literal, HasDefault
    Iced.Intel.MemorySize Packed256_Int8 = 79 : Public, Static, Literal, HasDefault
    Iced.Intel.MemorySize Packed256_UInt16 = 80 : Public, Static, Literal, HasDefault
    Iced.Intel.MemorySize Packed256_Int16 = 81 : Public, Static, Literal, HasDefault
    Iced.Intel.MemorySize Packed256_UInt32 = 82 : Public, Static, Literal, HasDefault
    Iced.Intel.MemorySize Packed256_Int32 = 83 : Public, Static, Literal, HasDefault
    Iced.Intel.MemorySize Packed256_UInt52 = 84 : Public, Static, Literal, HasDefault
    Iced.Intel.MemorySize Packed256_UInt64 = 85 : Public, Static, Literal, HasDefault
    Iced.Intel.MemorySize Packed256_Int64 = 86 : Public, Static, Literal, HasDefault
    Iced.Intel.MemorySize Packed256_UInt128 = 87 : Public, Static, Literal, HasDefault
    Iced.Intel.MemorySize Packed256_Int128 = 88 : Public, Static, Literal, HasDefault
    Iced.Intel.MemorySize Packed256_Float16 = 89 : Public, Static, Literal, HasDefault
    Iced.Intel.MemorySize Packed256_Float32 = 90 : Public, Static, Literal, HasDefault
    Iced.Intel.MemorySize Packed256_Float64 = 91 : Public, Static, Literal, HasDefault
    Iced.Intel.MemorySize Packed256_Float128 = 92 : Public, Static, Literal, HasDefault
    Iced.Intel.MemorySize Packed256_2xFloat16 = 93 : Public, Static, Literal, HasDefault
    Iced.Intel.MemorySize Packed256_2xBFloat16 = 94 : Public, Static, Literal, HasDefault
    Iced.Intel.MemorySize Packed512_UInt8 = 95 : Public, Static, Literal, HasDefault
    Iced.Intel.MemorySize Packed512_Int8 = 96 : Public, Static, Literal, HasDefault
    Iced.Intel.MemorySize Packed512_UInt16 = 97 : Public, Static, Literal, HasDefault
    Iced.Intel.MemorySize Packed512_Int16 = 98 : Public, Static, Literal, HasDefault
    Iced.Intel.MemorySize Packed512_UInt32 = 99 : Public, Static, Literal, HasDefault
    Iced.Intel.MemorySize Packed512_Int32 = 100 : Public, Static, Literal, HasDefault
    Iced.Intel.MemorySize Packed512_UInt52 = 101 : Public, Static, Literal, HasDefault
    Iced.Intel.MemorySize Packed512_UInt64 = 102 : Public, Static, Literal, HasDefault
    Iced.Intel.MemorySize Packed512_Int64 = 103 : Public, Static, Literal, HasDefault
    Iced.Intel.MemorySize Packed512_UInt128 = 104 : Public, Static, Literal, HasDefault
    Iced.Intel.MemorySize Packed512_Float16 = 105 : Public, Static, Literal, HasDefault
    Iced.Intel.MemorySize Packed512_Float32 = 106 : Public, Static, Literal, HasDefault
    Iced.Intel.MemorySize Packed512_Float64 = 107 : Public, Static, Literal, HasDefault
    Iced.Intel.MemorySize Packed512_2xFloat16 = 108 : Public, Static, Literal, HasDefault
    Iced.Intel.MemorySize Packed512_2xBFloat16 = 109 : Public, Static, Literal, HasDefault
    Iced.Intel.MemorySize Broadcast32_Float16 = 110 : Public, Static, Literal, HasDefault
    Iced.Intel.MemorySize Broadcast64_UInt32 = 111 : Public, Static, Literal, HasDefault
    Iced.Intel.MemorySize Broadcast64_Int32 = 112 : Public, Static, Literal, HasDefault
    Iced.Intel.MemorySize Broadcast64_Float16 = 113 : Public, Static, Literal, HasDefault
    Iced.Intel.MemorySize Broadcast64_Float32 = 114 : Public, Static, Literal, HasDefault
    Iced.Intel.MemorySize Broadcast128_Int16 = 115 : Public, Static, Literal, HasDefault
    Iced.Intel.MemorySize Broadcast128_UInt16 = 116 : Public, Static, Literal, HasDefault
    Iced.Intel.MemorySize Broadcast128_UInt32 = 117 : Public, Static, Literal, HasDefault
    Iced.Intel.MemorySize Broadcast128_Int32 = 118 : Public, Static, Literal, HasDefault
    Iced.Intel.MemorySize Broadcast128_UInt52 = 119 : Public, Static, Literal, HasDefault
    Iced.Intel.MemorySize Broadcast128_UInt64 = 120 : Public, Static, Literal, HasDefault
    Iced.Intel.MemorySize Broadcast128_Int64 = 121 : Public, Static, Literal, HasDefault
    Iced.Intel.MemorySize Broadcast128_Float16 = 122 : Public, Static, Literal, HasDefault
    Iced.Intel.MemorySize Broadcast128_Float32 = 123 : Public, Static, Literal, HasDefault
    Iced.Intel.MemorySize Broadcast128_Float64 = 124 : Public, Static, Literal, HasDefault
    Iced.Intel.MemorySize Broadcast128_2xInt16 = 125 : Public, Static, Literal, HasDefault
    Iced.Intel.MemorySize Broadcast128_2xInt32 = 126 : Public, Static, Literal, HasDefault
    Iced.Intel.MemorySize Broadcast128_2xUInt32 = 127 : Public, Static, Literal, HasDefault
    Iced.Intel.MemorySize Broadcast128_2xFloat16 = 128 : Public, Static, Literal, HasDefault
    Iced.Intel.MemorySize Broadcast128_2xBFloat16 = 129 : Public, Static, Literal, HasDefault
    Iced.Intel.MemorySize Broadcast256_Int16 = 130 : Public, Static, Literal, HasDefault
    Iced.Intel.MemorySize Broadcast256_UInt16 = 131 : Public, Static, Literal, HasDefault
    Iced.Intel.MemorySize Broadcast256_UInt32 = 132 : Public, Static, Literal, HasDefault
    Iced.Intel.MemorySize Broadcast256_Int32 = 133 : Public, Static, Literal, HasDefault
    Iced.Intel.MemorySize Broadcast256_UInt52 = 134 : Public, Static, Literal, HasDefault
    Iced.Intel.MemorySize Broadcast256_UInt64 = 135 : Public, Static, Literal, HasDefault
    Iced.Intel.MemorySize Broadcast256_Int64 = 136 : Public, Static, Literal, HasDefault
    Iced.Intel.MemorySize Broadcast256_Float16 = 137 : Public, Static, Literal, HasDefault
    Iced.Intel.MemorySize Broadcast256_Float32 = 138 : Public, Static, Literal, HasDefault
    Iced.Intel.MemorySize Broadcast256_Float64 = 139 : Public, Static, Literal, HasDefault
    Iced.Intel.MemorySize Broadcast256_2xInt16 = 140 : Public, Static, Literal, HasDefault
    Iced.Intel.MemorySize Broadcast256_2xInt32 = 141 : Public, Static, Literal, HasDefault
    Iced.Intel.MemorySize Broadcast256_2xUInt32 = 142 : Public, Static, Literal, HasDefault
    Iced.Intel.MemorySize Broadcast256_2xFloat16 = 143 : Public, Static, Literal, HasDefault
    Iced.Intel.MemorySize Broadcast256_2xBFloat16 = 144 : Public, Static, Literal, HasDefault
    Iced.Intel.MemorySize Broadcast512_Int16 = 145 : Public, Static, Literal, HasDefault
    Iced.Intel.MemorySize Broadcast512_UInt16 = 146 : Public, Static, Literal, HasDefault
    Iced.Intel.MemorySize Broadcast512_UInt32 = 147 : Public, Static, Literal, HasDefault
    Iced.Intel.MemorySize Broadcast512_Int32 = 148 : Public, Static, Literal, HasDefault
    Iced.Intel.MemorySize Broadcast512_UInt52 = 149 : Public, Static, Literal, HasDefault
    Iced.Intel.MemorySize Broadcast512_UInt64 = 150 : Public, Static, Literal, HasDefault
    Iced.Intel.MemorySize Broadcast512_Int64 = 151 : Public, Static, Literal, HasDefault
    Iced.Intel.MemorySize Broadcast512_Float16 = 152 : Public, Static, Literal, HasDefault
    Iced.Intel.MemorySize Broadcast512_Float32 = 153 : Public, Static, Literal, HasDefault
    Iced.Intel.MemorySize Broadcast512_Float64 = 154 : Public, Static, Literal, HasDefault
    Iced.Intel.MemorySize Broadcast512_2xFloat16 = 155 : Public, Static, Literal, HasDefault
    Iced.Intel.MemorySize Broadcast512_2xInt16 = 156 : Public, Static, Literal, HasDefault
    Iced.Intel.MemorySize Broadcast512_2xUInt32 = 157 : Public, Static, Literal, HasDefault
    Iced.Intel.MemorySize Broadcast512_2xInt32 = 158 : Public, Static, Literal, HasDefault
    Iced.Intel.MemorySize Broadcast512_2xBFloat16 = 159 : Public, Static, Literal, HasDefault
Class Iced.Intel.MemorySizeExtensions: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Fields:
    Iced.Intel.MemorySizeInfo[] MemorySizeInfos : Assembly, Static, InitOnly
  Methods:
    IsBroadcast(MemorySize): PrivateScope, Public, Static, HideBySig
    GetInfo(MemorySize): PrivateScope, Public, Static, HideBySig
    GetSize(MemorySize): PrivateScope, Public, Static, HideBySig
    GetElementSize(MemorySize): PrivateScope, Public, Static, HideBySig
    GetElementType(MemorySize): PrivateScope, Public, Static, HideBySig
    GetElementTypeInfo(MemorySize): PrivateScope, Public, Static, HideBySig
    IsSigned(MemorySize): PrivateScope, Public, Static, HideBySig
    IsPacked(MemorySize): PrivateScope, Public, Static, HideBySig
    GetElementCount(MemorySize): PrivateScope, Public, Static, HideBySig
Struct Iced.Intel.MemorySizeInfo: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Iced.Intel.MemorySize, Int32, Int32, Iced.Intel.MemorySize, Boolean, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Iced.Intel.MemorySize MemorySize 'get ' : 
    Int32 Size 'get ' : 
    Int32 ElementSize 'get ' : 
    Iced.Intel.MemorySize ElementType 'get ' : 
    Boolean IsSigned 'get ' : 
    Boolean IsBroadcast 'get ' : 
    Boolean IsPacked 'get ' : 
    Int32 ElementCount 'get ' : 
  Methods:
    get_MemorySize(): PrivateScope, Public, HideBySig, SpecialName
    get_Size(): PrivateScope, Public, HideBySig, SpecialName
    get_ElementSize(): PrivateScope, Public, HideBySig, SpecialName
    get_ElementType(): PrivateScope, Public, HideBySig, SpecialName
    get_IsSigned(): PrivateScope, Public, HideBySig, SpecialName
    get_IsBroadcast(): PrivateScope, Public, HideBySig, SpecialName
    get_IsPacked(): PrivateScope, Public, HideBySig, SpecialName
    get_ElementCount(): PrivateScope, Public, HideBySig, SpecialName
Struct Iced.Intel.Mnemonic: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Iced.Intel.Mnemonic INVALID = 0 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Aaa = 1 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Aad = 2 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Aam = 3 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Aas = 4 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Adc = 5 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Adcx = 6 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Add = 7 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Addpd = 8 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Addps = 9 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Addsd = 10 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Addss = 11 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Addsubpd = 12 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Addsubps = 13 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Adox = 14 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Aesdec = 15 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Aesdeclast = 16 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Aesenc = 17 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Aesenclast = 18 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Aesimc = 19 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Aeskeygenassist = 20 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic And = 21 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Andn = 22 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Andnpd = 23 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Andnps = 24 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Andpd = 25 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Andps = 26 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Arpl = 27 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Bextr = 28 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Blcfill = 29 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Blci = 30 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Blcic = 31 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Blcmsk = 32 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Blcs = 33 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Blendpd = 34 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Blendps = 35 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Blendvpd = 36 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Blendvps = 37 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Blsfill = 38 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Blsi = 39 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Blsic = 40 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Blsmsk = 41 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Blsr = 42 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Bndcl = 43 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Bndcn = 44 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Bndcu = 45 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Bndldx = 46 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Bndmk = 47 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Bndmov = 48 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Bndstx = 49 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Bound = 50 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Bsf = 51 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Bsr = 52 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Bswap = 53 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Bt = 54 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Btc = 55 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Btr = 56 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Bts = 57 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Bzhi = 58 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Call = 59 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Cbw = 60 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Cdq = 61 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Cdqe = 62 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Cl1invmb = 63 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Clac = 64 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Clc = 65 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Cld = 66 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Cldemote = 67 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Clflush = 68 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Clflushopt = 69 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Clgi = 70 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Cli = 71 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Clrssbsy = 72 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Clts = 73 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Clwb = 74 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Clzero = 75 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Cmc = 76 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Cmova = 77 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Cmovae = 78 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Cmovb = 79 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Cmovbe = 80 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Cmove = 81 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Cmovg = 82 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Cmovge = 83 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Cmovl = 84 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Cmovle = 85 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Cmovne = 86 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Cmovno = 87 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Cmovnp = 88 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Cmovns = 89 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Cmovo = 90 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Cmovp = 91 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Cmovs = 92 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Cmp = 93 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Cmppd = 94 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Cmpps = 95 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Cmpsb = 96 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Cmpsd = 97 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Cmpsq = 98 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Cmpss = 99 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Cmpsw = 100 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Cmpxchg = 101 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Cmpxchg16b = 102 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Cmpxchg8b = 103 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Comisd = 104 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Comiss = 105 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Cpuid = 106 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Cqo = 107 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Crc32 = 108 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Cvtdq2pd = 109 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Cvtdq2ps = 110 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Cvtpd2dq = 111 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Cvtpd2pi = 112 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Cvtpd2ps = 113 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Cvtpi2pd = 114 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Cvtpi2ps = 115 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Cvtps2dq = 116 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Cvtps2pd = 117 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Cvtps2pi = 118 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Cvtsd2si = 119 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Cvtsd2ss = 120 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Cvtsi2sd = 121 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Cvtsi2ss = 122 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Cvtss2sd = 123 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Cvtss2si = 124 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Cvttpd2dq = 125 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Cvttpd2pi = 126 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Cvttps2dq = 127 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Cvttps2pi = 128 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Cvttsd2si = 129 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Cvttss2si = 130 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Cwd = 131 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Cwde = 132 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Daa = 133 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Das = 134 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Db = 135 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Dd = 136 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Dec = 137 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Div = 138 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Divpd = 139 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Divps = 140 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Divsd = 141 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Divss = 142 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Dppd = 143 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Dpps = 144 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Dq = 145 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Dw = 146 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Emms = 147 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Encls = 148 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Enclu = 149 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Enclv = 150 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Endbr32 = 151 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Endbr64 = 152 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Enqcmd = 153 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Enqcmds = 154 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Enter = 155 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Extractps = 156 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Extrq = 157 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic F2xm1 = 158 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Fabs = 159 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Fadd = 160 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Faddp = 161 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Fbld = 162 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Fbstp = 163 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Fchs = 164 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Fclex = 165 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Fcmovb = 166 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Fcmovbe = 167 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Fcmove = 168 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Fcmovnb = 169 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Fcmovnbe = 170 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Fcmovne = 171 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Fcmovnu = 172 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Fcmovu = 173 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Fcom = 174 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Fcomi = 175 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Fcomip = 176 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Fcomp = 177 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Fcompp = 178 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Fcos = 179 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Fdecstp = 180 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Fdisi = 181 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Fdiv = 182 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Fdivp = 183 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Fdivr = 184 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Fdivrp = 185 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Femms = 186 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Feni = 187 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Ffree = 188 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Ffreep = 189 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Fiadd = 190 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Ficom = 191 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Ficomp = 192 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Fidiv = 193 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Fidivr = 194 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Fild = 195 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Fimul = 196 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Fincstp = 197 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Finit = 198 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Fist = 199 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Fistp = 200 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Fisttp = 201 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Fisub = 202 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Fisubr = 203 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Fld = 204 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Fld1 = 205 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Fldcw = 206 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Fldenv = 207 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Fldl2e = 208 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Fldl2t = 209 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Fldlg2 = 210 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Fldln2 = 211 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Fldpi = 212 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Fldz = 213 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Fmul = 214 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Fmulp = 215 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Fnclex = 216 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Fndisi = 217 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Fneni = 218 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Fninit = 219 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Fnop = 220 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Fnsave = 221 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Fnsetpm = 222 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Fnstcw = 223 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Fnstenv = 224 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Fnstsw = 225 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Fpatan = 226 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Fprem = 227 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Fprem1 = 228 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Fptan = 229 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Frndint = 230 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Frstor = 231 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Frstpm = 232 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Fsave = 233 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Fscale = 234 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Fsetpm = 235 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Fsin = 236 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Fsincos = 237 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Fsqrt = 238 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Fst = 239 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Fstcw = 240 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Fstdw = 241 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Fstenv = 242 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Fstp = 243 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Fstpnce = 244 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Fstsg = 245 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Fstsw = 246 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Fsub = 247 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Fsubp = 248 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Fsubr = 249 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Fsubrp = 250 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Ftst = 251 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Fucom = 252 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Fucomi = 253 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Fucomip = 254 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Fucomp = 255 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Fucompp = 256 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Fxam = 257 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Fxch = 258 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Fxrstor = 259 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Fxrstor64 = 260 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Fxsave = 261 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Fxsave64 = 262 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Fxtract = 263 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Fyl2x = 264 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Fyl2xp1 = 265 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Getsec = 266 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Gf2p8affineinvqb = 267 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Gf2p8affineqb = 268 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Gf2p8mulb = 269 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Haddpd = 270 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Haddps = 271 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Hlt = 272 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Hsubpd = 273 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Hsubps = 274 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Ibts = 275 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Idiv = 276 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Imul = 277 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic In = 278 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Inc = 279 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Incsspd = 280 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Incsspq = 281 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Insb = 282 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Insd = 283 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Insertps = 284 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Insertq = 285 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Insw = 286 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Int = 287 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Int1 = 288 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Into = 289 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Invd = 290 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Invept = 291 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Invlpg = 292 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Invlpga = 293 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Invpcid = 294 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Invvpid = 295 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Iret = 296 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Ja = 297 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Jae = 298 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Jb = 299 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Jbe = 300 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Jcxz = 301 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Je = 302 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Jecxz = 303 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Jg = 304 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Jge = 305 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Jl = 306 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Jle = 307 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Jmp = 308 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Jmpe = 309 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Jne = 310 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Jno = 311 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Jnp = 312 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Jns = 313 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Jo = 314 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Jp = 315 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Jrcxz = 316 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Js = 317 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Kaddb = 318 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Kaddd = 319 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Kaddq = 320 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Kaddw = 321 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Kandb = 322 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Kandd = 323 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Kandnb = 324 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Kandnd = 325 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Kandnq = 326 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Kandnw = 327 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Kandq = 328 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Kandw = 329 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Kmovb = 330 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Kmovd = 331 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Kmovq = 332 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Kmovw = 333 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Knotb = 334 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Knotd = 335 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Knotq = 336 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Knotw = 337 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Korb = 338 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Kord = 339 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Korq = 340 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Kortestb = 341 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Kortestd = 342 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Kortestq = 343 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Kortestw = 344 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Korw = 345 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Kshiftlb = 346 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Kshiftld = 347 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Kshiftlq = 348 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Kshiftlw = 349 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Kshiftrb = 350 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Kshiftrd = 351 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Kshiftrq = 352 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Kshiftrw = 353 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Ktestb = 354 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Ktestd = 355 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Ktestq = 356 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Ktestw = 357 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Kunpckbw = 358 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Kunpckdq = 359 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Kunpckwd = 360 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Kxnorb = 361 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Kxnord = 362 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Kxnorq = 363 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Kxnorw = 364 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Kxorb = 365 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Kxord = 366 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Kxorq = 367 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Kxorw = 368 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Lahf = 369 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Lar = 370 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Lddqu = 371 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Ldmxcsr = 372 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Lds = 373 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Lea = 374 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Leave = 375 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Les = 376 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Lfence = 377 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Lfs = 378 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Lgdt = 379 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Lgs = 380 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Lidt = 381 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Lldt = 382 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Llwpcb = 383 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Lmsw = 384 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Loadall = 385 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Lodsb = 386 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Lodsd = 387 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Lodsq = 388 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Lodsw = 389 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Loop = 390 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Loope = 391 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Loopne = 392 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Lsl = 393 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Lss = 394 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Ltr = 395 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Lwpins = 396 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Lwpval = 397 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Lzcnt = 398 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Maskmovdqu = 399 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Maskmovq = 400 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Maxpd = 401 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Maxps = 402 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Maxsd = 403 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Maxss = 404 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Mcommit = 405 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Mfence = 406 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Minpd = 407 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Minps = 408 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Minsd = 409 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Minss = 410 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Monitor = 411 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Monitorx = 412 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Montmul = 413 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Mov = 414 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Movapd = 415 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Movaps = 416 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Movbe = 417 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Movd = 418 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Movddup = 419 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Movdir64b = 420 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Movdiri = 421 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Movdq2q = 422 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Movdqa = 423 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Movdqu = 424 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Movhlps = 425 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Movhpd = 426 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Movhps = 427 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Movlhps = 428 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Movlpd = 429 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Movlps = 430 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Movmskpd = 431 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Movmskps = 432 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Movntdq = 433 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Movntdqa = 434 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Movnti = 435 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Movntpd = 436 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Movntps = 437 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Movntq = 438 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Movntsd = 439 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Movntss = 440 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Movq = 441 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Movq2dq = 442 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Movsb = 443 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Movsd = 444 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Movshdup = 445 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Movsldup = 446 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Movsq = 447 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Movss = 448 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Movsw = 449 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Movsx = 450 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Movsxd = 451 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Movupd = 452 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Movups = 453 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Movzx = 454 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Mpsadbw = 455 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Mul = 456 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Mulpd = 457 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Mulps = 458 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Mulsd = 459 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Mulss = 460 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Mulx = 461 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Mwait = 462 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Mwaitx = 463 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Neg = 464 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Nop = 465 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Not = 466 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Or = 467 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Orpd = 468 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Orps = 469 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Out = 470 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Outsb = 471 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Outsd = 472 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Outsw = 473 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Pabsb = 474 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Pabsd = 475 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Pabsw = 476 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Packssdw = 477 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Packsswb = 478 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Packusdw = 479 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Packuswb = 480 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Paddb = 481 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Paddd = 482 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Paddq = 483 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Paddsb = 484 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Paddsw = 485 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Paddusb = 486 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Paddusw = 487 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Paddw = 488 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Palignr = 489 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Pand = 490 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Pandn = 491 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Pause = 492 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Pavgb = 493 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Pavgusb = 494 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Pavgw = 495 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Pblendvb = 496 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Pblendw = 497 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Pclmulqdq = 498 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Pcmpeqb = 499 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Pcmpeqd = 500 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Pcmpeqq = 501 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Pcmpeqw = 502 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Pcmpestri = 503 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Pcmpestri64 = 504 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Pcmpestrm = 505 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Pcmpestrm64 = 506 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Pcmpgtb = 507 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Pcmpgtd = 508 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Pcmpgtq = 509 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Pcmpgtw = 510 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Pcmpistri = 511 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Pcmpistrm = 512 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Pcommit = 513 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Pconfig = 514 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Pdep = 515 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Pext = 516 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Pextrb = 517 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Pextrd = 518 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Pextrq = 519 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Pextrw = 520 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Pf2id = 521 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Pf2iw = 522 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Pfacc = 523 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Pfadd = 524 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Pfcmpeq = 525 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Pfcmpge = 526 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Pfcmpgt = 527 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Pfmax = 528 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Pfmin = 529 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Pfmul = 530 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Pfnacc = 531 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Pfpnacc = 532 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Pfrcp = 533 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Pfrcpit1 = 534 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Pfrcpit2 = 535 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Pfrcpv = 536 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Pfrsqit1 = 537 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Pfrsqrt = 538 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Pfrsqrtv = 539 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Pfsub = 540 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Pfsubr = 541 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Phaddd = 542 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Phaddsw = 543 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Phaddw = 544 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Phminposuw = 545 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Phsubd = 546 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Phsubsw = 547 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Phsubw = 548 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Pi2fd = 549 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Pi2fw = 550 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Pinsrb = 551 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Pinsrd = 552 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Pinsrq = 553 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Pinsrw = 554 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Pmaddubsw = 555 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Pmaddwd = 556 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Pmaxsb = 557 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Pmaxsd = 558 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Pmaxsw = 559 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Pmaxub = 560 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Pmaxud = 561 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Pmaxuw = 562 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Pminsb = 563 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Pminsd = 564 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Pminsw = 565 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Pminub = 566 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Pminud = 567 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Pminuw = 568 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Pmovmskb = 569 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Pmovsxbd = 570 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Pmovsxbq = 571 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Pmovsxbw = 572 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Pmovsxdq = 573 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Pmovsxwd = 574 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Pmovsxwq = 575 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Pmovzxbd = 576 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Pmovzxbq = 577 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Pmovzxbw = 578 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Pmovzxdq = 579 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Pmovzxwd = 580 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Pmovzxwq = 581 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Pmuldq = 582 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Pmulhrsw = 583 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Pmulhrw = 584 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Pmulhuw = 585 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Pmulhw = 586 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Pmulld = 587 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Pmullw = 588 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Pmuludq = 589 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Pop = 590 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Popa = 591 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Popcnt = 592 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Popf = 593 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Por = 594 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Prefetch = 595 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Prefetchnta = 596 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Prefetcht0 = 597 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Prefetcht1 = 598 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Prefetcht2 = 599 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Prefetchw = 600 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Prefetchwt1 = 601 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Psadbw = 602 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Pshufb = 603 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Pshufd = 604 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Pshufhw = 605 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Pshuflw = 606 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Pshufw = 607 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Psignb = 608 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Psignd = 609 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Psignw = 610 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Pslld = 611 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Pslldq = 612 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Psllq = 613 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Psllw = 614 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Psrad = 615 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Psraw = 616 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Psrld = 617 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Psrldq = 618 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Psrlq = 619 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Psrlw = 620 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Psubb = 621 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Psubd = 622 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Psubq = 623 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Psubsb = 624 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Psubsw = 625 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Psubusb = 626 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Psubusw = 627 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Psubw = 628 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Pswapd = 629 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Ptest = 630 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Ptwrite = 631 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Punpckhbw = 632 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Punpckhdq = 633 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Punpckhqdq = 634 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Punpckhwd = 635 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Punpcklbw = 636 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Punpckldq = 637 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Punpcklqdq = 638 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Punpcklwd = 639 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Push = 640 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Pusha = 641 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Pushf = 642 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Pxor = 643 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Rcl = 644 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Rcpps = 645 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Rcpss = 646 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Rcr = 647 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Rdfsbase = 648 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Rdgsbase = 649 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Rdmsr = 650 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Rdpid = 651 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Rdpkru = 652 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Rdpmc = 653 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Rdpru = 654 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Rdrand = 655 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Rdseed = 656 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Rdsspd = 657 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Rdsspq = 658 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Rdtsc = 659 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Rdtscp = 660 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Reservednop = 661 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Ret = 662 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Retf = 663 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Rol = 664 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Ror = 665 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Rorx = 666 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Roundpd = 667 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Roundps = 668 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Roundsd = 669 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Roundss = 670 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Rsm = 671 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Rsqrtps = 672 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Rsqrtss = 673 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Rstorssp = 674 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Sahf = 675 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Sal = 676 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Salc = 677 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Sar = 678 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Sarx = 679 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Saveprevssp = 680 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Sbb = 681 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Scasb = 682 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Scasd = 683 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Scasq = 684 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Scasw = 685 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Seta = 686 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Setae = 687 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Setb = 688 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Setbe = 689 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Sete = 690 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Setg = 691 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Setge = 692 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Setl = 693 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Setle = 694 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Setne = 695 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Setno = 696 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Setnp = 697 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Setns = 698 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Seto = 699 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Setp = 700 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Sets = 701 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Setssbsy = 702 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Sfence = 703 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Sgdt = 704 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Sha1msg1 = 705 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Sha1msg2 = 706 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Sha1nexte = 707 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Sha1rnds4 = 708 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Sha256msg1 = 709 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Sha256msg2 = 710 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Sha256rnds2 = 711 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Shl = 712 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Shld = 713 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Shlx = 714 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Shr = 715 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Shrd = 716 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Shrx = 717 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Shufpd = 718 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Shufps = 719 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Sidt = 720 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Skinit = 721 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Sldt = 722 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Slwpcb = 723 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Smsw = 724 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Sqrtpd = 725 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Sqrtps = 726 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Sqrtsd = 727 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Sqrtss = 728 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Stac = 729 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Stc = 730 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Std = 731 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Stgi = 732 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Sti = 733 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Stmxcsr = 734 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Stosb = 735 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Stosd = 736 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Stosq = 737 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Stosw = 738 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Str = 739 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Sub = 740 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Subpd = 741 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Subps = 742 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Subsd = 743 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Subss = 744 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Swapgs = 745 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Syscall = 746 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Sysenter = 747 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Sysexit = 748 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Sysret = 749 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic T1mskc = 750 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Test = 751 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Tpause = 752 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Tzcnt = 753 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Tzmsk = 754 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Ucomisd = 755 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Ucomiss = 756 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Ud0 = 757 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Ud1 = 758 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Ud2 = 759 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Umonitor = 760 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Umov = 761 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Umwait = 762 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Unpckhpd = 763 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Unpckhps = 764 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Unpcklpd = 765 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Unpcklps = 766 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic V4fmaddps = 767 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic V4fmaddss = 768 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic V4fnmaddps = 769 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic V4fnmaddss = 770 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vaddpd = 771 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vaddps = 772 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vaddsd = 773 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vaddss = 774 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vaddsubpd = 775 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vaddsubps = 776 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vaesdec = 777 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vaesdeclast = 778 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vaesenc = 779 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vaesenclast = 780 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vaesimc = 781 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vaeskeygenassist = 782 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Valignd = 783 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Valignq = 784 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vandnpd = 785 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vandnps = 786 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vandpd = 787 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vandps = 788 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vblendmpd = 789 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vblendmps = 790 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vblendpd = 791 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vblendps = 792 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vblendvpd = 793 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vblendvps = 794 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vbroadcastf128 = 795 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vbroadcastf32x2 = 796 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vbroadcastf32x4 = 797 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vbroadcastf32x8 = 798 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vbroadcastf64x2 = 799 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vbroadcastf64x4 = 800 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vbroadcasti128 = 801 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vbroadcasti32x2 = 802 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vbroadcasti32x4 = 803 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vbroadcasti32x8 = 804 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vbroadcasti64x2 = 805 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vbroadcasti64x4 = 806 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vbroadcastsd = 807 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vbroadcastss = 808 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vcmppd = 809 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vcmpps = 810 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vcmpsd = 811 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vcmpss = 812 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vcomisd = 813 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vcomiss = 814 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vcompresspd = 815 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vcompressps = 816 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vcvtdq2pd = 817 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vcvtdq2ps = 818 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vcvtne2ps2bf16 = 819 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vcvtneps2bf16 = 820 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vcvtpd2dq = 821 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vcvtpd2ps = 822 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vcvtpd2qq = 823 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vcvtpd2udq = 824 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vcvtpd2uqq = 825 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vcvtph2ps = 826 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vcvtps2dq = 827 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vcvtps2pd = 828 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vcvtps2ph = 829 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vcvtps2qq = 830 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vcvtps2udq = 831 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vcvtps2uqq = 832 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vcvtqq2pd = 833 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vcvtqq2ps = 834 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vcvtsd2si = 835 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vcvtsd2ss = 836 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vcvtsd2usi = 837 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vcvtsi2sd = 838 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vcvtsi2ss = 839 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vcvtss2sd = 840 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vcvtss2si = 841 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vcvtss2usi = 842 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vcvttpd2dq = 843 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vcvttpd2qq = 844 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vcvttpd2udq = 845 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vcvttpd2uqq = 846 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vcvttps2dq = 847 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vcvttps2qq = 848 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vcvttps2udq = 849 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vcvttps2uqq = 850 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vcvttsd2si = 851 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vcvttsd2usi = 852 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vcvttss2si = 853 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vcvttss2usi = 854 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vcvtudq2pd = 855 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vcvtudq2ps = 856 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vcvtuqq2pd = 857 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vcvtuqq2ps = 858 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vcvtusi2sd = 859 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vcvtusi2ss = 860 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vdbpsadbw = 861 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vdivpd = 862 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vdivps = 863 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vdivsd = 864 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vdivss = 865 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vdpbf16ps = 866 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vdppd = 867 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vdpps = 868 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Verr = 869 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Verw = 870 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vexp2pd = 871 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vexp2ps = 872 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vexpandpd = 873 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vexpandps = 874 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vextractf128 = 875 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vextractf32x4 = 876 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vextractf32x8 = 877 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vextractf64x2 = 878 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vextractf64x4 = 879 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vextracti128 = 880 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vextracti32x4 = 881 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vextracti32x8 = 882 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vextracti64x2 = 883 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vextracti64x4 = 884 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vextractps = 885 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vfixupimmpd = 886 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vfixupimmps = 887 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vfixupimmsd = 888 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vfixupimmss = 889 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vfmadd132pd = 890 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vfmadd132ps = 891 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vfmadd132sd = 892 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vfmadd132ss = 893 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vfmadd213pd = 894 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vfmadd213ps = 895 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vfmadd213sd = 896 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vfmadd213ss = 897 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vfmadd231pd = 898 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vfmadd231ps = 899 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vfmadd231sd = 900 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vfmadd231ss = 901 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vfmaddpd = 902 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vfmaddps = 903 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vfmaddsd = 904 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vfmaddss = 905 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vfmaddsub132pd = 906 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vfmaddsub132ps = 907 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vfmaddsub213pd = 908 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vfmaddsub213ps = 909 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vfmaddsub231pd = 910 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vfmaddsub231ps = 911 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vfmaddsubpd = 912 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vfmaddsubps = 913 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vfmsub132pd = 914 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vfmsub132ps = 915 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vfmsub132sd = 916 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vfmsub132ss = 917 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vfmsub213pd = 918 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vfmsub213ps = 919 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vfmsub213sd = 920 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vfmsub213ss = 921 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vfmsub231pd = 922 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vfmsub231ps = 923 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vfmsub231sd = 924 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vfmsub231ss = 925 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vfmsubadd132pd = 926 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vfmsubadd132ps = 927 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vfmsubadd213pd = 928 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vfmsubadd213ps = 929 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vfmsubadd231pd = 930 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vfmsubadd231ps = 931 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vfmsubaddpd = 932 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vfmsubaddps = 933 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vfmsubpd = 934 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vfmsubps = 935 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vfmsubsd = 936 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vfmsubss = 937 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vfnmadd132pd = 938 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vfnmadd132ps = 939 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vfnmadd132sd = 940 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vfnmadd132ss = 941 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vfnmadd213pd = 942 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vfnmadd213ps = 943 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vfnmadd213sd = 944 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vfnmadd213ss = 945 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vfnmadd231pd = 946 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vfnmadd231ps = 947 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vfnmadd231sd = 948 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vfnmadd231ss = 949 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vfnmaddpd = 950 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vfnmaddps = 951 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vfnmaddsd = 952 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vfnmaddss = 953 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vfnmsub132pd = 954 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vfnmsub132ps = 955 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vfnmsub132sd = 956 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vfnmsub132ss = 957 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vfnmsub213pd = 958 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vfnmsub213ps = 959 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vfnmsub213sd = 960 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vfnmsub213ss = 961 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vfnmsub231pd = 962 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vfnmsub231ps = 963 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vfnmsub231sd = 964 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vfnmsub231ss = 965 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vfnmsubpd = 966 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vfnmsubps = 967 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vfnmsubsd = 968 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vfnmsubss = 969 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vfpclasspd = 970 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vfpclassps = 971 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vfpclasssd = 972 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vfpclassss = 973 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vfrczpd = 974 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vfrczps = 975 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vfrczsd = 976 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vfrczss = 977 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vgatherdpd = 978 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vgatherdps = 979 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vgatherpf0dpd = 980 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vgatherpf0dps = 981 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vgatherpf0qpd = 982 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vgatherpf0qps = 983 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vgatherpf1dpd = 984 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vgatherpf1dps = 985 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vgatherpf1qpd = 986 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vgatherpf1qps = 987 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vgatherqpd = 988 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vgatherqps = 989 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vgetexppd = 990 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vgetexpps = 991 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vgetexpsd = 992 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vgetexpss = 993 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vgetmantpd = 994 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vgetmantps = 995 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vgetmantsd = 996 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vgetmantss = 997 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vgf2p8affineinvqb = 998 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vgf2p8affineqb = 999 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vgf2p8mulb = 1000 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vhaddpd = 1001 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vhaddps = 1002 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vhsubpd = 1003 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vhsubps = 1004 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vinsertf128 = 1005 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vinsertf32x4 = 1006 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vinsertf32x8 = 1007 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vinsertf64x2 = 1008 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vinsertf64x4 = 1009 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vinserti128 = 1010 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vinserti32x4 = 1011 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vinserti32x8 = 1012 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vinserti64x2 = 1013 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vinserti64x4 = 1014 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vinsertps = 1015 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vlddqu = 1016 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vldmxcsr = 1017 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vmaskmovdqu = 1018 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vmaskmovpd = 1019 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vmaskmovps = 1020 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vmaxpd = 1021 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vmaxps = 1022 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vmaxsd = 1023 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vmaxss = 1024 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vmcall = 1025 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vmclear = 1026 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vmfunc = 1027 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vminpd = 1028 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vminps = 1029 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vminsd = 1030 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vminss = 1031 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vmlaunch = 1032 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vmload = 1033 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vmmcall = 1034 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vmovapd = 1035 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vmovaps = 1036 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vmovd = 1037 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vmovddup = 1038 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vmovdqa = 1039 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vmovdqa32 = 1040 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vmovdqa64 = 1041 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vmovdqu = 1042 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vmovdqu16 = 1043 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vmovdqu32 = 1044 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vmovdqu64 = 1045 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vmovdqu8 = 1046 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vmovhlps = 1047 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vmovhpd = 1048 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vmovhps = 1049 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vmovlhps = 1050 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vmovlpd = 1051 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vmovlps = 1052 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vmovmskpd = 1053 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vmovmskps = 1054 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vmovntdq = 1055 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vmovntdqa = 1056 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vmovntpd = 1057 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vmovntps = 1058 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vmovq = 1059 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vmovsd = 1060 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vmovshdup = 1061 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vmovsldup = 1062 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vmovss = 1063 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vmovupd = 1064 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vmovups = 1065 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vmpsadbw = 1066 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vmptrld = 1067 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vmptrst = 1068 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vmread = 1069 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vmresume = 1070 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vmrun = 1071 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vmsave = 1072 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vmulpd = 1073 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vmulps = 1074 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vmulsd = 1075 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vmulss = 1076 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vmwrite = 1077 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vmxoff = 1078 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vmxon = 1079 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vorpd = 1080 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vorps = 1081 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vp2intersectd = 1082 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vp2intersectq = 1083 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vp4dpwssd = 1084 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vp4dpwssds = 1085 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpabsb = 1086 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpabsd = 1087 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpabsq = 1088 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpabsw = 1089 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpackssdw = 1090 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpacksswb = 1091 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpackusdw = 1092 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpackuswb = 1093 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpaddb = 1094 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpaddd = 1095 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpaddq = 1096 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpaddsb = 1097 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpaddsw = 1098 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpaddusb = 1099 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpaddusw = 1100 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpaddw = 1101 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpalignr = 1102 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpand = 1103 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpandd = 1104 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpandn = 1105 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpandnd = 1106 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpandnq = 1107 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpandq = 1108 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpavgb = 1109 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpavgw = 1110 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpblendd = 1111 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpblendmb = 1112 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpblendmd = 1113 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpblendmq = 1114 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpblendmw = 1115 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpblendvb = 1116 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpblendw = 1117 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpbroadcastb = 1118 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpbroadcastd = 1119 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpbroadcastmb2q = 1120 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpbroadcastmw2d = 1121 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpbroadcastq = 1122 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpbroadcastw = 1123 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpclmulqdq = 1124 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpcmov = 1125 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpcmpb = 1126 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpcmpd = 1127 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpcmpeqb = 1128 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpcmpeqd = 1129 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpcmpeqq = 1130 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpcmpeqw = 1131 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpcmpestri = 1132 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpcmpestri64 = 1133 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpcmpestrm = 1134 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpcmpestrm64 = 1135 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpcmpgtb = 1136 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpcmpgtd = 1137 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpcmpgtq = 1138 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpcmpgtw = 1139 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpcmpistri = 1140 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpcmpistrm = 1141 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpcmpq = 1142 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpcmpub = 1143 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpcmpud = 1144 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpcmpuq = 1145 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpcmpuw = 1146 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpcmpw = 1147 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpcomb = 1148 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpcomd = 1149 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpcompressb = 1150 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpcompressd = 1151 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpcompressq = 1152 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpcompressw = 1153 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpcomq = 1154 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpcomub = 1155 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpcomud = 1156 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpcomuq = 1157 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpcomuw = 1158 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpcomw = 1159 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpconflictd = 1160 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpconflictq = 1161 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpdpbusd = 1162 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpdpbusds = 1163 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpdpwssd = 1164 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpdpwssds = 1165 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vperm2f128 = 1166 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vperm2i128 = 1167 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpermb = 1168 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpermd = 1169 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpermi2b = 1170 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpermi2d = 1171 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpermi2pd = 1172 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpermi2ps = 1173 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpermi2q = 1174 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpermi2w = 1175 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpermil2pd = 1176 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpermil2ps = 1177 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpermilpd = 1178 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpermilps = 1179 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpermpd = 1180 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpermps = 1181 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpermq = 1182 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpermt2b = 1183 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpermt2d = 1184 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpermt2pd = 1185 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpermt2ps = 1186 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpermt2q = 1187 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpermt2w = 1188 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpermw = 1189 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpexpandb = 1190 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpexpandd = 1191 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpexpandq = 1192 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpexpandw = 1193 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpextrb = 1194 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpextrd = 1195 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpextrq = 1196 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpextrw = 1197 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpgatherdd = 1198 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpgatherdq = 1199 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpgatherqd = 1200 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpgatherqq = 1201 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vphaddbd = 1202 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vphaddbq = 1203 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vphaddbw = 1204 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vphaddd = 1205 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vphadddq = 1206 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vphaddsw = 1207 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vphaddubd = 1208 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vphaddubq = 1209 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vphaddubw = 1210 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vphaddudq = 1211 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vphadduwd = 1212 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vphadduwq = 1213 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vphaddw = 1214 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vphaddwd = 1215 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vphaddwq = 1216 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vphminposuw = 1217 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vphsubbw = 1218 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vphsubd = 1219 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vphsubdq = 1220 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vphsubsw = 1221 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vphsubw = 1222 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vphsubwd = 1223 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpinsrb = 1224 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpinsrd = 1225 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpinsrq = 1226 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpinsrw = 1227 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vplzcntd = 1228 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vplzcntq = 1229 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpmacsdd = 1230 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpmacsdqh = 1231 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpmacsdql = 1232 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpmacssdd = 1233 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpmacssdqh = 1234 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpmacssdql = 1235 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpmacsswd = 1236 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpmacssww = 1237 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpmacswd = 1238 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpmacsww = 1239 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpmadcsswd = 1240 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpmadcswd = 1241 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpmadd52huq = 1242 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpmadd52luq = 1243 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpmaddubsw = 1244 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpmaddwd = 1245 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpmaskmovd = 1246 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpmaskmovq = 1247 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpmaxsb = 1248 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpmaxsd = 1249 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpmaxsq = 1250 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpmaxsw = 1251 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpmaxub = 1252 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpmaxud = 1253 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpmaxuq = 1254 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpmaxuw = 1255 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpminsb = 1256 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpminsd = 1257 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpminsq = 1258 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpminsw = 1259 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpminub = 1260 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpminud = 1261 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpminuq = 1262 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpminuw = 1263 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpmovb2m = 1264 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpmovd2m = 1265 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpmovdb = 1266 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpmovdw = 1267 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpmovm2b = 1268 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpmovm2d = 1269 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpmovm2q = 1270 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpmovm2w = 1271 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpmovmskb = 1272 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpmovq2m = 1273 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpmovqb = 1274 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpmovqd = 1275 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpmovqw = 1276 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpmovsdb = 1277 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpmovsdw = 1278 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpmovsqb = 1279 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpmovsqd = 1280 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpmovsqw = 1281 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpmovswb = 1282 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpmovsxbd = 1283 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpmovsxbq = 1284 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpmovsxbw = 1285 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpmovsxdq = 1286 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpmovsxwd = 1287 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpmovsxwq = 1288 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpmovusdb = 1289 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpmovusdw = 1290 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpmovusqb = 1291 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpmovusqd = 1292 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpmovusqw = 1293 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpmovuswb = 1294 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpmovw2m = 1295 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpmovwb = 1296 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpmovzxbd = 1297 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpmovzxbq = 1298 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpmovzxbw = 1299 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpmovzxdq = 1300 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpmovzxwd = 1301 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpmovzxwq = 1302 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpmuldq = 1303 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpmulhrsw = 1304 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpmulhuw = 1305 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpmulhw = 1306 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpmulld = 1307 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpmullq = 1308 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpmullw = 1309 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpmultishiftqb = 1310 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpmuludq = 1311 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpopcntb = 1312 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpopcntd = 1313 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpopcntq = 1314 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpopcntw = 1315 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpor = 1316 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpord = 1317 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vporq = 1318 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpperm = 1319 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vprold = 1320 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vprolq = 1321 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vprolvd = 1322 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vprolvq = 1323 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vprord = 1324 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vprorq = 1325 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vprorvd = 1326 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vprorvq = 1327 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vprotb = 1328 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vprotd = 1329 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vprotq = 1330 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vprotw = 1331 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpsadbw = 1332 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpscatterdd = 1333 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpscatterdq = 1334 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpscatterqd = 1335 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpscatterqq = 1336 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpshab = 1337 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpshad = 1338 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpshaq = 1339 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpshaw = 1340 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpshlb = 1341 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpshld = 1342 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpshldd = 1343 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpshldq = 1344 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpshldvd = 1345 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpshldvq = 1346 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpshldvw = 1347 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpshldw = 1348 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpshlq = 1349 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpshlw = 1350 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpshrdd = 1351 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpshrdq = 1352 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpshrdvd = 1353 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpshrdvq = 1354 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpshrdvw = 1355 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpshrdw = 1356 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpshufb = 1357 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpshufbitqmb = 1358 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpshufd = 1359 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpshufhw = 1360 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpshuflw = 1361 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpsignb = 1362 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpsignd = 1363 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpsignw = 1364 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpslld = 1365 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpslldq = 1366 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpsllq = 1367 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpsllvd = 1368 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpsllvq = 1369 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpsllvw = 1370 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpsllw = 1371 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpsrad = 1372 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpsraq = 1373 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpsravd = 1374 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpsravq = 1375 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpsravw = 1376 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpsraw = 1377 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpsrld = 1378 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpsrldq = 1379 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpsrlq = 1380 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpsrlvd = 1381 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpsrlvq = 1382 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpsrlvw = 1383 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpsrlw = 1384 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpsubb = 1385 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpsubd = 1386 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpsubq = 1387 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpsubsb = 1388 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpsubsw = 1389 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpsubusb = 1390 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpsubusw = 1391 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpsubw = 1392 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpternlogd = 1393 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpternlogq = 1394 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vptest = 1395 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vptestmb = 1396 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vptestmd = 1397 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vptestmq = 1398 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vptestmw = 1399 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vptestnmb = 1400 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vptestnmd = 1401 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vptestnmq = 1402 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vptestnmw = 1403 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpunpckhbw = 1404 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpunpckhdq = 1405 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpunpckhqdq = 1406 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpunpckhwd = 1407 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpunpcklbw = 1408 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpunpckldq = 1409 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpunpcklqdq = 1410 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpunpcklwd = 1411 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpxor = 1412 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpxord = 1413 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpxorq = 1414 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vrangepd = 1415 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vrangeps = 1416 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vrangesd = 1417 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vrangess = 1418 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vrcp14pd = 1419 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vrcp14ps = 1420 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vrcp14sd = 1421 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vrcp14ss = 1422 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vrcp28pd = 1423 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vrcp28ps = 1424 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vrcp28sd = 1425 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vrcp28ss = 1426 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vrcpps = 1427 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vrcpss = 1428 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vreducepd = 1429 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vreduceps = 1430 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vreducesd = 1431 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vreducess = 1432 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vrndscalepd = 1433 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vrndscaleps = 1434 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vrndscalesd = 1435 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vrndscaless = 1436 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vroundpd = 1437 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vroundps = 1438 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vroundsd = 1439 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vroundss = 1440 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vrsqrt14pd = 1441 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vrsqrt14ps = 1442 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vrsqrt14sd = 1443 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vrsqrt14ss = 1444 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vrsqrt28pd = 1445 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vrsqrt28ps = 1446 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vrsqrt28sd = 1447 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vrsqrt28ss = 1448 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vrsqrtps = 1449 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vrsqrtss = 1450 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vscalefpd = 1451 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vscalefps = 1452 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vscalefsd = 1453 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vscalefss = 1454 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vscatterdpd = 1455 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vscatterdps = 1456 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vscatterpf0dpd = 1457 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vscatterpf0dps = 1458 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vscatterpf0qpd = 1459 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vscatterpf0qps = 1460 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vscatterpf1dpd = 1461 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vscatterpf1dps = 1462 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vscatterpf1qpd = 1463 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vscatterpf1qps = 1464 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vscatterqpd = 1465 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vscatterqps = 1466 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vshuff32x4 = 1467 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vshuff64x2 = 1468 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vshufi32x4 = 1469 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vshufi64x2 = 1470 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vshufpd = 1471 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vshufps = 1472 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vsqrtpd = 1473 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vsqrtps = 1474 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vsqrtsd = 1475 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vsqrtss = 1476 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vstmxcsr = 1477 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vsubpd = 1478 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vsubps = 1479 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vsubsd = 1480 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vsubss = 1481 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vtestpd = 1482 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vtestps = 1483 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vucomisd = 1484 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vucomiss = 1485 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vunpckhpd = 1486 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vunpckhps = 1487 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vunpcklpd = 1488 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vunpcklps = 1489 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vxorpd = 1490 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vxorps = 1491 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vzeroall = 1492 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vzeroupper = 1493 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Wait = 1494 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Wbinvd = 1495 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Wbnoinvd = 1496 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Wrfsbase = 1497 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Wrgsbase = 1498 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Wrmsr = 1499 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Wrpkru = 1500 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Wrssd = 1501 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Wrssq = 1502 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Wrussd = 1503 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Wrussq = 1504 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Xabort = 1505 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Xadd = 1506 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Xbegin = 1507 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Xbts = 1508 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Xchg = 1509 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Xcryptcbc = 1510 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Xcryptcfb = 1511 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Xcryptctr = 1512 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Xcryptecb = 1513 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Xcryptofb = 1514 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Xend = 1515 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Xgetbv = 1516 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Xlatb = 1517 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Xor = 1518 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Xorpd = 1519 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Xorps = 1520 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Xrstor = 1521 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Xrstor64 = 1522 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Xrstors = 1523 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Xrstors64 = 1524 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Xsave = 1525 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Xsave64 = 1526 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Xsavec = 1527 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Xsavec64 = 1528 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Xsaveopt = 1529 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Xsaveopt64 = 1530 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Xsaves = 1531 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Xsaves64 = 1532 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Xsetbv = 1533 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Xsha1 = 1534 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Xsha256 = 1535 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Xstore = 1536 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Xtest = 1537 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Rmpadjust = 1538 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Rmpupdate = 1539 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Psmash = 1540 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Pvalidate = 1541 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Serialize = 1542 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Xsusldtrk = 1543 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Xresldtrk = 1544 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Invlpgb = 1545 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Tlbsync = 1546 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vmgexit = 1547 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Getsecq = 1548 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Sysexitq = 1549 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Ldtilecfg = 1550 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Tilerelease = 1551 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Sttilecfg = 1552 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Tilezero = 1553 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Tileloaddt1 = 1554 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Tilestored = 1555 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Tileloadd = 1556 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Tdpbf16ps = 1557 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Tdpbuud = 1558 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Tdpbusd = 1559 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Tdpbsud = 1560 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Tdpbssd = 1561 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Sysretq = 1562 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Fnstdw = 1563 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Fnstsg = 1564 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Rdshr = 1565 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Wrshr = 1566 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Smint = 1567 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Dmint = 1568 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Rdm = 1569 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Svdc = 1570 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Rsdc = 1571 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Svldt = 1572 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Rsldt = 1573 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Svts = 1574 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Rsts = 1575 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Bb0_reset = 1576 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Bb1_reset = 1577 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Cpu_write = 1578 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Cpu_read = 1579 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Altinst = 1580 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Paveb = 1581 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Paddsiw = 1582 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Pmagw = 1583 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Pdistib = 1584 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Psubsiw = 1585 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Pmvzb = 1586 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Pmvnzb = 1587 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Pmvlzb = 1588 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Pmvgezb = 1589 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Pmulhriw = 1590 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Pmachriw = 1591 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Ftstp = 1592 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Frint2 = 1593 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Frichop = 1594 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Frinear = 1595 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Undoc = 1596 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Tdcall = 1597 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Seamret = 1598 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Seamops = 1599 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Seamcall = 1600 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Aesencwide128kl = 1601 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Aesdecwide128kl = 1602 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Aesencwide256kl = 1603 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Aesdecwide256kl = 1604 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Loadiwkey = 1605 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Aesenc128kl = 1606 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Aesdec128kl = 1607 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Aesenc256kl = 1608 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Aesdec256kl = 1609 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Encodekey128 = 1610 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Encodekey256 = 1611 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Pushad = 1612 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Popad = 1613 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Pushfd = 1614 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Pushfq = 1615 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Popfd = 1616 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Popfq = 1617 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Iretd = 1618 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Iretq = 1619 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Int3 = 1620 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Uiret = 1621 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Testui = 1622 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Clui = 1623 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Stui = 1624 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Senduipi = 1625 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Hreset = 1626 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Ccs_hash = 1627 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Ccs_encrypt = 1628 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Lkgs = 1629 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Eretu = 1630 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Erets = 1631 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Storeall = 1632 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vaddph = 1633 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vaddsh = 1634 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vcmpph = 1635 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vcmpsh = 1636 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vcomish = 1637 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vcvtdq2ph = 1638 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vcvtpd2ph = 1639 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vcvtph2dq = 1640 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vcvtph2pd = 1641 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vcvtph2psx = 1642 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vcvtph2qq = 1643 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vcvtph2udq = 1644 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vcvtph2uqq = 1645 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vcvtph2uw = 1646 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vcvtph2w = 1647 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vcvtps2phx = 1648 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vcvtqq2ph = 1649 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vcvtsd2sh = 1650 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vcvtsh2sd = 1651 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vcvtsh2si = 1652 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vcvtsh2ss = 1653 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vcvtsh2usi = 1654 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vcvtsi2sh = 1655 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vcvtss2sh = 1656 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vcvttph2dq = 1657 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vcvttph2qq = 1658 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vcvttph2udq = 1659 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vcvttph2uqq = 1660 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vcvttph2uw = 1661 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vcvttph2w = 1662 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vcvttsh2si = 1663 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vcvttsh2usi = 1664 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vcvtudq2ph = 1665 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vcvtuqq2ph = 1666 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vcvtusi2sh = 1667 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vcvtuw2ph = 1668 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vcvtw2ph = 1669 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vdivph = 1670 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vdivsh = 1671 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vfcmaddcph = 1672 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vfmaddcph = 1673 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vfcmaddcsh = 1674 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vfmaddcsh = 1675 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vfcmulcph = 1676 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vfmulcph = 1677 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vfcmulcsh = 1678 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vfmulcsh = 1679 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vfmaddsub132ph = 1680 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vfmaddsub213ph = 1681 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vfmaddsub231ph = 1682 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vfmsubadd132ph = 1683 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vfmsubadd213ph = 1684 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vfmsubadd231ph = 1685 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vfmadd132ph = 1686 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vfmadd213ph = 1687 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vfmadd231ph = 1688 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vfnmadd132ph = 1689 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vfnmadd213ph = 1690 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vfnmadd231ph = 1691 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vfmadd132sh = 1692 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vfmadd213sh = 1693 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vfmadd231sh = 1694 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vfnmadd132sh = 1695 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vfnmadd213sh = 1696 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vfnmadd231sh = 1697 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vfmsub132ph = 1698 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vfmsub213ph = 1699 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vfmsub231ph = 1700 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vfnmsub132ph = 1701 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vfnmsub213ph = 1702 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vfnmsub231ph = 1703 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vfmsub132sh = 1704 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vfmsub213sh = 1705 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vfmsub231sh = 1706 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vfnmsub132sh = 1707 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vfnmsub213sh = 1708 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vfnmsub231sh = 1709 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vfpclassph = 1710 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vfpclasssh = 1711 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vgetexpph = 1712 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vgetexpsh = 1713 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vgetmantph = 1714 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vgetmantsh = 1715 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vmaxph = 1716 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vmaxsh = 1717 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vminph = 1718 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vminsh = 1719 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vmovsh = 1720 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vmovw = 1721 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vmulph = 1722 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vmulsh = 1723 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vrcpph = 1724 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vrcpsh = 1725 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vreduceph = 1726 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vreducesh = 1727 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vrndscaleph = 1728 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vrndscalesh = 1729 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vrsqrtph = 1730 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vrsqrtsh = 1731 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vscalefph = 1732 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vscalefsh = 1733 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vsqrtph = 1734 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vsqrtsh = 1735 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vsubph = 1736 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vsubsh = 1737 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vucomish = 1738 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Rdudbg = 1739 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Wrudbg = 1740 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Clevict0 = 1741 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Clevict1 = 1742 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Delay = 1743 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Jknzd = 1744 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Jkzd = 1745 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Kand = 1746 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Kandn = 1747 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Kandnr = 1748 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Kconcath = 1749 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Kconcatl = 1750 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Kextract = 1751 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Kmerge2l1h = 1752 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Kmerge2l1l = 1753 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Kmov = 1754 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Knot = 1755 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Kor = 1756 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Kortest = 1757 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Kxnor = 1758 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Kxor = 1759 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Spflt = 1760 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Tzcnti = 1761 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vaddnpd = 1762 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vaddnps = 1763 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vaddsetsps = 1764 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vcvtfxpntdq2ps = 1765 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vcvtfxpntpd2dq = 1766 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vcvtfxpntpd2udq = 1767 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vcvtfxpntps2dq = 1768 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vcvtfxpntps2udq = 1769 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vcvtfxpntudq2ps = 1770 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vexp223ps = 1771 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vfixupnanpd = 1772 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vfixupnanps = 1773 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vfmadd233ps = 1774 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vgatherpf0hintdpd = 1775 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vgatherpf0hintdps = 1776 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vgmaxabsps = 1777 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vgmaxpd = 1778 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vgmaxps = 1779 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vgminpd = 1780 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vgminps = 1781 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vloadunpackhd = 1782 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vloadunpackhpd = 1783 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vloadunpackhps = 1784 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vloadunpackhq = 1785 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vloadunpackld = 1786 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vloadunpacklpd = 1787 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vloadunpacklps = 1788 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vloadunpacklq = 1789 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vlog2ps = 1790 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vmovnrapd = 1791 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vmovnraps = 1792 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vmovnrngoapd = 1793 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vmovnrngoaps = 1794 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpackstorehd = 1795 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpackstorehpd = 1796 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpackstorehps = 1797 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpackstorehq = 1798 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpackstoreld = 1799 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpackstorelpd = 1800 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpackstorelps = 1801 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpackstorelq = 1802 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpadcd = 1803 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpaddsetcd = 1804 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpaddsetsd = 1805 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpcmpltd = 1806 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpermf32x4 = 1807 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpmadd231d = 1808 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpmadd233d = 1809 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpmulhd = 1810 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpmulhud = 1811 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vprefetch0 = 1812 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vprefetch1 = 1813 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vprefetch2 = 1814 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vprefetche0 = 1815 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vprefetche1 = 1816 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vprefetche2 = 1817 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vprefetchenta = 1818 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vprefetchnta = 1819 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpsbbd = 1820 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpsbbrd = 1821 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpsubrd = 1822 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpsubrsetbd = 1823 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vpsubsetbd = 1824 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vrcp23ps = 1825 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vrndfxpntpd = 1826 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vrndfxpntps = 1827 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vrsqrt23ps = 1828 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vscaleps = 1829 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vscatterpf0hintdpd = 1830 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vscatterpf0hintdps = 1831 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vsubrpd = 1832 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Vsubrps = 1833 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Xsha512 = 1834 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Xstore_alt = 1835 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Xsha512_alt = 1836 : Public, Static, Literal, HasDefault
    Iced.Intel.Mnemonic Zero_bytes = 1837 : Public, Static, Literal, HasDefault
Class Iced.Intel.MnemonicUtils: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Methods:
    Mnemonic(Code): PrivateScope, Public, Static, HideBySig
Class Iced.Intel.MnemonicUtilsData: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Fields:
    UInt16[] toMnemonic : Assembly, Static, InitOnly
Struct Iced.Intel.OpKind: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Iced.Intel.OpKind Register = 0 : Public, Static, Literal, HasDefault
    Iced.Intel.OpKind NearBranch16 = 1 : Public, Static, Literal, HasDefault
    Iced.Intel.OpKind NearBranch32 = 2 : Public, Static, Literal, HasDefault
    Iced.Intel.OpKind NearBranch64 = 3 : Public, Static, Literal, HasDefault
    Iced.Intel.OpKind FarBranch16 = 4 : Public, Static, Literal, HasDefault
    Iced.Intel.OpKind FarBranch32 = 5 : Public, Static, Literal, HasDefault
    Iced.Intel.OpKind Immediate8 = 6 : Public, Static, Literal, HasDefault
    Iced.Intel.OpKind Immediate8_2nd = 7 : Public, Static, Literal, HasDefault
    Iced.Intel.OpKind Immediate16 = 8 : Public, Static, Literal, HasDefault
    Iced.Intel.OpKind Immediate32 = 9 : Public, Static, Literal, HasDefault
    Iced.Intel.OpKind Immediate64 = 10 : Public, Static, Literal, HasDefault
    Iced.Intel.OpKind Immediate8to16 = 11 : Public, Static, Literal, HasDefault
    Iced.Intel.OpKind Immediate8to32 = 12 : Public, Static, Literal, HasDefault
    Iced.Intel.OpKind Immediate8to64 = 13 : Public, Static, Literal, HasDefault
    Iced.Intel.OpKind Immediate32to64 = 14 : Public, Static, Literal, HasDefault
    Iced.Intel.OpKind MemorySegSI = 15 : Public, Static, Literal, HasDefault
    Iced.Intel.OpKind MemorySegESI = 16 : Public, Static, Literal, HasDefault
    Iced.Intel.OpKind MemorySegRSI = 17 : Public, Static, Literal, HasDefault
    Iced.Intel.OpKind MemorySegDI = 18 : Public, Static, Literal, HasDefault
    Iced.Intel.OpKind MemorySegEDI = 19 : Public, Static, Literal, HasDefault
    Iced.Intel.OpKind MemorySegRDI = 20 : Public, Static, Literal, HasDefault
    Iced.Intel.OpKind MemoryESDI = 21 : Public, Static, Literal, HasDefault
    Iced.Intel.OpKind MemoryESEDI = 22 : Public, Static, Literal, HasDefault
    Iced.Intel.OpKind MemoryESRDI = 23 : Public, Static, Literal, HasDefault
    Iced.Intel.OpKind Memory = 24 : Public, Static, Literal, HasDefault
Struct Iced.Intel.Register: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Iced.Intel.Register None = 0 : Public, Static, Literal, HasDefault
    Iced.Intel.Register AL = 1 : Public, Static, Literal, HasDefault
    Iced.Intel.Register CL = 2 : Public, Static, Literal, HasDefault
    Iced.Intel.Register DL = 3 : Public, Static, Literal, HasDefault
    Iced.Intel.Register BL = 4 : Public, Static, Literal, HasDefault
    Iced.Intel.Register AH = 5 : Public, Static, Literal, HasDefault
    Iced.Intel.Register CH = 6 : Public, Static, Literal, HasDefault
    Iced.Intel.Register DH = 7 : Public, Static, Literal, HasDefault
    Iced.Intel.Register BH = 8 : Public, Static, Literal, HasDefault
    Iced.Intel.Register SPL = 9 : Public, Static, Literal, HasDefault
    Iced.Intel.Register BPL = 10 : Public, Static, Literal, HasDefault
    Iced.Intel.Register SIL = 11 : Public, Static, Literal, HasDefault
    Iced.Intel.Register DIL = 12 : Public, Static, Literal, HasDefault
    Iced.Intel.Register R8L = 13 : Public, Static, Literal, HasDefault
    Iced.Intel.Register R9L = 14 : Public, Static, Literal, HasDefault
    Iced.Intel.Register R10L = 15 : Public, Static, Literal, HasDefault
    Iced.Intel.Register R11L = 16 : Public, Static, Literal, HasDefault
    Iced.Intel.Register R12L = 17 : Public, Static, Literal, HasDefault
    Iced.Intel.Register R13L = 18 : Public, Static, Literal, HasDefault
    Iced.Intel.Register R14L = 19 : Public, Static, Literal, HasDefault
    Iced.Intel.Register R15L = 20 : Public, Static, Literal, HasDefault
    Iced.Intel.Register AX = 21 : Public, Static, Literal, HasDefault
    Iced.Intel.Register CX = 22 : Public, Static, Literal, HasDefault
    Iced.Intel.Register DX = 23 : Public, Static, Literal, HasDefault
    Iced.Intel.Register BX = 24 : Public, Static, Literal, HasDefault
    Iced.Intel.Register SP = 25 : Public, Static, Literal, HasDefault
    Iced.Intel.Register BP = 26 : Public, Static, Literal, HasDefault
    Iced.Intel.Register SI = 27 : Public, Static, Literal, HasDefault
    Iced.Intel.Register DI = 28 : Public, Static, Literal, HasDefault
    Iced.Intel.Register R8W = 29 : Public, Static, Literal, HasDefault
    Iced.Intel.Register R9W = 30 : Public, Static, Literal, HasDefault
    Iced.Intel.Register R10W = 31 : Public, Static, Literal, HasDefault
    Iced.Intel.Register R11W = 32 : Public, Static, Literal, HasDefault
    Iced.Intel.Register R12W = 33 : Public, Static, Literal, HasDefault
    Iced.Intel.Register R13W = 34 : Public, Static, Literal, HasDefault
    Iced.Intel.Register R14W = 35 : Public, Static, Literal, HasDefault
    Iced.Intel.Register R15W = 36 : Public, Static, Literal, HasDefault
    Iced.Intel.Register EAX = 37 : Public, Static, Literal, HasDefault
    Iced.Intel.Register ECX = 38 : Public, Static, Literal, HasDefault
    Iced.Intel.Register EDX = 39 : Public, Static, Literal, HasDefault
    Iced.Intel.Register EBX = 40 : Public, Static, Literal, HasDefault
    Iced.Intel.Register ESP = 41 : Public, Static, Literal, HasDefault
    Iced.Intel.Register EBP = 42 : Public, Static, Literal, HasDefault
    Iced.Intel.Register ESI = 43 : Public, Static, Literal, HasDefault
    Iced.Intel.Register EDI = 44 : Public, Static, Literal, HasDefault
    Iced.Intel.Register R8D = 45 : Public, Static, Literal, HasDefault
    Iced.Intel.Register R9D = 46 : Public, Static, Literal, HasDefault
    Iced.Intel.Register R10D = 47 : Public, Static, Literal, HasDefault
    Iced.Intel.Register R11D = 48 : Public, Static, Literal, HasDefault
    Iced.Intel.Register R12D = 49 : Public, Static, Literal, HasDefault
    Iced.Intel.Register R13D = 50 : Public, Static, Literal, HasDefault
    Iced.Intel.Register R14D = 51 : Public, Static, Literal, HasDefault
    Iced.Intel.Register R15D = 52 : Public, Static, Literal, HasDefault
    Iced.Intel.Register RAX = 53 : Public, Static, Literal, HasDefault
    Iced.Intel.Register RCX = 54 : Public, Static, Literal, HasDefault
    Iced.Intel.Register RDX = 55 : Public, Static, Literal, HasDefault
    Iced.Intel.Register RBX = 56 : Public, Static, Literal, HasDefault
    Iced.Intel.Register RSP = 57 : Public, Static, Literal, HasDefault
    Iced.Intel.Register RBP = 58 : Public, Static, Literal, HasDefault
    Iced.Intel.Register RSI = 59 : Public, Static, Literal, HasDefault
    Iced.Intel.Register RDI = 60 : Public, Static, Literal, HasDefault
    Iced.Intel.Register R8 = 61 : Public, Static, Literal, HasDefault
    Iced.Intel.Register R9 = 62 : Public, Static, Literal, HasDefault
    Iced.Intel.Register R10 = 63 : Public, Static, Literal, HasDefault
    Iced.Intel.Register R11 = 64 : Public, Static, Literal, HasDefault
    Iced.Intel.Register R12 = 65 : Public, Static, Literal, HasDefault
    Iced.Intel.Register R13 = 66 : Public, Static, Literal, HasDefault
    Iced.Intel.Register R14 = 67 : Public, Static, Literal, HasDefault
    Iced.Intel.Register R15 = 68 : Public, Static, Literal, HasDefault
    Iced.Intel.Register EIP = 69 : Public, Static, Literal, HasDefault
    Iced.Intel.Register RIP = 70 : Public, Static, Literal, HasDefault
    Iced.Intel.Register ES = 71 : Public, Static, Literal, HasDefault
    Iced.Intel.Register CS = 72 : Public, Static, Literal, HasDefault
    Iced.Intel.Register SS = 73 : Public, Static, Literal, HasDefault
    Iced.Intel.Register DS = 74 : Public, Static, Literal, HasDefault
    Iced.Intel.Register FS = 75 : Public, Static, Literal, HasDefault
    Iced.Intel.Register GS = 76 : Public, Static, Literal, HasDefault
    Iced.Intel.Register XMM0 = 77 : Public, Static, Literal, HasDefault
    Iced.Intel.Register XMM1 = 78 : Public, Static, Literal, HasDefault
    Iced.Intel.Register XMM2 = 79 : Public, Static, Literal, HasDefault
    Iced.Intel.Register XMM3 = 80 : Public, Static, Literal, HasDefault
    Iced.Intel.Register XMM4 = 81 : Public, Static, Literal, HasDefault
    Iced.Intel.Register XMM5 = 82 : Public, Static, Literal, HasDefault
    Iced.Intel.Register XMM6 = 83 : Public, Static, Literal, HasDefault
    Iced.Intel.Register XMM7 = 84 : Public, Static, Literal, HasDefault
    Iced.Intel.Register XMM8 = 85 : Public, Static, Literal, HasDefault
    Iced.Intel.Register XMM9 = 86 : Public, Static, Literal, HasDefault
    Iced.Intel.Register XMM10 = 87 : Public, Static, Literal, HasDefault
    Iced.Intel.Register XMM11 = 88 : Public, Static, Literal, HasDefault
    Iced.Intel.Register XMM12 = 89 : Public, Static, Literal, HasDefault
    Iced.Intel.Register XMM13 = 90 : Public, Static, Literal, HasDefault
    Iced.Intel.Register XMM14 = 91 : Public, Static, Literal, HasDefault
    Iced.Intel.Register XMM15 = 92 : Public, Static, Literal, HasDefault
    Iced.Intel.Register XMM16 = 93 : Public, Static, Literal, HasDefault
    Iced.Intel.Register XMM17 = 94 : Public, Static, Literal, HasDefault
    Iced.Intel.Register XMM18 = 95 : Public, Static, Literal, HasDefault
    Iced.Intel.Register XMM19 = 96 : Public, Static, Literal, HasDefault
    Iced.Intel.Register XMM20 = 97 : Public, Static, Literal, HasDefault
    Iced.Intel.Register XMM21 = 98 : Public, Static, Literal, HasDefault
    Iced.Intel.Register XMM22 = 99 : Public, Static, Literal, HasDefault
    Iced.Intel.Register XMM23 = 100 : Public, Static, Literal, HasDefault
    Iced.Intel.Register XMM24 = 101 : Public, Static, Literal, HasDefault
    Iced.Intel.Register XMM25 = 102 : Public, Static, Literal, HasDefault
    Iced.Intel.Register XMM26 = 103 : Public, Static, Literal, HasDefault
    Iced.Intel.Register XMM27 = 104 : Public, Static, Literal, HasDefault
    Iced.Intel.Register XMM28 = 105 : Public, Static, Literal, HasDefault
    Iced.Intel.Register XMM29 = 106 : Public, Static, Literal, HasDefault
    Iced.Intel.Register XMM30 = 107 : Public, Static, Literal, HasDefault
    Iced.Intel.Register XMM31 = 108 : Public, Static, Literal, HasDefault
    Iced.Intel.Register YMM0 = 109 : Public, Static, Literal, HasDefault
    Iced.Intel.Register YMM1 = 110 : Public, Static, Literal, HasDefault
    Iced.Intel.Register YMM2 = 111 : Public, Static, Literal, HasDefault
    Iced.Intel.Register YMM3 = 112 : Public, Static, Literal, HasDefault
    Iced.Intel.Register YMM4 = 113 : Public, Static, Literal, HasDefault
    Iced.Intel.Register YMM5 = 114 : Public, Static, Literal, HasDefault
    Iced.Intel.Register YMM6 = 115 : Public, Static, Literal, HasDefault
    Iced.Intel.Register YMM7 = 116 : Public, Static, Literal, HasDefault
    Iced.Intel.Register YMM8 = 117 : Public, Static, Literal, HasDefault
    Iced.Intel.Register YMM9 = 118 : Public, Static, Literal, HasDefault
    Iced.Intel.Register YMM10 = 119 : Public, Static, Literal, HasDefault
    Iced.Intel.Register YMM11 = 120 : Public, Static, Literal, HasDefault
    Iced.Intel.Register YMM12 = 121 : Public, Static, Literal, HasDefault
    Iced.Intel.Register YMM13 = 122 : Public, Static, Literal, HasDefault
    Iced.Intel.Register YMM14 = 123 : Public, Static, Literal, HasDefault
    Iced.Intel.Register YMM15 = 124 : Public, Static, Literal, HasDefault
    Iced.Intel.Register YMM16 = 125 : Public, Static, Literal, HasDefault
    Iced.Intel.Register YMM17 = 126 : Public, Static, Literal, HasDefault
    Iced.Intel.Register YMM18 = 127 : Public, Static, Literal, HasDefault
    Iced.Intel.Register YMM19 = 128 : Public, Static, Literal, HasDefault
    Iced.Intel.Register YMM20 = 129 : Public, Static, Literal, HasDefault
    Iced.Intel.Register YMM21 = 130 : Public, Static, Literal, HasDefault
    Iced.Intel.Register YMM22 = 131 : Public, Static, Literal, HasDefault
    Iced.Intel.Register YMM23 = 132 : Public, Static, Literal, HasDefault
    Iced.Intel.Register YMM24 = 133 : Public, Static, Literal, HasDefault
    Iced.Intel.Register YMM25 = 134 : Public, Static, Literal, HasDefault
    Iced.Intel.Register YMM26 = 135 : Public, Static, Literal, HasDefault
    Iced.Intel.Register YMM27 = 136 : Public, Static, Literal, HasDefault
    Iced.Intel.Register YMM28 = 137 : Public, Static, Literal, HasDefault
    Iced.Intel.Register YMM29 = 138 : Public, Static, Literal, HasDefault
    Iced.Intel.Register YMM30 = 139 : Public, Static, Literal, HasDefault
    Iced.Intel.Register YMM31 = 140 : Public, Static, Literal, HasDefault
    Iced.Intel.Register ZMM0 = 141 : Public, Static, Literal, HasDefault
    Iced.Intel.Register ZMM1 = 142 : Public, Static, Literal, HasDefault
    Iced.Intel.Register ZMM2 = 143 : Public, Static, Literal, HasDefault
    Iced.Intel.Register ZMM3 = 144 : Public, Static, Literal, HasDefault
    Iced.Intel.Register ZMM4 = 145 : Public, Static, Literal, HasDefault
    Iced.Intel.Register ZMM5 = 146 : Public, Static, Literal, HasDefault
    Iced.Intel.Register ZMM6 = 147 : Public, Static, Literal, HasDefault
    Iced.Intel.Register ZMM7 = 148 : Public, Static, Literal, HasDefault
    Iced.Intel.Register ZMM8 = 149 : Public, Static, Literal, HasDefault
    Iced.Intel.Register ZMM9 = 150 : Public, Static, Literal, HasDefault
    Iced.Intel.Register ZMM10 = 151 : Public, Static, Literal, HasDefault
    Iced.Intel.Register ZMM11 = 152 : Public, Static, Literal, HasDefault
    Iced.Intel.Register ZMM12 = 153 : Public, Static, Literal, HasDefault
    Iced.Intel.Register ZMM13 = 154 : Public, Static, Literal, HasDefault
    Iced.Intel.Register ZMM14 = 155 : Public, Static, Literal, HasDefault
    Iced.Intel.Register ZMM15 = 156 : Public, Static, Literal, HasDefault
    Iced.Intel.Register ZMM16 = 157 : Public, Static, Literal, HasDefault
    Iced.Intel.Register ZMM17 = 158 : Public, Static, Literal, HasDefault
    Iced.Intel.Register ZMM18 = 159 : Public, Static, Literal, HasDefault
    Iced.Intel.Register ZMM19 = 160 : Public, Static, Literal, HasDefault
    Iced.Intel.Register ZMM20 = 161 : Public, Static, Literal, HasDefault
    Iced.Intel.Register ZMM21 = 162 : Public, Static, Literal, HasDefault
    Iced.Intel.Register ZMM22 = 163 : Public, Static, Literal, HasDefault
    Iced.Intel.Register ZMM23 = 164 : Public, Static, Literal, HasDefault
    Iced.Intel.Register ZMM24 = 165 : Public, Static, Literal, HasDefault
    Iced.Intel.Register ZMM25 = 166 : Public, Static, Literal, HasDefault
    Iced.Intel.Register ZMM26 = 167 : Public, Static, Literal, HasDefault
    Iced.Intel.Register ZMM27 = 168 : Public, Static, Literal, HasDefault
    Iced.Intel.Register ZMM28 = 169 : Public, Static, Literal, HasDefault
    Iced.Intel.Register ZMM29 = 170 : Public, Static, Literal, HasDefault
    Iced.Intel.Register ZMM30 = 171 : Public, Static, Literal, HasDefault
    Iced.Intel.Register ZMM31 = 172 : Public, Static, Literal, HasDefault
    Iced.Intel.Register K0 = 173 : Public, Static, Literal, HasDefault
    Iced.Intel.Register K1 = 174 : Public, Static, Literal, HasDefault
    Iced.Intel.Register K2 = 175 : Public, Static, Literal, HasDefault
    Iced.Intel.Register K3 = 176 : Public, Static, Literal, HasDefault
    Iced.Intel.Register K4 = 177 : Public, Static, Literal, HasDefault
    Iced.Intel.Register K5 = 178 : Public, Static, Literal, HasDefault
    Iced.Intel.Register K6 = 179 : Public, Static, Literal, HasDefault
    Iced.Intel.Register K7 = 180 : Public, Static, Literal, HasDefault
    Iced.Intel.Register BND0 = 181 : Public, Static, Literal, HasDefault
    Iced.Intel.Register BND1 = 182 : Public, Static, Literal, HasDefault
    Iced.Intel.Register BND2 = 183 : Public, Static, Literal, HasDefault
    Iced.Intel.Register BND3 = 184 : Public, Static, Literal, HasDefault
    Iced.Intel.Register CR0 = 185 : Public, Static, Literal, HasDefault
    Iced.Intel.Register CR1 = 186 : Public, Static, Literal, HasDefault
    Iced.Intel.Register CR2 = 187 : Public, Static, Literal, HasDefault
    Iced.Intel.Register CR3 = 188 : Public, Static, Literal, HasDefault
    Iced.Intel.Register CR4 = 189 : Public, Static, Literal, HasDefault
    Iced.Intel.Register CR5 = 190 : Public, Static, Literal, HasDefault
    Iced.Intel.Register CR6 = 191 : Public, Static, Literal, HasDefault
    Iced.Intel.Register CR7 = 192 : Public, Static, Literal, HasDefault
    Iced.Intel.Register CR8 = 193 : Public, Static, Literal, HasDefault
    Iced.Intel.Register CR9 = 194 : Public, Static, Literal, HasDefault
    Iced.Intel.Register CR10 = 195 : Public, Static, Literal, HasDefault
    Iced.Intel.Register CR11 = 196 : Public, Static, Literal, HasDefault
    Iced.Intel.Register CR12 = 197 : Public, Static, Literal, HasDefault
    Iced.Intel.Register CR13 = 198 : Public, Static, Literal, HasDefault
    Iced.Intel.Register CR14 = 199 : Public, Static, Literal, HasDefault
    Iced.Intel.Register CR15 = 200 : Public, Static, Literal, HasDefault
    Iced.Intel.Register DR0 = 201 : Public, Static, Literal, HasDefault
    Iced.Intel.Register DR1 = 202 : Public, Static, Literal, HasDefault
    Iced.Intel.Register DR2 = 203 : Public, Static, Literal, HasDefault
    Iced.Intel.Register DR3 = 204 : Public, Static, Literal, HasDefault
    Iced.Intel.Register DR4 = 205 : Public, Static, Literal, HasDefault
    Iced.Intel.Register DR5 = 206 : Public, Static, Literal, HasDefault
    Iced.Intel.Register DR6 = 207 : Public, Static, Literal, HasDefault
    Iced.Intel.Register DR7 = 208 : Public, Static, Literal, HasDefault
    Iced.Intel.Register DR8 = 209 : Public, Static, Literal, HasDefault
    Iced.Intel.Register DR9 = 210 : Public, Static, Literal, HasDefault
    Iced.Intel.Register DR10 = 211 : Public, Static, Literal, HasDefault
    Iced.Intel.Register DR11 = 212 : Public, Static, Literal, HasDefault
    Iced.Intel.Register DR12 = 213 : Public, Static, Literal, HasDefault
    Iced.Intel.Register DR13 = 214 : Public, Static, Literal, HasDefault
    Iced.Intel.Register DR14 = 215 : Public, Static, Literal, HasDefault
    Iced.Intel.Register DR15 = 216 : Public, Static, Literal, HasDefault
    Iced.Intel.Register ST0 = 217 : Public, Static, Literal, HasDefault
    Iced.Intel.Register ST1 = 218 : Public, Static, Literal, HasDefault
    Iced.Intel.Register ST2 = 219 : Public, Static, Literal, HasDefault
    Iced.Intel.Register ST3 = 220 : Public, Static, Literal, HasDefault
    Iced.Intel.Register ST4 = 221 : Public, Static, Literal, HasDefault
    Iced.Intel.Register ST5 = 222 : Public, Static, Literal, HasDefault
    Iced.Intel.Register ST6 = 223 : Public, Static, Literal, HasDefault
    Iced.Intel.Register ST7 = 224 : Public, Static, Literal, HasDefault
    Iced.Intel.Register MM0 = 225 : Public, Static, Literal, HasDefault
    Iced.Intel.Register MM1 = 226 : Public, Static, Literal, HasDefault
    Iced.Intel.Register MM2 = 227 : Public, Static, Literal, HasDefault
    Iced.Intel.Register MM3 = 228 : Public, Static, Literal, HasDefault
    Iced.Intel.Register MM4 = 229 : Public, Static, Literal, HasDefault
    Iced.Intel.Register MM5 = 230 : Public, Static, Literal, HasDefault
    Iced.Intel.Register MM6 = 231 : Public, Static, Literal, HasDefault
    Iced.Intel.Register MM7 = 232 : Public, Static, Literal, HasDefault
    Iced.Intel.Register TR0 = 233 : Public, Static, Literal, HasDefault
    Iced.Intel.Register TR1 = 234 : Public, Static, Literal, HasDefault
    Iced.Intel.Register TR2 = 235 : Public, Static, Literal, HasDefault
    Iced.Intel.Register TR3 = 236 : Public, Static, Literal, HasDefault
    Iced.Intel.Register TR4 = 237 : Public, Static, Literal, HasDefault
    Iced.Intel.Register TR5 = 238 : Public, Static, Literal, HasDefault
    Iced.Intel.Register TR6 = 239 : Public, Static, Literal, HasDefault
    Iced.Intel.Register TR7 = 240 : Public, Static, Literal, HasDefault
    Iced.Intel.Register TMM0 = 241 : Public, Static, Literal, HasDefault
    Iced.Intel.Register TMM1 = 242 : Public, Static, Literal, HasDefault
    Iced.Intel.Register TMM2 = 243 : Public, Static, Literal, HasDefault
    Iced.Intel.Register TMM3 = 244 : Public, Static, Literal, HasDefault
    Iced.Intel.Register TMM4 = 245 : Public, Static, Literal, HasDefault
    Iced.Intel.Register TMM5 = 246 : Public, Static, Literal, HasDefault
    Iced.Intel.Register TMM6 = 247 : Public, Static, Literal, HasDefault
    Iced.Intel.Register TMM7 = 248 : Public, Static, Literal, HasDefault
    Iced.Intel.Register DontUse0 = 249 : Public, Static, Literal, HasDefault (Obsolete)
    Iced.Intel.Register DontUseFA = 250 : Public, Static, Literal, HasDefault (Obsolete)
    Iced.Intel.Register DontUseFB = 251 : Public, Static, Literal, HasDefault (Obsolete)
    Iced.Intel.Register DontUseFC = 252 : Public, Static, Literal, HasDefault (Obsolete)
    Iced.Intel.Register DontUseFD = 253 : Public, Static, Literal, HasDefault (Obsolete)
    Iced.Intel.Register DontUseFE = 254 : Public, Static, Literal, HasDefault (Obsolete)
    Iced.Intel.Register DontUseFF = 255 : Public, Static, Literal, HasDefault (Obsolete)
Class Iced.Intel.RegisterExtensions: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Methods:
    IsSegmentRegister(Register): PrivateScope, Public, Static, HideBySig
    IsGPR(Register): PrivateScope, Public, Static, HideBySig
    IsGPR8(Register): PrivateScope, Public, Static, HideBySig
    IsGPR16(Register): PrivateScope, Public, Static, HideBySig
    IsGPR32(Register): PrivateScope, Public, Static, HideBySig
    IsGPR64(Register): PrivateScope, Public, Static, HideBySig
    IsXMM(Register): PrivateScope, Public, Static, HideBySig
    IsYMM(Register): PrivateScope, Public, Static, HideBySig
    IsZMM(Register): PrivateScope, Public, Static, HideBySig
    IsIP(Register): PrivateScope, Public, Static, HideBySig
    IsK(Register): PrivateScope, Public, Static, HideBySig
    IsCR(Register): PrivateScope, Public, Static, HideBySig
    IsDR(Register): PrivateScope, Public, Static, HideBySig
    IsTR(Register): PrivateScope, Public, Static, HideBySig
    IsST(Register): PrivateScope, Public, Static, HideBySig
    IsBND(Register): PrivateScope, Public, Static, HideBySig
    IsMM(Register): PrivateScope, Public, Static, HideBySig
    IsTMM(Register): PrivateScope, Public, Static, HideBySig
    IsVectorRegister(Register): PrivateScope, Public, Static, HideBySig
Struct Iced.Intel.RoundingControl: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Iced.Intel.RoundingControl None = 0 : Public, Static, Literal, HasDefault
    Iced.Intel.RoundingControl RoundToNearest = 1 : Public, Static, Literal, HasDefault
    Iced.Intel.RoundingControl RoundDown = 2 : Public, Static, Literal, HasDefault
    Iced.Intel.RoundingControl RoundUp = 3 : Public, Static, Literal, HasDefault
    Iced.Intel.RoundingControl RoundTowardZero = 4 : Public, Static, Literal, HasDefault
Class Iced.Intel.Static: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Methods:
    Assert(Byte): PrivateScope, Public, Static, HideBySig
Class Iced.Intel.StreamCodeReader: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.CodeReader
    Void .ctor(System.IO.Stream): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    System.IO.Stream Stream : Public, InitOnly
  Methods:
    ReadByte(): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.StreamCodeWriter: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.CodeWriter
    Void .ctor(System.IO.Stream): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    System.IO.Stream Stream : Public, InitOnly
  Methods:
    WriteByte(Byte): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.ThrowHelper: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Methods:
    ThrowArgumentException(): PrivateScope, Assembly, Static, HideBySig
    ThrowInvalidOperationException(): PrivateScope, Assembly, Static, HideBySig
    ThrowArgumentNullException_codeWriter(): PrivateScope, Assembly, Static, HideBySig
    ThrowArgumentNullException_data(): PrivateScope, Assembly, Static, HideBySig
    ThrowArgumentNullException_writer(): PrivateScope, Assembly, Static, HideBySig
    ThrowArgumentNullException_options(): PrivateScope, Assembly, Static, HideBySig
    ThrowArgumentNullException_value(): PrivateScope, Assembly, Static, HideBySig
    ThrowArgumentNullException_list(): PrivateScope, Assembly, Static, HideBySig
    ThrowArgumentNullException_collection(): PrivateScope, Assembly, Static, HideBySig
    ThrowArgumentNullException_array(): PrivateScope, Assembly, Static, HideBySig
    ThrowArgumentNullException_sb(): PrivateScope, Assembly, Static, HideBySig
    ThrowArgumentNullException_output(): PrivateScope, Assembly, Static, HideBySig
    ThrowArgumentOutOfRangeException_value(): PrivateScope, Assembly, Static, HideBySig
    ThrowArgumentOutOfRangeException_index(): PrivateScope, Assembly, Static, HideBySig
    ThrowArgumentOutOfRangeException_count(): PrivateScope, Assembly, Static, HideBySig
    ThrowArgumentOutOfRangeException_length(): PrivateScope, Assembly, Static, HideBySig
    ThrowArgumentOutOfRangeException_operand(): PrivateScope, Assembly, Static, HideBySig
    ThrowArgumentOutOfRangeException_instructionOperand(): PrivateScope, Assembly, Static, HideBySig
    ThrowArgumentOutOfRangeException_capacity(): PrivateScope, Assembly, Static, HideBySig
    ThrowArgumentOutOfRangeException_memorySize(): PrivateScope, Assembly, Static, HideBySig
    ThrowArgumentOutOfRangeException_size(): PrivateScope, Assembly, Static, HideBySig
    ThrowArgumentOutOfRangeException_elementSize(): PrivateScope, Assembly, Static, HideBySig
    ThrowArgumentOutOfRangeException_register(): PrivateScope, Assembly, Static, HideBySig
    ThrowArgumentOutOfRangeException_code(): PrivateScope, Assembly, Static, HideBySig
    ThrowArgumentOutOfRangeException_data(): PrivateScope, Assembly, Static, HideBySig
Struct Iced.Intel.TupleType: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Iced.Intel.TupleType N1 = 0 : Public, Static, Literal, HasDefault
    Iced.Intel.TupleType N2 = 1 : Public, Static, Literal, HasDefault
    Iced.Intel.TupleType N4 = 2 : Public, Static, Literal, HasDefault
    Iced.Intel.TupleType N8 = 3 : Public, Static, Literal, HasDefault
    Iced.Intel.TupleType N16 = 4 : Public, Static, Literal, HasDefault
    Iced.Intel.TupleType N32 = 5 : Public, Static, Literal, HasDefault
    Iced.Intel.TupleType N64 = 6 : Public, Static, Literal, HasDefault
    Iced.Intel.TupleType N8b4 = 7 : Public, Static, Literal, HasDefault
    Iced.Intel.TupleType N16b4 = 8 : Public, Static, Literal, HasDefault
    Iced.Intel.TupleType N32b4 = 9 : Public, Static, Literal, HasDefault
    Iced.Intel.TupleType N64b4 = 10 : Public, Static, Literal, HasDefault
    Iced.Intel.TupleType N16b8 = 11 : Public, Static, Literal, HasDefault
    Iced.Intel.TupleType N32b8 = 12 : Public, Static, Literal, HasDefault
    Iced.Intel.TupleType N64b8 = 13 : Public, Static, Literal, HasDefault
    Iced.Intel.TupleType N4b2 = 14 : Public, Static, Literal, HasDefault
    Iced.Intel.TupleType N8b2 = 15 : Public, Static, Literal, HasDefault
    Iced.Intel.TupleType N16b2 = 16 : Public, Static, Literal, HasDefault
    Iced.Intel.TupleType N32b2 = 17 : Public, Static, Literal, HasDefault
    Iced.Intel.TupleType N64b2 = 18 : Public, Static, Literal, HasDefault
Class Iced.Intel.TupleTypeTable: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Methods:
    GetDisp8N(TupleType, Boolean): PrivateScope, Public, Static, HideBySig
Struct Iced.Intel.VectorLength: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Iced.Intel.VectorLength L128 = 0 : Public, Static, Literal, HasDefault
    Iced.Intel.VectorLength L256 = 1 : Public, Static, Literal, HasDefault
    Iced.Intel.VectorLength L512 = 2 : Public, Static, Literal, HasDefault
    Iced.Intel.VectorLength Unknown = 3 : Public, Static, Literal, HasDefault
Struct Iced.Intel.Internal.DataReader: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit (Obsolete)
  :System.ValueType
    Void .ctor(System.ReadOnlySpan`1[System.Byte]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.ReadOnlySpan`1[System.Byte], Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 Index 'get set' : 
    Boolean CanRead 'get ' : 
  Methods:
    get_Index(): PrivateScope, Public, HideBySig, SpecialName
    set_Index(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_CanRead(): PrivateScope, Public, HideBySig, SpecialName
    ReadByte(): PrivateScope, Public, HideBySig
    ReadCompressedUInt32(): PrivateScope, Public, HideBySig
    ReadAsciiString(): PrivateScope, Public, HideBySig
Class Iced.Intel.EncoderInternal.EncoderData: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Fields:
    UInt32[] EncFlags1 : Assembly, Static, InitOnly
    UInt32[] EncFlags2 : Assembly, Static, InitOnly
    UInt32[] EncFlags3 : Assembly, Static, InitOnly
Class Iced.Intel.EncoderInternal.TryConvertToDisp8N: AutoLayout, AnsiClass, Class, Sealed
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(Encoder, OpCodeHandler, Instruction&(In) InAttribute, Int32, SByte&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(Encoder, OpCodeHandler, Instruction&(In) InAttribute, Int32, SByte&(Out), AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(Instruction&(In) InAttribute, SByte&(Out), IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class Iced.Intel.EncoderInternal.OpCodeHandler: AutoLayout, AnsiClass, Class, Abstract, BeforeFieldInit
  Fields:
    UInt32 OpCode : Assembly, InitOnly
    Boolean Is2ByteOpCode : Assembly, InitOnly
    Int32 GroupIndex : Assembly, InitOnly
    Int32 RmGroupIndex : Assembly, InitOnly
    Boolean IsSpecialInstr : Assembly, InitOnly
    Iced.Intel.EncoderInternal.EncFlags3 EncFlags3 : Assembly, InitOnly
    Iced.Intel.CodeSize OpSize : Assembly, InitOnly
    Iced.Intel.CodeSize AddrSize : Assembly, InitOnly
    Iced.Intel.EncoderInternal.TryConvertToDisp8N TryConvertToDisp8N : Assembly, InitOnly
    Iced.Intel.EncoderInternal.Op[] Operands : Assembly, InitOnly
  Methods:
    Encode(Encoder, Instruction&(In) InAttribute): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class Iced.Intel.EncoderInternal.InvalidHandler: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.EncoderInternal.OpCodeHandler
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    System.String ERROR_MESSAGE = Can't encode an invalid instruction : Assembly, Static, Literal, HasDefault
  Methods:
    Encode(Encoder, Instruction&(In) InAttribute): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.EncoderInternal.DeclareDataHandler: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.EncoderInternal.OpCodeHandler
    Void .ctor(Iced.Intel.Code): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Encode(Encoder, Instruction&(In) InAttribute): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.EncoderInternal.ZeroBytesHandler: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.EncoderInternal.OpCodeHandler
    Void .ctor(Iced.Intel.Code): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Encode(Encoder, Instruction&(In) InAttribute): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.EncoderInternal.LegacyHandler: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.EncoderInternal.OpCodeHandler
    Void .ctor(Iced.Intel.EncoderInternal.EncFlags1, Iced.Intel.EncoderInternal.EncFlags2, Iced.Intel.EncoderInternal.EncFlags3): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Encode(Encoder, Instruction&(In) InAttribute): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.EncoderInternal.VexHandler: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.EncoderInternal.OpCodeHandler
    Void .ctor(Iced.Intel.EncoderInternal.EncFlags1, Iced.Intel.EncoderInternal.EncFlags2, Iced.Intel.EncoderInternal.EncFlags3): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Encode(Encoder, Instruction&(In) InAttribute): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.EncoderInternal.XopHandler: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.EncoderInternal.OpCodeHandler
    Void .ctor(Iced.Intel.EncoderInternal.EncFlags1, Iced.Intel.EncoderInternal.EncFlags2, Iced.Intel.EncoderInternal.EncFlags3): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Encode(Encoder, Instruction&(In) InAttribute): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.EncoderInternal.EvexHandler: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.EncoderInternal.OpCodeHandler
    Void .ctor(Iced.Intel.EncoderInternal.EncFlags1, Iced.Intel.EncoderInternal.EncFlags2, Iced.Intel.EncoderInternal.EncFlags3): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Encode(Encoder, Instruction&(In) InAttribute): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.EncoderInternal.D3nowHandler: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.EncoderInternal.OpCodeHandler
    Void .ctor(Iced.Intel.EncoderInternal.EncFlags2, Iced.Intel.EncoderInternal.EncFlags3): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Encode(Encoder, Instruction&(In) InAttribute): PrivateScope, Public, Virtual, HideBySig
Struct Iced.Intel.EncoderInternal.DisplSize: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Iced.Intel.EncoderInternal.DisplSize None = 0 : Public, Static, Literal, HasDefault
    Iced.Intel.EncoderInternal.DisplSize Size1 = 1 : Public, Static, Literal, HasDefault
    Iced.Intel.EncoderInternal.DisplSize Size2 = 2 : Public, Static, Literal, HasDefault
    Iced.Intel.EncoderInternal.DisplSize Size4 = 3 : Public, Static, Literal, HasDefault
    Iced.Intel.EncoderInternal.DisplSize Size8 = 4 : Public, Static, Literal, HasDefault
    Iced.Intel.EncoderInternal.DisplSize RipRelSize4_Target32 = 5 : Public, Static, Literal, HasDefault
    Iced.Intel.EncoderInternal.DisplSize RipRelSize4_Target64 = 6 : Public, Static, Literal, HasDefault
Struct Iced.Intel.EncoderInternal.ImmSize: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Iced.Intel.EncoderInternal.ImmSize None = 0 : Public, Static, Literal, HasDefault
    Iced.Intel.EncoderInternal.ImmSize Size1 = 1 : Public, Static, Literal, HasDefault
    Iced.Intel.EncoderInternal.ImmSize Size2 = 2 : Public, Static, Literal, HasDefault
    Iced.Intel.EncoderInternal.ImmSize Size4 = 3 : Public, Static, Literal, HasDefault
    Iced.Intel.EncoderInternal.ImmSize Size8 = 4 : Public, Static, Literal, HasDefault
    Iced.Intel.EncoderInternal.ImmSize Size2_1 = 5 : Public, Static, Literal, HasDefault
    Iced.Intel.EncoderInternal.ImmSize Size1_1 = 6 : Public, Static, Literal, HasDefault
    Iced.Intel.EncoderInternal.ImmSize Size2_2 = 7 : Public, Static, Literal, HasDefault
    Iced.Intel.EncoderInternal.ImmSize Size4_2 = 8 : Public, Static, Literal, HasDefault
    Iced.Intel.EncoderInternal.ImmSize RipRelSize1_Target16 = 9 : Public, Static, Literal, HasDefault
    Iced.Intel.EncoderInternal.ImmSize RipRelSize1_Target32 = 10 : Public, Static, Literal, HasDefault
    Iced.Intel.EncoderInternal.ImmSize RipRelSize1_Target64 = 11 : Public, Static, Literal, HasDefault
    Iced.Intel.EncoderInternal.ImmSize RipRelSize2_Target16 = 12 : Public, Static, Literal, HasDefault
    Iced.Intel.EncoderInternal.ImmSize RipRelSize2_Target32 = 13 : Public, Static, Literal, HasDefault
    Iced.Intel.EncoderInternal.ImmSize RipRelSize2_Target64 = 14 : Public, Static, Literal, HasDefault
    Iced.Intel.EncoderInternal.ImmSize RipRelSize4_Target32 = 15 : Public, Static, Literal, HasDefault
    Iced.Intel.EncoderInternal.ImmSize RipRelSize4_Target64 = 16 : Public, Static, Literal, HasDefault
    Iced.Intel.EncoderInternal.ImmSize SizeIbReg = 17 : Public, Static, Literal, HasDefault
    Iced.Intel.EncoderInternal.ImmSize Size1OpCode = 18 : Public, Static, Literal, HasDefault
Struct Iced.Intel.EncoderInternal.EncoderFlags: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    UInt32 value__ : Public, SpecialName, RTSpecialName
    Iced.Intel.EncoderInternal.EncoderFlags None = 0 : Public, Static, Literal, HasDefault
    Iced.Intel.EncoderInternal.EncoderFlags B = 1 : Public, Static, Literal, HasDefault
    Iced.Intel.EncoderInternal.EncoderFlags X = 2 : Public, Static, Literal, HasDefault
    Iced.Intel.EncoderInternal.EncoderFlags R = 4 : Public, Static, Literal, HasDefault
    Iced.Intel.EncoderInternal.EncoderFlags W = 8 : Public, Static, Literal, HasDefault
    Iced.Intel.EncoderInternal.EncoderFlags ModRM = 16 : Public, Static, Literal, HasDefault
    Iced.Intel.EncoderInternal.EncoderFlags Sib = 32 : Public, Static, Literal, HasDefault
    Iced.Intel.EncoderInternal.EncoderFlags REX = 64 : Public, Static, Literal, HasDefault
    Iced.Intel.EncoderInternal.EncoderFlags P66 = 128 : Public, Static, Literal, HasDefault
    Iced.Intel.EncoderInternal.EncoderFlags P67 = 256 : Public, Static, Literal, HasDefault
    Iced.Intel.EncoderInternal.EncoderFlags R2 = 512 : Public, Static, Literal, HasDefault
    Iced.Intel.EncoderInternal.EncoderFlags Broadcast = 1024 : Public, Static, Literal, HasDefault
    Iced.Intel.EncoderInternal.EncoderFlags HighLegacy8BitRegs = 2048 : Public, Static, Literal, HasDefault
    Iced.Intel.EncoderInternal.EncoderFlags Displ = 4096 : Public, Static, Literal, HasDefault
    Iced.Intel.EncoderInternal.EncoderFlags PF0 = 8192 : Public, Static, Literal, HasDefault
    Iced.Intel.EncoderInternal.EncoderFlags RegIsMemory = 16384 : Public, Static, Literal, HasDefault
    Iced.Intel.EncoderInternal.EncoderFlags MustUseSib = 32768 : Public, Static, Literal, HasDefault
    Iced.Intel.EncoderInternal.EncoderFlags VvvvvShift = 27 : Public, Static, Literal, HasDefault
    Iced.Intel.EncoderInternal.EncoderFlags VvvvvMask = 31 : Public, Static, Literal, HasDefault
Struct Iced.Intel.EncoderInternal.LegacyOpCodeTable: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Iced.Intel.EncoderInternal.LegacyOpCodeTable MAP0 = 0 : Public, Static, Literal, HasDefault
    Iced.Intel.EncoderInternal.LegacyOpCodeTable MAP0F = 1 : Public, Static, Literal, HasDefault
    Iced.Intel.EncoderInternal.LegacyOpCodeTable MAP0F38 = 2 : Public, Static, Literal, HasDefault
    Iced.Intel.EncoderInternal.LegacyOpCodeTable MAP0F3A = 3 : Public, Static, Literal, HasDefault
Struct Iced.Intel.EncoderInternal.VexOpCodeTable: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Iced.Intel.EncoderInternal.VexOpCodeTable MAP0 = 0 : Public, Static, Literal, HasDefault
    Iced.Intel.EncoderInternal.VexOpCodeTable MAP0F = 1 : Public, Static, Literal, HasDefault
    Iced.Intel.EncoderInternal.VexOpCodeTable MAP0F38 = 2 : Public, Static, Literal, HasDefault
    Iced.Intel.EncoderInternal.VexOpCodeTable MAP0F3A = 3 : Public, Static, Literal, HasDefault
Struct Iced.Intel.EncoderInternal.XopOpCodeTable: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Iced.Intel.EncoderInternal.XopOpCodeTable MAP8 = 0 : Public, Static, Literal, HasDefault
    Iced.Intel.EncoderInternal.XopOpCodeTable MAP9 = 1 : Public, Static, Literal, HasDefault
    Iced.Intel.EncoderInternal.XopOpCodeTable MAP10 = 2 : Public, Static, Literal, HasDefault
Struct Iced.Intel.EncoderInternal.EvexOpCodeTable: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Iced.Intel.EncoderInternal.EvexOpCodeTable MAP0F = 1 : Public, Static, Literal, HasDefault
    Iced.Intel.EncoderInternal.EvexOpCodeTable MAP0F38 = 2 : Public, Static, Literal, HasDefault
    Iced.Intel.EncoderInternal.EvexOpCodeTable MAP0F3A = 3 : Public, Static, Literal, HasDefault
    Iced.Intel.EncoderInternal.EvexOpCodeTable MAP5 = 5 : Public, Static, Literal, HasDefault
    Iced.Intel.EncoderInternal.EvexOpCodeTable MAP6 = 6 : Public, Static, Literal, HasDefault
Struct Iced.Intel.EncoderInternal.MvexOpCodeTable: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Iced.Intel.EncoderInternal.MvexOpCodeTable MAP0F = 1 : Public, Static, Literal, HasDefault
    Iced.Intel.EncoderInternal.MvexOpCodeTable MAP0F38 = 2 : Public, Static, Literal, HasDefault
    Iced.Intel.EncoderInternal.MvexOpCodeTable MAP0F3A = 3 : Public, Static, Literal, HasDefault
Struct Iced.Intel.EncoderInternal.EncFlags1: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    UInt32 value__ : Public, SpecialName, RTSpecialName
    Iced.Intel.EncoderInternal.EncFlags1 None = 0 : Public, Static, Literal, HasDefault
    Iced.Intel.EncoderInternal.EncFlags1 Legacy_OpMask = 127 : Public, Static, Literal, HasDefault
    Iced.Intel.EncoderInternal.EncFlags1 Legacy_Op0Shift = 0 : Public, Static, Literal, HasDefault
    Iced.Intel.EncoderInternal.EncFlags1 Legacy_Op1Shift = 7 : Public, Static, Literal, HasDefault
    Iced.Intel.EncoderInternal.EncFlags1 Legacy_Op2Shift = 14 : Public, Static, Literal, HasDefault
    Iced.Intel.EncoderInternal.EncFlags1 Legacy_Op3Shift = 21 : Public, Static, Literal, HasDefault
    Iced.Intel.EncoderInternal.EncFlags1 VEX_OpMask = 63 : Public, Static, Literal, HasDefault
    Iced.Intel.EncoderInternal.EncFlags1 VEX_Op0Shift = 0 : Public, Static, Literal, HasDefault
    Iced.Intel.EncoderInternal.EncFlags1 VEX_Op1Shift = 6 : Public, Static, Literal, HasDefault
    Iced.Intel.EncoderInternal.EncFlags1 VEX_Op2Shift = 12 : Public, Static, Literal, HasDefault
    Iced.Intel.EncoderInternal.EncFlags1 VEX_Op3Shift = 18 : Public, Static, Literal, HasDefault
    Iced.Intel.EncoderInternal.EncFlags1 VEX_Op4Shift = 24 : Public, Static, Literal, HasDefault
    Iced.Intel.EncoderInternal.EncFlags1 XOP_OpMask = 31 : Public, Static, Literal, HasDefault
    Iced.Intel.EncoderInternal.EncFlags1 XOP_Op0Shift = 0 : Public, Static, Literal, HasDefault
    Iced.Intel.EncoderInternal.EncFlags1 XOP_Op1Shift = 5 : Public, Static, Literal, HasDefault
    Iced.Intel.EncoderInternal.EncFlags1 XOP_Op2Shift = 10 : Public, Static, Literal, HasDefault
    Iced.Intel.EncoderInternal.EncFlags1 XOP_Op3Shift = 15 : Public, Static, Literal, HasDefault
    Iced.Intel.EncoderInternal.EncFlags1 EVEX_OpMask = 31 : Public, Static, Literal, HasDefault
    Iced.Intel.EncoderInternal.EncFlags1 EVEX_Op0Shift = 0 : Public, Static, Literal, HasDefault
    Iced.Intel.EncoderInternal.EncFlags1 EVEX_Op1Shift = 5 : Public, Static, Literal, HasDefault
    Iced.Intel.EncoderInternal.EncFlags1 EVEX_Op2Shift = 10 : Public, Static, Literal, HasDefault
    Iced.Intel.EncoderInternal.EncFlags1 EVEX_Op3Shift = 15 : Public, Static, Literal, HasDefault
    Iced.Intel.EncoderInternal.EncFlags1 MVEX_OpMask = 15 : Public, Static, Literal, HasDefault
    Iced.Intel.EncoderInternal.EncFlags1 MVEX_Op0Shift = 0 : Public, Static, Literal, HasDefault
    Iced.Intel.EncoderInternal.EncFlags1 MVEX_Op1Shift = 4 : Public, Static, Literal, HasDefault
    Iced.Intel.EncoderInternal.EncFlags1 MVEX_Op2Shift = 8 : Public, Static, Literal, HasDefault
    Iced.Intel.EncoderInternal.EncFlags1 MVEX_Op3Shift = 12 : Public, Static, Literal, HasDefault
    Iced.Intel.EncoderInternal.EncFlags1 IgnoresRoundingControl = 1073741824 : Public, Static, Literal, HasDefault
    Iced.Intel.EncoderInternal.EncFlags1 AmdLockRegBit = 2147483648 : Public, Static, Literal, HasDefault
Struct Iced.Intel.EncoderInternal.EncFlags2: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    UInt32 value__ : Public, SpecialName, RTSpecialName
    Iced.Intel.EncoderInternal.EncFlags2 None = 0 : Public, Static, Literal, HasDefault
    Iced.Intel.EncoderInternal.EncFlags2 OpCodeShift = 0 : Public, Static, Literal, HasDefault
    Iced.Intel.EncoderInternal.EncFlags2 OpCodeIs2Bytes = 65536 : Public, Static, Literal, HasDefault
    Iced.Intel.EncoderInternal.EncFlags2 TableShift = 17 : Public, Static, Literal, HasDefault
    Iced.Intel.EncoderInternal.EncFlags2 TableMask = 7 : Public, Static, Literal, HasDefault
    Iced.Intel.EncoderInternal.EncFlags2 MandatoryPrefixShift = 20 : Public, Static, Literal, HasDefault
    Iced.Intel.EncoderInternal.EncFlags2 MandatoryPrefixMask = 3 : Public, Static, Literal, HasDefault
    Iced.Intel.EncoderInternal.EncFlags2 WBitShift = 22 : Public, Static, Literal, HasDefault
    Iced.Intel.EncoderInternal.EncFlags2 WBitMask = 3 : Public, Static, Literal, HasDefault
    Iced.Intel.EncoderInternal.EncFlags2 LBitShift = 24 : Public, Static, Literal, HasDefault
    Iced.Intel.EncoderInternal.EncFlags2 LBitMask = 7 : Public, Static, Literal, HasDefault
    Iced.Intel.EncoderInternal.EncFlags2 GroupIndexShift = 27 : Public, Static, Literal, HasDefault
    Iced.Intel.EncoderInternal.EncFlags2 GroupIndexMask = 7 : Public, Static, Literal, HasDefault
    Iced.Intel.EncoderInternal.EncFlags2 HasMandatoryPrefix = 1073741824 : Public, Static, Literal, HasDefault
    Iced.Intel.EncoderInternal.EncFlags2 HasGroupIndex = 2147483648 : Public, Static, Literal, HasDefault
Struct Iced.Intel.EncoderInternal.EncFlags3: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    UInt32 value__ : Public, SpecialName, RTSpecialName
    Iced.Intel.EncoderInternal.EncFlags3 None = 0 : Public, Static, Literal, HasDefault
    Iced.Intel.EncoderInternal.EncFlags3 EncodingShift = 0 : Public, Static, Literal, HasDefault
    Iced.Intel.EncoderInternal.EncFlags3 EncodingMask = 7 : Public, Static, Literal, HasDefault
    Iced.Intel.EncoderInternal.EncFlags3 OperandSizeShift = 3 : Public, Static, Literal, HasDefault
    Iced.Intel.EncoderInternal.EncFlags3 OperandSizeMask = 3 : Public, Static, Literal, HasDefault
    Iced.Intel.EncoderInternal.EncFlags3 AddressSizeShift = 5 : Public, Static, Literal, HasDefault
    Iced.Intel.EncoderInternal.EncFlags3 AddressSizeMask = 3 : Public, Static, Literal, HasDefault
    Iced.Intel.EncoderInternal.EncFlags3 TupleTypeShift = 7 : Public, Static, Literal, HasDefault
    Iced.Intel.EncoderInternal.EncFlags3 TupleTypeMask = 31 : Public, Static, Literal, HasDefault
    Iced.Intel.EncoderInternal.EncFlags3 DefaultOpSize64 = 4096 : Public, Static, Literal, HasDefault
    Iced.Intel.EncoderInternal.EncFlags3 HasRmGroupIndex = 8192 : Public, Static, Literal, HasDefault
    Iced.Intel.EncoderInternal.EncFlags3 IntelForceOpSize64 = 16384 : Public, Static, Literal, HasDefault
    Iced.Intel.EncoderInternal.EncFlags3 Fwait = 32768 : Public, Static, Literal, HasDefault
    Iced.Intel.EncoderInternal.EncFlags3 Bit16or32 = 65536 : Public, Static, Literal, HasDefault
    Iced.Intel.EncoderInternal.EncFlags3 Bit64 = 131072 : Public, Static, Literal, HasDefault
    Iced.Intel.EncoderInternal.EncFlags3 Lock = 262144 : Public, Static, Literal, HasDefault
    Iced.Intel.EncoderInternal.EncFlags3 Xacquire = 524288 : Public, Static, Literal, HasDefault
    Iced.Intel.EncoderInternal.EncFlags3 Xrelease = 1048576 : Public, Static, Literal, HasDefault
    Iced.Intel.EncoderInternal.EncFlags3 Rep = 2097152 : Public, Static, Literal, HasDefault
    Iced.Intel.EncoderInternal.EncFlags3 Repne = 4194304 : Public, Static, Literal, HasDefault
    Iced.Intel.EncoderInternal.EncFlags3 Bnd = 8388608 : Public, Static, Literal, HasDefault
    Iced.Intel.EncoderInternal.EncFlags3 HintTaken = 16777216 : Public, Static, Literal, HasDefault
    Iced.Intel.EncoderInternal.EncFlags3 Notrack = 33554432 : Public, Static, Literal, HasDefault
    Iced.Intel.EncoderInternal.EncFlags3 Broadcast = 67108864 : Public, Static, Literal, HasDefault
    Iced.Intel.EncoderInternal.EncFlags3 RoundingControl = 134217728 : Public, Static, Literal, HasDefault
    Iced.Intel.EncoderInternal.EncFlags3 SuppressAllExceptions = 268435456 : Public, Static, Literal, HasDefault
    Iced.Intel.EncoderInternal.EncFlags3 OpMaskRegister = 536870912 : Public, Static, Literal, HasDefault
    Iced.Intel.EncoderInternal.EncFlags3 ZeroingMasking = 1073741824 : Public, Static, Literal, HasDefault
    Iced.Intel.EncoderInternal.EncFlags3 RequireOpMaskRegister = 2147483648 : Public, Static, Literal, HasDefault
Struct Iced.Intel.EncoderInternal.WBit: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    UInt32 value__ : Public, SpecialName, RTSpecialName
    Iced.Intel.EncoderInternal.WBit W0 = 0 : Public, Static, Literal, HasDefault
    Iced.Intel.EncoderInternal.WBit W1 = 1 : Public, Static, Literal, HasDefault
    Iced.Intel.EncoderInternal.WBit WIG = 2 : Public, Static, Literal, HasDefault
    Iced.Intel.EncoderInternal.WBit WIG32 = 3 : Public, Static, Literal, HasDefault
Struct Iced.Intel.EncoderInternal.LBit: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    UInt32 value__ : Public, SpecialName, RTSpecialName
    Iced.Intel.EncoderInternal.LBit L0 = 0 : Public, Static, Literal, HasDefault
    Iced.Intel.EncoderInternal.LBit L1 = 1 : Public, Static, Literal, HasDefault
    Iced.Intel.EncoderInternal.LBit LIG = 2 : Public, Static, Literal, HasDefault
    Iced.Intel.EncoderInternal.LBit LZ = 3 : Public, Static, Literal, HasDefault
    Iced.Intel.EncoderInternal.LBit L128 = 4 : Public, Static, Literal, HasDefault
    Iced.Intel.EncoderInternal.LBit L256 = 5 : Public, Static, Literal, HasDefault
    Iced.Intel.EncoderInternal.LBit L512 = 6 : Public, Static, Literal, HasDefault
Class Iced.Intel.EncoderInternal.OpCodeHandlers: AutoLayout, AnsiClass, Class, Abstract, Sealed
  Fields:
    Iced.Intel.EncoderInternal.OpCodeHandler[] Handlers : Public, Static, InitOnly
Class Iced.Intel.EncoderInternal.Op: AutoLayout, AnsiClass, Class, Abstract, BeforeFieldInit
  Methods:
    Encode(Encoder, Instruction&(In) InAttribute, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetImmediateOpKind(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetNearBranchOpKind(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetFarBranchOpKind(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class Iced.Intel.EncoderInternal.OpModRM_rm_mem_only: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.EncoderInternal.Op
    Void .ctor(Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Encode(Encoder, Instruction&(In) InAttribute, Int32): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.EncoderInternal.OpModRM_rm: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.EncoderInternal.Op
    Void .ctor(Iced.Intel.Register, Iced.Intel.Register): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Encode(Encoder, Instruction&(In) InAttribute, Int32): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.EncoderInternal.OpRegEmbed8: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.EncoderInternal.Op
    Void .ctor(Iced.Intel.Register, Iced.Intel.Register): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Encode(Encoder, Instruction&(In) InAttribute, Int32): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.EncoderInternal.OpModRM_rm_reg_only: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.EncoderInternal.Op
    Void .ctor(Iced.Intel.Register, Iced.Intel.Register): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Encode(Encoder, Instruction&(In) InAttribute, Int32): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.EncoderInternal.OpModRM_reg: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.EncoderInternal.Op
    Void .ctor(Iced.Intel.Register, Iced.Intel.Register): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Encode(Encoder, Instruction&(In) InAttribute, Int32): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.EncoderInternal.OpModRM_reg_mem: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.EncoderInternal.Op
    Void .ctor(Iced.Intel.Register, Iced.Intel.Register): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Encode(Encoder, Instruction&(In) InAttribute, Int32): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.EncoderInternal.OpModRM_regF0: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.EncoderInternal.Op
    Void .ctor(Iced.Intel.Register, Iced.Intel.Register): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Encode(Encoder, Instruction&(In) InAttribute, Int32): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.EncoderInternal.OpReg: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.EncoderInternal.Op
    Void .ctor(Iced.Intel.Register): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Encode(Encoder, Instruction&(In) InAttribute, Int32): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.EncoderInternal.OpRegSTi: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.EncoderInternal.Op
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Encode(Encoder, Instruction&(In) InAttribute, Int32): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.EncoderInternal.OprDI: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.EncoderInternal.Op
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Encode(Encoder, Instruction&(In) InAttribute, Int32): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.EncoderInternal.OpIb: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.EncoderInternal.Op
    Void .ctor(Iced.Intel.OpKind): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Encode(Encoder, Instruction&(In) InAttribute, Int32): PrivateScope, Public, Virtual, HideBySig
    GetImmediateOpKind(): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.EncoderInternal.OpIw: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.EncoderInternal.Op
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Encode(Encoder, Instruction&(In) InAttribute, Int32): PrivateScope, Public, Virtual, HideBySig
    GetImmediateOpKind(): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.EncoderInternal.OpId: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.EncoderInternal.Op
    Void .ctor(Iced.Intel.OpKind): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Encode(Encoder, Instruction&(In) InAttribute, Int32): PrivateScope, Public, Virtual, HideBySig
    GetImmediateOpKind(): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.EncoderInternal.OpIq: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.EncoderInternal.Op
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Encode(Encoder, Instruction&(In) InAttribute, Int32): PrivateScope, Public, Virtual, HideBySig
    GetImmediateOpKind(): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.EncoderInternal.OpI4: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.EncoderInternal.Op
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Encode(Encoder, Instruction&(In) InAttribute, Int32): PrivateScope, Public, Virtual, HideBySig
    GetImmediateOpKind(): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.EncoderInternal.OpX: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.EncoderInternal.Op
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    GetXRegSize(OpKind): PrivateScope, Assembly, Static, HideBySig
    GetYRegSize(OpKind): PrivateScope, Assembly, Static, HideBySig
    Encode(Encoder, Instruction&(In) InAttribute, Int32): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.EncoderInternal.OpY: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.EncoderInternal.Op
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Encode(Encoder, Instruction&(In) InAttribute, Int32): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.EncoderInternal.OpMRBX: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.EncoderInternal.Op
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Encode(Encoder, Instruction&(In) InAttribute, Int32): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.EncoderInternal.OpJ: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.EncoderInternal.Op
    Void .ctor(Iced.Intel.OpKind, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Encode(Encoder, Instruction&(In) InAttribute, Int32): PrivateScope, Public, Virtual, HideBySig
    GetNearBranchOpKind(): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.EncoderInternal.OpJx: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.EncoderInternal.Op
    Void .ctor(Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Encode(Encoder, Instruction&(In) InAttribute, Int32): PrivateScope, Public, Virtual, HideBySig
    GetNearBranchOpKind(): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.EncoderInternal.OpJdisp: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.EncoderInternal.Op
    Void .ctor(Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Encode(Encoder, Instruction&(In) InAttribute, Int32): PrivateScope, Public, Virtual, HideBySig
    GetNearBranchOpKind(): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.EncoderInternal.OpA: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.EncoderInternal.Op
    Void .ctor(Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Encode(Encoder, Instruction&(In) InAttribute, Int32): PrivateScope, Public, Virtual, HideBySig
    GetFarBranchOpKind(): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.EncoderInternal.OpO: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.EncoderInternal.Op
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Encode(Encoder, Instruction&(In) InAttribute, Int32): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.EncoderInternal.OpImm: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.EncoderInternal.Op
    Void .ctor(Byte): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Encode(Encoder, Instruction&(In) InAttribute, Int32): PrivateScope, Public, Virtual, HideBySig
    GetImmediateOpKind(): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.EncoderInternal.OpHx: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.EncoderInternal.Op
    Void .ctor(Iced.Intel.Register, Iced.Intel.Register): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Encode(Encoder, Instruction&(In) InAttribute, Int32): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.EncoderInternal.OpVsib: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.EncoderInternal.Op
    Void .ctor(Iced.Intel.Register, Iced.Intel.Register): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Encode(Encoder, Instruction&(In) InAttribute, Int32): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.EncoderInternal.OpIsX: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.EncoderInternal.Op
    Void .ctor(Iced.Intel.Register, Iced.Intel.Register): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Encode(Encoder, Instruction&(In) InAttribute, Int32): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.EncoderInternal.OpHandlerData: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Fields:
    Iced.Intel.EncoderInternal.Op[] LegacyOps : Public, Static, InitOnly
    Iced.Intel.EncoderInternal.Op[] VexOps : Public, Static, InitOnly
    Iced.Intel.EncoderInternal.Op[] XopOps : Public, Static, InitOnly
    Iced.Intel.EncoderInternal.Op[] EvexOps : Public, Static, InitOnly
Struct Iced.Intel.DecoderInternal.EvexOpCodeHandlerKind: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Byte value__ : Public, SpecialName, RTSpecialName
    Iced.Intel.DecoderInternal.EvexOpCodeHandlerKind Invalid = 0 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.EvexOpCodeHandlerKind Invalid2 = 1 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.EvexOpCodeHandlerKind Dup = 2 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.EvexOpCodeHandlerKind HandlerReference = 3 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.EvexOpCodeHandlerKind ArrayReference = 4 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.EvexOpCodeHandlerKind RM = 5 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.EvexOpCodeHandlerKind Group = 6 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.EvexOpCodeHandlerKind W = 7 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.EvexOpCodeHandlerKind MandatoryPrefix2 = 8 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.EvexOpCodeHandlerKind VectorLength = 9 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.EvexOpCodeHandlerKind VectorLength_er = 10 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.EvexOpCodeHandlerKind Ed_V_Ib = 11 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.EvexOpCodeHandlerKind Ev_VX = 12 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.EvexOpCodeHandlerKind Ev_VX_Ib = 13 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.EvexOpCodeHandlerKind Gv_W_er = 14 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.EvexOpCodeHandlerKind GvM_VX_Ib = 15 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.EvexOpCodeHandlerKind HkWIb_3 = 16 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.EvexOpCodeHandlerKind HkWIb_3b = 17 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.EvexOpCodeHandlerKind HWIb = 18 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.EvexOpCodeHandlerKind KkHW_3 = 19 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.EvexOpCodeHandlerKind KkHW_3b = 20 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.EvexOpCodeHandlerKind KkHWIb_sae_3 = 21 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.EvexOpCodeHandlerKind KkHWIb_sae_3b = 22 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.EvexOpCodeHandlerKind KkHWIb_3 = 23 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.EvexOpCodeHandlerKind KkHWIb_3b = 24 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.EvexOpCodeHandlerKind KkWIb_3 = 25 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.EvexOpCodeHandlerKind KkWIb_3b = 26 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.EvexOpCodeHandlerKind KP1HW = 27 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.EvexOpCodeHandlerKind KR = 28 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.EvexOpCodeHandlerKind MV = 29 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.EvexOpCodeHandlerKind V_H_Ev_er = 30 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.EvexOpCodeHandlerKind V_H_Ev_Ib = 31 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.EvexOpCodeHandlerKind VHM = 32 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.EvexOpCodeHandlerKind VHW_3 = 33 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.EvexOpCodeHandlerKind VHW_4 = 34 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.EvexOpCodeHandlerKind VHWIb = 35 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.EvexOpCodeHandlerKind VK = 36 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.EvexOpCodeHandlerKind Vk_VSIB = 37 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.EvexOpCodeHandlerKind VkEv_REXW_2 = 38 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.EvexOpCodeHandlerKind VkEv_REXW_3 = 39 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.EvexOpCodeHandlerKind VkHM = 40 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.EvexOpCodeHandlerKind VkHW_3 = 41 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.EvexOpCodeHandlerKind VkHW_3b = 42 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.EvexOpCodeHandlerKind VkHW_5 = 43 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.EvexOpCodeHandlerKind VkHW_er_4 = 44 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.EvexOpCodeHandlerKind VkHW_er_4b = 45 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.EvexOpCodeHandlerKind VkHWIb_3 = 46 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.EvexOpCodeHandlerKind VkHWIb_3b = 47 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.EvexOpCodeHandlerKind VkHWIb_5 = 48 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.EvexOpCodeHandlerKind VkHWIb_er_4 = 49 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.EvexOpCodeHandlerKind VkHWIb_er_4b = 50 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.EvexOpCodeHandlerKind VkM = 51 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.EvexOpCodeHandlerKind VkW_3 = 52 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.EvexOpCodeHandlerKind VkW_3b = 53 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.EvexOpCodeHandlerKind VkW_4 = 54 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.EvexOpCodeHandlerKind VkW_4b = 55 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.EvexOpCodeHandlerKind VkW_er_4 = 56 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.EvexOpCodeHandlerKind VkW_er_5 = 57 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.EvexOpCodeHandlerKind VkW_er_6 = 58 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.EvexOpCodeHandlerKind VkWIb_3 = 59 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.EvexOpCodeHandlerKind VkWIb_3b = 60 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.EvexOpCodeHandlerKind VkWIb_er = 61 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.EvexOpCodeHandlerKind VM = 62 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.EvexOpCodeHandlerKind VSIB_k1 = 63 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.EvexOpCodeHandlerKind VSIB_k1_VX = 64 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.EvexOpCodeHandlerKind VW = 65 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.EvexOpCodeHandlerKind VW_er = 66 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.EvexOpCodeHandlerKind VX_Ev = 67 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.EvexOpCodeHandlerKind WkHV = 68 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.EvexOpCodeHandlerKind WkV_3 = 69 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.EvexOpCodeHandlerKind WkV_4a = 70 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.EvexOpCodeHandlerKind WkV_4b = 71 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.EvexOpCodeHandlerKind WkVIb = 72 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.EvexOpCodeHandlerKind WkVIb_er = 73 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.EvexOpCodeHandlerKind WV = 74 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.EvexOpCodeHandlerKind VkHW_er_ur_3 = 75 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.EvexOpCodeHandlerKind VkHW_er_ur_3b = 76 : Public, Static, Literal, HasDefault
Class Iced.Intel.DecoderInternal.EvexOpCodeHandlerReader: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandlerReader
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    ReadHandlers(TableDeserializer&, OpCodeHandler[], Int32): PrivateScope, Public, Virtual, HideBySig
Struct Iced.Intel.DecoderInternal.HandlerFlags: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    UInt32 value__ : Public, SpecialName, RTSpecialName
    Iced.Intel.DecoderInternal.HandlerFlags None = 0 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.HandlerFlags Xacquire = 1 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.HandlerFlags Xrelease = 2 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.HandlerFlags XacquireXreleaseNoLock = 4 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.HandlerFlags Lock = 8 : Public, Static, Literal, HasDefault
Struct Iced.Intel.DecoderInternal.LegacyHandlerFlags: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    UInt32 value__ : Public, SpecialName, RTSpecialName
    Iced.Intel.DecoderInternal.LegacyHandlerFlags HandlerReg = 1 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.LegacyHandlerFlags HandlerMem = 2 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.LegacyHandlerFlags Handler66Reg = 4 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.LegacyHandlerFlags Handler66Mem = 8 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.LegacyHandlerFlags HandlerF3Reg = 16 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.LegacyHandlerFlags HandlerF3Mem = 32 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.LegacyHandlerFlags HandlerF2Reg = 64 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.LegacyHandlerFlags HandlerF2Mem = 128 : Public, Static, Literal, HasDefault
Struct Iced.Intel.DecoderInternal.LegacyOpCodeHandlerKind: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Byte value__ : Public, SpecialName, RTSpecialName
    Iced.Intel.DecoderInternal.LegacyOpCodeHandlerKind Bitness = 0 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.LegacyOpCodeHandlerKind Bitness_DontReadModRM = 1 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.LegacyOpCodeHandlerKind Invalid = 2 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.LegacyOpCodeHandlerKind Invalid_NoModRM = 3 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.LegacyOpCodeHandlerKind Invalid2 = 4 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.LegacyOpCodeHandlerKind Dup = 5 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.LegacyOpCodeHandlerKind Null = 6 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.LegacyOpCodeHandlerKind HandlerReference = 7 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.LegacyOpCodeHandlerKind ArrayReference = 8 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.LegacyOpCodeHandlerKind RM = 9 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.LegacyOpCodeHandlerKind Options3 = 10 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.LegacyOpCodeHandlerKind Options5 = 11 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.LegacyOpCodeHandlerKind Options_DontReadModRM = 12 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.LegacyOpCodeHandlerKind AnotherTable = 13 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.LegacyOpCodeHandlerKind Group = 14 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.LegacyOpCodeHandlerKind Group8x64 = 15 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.LegacyOpCodeHandlerKind Group8x8 = 16 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.LegacyOpCodeHandlerKind MandatoryPrefix = 17 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.LegacyOpCodeHandlerKind MandatoryPrefix4 = 18 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.LegacyOpCodeHandlerKind Ev_REXW_1a = 19 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.LegacyOpCodeHandlerKind MandatoryPrefix_NoModRM = 20 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.LegacyOpCodeHandlerKind MandatoryPrefix3 = 21 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.LegacyOpCodeHandlerKind D3NOW = 22 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.LegacyOpCodeHandlerKind EVEX = 23 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.LegacyOpCodeHandlerKind VEX2 = 24 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.LegacyOpCodeHandlerKind VEX3 = 25 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.LegacyOpCodeHandlerKind XOP = 26 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.LegacyOpCodeHandlerKind AL_DX = 27 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.LegacyOpCodeHandlerKind Ap = 28 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.LegacyOpCodeHandlerKind B_BM = 29 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.LegacyOpCodeHandlerKind B_Ev = 30 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.LegacyOpCodeHandlerKind B_MIB = 31 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.LegacyOpCodeHandlerKind BM_B = 32 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.LegacyOpCodeHandlerKind BranchIw = 33 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.LegacyOpCodeHandlerKind BranchSimple = 34 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.LegacyOpCodeHandlerKind C_R_3a = 35 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.LegacyOpCodeHandlerKind C_R_3b = 36 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.LegacyOpCodeHandlerKind DX_AL = 37 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.LegacyOpCodeHandlerKind DX_eAX = 38 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.LegacyOpCodeHandlerKind eAX_DX = 39 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.LegacyOpCodeHandlerKind Eb_1 = 40 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.LegacyOpCodeHandlerKind Eb_2 = 41 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.LegacyOpCodeHandlerKind Eb_CL = 42 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.LegacyOpCodeHandlerKind Eb_Gb_1 = 43 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.LegacyOpCodeHandlerKind Eb_Gb_2 = 44 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.LegacyOpCodeHandlerKind Eb_Ib_1 = 45 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.LegacyOpCodeHandlerKind Eb_Ib_2 = 46 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.LegacyOpCodeHandlerKind Eb1 = 47 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.LegacyOpCodeHandlerKind Ed_V_Ib = 48 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.LegacyOpCodeHandlerKind Ep = 49 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.LegacyOpCodeHandlerKind Ev_3a = 50 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.LegacyOpCodeHandlerKind Ev_3b = 51 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.LegacyOpCodeHandlerKind Ev_4 = 52 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.LegacyOpCodeHandlerKind Ev_CL = 53 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.LegacyOpCodeHandlerKind Ev_Gv_32_64 = 54 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.LegacyOpCodeHandlerKind Ev_Gv_3a = 55 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.LegacyOpCodeHandlerKind Ev_Gv_3b = 56 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.LegacyOpCodeHandlerKind Ev_Gv_4 = 57 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.LegacyOpCodeHandlerKind Ev_Gv_CL = 58 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.LegacyOpCodeHandlerKind Ev_Gv_Ib = 59 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.LegacyOpCodeHandlerKind Ev_Gv_REX = 60 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.LegacyOpCodeHandlerKind Ev_Ib_3 = 61 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.LegacyOpCodeHandlerKind Ev_Ib_4 = 62 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.LegacyOpCodeHandlerKind Ev_Ib2_3 = 63 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.LegacyOpCodeHandlerKind Ev_Ib2_4 = 64 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.LegacyOpCodeHandlerKind Ev_Iz_3 = 65 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.LegacyOpCodeHandlerKind Ev_Iz_4 = 66 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.LegacyOpCodeHandlerKind Ev_P = 67 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.LegacyOpCodeHandlerKind Ev_REXW = 68 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.LegacyOpCodeHandlerKind Ev_Sw = 69 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.LegacyOpCodeHandlerKind Ev_VX = 70 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.LegacyOpCodeHandlerKind Ev1 = 71 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.LegacyOpCodeHandlerKind Evj = 72 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.LegacyOpCodeHandlerKind Evw = 73 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.LegacyOpCodeHandlerKind Ew = 74 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.LegacyOpCodeHandlerKind Gb_Eb = 75 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.LegacyOpCodeHandlerKind Gdq_Ev = 76 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.LegacyOpCodeHandlerKind Gv_Eb = 77 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.LegacyOpCodeHandlerKind Gv_Eb_REX = 78 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.LegacyOpCodeHandlerKind Gv_Ev_32_64 = 79 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.LegacyOpCodeHandlerKind Gv_Ev_3a = 80 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.LegacyOpCodeHandlerKind Gv_Ev_3b = 81 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.LegacyOpCodeHandlerKind Gv_Ev_Ib = 82 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.LegacyOpCodeHandlerKind Gv_Ev_Ib_REX = 83 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.LegacyOpCodeHandlerKind Gv_Ev_Iz = 84 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.LegacyOpCodeHandlerKind Gv_Ev_REX = 85 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.LegacyOpCodeHandlerKind Gv_Ev2 = 86 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.LegacyOpCodeHandlerKind Gv_Ev3 = 87 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.LegacyOpCodeHandlerKind Gv_Ew = 88 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.LegacyOpCodeHandlerKind Gv_M = 89 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.LegacyOpCodeHandlerKind Gv_M_as = 90 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.LegacyOpCodeHandlerKind Gv_Ma = 91 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.LegacyOpCodeHandlerKind Gv_Mp_2 = 92 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.LegacyOpCodeHandlerKind Gv_Mp_3 = 93 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.LegacyOpCodeHandlerKind Gv_Mv = 94 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.LegacyOpCodeHandlerKind Gv_N = 95 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.LegacyOpCodeHandlerKind Gv_N_Ib_REX = 96 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.LegacyOpCodeHandlerKind Gv_RX = 97 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.LegacyOpCodeHandlerKind Gv_W = 98 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.LegacyOpCodeHandlerKind GvM_VX_Ib = 99 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.LegacyOpCodeHandlerKind Ib = 100 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.LegacyOpCodeHandlerKind Ib3 = 101 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.LegacyOpCodeHandlerKind IbReg = 102 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.LegacyOpCodeHandlerKind IbReg2 = 103 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.LegacyOpCodeHandlerKind Iw_Ib = 104 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.LegacyOpCodeHandlerKind Jb = 105 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.LegacyOpCodeHandlerKind Jb2 = 106 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.LegacyOpCodeHandlerKind Jdisp = 107 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.LegacyOpCodeHandlerKind Jx = 108 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.LegacyOpCodeHandlerKind Jz = 109 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.LegacyOpCodeHandlerKind M_1 = 110 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.LegacyOpCodeHandlerKind M_2 = 111 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.LegacyOpCodeHandlerKind M_REXW_2 = 112 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.LegacyOpCodeHandlerKind M_REXW_4 = 113 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.LegacyOpCodeHandlerKind MemBx = 114 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.LegacyOpCodeHandlerKind Mf_1 = 115 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.LegacyOpCodeHandlerKind Mf_2a = 116 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.LegacyOpCodeHandlerKind Mf_2b = 117 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.LegacyOpCodeHandlerKind MIB_B = 118 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.LegacyOpCodeHandlerKind MP = 119 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.LegacyOpCodeHandlerKind Ms = 120 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.LegacyOpCodeHandlerKind MV = 121 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.LegacyOpCodeHandlerKind Mv_Gv = 122 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.LegacyOpCodeHandlerKind Mv_Gv_REXW = 123 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.LegacyOpCodeHandlerKind NIb = 124 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.LegacyOpCodeHandlerKind Ob_Reg = 125 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.LegacyOpCodeHandlerKind Ov_Reg = 126 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.LegacyOpCodeHandlerKind P_Ev = 127 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.LegacyOpCodeHandlerKind P_Ev_Ib = 128 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.LegacyOpCodeHandlerKind P_Q = 129 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.LegacyOpCodeHandlerKind P_Q_Ib = 130 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.LegacyOpCodeHandlerKind P_R = 131 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.LegacyOpCodeHandlerKind P_W = 132 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.LegacyOpCodeHandlerKind PushEv = 133 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.LegacyOpCodeHandlerKind PushIb2 = 134 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.LegacyOpCodeHandlerKind PushIz = 135 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.LegacyOpCodeHandlerKind PushOpSizeReg_4a = 136 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.LegacyOpCodeHandlerKind PushOpSizeReg_4b = 137 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.LegacyOpCodeHandlerKind PushSimple2 = 138 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.LegacyOpCodeHandlerKind PushSimpleReg = 139 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.LegacyOpCodeHandlerKind Q_P = 140 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.LegacyOpCodeHandlerKind R_C_3a = 141 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.LegacyOpCodeHandlerKind R_C_3b = 142 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.LegacyOpCodeHandlerKind rDI_P_N = 143 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.LegacyOpCodeHandlerKind rDI_VX_RX = 144 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.LegacyOpCodeHandlerKind Reg = 145 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.LegacyOpCodeHandlerKind Reg_Ib2 = 146 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.LegacyOpCodeHandlerKind Reg_Iz = 147 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.LegacyOpCodeHandlerKind Reg_Ob = 148 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.LegacyOpCodeHandlerKind Reg_Ov = 149 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.LegacyOpCodeHandlerKind Reg_Xb = 150 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.LegacyOpCodeHandlerKind Reg_Xv = 151 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.LegacyOpCodeHandlerKind Reg_Xv2 = 152 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.LegacyOpCodeHandlerKind Reg_Yb = 153 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.LegacyOpCodeHandlerKind Reg_Yv = 154 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.LegacyOpCodeHandlerKind RegIb = 155 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.LegacyOpCodeHandlerKind RegIb3 = 156 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.LegacyOpCodeHandlerKind RegIz2 = 157 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.LegacyOpCodeHandlerKind Reservednop = 158 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.LegacyOpCodeHandlerKind RIb = 159 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.LegacyOpCodeHandlerKind RIbIb = 160 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.LegacyOpCodeHandlerKind Rv = 161 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.LegacyOpCodeHandlerKind Rv_32_64 = 162 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.LegacyOpCodeHandlerKind RvMw_Gw = 163 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.LegacyOpCodeHandlerKind Simple = 164 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.LegacyOpCodeHandlerKind Simple_ModRM = 165 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.LegacyOpCodeHandlerKind Simple2_3a = 166 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.LegacyOpCodeHandlerKind Simple2_3b = 167 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.LegacyOpCodeHandlerKind Simple2Iw = 168 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.LegacyOpCodeHandlerKind Simple3 = 169 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.LegacyOpCodeHandlerKind Simple4 = 170 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.LegacyOpCodeHandlerKind Simple5 = 171 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.LegacyOpCodeHandlerKind Simple5_ModRM_as = 172 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.LegacyOpCodeHandlerKind SimpleReg = 173 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.LegacyOpCodeHandlerKind ST_STi = 174 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.LegacyOpCodeHandlerKind STi = 175 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.LegacyOpCodeHandlerKind STi_ST = 176 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.LegacyOpCodeHandlerKind Sw_Ev = 177 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.LegacyOpCodeHandlerKind V_Ev = 178 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.LegacyOpCodeHandlerKind VM = 179 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.LegacyOpCodeHandlerKind VN = 180 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.LegacyOpCodeHandlerKind VQ = 181 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.LegacyOpCodeHandlerKind VRIbIb = 182 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.LegacyOpCodeHandlerKind VW_2 = 183 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.LegacyOpCodeHandlerKind VW_3 = 184 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.LegacyOpCodeHandlerKind VWIb_2 = 185 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.LegacyOpCodeHandlerKind VWIb_3 = 186 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.LegacyOpCodeHandlerKind VX_E_Ib = 187 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.LegacyOpCodeHandlerKind VX_Ev = 188 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.LegacyOpCodeHandlerKind Wbinvd = 189 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.LegacyOpCodeHandlerKind WV = 190 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.LegacyOpCodeHandlerKind Xb_Yb = 191 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.LegacyOpCodeHandlerKind Xchg_Reg_rAX = 192 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.LegacyOpCodeHandlerKind Xv_Yv = 193 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.LegacyOpCodeHandlerKind Yb_Reg = 194 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.LegacyOpCodeHandlerKind Yb_Xb = 195 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.LegacyOpCodeHandlerKind Yv_Reg = 196 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.LegacyOpCodeHandlerKind Yv_Reg2 = 197 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.LegacyOpCodeHandlerKind Yv_Xv = 198 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.LegacyOpCodeHandlerKind Simple4b = 199 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.LegacyOpCodeHandlerKind Options1632_1 = 200 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.LegacyOpCodeHandlerKind Options1632_2 = 201 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.LegacyOpCodeHandlerKind M_Sw = 202 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.LegacyOpCodeHandlerKind Sw_M = 203 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.LegacyOpCodeHandlerKind Rq = 204 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.LegacyOpCodeHandlerKind Gd_Rd = 205 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.LegacyOpCodeHandlerKind PrefixEsCsSsDs = 206 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.LegacyOpCodeHandlerKind PrefixFsGs = 207 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.LegacyOpCodeHandlerKind Prefix66 = 208 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.LegacyOpCodeHandlerKind Prefix67 = 209 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.LegacyOpCodeHandlerKind PrefixF0 = 210 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.LegacyOpCodeHandlerKind PrefixF2 = 211 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.LegacyOpCodeHandlerKind PrefixF3 = 212 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.LegacyOpCodeHandlerKind PrefixREX = 213 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.LegacyOpCodeHandlerKind Simple5_a32 = 214 : Public, Static, Literal, HasDefault
Class Iced.Intel.DecoderInternal.LegacyOpCodeHandlerReader: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandlerReader
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    ReadHandlers(TableDeserializer&, OpCodeHandler[], Int32): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler: AutoLayout, AnsiClass, Class, Abstract, BeforeFieldInit
  Fields:
    Boolean HasModRM : Public, InitOnly
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class Iced.Intel.DecoderInternal.OpCodeHandlerModRM: AutoLayout, AnsiClass, Class, Abstract, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandler
Class Iced.Intel.DecoderInternal.OpCodeHandler_Invalid: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandlerModRM
  Fields:
    Iced.Intel.DecoderInternal.OpCodeHandler_Invalid Instance : Public, Static, InitOnly
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_Invalid_NoModRM: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandler
  Fields:
    Iced.Intel.DecoderInternal.OpCodeHandler_Invalid_NoModRM Instance : Public, Static, InitOnly
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_Simple: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandler
    Void .ctor(Iced.Intel.Code): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_Simple_ModRM: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandlerModRM
    Void .ctor(Iced.Intel.Code): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_Group8x8: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandlerModRM
    Void .ctor(Iced.Intel.DecoderInternal.OpCodeHandler[], Iced.Intel.DecoderInternal.OpCodeHandler[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_Group8x64: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandlerModRM
    Void .ctor(Iced.Intel.DecoderInternal.OpCodeHandler[], Iced.Intel.DecoderInternal.OpCodeHandler[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_Group: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandlerModRM
    Void .ctor(Iced.Intel.DecoderInternal.OpCodeHandler[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_AnotherTable: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandler
    Void .ctor(Iced.Intel.DecoderInternal.OpCodeHandler[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_MandatoryPrefix2: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandlerModRM
    Void .ctor(Iced.Intel.DecoderInternal.OpCodeHandler): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Iced.Intel.DecoderInternal.OpCodeHandler, Iced.Intel.DecoderInternal.OpCodeHandler, Iced.Intel.DecoderInternal.OpCodeHandler, Iced.Intel.DecoderInternal.OpCodeHandler): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_MandatoryPrefix2_NoModRM: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandler
    Void .ctor(Iced.Intel.DecoderInternal.OpCodeHandler, Iced.Intel.DecoderInternal.OpCodeHandler, Iced.Intel.DecoderInternal.OpCodeHandler, Iced.Intel.DecoderInternal.OpCodeHandler): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_W: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandlerModRM
    Void .ctor(Iced.Intel.DecoderInternal.OpCodeHandler, Iced.Intel.DecoderInternal.OpCodeHandler): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_Bitness: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandler
    Void .ctor(Iced.Intel.DecoderInternal.OpCodeHandler, Iced.Intel.DecoderInternal.OpCodeHandler): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_Bitness_DontReadModRM: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandlerModRM
    Void .ctor(Iced.Intel.DecoderInternal.OpCodeHandler, Iced.Intel.DecoderInternal.OpCodeHandler): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_RM: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandlerModRM
    Void .ctor(Iced.Intel.DecoderInternal.OpCodeHandler, Iced.Intel.DecoderInternal.OpCodeHandler): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Struct Iced.Intel.DecoderInternal.HandlerOptions: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Iced.Intel.DecoderInternal.OpCodeHandler, Iced.Intel.DecoderOptions): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Iced.Intel.DecoderInternal.OpCodeHandler handler : Public, InitOnly
    Iced.Intel.DecoderOptions options : Public, InitOnly
Class Iced.Intel.DecoderInternal.OpCodeHandler_Options1632: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandler
    Void .ctor(Iced.Intel.DecoderInternal.OpCodeHandler, Iced.Intel.DecoderInternal.OpCodeHandler, Iced.Intel.DecoderOptions): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Iced.Intel.DecoderInternal.OpCodeHandler, Iced.Intel.DecoderInternal.OpCodeHandler, Iced.Intel.DecoderOptions, Iced.Intel.DecoderInternal.OpCodeHandler, Iced.Intel.DecoderOptions): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_Options: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandler
    Void .ctor(Iced.Intel.DecoderInternal.OpCodeHandler, Iced.Intel.DecoderInternal.OpCodeHandler, Iced.Intel.DecoderOptions): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Iced.Intel.DecoderInternal.OpCodeHandler, Iced.Intel.DecoderInternal.OpCodeHandler, Iced.Intel.DecoderOptions, Iced.Intel.DecoderInternal.OpCodeHandler, Iced.Intel.DecoderOptions): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_Options_DontReadModRM: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandlerModRM
    Void .ctor(Iced.Intel.DecoderInternal.OpCodeHandler, Iced.Intel.DecoderInternal.OpCodeHandler, Iced.Intel.DecoderOptions): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandlersTables_EVEX: AutoLayout, AnsiClass, Class, Abstract, Sealed
  Fields:
    Iced.Intel.DecoderInternal.OpCodeHandler[] Handlers_0F : Assembly, Static, InitOnly
    Iced.Intel.DecoderInternal.OpCodeHandler[] Handlers_0F38 : Assembly, Static, InitOnly
    Iced.Intel.DecoderInternal.OpCodeHandler[] Handlers_0F3A : Assembly, Static, InitOnly
    Iced.Intel.DecoderInternal.OpCodeHandler[] Handlers_MAP5 : Assembly, Static, InitOnly
    Iced.Intel.DecoderInternal.OpCodeHandler[] Handlers_MAP6 : Assembly, Static, InitOnly
Class Iced.Intel.DecoderInternal.OpCodeHandlersTables_Legacy: AutoLayout, AnsiClass, Class, Abstract, Sealed
  Fields:
    Iced.Intel.DecoderInternal.OpCodeHandler[] Handlers_MAP0 : Assembly, Static, InitOnly
Class Iced.Intel.DecoderInternal.OpCodeHandlersTables_VEX: AutoLayout, AnsiClass, Class, Abstract, Sealed
  Fields:
    Iced.Intel.DecoderInternal.OpCodeHandler[] Handlers_0F : Assembly, Static, InitOnly
    Iced.Intel.DecoderInternal.OpCodeHandler[] Handlers_0F38 : Assembly, Static, InitOnly
    Iced.Intel.DecoderInternal.OpCodeHandler[] Handlers_0F3A : Assembly, Static, InitOnly
Class Iced.Intel.DecoderInternal.OpCodeHandlersTables_XOP: AutoLayout, AnsiClass, Class, Abstract, Sealed
  Fields:
    Iced.Intel.DecoderInternal.OpCodeHandler[] Handlers_MAP8 : Assembly, Static, InitOnly
    Iced.Intel.DecoderInternal.OpCodeHandler[] Handlers_MAP9 : Assembly, Static, InitOnly
    Iced.Intel.DecoderInternal.OpCodeHandler[] Handlers_MAP10 : Assembly, Static, InitOnly
Class Iced.Intel.DecoderInternal.OpCodeHandler_D3NOW: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandlerModRM
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Iced.Intel.Code[] CodeValues : Assembly, Static, InitOnly
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_VectorLength_EVEX: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandlerModRM
    Void .ctor(Iced.Intel.DecoderInternal.OpCodeHandler, Iced.Intel.DecoderInternal.OpCodeHandler, Iced.Intel.DecoderInternal.OpCodeHandler): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_VectorLength_EVEX_er: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandlerModRM
    Void .ctor(Iced.Intel.DecoderInternal.OpCodeHandler, Iced.Intel.DecoderInternal.OpCodeHandler, Iced.Intel.DecoderInternal.OpCodeHandler): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_EVEX_V_H_Ev_er: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandlerModRM
    Void .ctor(Iced.Intel.Register, Iced.Intel.Code, Iced.Intel.Code, Iced.Intel.TupleType, Iced.Intel.TupleType): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_EVEX_V_H_Ev_Ib: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandlerModRM
    Void .ctor(Iced.Intel.Register, Iced.Intel.Code, Iced.Intel.Code, Iced.Intel.TupleType, Iced.Intel.TupleType): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_EVEX_Ed_V_Ib: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandlerModRM
    Void .ctor(Iced.Intel.Register, Iced.Intel.Code, Iced.Intel.Code, Iced.Intel.TupleType, Iced.Intel.TupleType): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_EVEX_VkHW_er: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandlerModRM
    Void .ctor(Iced.Intel.Register, Iced.Intel.Code, Iced.Intel.TupleType, Boolean, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_EVEX_VkHW_er_ur: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandlerModRM
    Void .ctor(Iced.Intel.Register, Iced.Intel.Code, Iced.Intel.TupleType, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_EVEX_VkW_er: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandlerModRM
    Void .ctor(Iced.Intel.Register, Iced.Intel.Code, Iced.Intel.TupleType, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Iced.Intel.Register, Iced.Intel.Register, Iced.Intel.Code, Iced.Intel.TupleType, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Iced.Intel.Register, Iced.Intel.Register, Iced.Intel.Code, Iced.Intel.TupleType, Boolean, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_EVEX_VkWIb_er: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandlerModRM
    Void .ctor(Iced.Intel.Register, Iced.Intel.Code, Iced.Intel.TupleType): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_EVEX_VkW: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandlerModRM
    Void .ctor(Iced.Intel.Register, Iced.Intel.Code, Iced.Intel.TupleType, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Iced.Intel.Register, Iced.Intel.Register, Iced.Intel.Code, Iced.Intel.TupleType, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_EVEX_WkV: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandlerModRM
    Void .ctor(Iced.Intel.Register, Iced.Intel.Code, Iced.Intel.TupleType): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Iced.Intel.Register, Iced.Intel.Code, Iced.Intel.TupleType, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Iced.Intel.Register, Iced.Intel.Register, Iced.Intel.Code, Iced.Intel.TupleType): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_EVEX_VkM: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandlerModRM
    Void .ctor(Iced.Intel.Register, Iced.Intel.Code, Iced.Intel.TupleType): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_EVEX_VkWIb: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandlerModRM
    Void .ctor(Iced.Intel.Register, Iced.Intel.Code, Iced.Intel.TupleType, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_EVEX_WkVIb: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandlerModRM
    Void .ctor(Iced.Intel.Register, Iced.Intel.Register, Iced.Intel.Code, Iced.Intel.TupleType): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_EVEX_HkWIb: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandlerModRM
    Void .ctor(Iced.Intel.Register, Iced.Intel.Code, Iced.Intel.TupleType, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_EVEX_HWIb: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandlerModRM
    Void .ctor(Iced.Intel.Register, Iced.Intel.Code, Iced.Intel.TupleType): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_EVEX_WkVIb_er: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandlerModRM
    Void .ctor(Iced.Intel.Register, Iced.Intel.Register, Iced.Intel.Code, Iced.Intel.TupleType): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_EVEX_VW_er: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandlerModRM
    Void .ctor(Iced.Intel.Register, Iced.Intel.Code, Iced.Intel.TupleType): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_EVEX_VW: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandlerModRM
    Void .ctor(Iced.Intel.Register, Iced.Intel.Code, Iced.Intel.TupleType): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_EVEX_WV: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandlerModRM
    Void .ctor(Iced.Intel.Register, Iced.Intel.Code, Iced.Intel.TupleType): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_EVEX_VM: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandlerModRM
    Void .ctor(Iced.Intel.Register, Iced.Intel.Code, Iced.Intel.TupleType): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_EVEX_VK: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandlerModRM
    Void .ctor(Iced.Intel.Register, Iced.Intel.Code): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_EVEX_KR: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandlerModRM
    Void .ctor(Iced.Intel.Register, Iced.Intel.Code): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_EVEX_KkHWIb_sae: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandlerModRM
    Void .ctor(Iced.Intel.Register, Iced.Intel.Code, Iced.Intel.TupleType, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_EVEX_VkHW: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandlerModRM
    Void .ctor(Iced.Intel.Register, Iced.Intel.Code, Iced.Intel.TupleType, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Iced.Intel.Register, Iced.Intel.Register, Iced.Intel.Register, Iced.Intel.Code, Iced.Intel.TupleType, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_EVEX_VkHM: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandlerModRM
    Void .ctor(Iced.Intel.Register, Iced.Intel.Code, Iced.Intel.TupleType): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_EVEX_VkHWIb: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandlerModRM
    Void .ctor(Iced.Intel.Register, Iced.Intel.Code, Iced.Intel.TupleType, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Iced.Intel.Register, Iced.Intel.Register, Iced.Intel.Register, Iced.Intel.Code, Iced.Intel.TupleType, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_EVEX_VkHWIb_er: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandlerModRM
    Void .ctor(Iced.Intel.Register, Iced.Intel.Code, Iced.Intel.TupleType, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_EVEX_KkHW: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandlerModRM
    Void .ctor(Iced.Intel.Register, Iced.Intel.Code, Iced.Intel.TupleType, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_EVEX_KP1HW: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandlerModRM
    Void .ctor(Iced.Intel.Register, Iced.Intel.Code, Iced.Intel.TupleType): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_EVEX_KkHWIb: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandlerModRM
    Void .ctor(Iced.Intel.Register, Iced.Intel.Code, Iced.Intel.TupleType, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_EVEX_WkHV: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandlerModRM
    Void .ctor(Iced.Intel.Register, Iced.Intel.Code): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_EVEX_VHWIb: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandlerModRM
    Void .ctor(Iced.Intel.Register, Iced.Intel.Code, Iced.Intel.TupleType): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_EVEX_VHW: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandlerModRM
    Void .ctor(Iced.Intel.Register, Iced.Intel.Code, Iced.Intel.Code, Iced.Intel.TupleType): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Iced.Intel.Register, Iced.Intel.Code, Iced.Intel.TupleType): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_EVEX_VHM: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandlerModRM
    Void .ctor(Iced.Intel.Register, Iced.Intel.Code, Iced.Intel.TupleType): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_EVEX_Gv_W_er: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandlerModRM
    Void .ctor(Iced.Intel.Register, Iced.Intel.Code, Iced.Intel.Code, Iced.Intel.TupleType, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_EVEX_VX_Ev: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandlerModRM
    Void .ctor(Iced.Intel.Code, Iced.Intel.Code, Iced.Intel.TupleType, Iced.Intel.TupleType): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_EVEX_Ev_VX: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandlerModRM
    Void .ctor(Iced.Intel.Code, Iced.Intel.Code, Iced.Intel.TupleType, Iced.Intel.TupleType): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_EVEX_Ev_VX_Ib: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandlerModRM
    Void .ctor(Iced.Intel.Register, Iced.Intel.Code, Iced.Intel.Code): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_EVEX_MV: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandlerModRM
    Void .ctor(Iced.Intel.Register, Iced.Intel.Code, Iced.Intel.TupleType): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_EVEX_VkEv_REXW: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandlerModRM
    Void .ctor(Iced.Intel.Register, Iced.Intel.Code): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Iced.Intel.Register, Iced.Intel.Code, Iced.Intel.Code): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_EVEX_Vk_VSIB: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandlerModRM
    Void .ctor(Iced.Intel.Register, Iced.Intel.Register, Iced.Intel.Code, Iced.Intel.TupleType): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_EVEX_VSIB_k1_VX: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandlerModRM
    Void .ctor(Iced.Intel.Register, Iced.Intel.Register, Iced.Intel.Code, Iced.Intel.TupleType): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_EVEX_VSIB_k1: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandlerModRM
    Void .ctor(Iced.Intel.Register, Iced.Intel.Code, Iced.Intel.TupleType): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_EVEX_GvM_VX_Ib: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandlerModRM
    Void .ctor(Iced.Intel.Register, Iced.Intel.Code, Iced.Intel.Code, Iced.Intel.TupleType, Iced.Intel.TupleType): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_EVEX_KkWIb: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandlerModRM
    Void .ctor(Iced.Intel.Register, Iced.Intel.Code, Iced.Intel.TupleType, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_ST_STi: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandlerModRM
    Void .ctor(Iced.Intel.Code): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_STi_ST: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandlerModRM
    Void .ctor(Iced.Intel.Code): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_STi: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandlerModRM
    Void .ctor(Iced.Intel.Code): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_Mf: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandlerModRM
    Void .ctor(Iced.Intel.Code): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Iced.Intel.Code, Iced.Intel.Code): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Struct Iced.Intel.DecoderInternal.Code3: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Iced.Intel.Code, Iced.Intel.Code, Iced.Intel.Code): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    <codes>e__FixedBuffer codes : Public
Struct Iced.Intel.DecoderInternal.Code3+<codes>e__FixedBuffer: AutoLayout, AnsiClass, Class, NestedPublic, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    UInt16 FixedElementField : Public
Class Iced.Intel.DecoderInternal.OpCodeHandler_VEX2: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandlerModRM
    Void .ctor(Iced.Intel.DecoderInternal.OpCodeHandler): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_VEX3: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandlerModRM
    Void .ctor(Iced.Intel.DecoderInternal.OpCodeHandler): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_XOP: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandlerModRM
    Void .ctor(Iced.Intel.DecoderInternal.OpCodeHandler): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_EVEX: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandlerModRM
    Void .ctor(Iced.Intel.DecoderInternal.OpCodeHandler): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_PrefixEsCsSsDs: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandler
    Void .ctor(Iced.Intel.Register): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_PrefixFsGs: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandler
    Void .ctor(Iced.Intel.Register): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_Prefix66: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandler
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_Prefix67: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandler
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_PrefixF0: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandler
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_PrefixF2: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandler
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_PrefixF3: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandler
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_PrefixREX: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandler
    Void .ctor(Iced.Intel.DecoderInternal.OpCodeHandler, UInt32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_Reg: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandler
    Void .ctor(Iced.Intel.Code, Iced.Intel.Register): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_RegIb: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandler
    Void .ctor(Iced.Intel.Code, Iced.Intel.Register): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_IbReg: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandler
    Void .ctor(Iced.Intel.Code, Iced.Intel.Register): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_AL_DX: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandler
    Void .ctor(Iced.Intel.Code): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_DX_AL: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandler
    Void .ctor(Iced.Intel.Code): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_Ib: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandler
    Void .ctor(Iced.Intel.Code): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_Ib3: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandlerModRM
    Void .ctor(Iced.Intel.Code): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_MandatoryPrefix: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandlerModRM
    Void .ctor(Iced.Intel.DecoderInternal.OpCodeHandler, Iced.Intel.DecoderInternal.OpCodeHandler, Iced.Intel.DecoderInternal.OpCodeHandler, Iced.Intel.DecoderInternal.OpCodeHandler): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_MandatoryPrefix3: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandlerModRM
    Void .ctor(Iced.Intel.DecoderInternal.OpCodeHandler, Iced.Intel.DecoderInternal.OpCodeHandler, Iced.Intel.DecoderInternal.OpCodeHandler, Iced.Intel.DecoderInternal.OpCodeHandler, Iced.Intel.DecoderInternal.OpCodeHandler, Iced.Intel.DecoderInternal.OpCodeHandler, Iced.Intel.DecoderInternal.OpCodeHandler, Iced.Intel.DecoderInternal.OpCodeHandler, Iced.Intel.DecoderInternal.LegacyHandlerFlags): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_MandatoryPrefix4: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandler
    Void .ctor(Iced.Intel.DecoderInternal.OpCodeHandler, Iced.Intel.DecoderInternal.OpCodeHandler, Iced.Intel.DecoderInternal.OpCodeHandler, Iced.Intel.DecoderInternal.OpCodeHandler, UInt32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_MandatoryPrefix_NoModRM: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandler
    Void .ctor(Iced.Intel.DecoderInternal.OpCodeHandler, Iced.Intel.DecoderInternal.OpCodeHandler, Iced.Intel.DecoderInternal.OpCodeHandler, Iced.Intel.DecoderInternal.OpCodeHandler): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_NIb: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandlerModRM
    Void .ctor(Iced.Intel.Code): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_Reservednop: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandlerModRM
    Void .ctor(Iced.Intel.DecoderInternal.OpCodeHandler, Iced.Intel.DecoderInternal.OpCodeHandler): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_Ev_Iz: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandlerModRM
    Void .ctor(Iced.Intel.Code, Iced.Intel.Code, Iced.Intel.Code): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Iced.Intel.Code, Iced.Intel.Code, Iced.Intel.Code, Iced.Intel.DecoderInternal.HandlerFlags): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_Ev_Ib: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandlerModRM
    Void .ctor(Iced.Intel.Code, Iced.Intel.Code, Iced.Intel.Code): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Iced.Intel.Code, Iced.Intel.Code, Iced.Intel.Code, Iced.Intel.DecoderInternal.HandlerFlags): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_Ev_Ib2: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandlerModRM
    Void .ctor(Iced.Intel.Code, Iced.Intel.Code, Iced.Intel.Code): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Iced.Intel.Code, Iced.Intel.Code, Iced.Intel.Code, Iced.Intel.DecoderInternal.HandlerFlags): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_Ev_1: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandlerModRM
    Void .ctor(Iced.Intel.Code, Iced.Intel.Code, Iced.Intel.Code): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_Ev_CL: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandlerModRM
    Void .ctor(Iced.Intel.Code, Iced.Intel.Code, Iced.Intel.Code): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_Ev: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandlerModRM
    Void .ctor(Iced.Intel.Code, Iced.Intel.Code, Iced.Intel.Code): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Iced.Intel.Code, Iced.Intel.Code, Iced.Intel.Code, Iced.Intel.DecoderInternal.HandlerFlags): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_Rv: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandlerModRM
    Void .ctor(Iced.Intel.Code, Iced.Intel.Code, Iced.Intel.Code): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_Rv_32_64: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandlerModRM
    Void .ctor(Iced.Intel.Code, Iced.Intel.Code): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_Rq: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandlerModRM
    Void .ctor(Iced.Intel.Code): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_Ev_REXW: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandlerModRM
    Void .ctor(Iced.Intel.Code, Iced.Intel.Code, UInt32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_Evj: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandlerModRM
    Void .ctor(Iced.Intel.Code, Iced.Intel.Code, Iced.Intel.Code): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_Ep: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandlerModRM
    Void .ctor(Iced.Intel.Code, Iced.Intel.Code, Iced.Intel.Code): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_Evw: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandlerModRM
    Void .ctor(Iced.Intel.Code, Iced.Intel.Code, Iced.Intel.Code): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_Ew: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandlerModRM
    Void .ctor(Iced.Intel.Code, Iced.Intel.Code, Iced.Intel.Code): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_Ms: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandlerModRM
    Void .ctor(Iced.Intel.Code, Iced.Intel.Code, Iced.Intel.Code): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_Gv_Ev: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandlerModRM
    Void .ctor(Iced.Intel.Code, Iced.Intel.Code, Iced.Intel.Code): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_Gd_Rd: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandlerModRM
    Void .ctor(Iced.Intel.Code): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_Gv_M_as: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandlerModRM
    Void .ctor(Iced.Intel.Code, Iced.Intel.Code, Iced.Intel.Code): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_Gdq_Ev: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandlerModRM
    Void .ctor(Iced.Intel.Code, Iced.Intel.Code, Iced.Intel.Code): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_Gv_Ev3: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandlerModRM
    Void .ctor(Iced.Intel.Code, Iced.Intel.Code, Iced.Intel.Code): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_Gv_Ev2: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandlerModRM
    Void .ctor(Iced.Intel.Code, Iced.Intel.Code, Iced.Intel.Code): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_R_C: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandlerModRM
    Void .ctor(Iced.Intel.Code, Iced.Intel.Code, Iced.Intel.Register): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_C_R: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandlerModRM
    Void .ctor(Iced.Intel.Code, Iced.Intel.Code, Iced.Intel.Register): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_Jb: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandler
    Void .ctor(Iced.Intel.Code, Iced.Intel.Code, Iced.Intel.Code): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_Jx: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandler
    Void .ctor(Iced.Intel.Code, Iced.Intel.Code, Iced.Intel.Code): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_Jz: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandler
    Void .ctor(Iced.Intel.Code, Iced.Intel.Code, Iced.Intel.Code): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_Jb2: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandler
    Void .ctor(Iced.Intel.Code, Iced.Intel.Code, Iced.Intel.Code, Iced.Intel.Code, Iced.Intel.Code, Iced.Intel.Code, Iced.Intel.Code): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_Jdisp: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandler
    Void .ctor(Iced.Intel.Code, Iced.Intel.Code): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_PushOpSizeReg: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandler
    Void .ctor(Iced.Intel.Code, Iced.Intel.Code, Iced.Intel.Code, Iced.Intel.Register): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_PushEv: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandlerModRM
    Void .ctor(Iced.Intel.Code, Iced.Intel.Code, Iced.Intel.Code): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_Ev_Gv: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandlerModRM
    Void .ctor(Iced.Intel.Code, Iced.Intel.Code, Iced.Intel.Code): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Iced.Intel.Code, Iced.Intel.Code, Iced.Intel.Code, Iced.Intel.DecoderInternal.HandlerFlags): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_Ev_Gv_32_64: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandlerModRM
    Void .ctor(Iced.Intel.Code, Iced.Intel.Code): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_Ev_Gv_Ib: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandlerModRM
    Void .ctor(Iced.Intel.Code, Iced.Intel.Code, Iced.Intel.Code): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_Ev_Gv_CL: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandlerModRM
    Void .ctor(Iced.Intel.Code, Iced.Intel.Code, Iced.Intel.Code): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_Gv_Mp: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandlerModRM
    Void .ctor(Iced.Intel.Code, Iced.Intel.Code, Iced.Intel.Code): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_Gv_Eb: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandlerModRM
    Void .ctor(Iced.Intel.Code, Iced.Intel.Code, Iced.Intel.Code): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_Gv_Ew: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandlerModRM
    Void .ctor(Iced.Intel.Code, Iced.Intel.Code, Iced.Intel.Code): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_PushSimple2: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandler
    Void .ctor(Iced.Intel.Code, Iced.Intel.Code, Iced.Intel.Code): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_Simple2: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandler
    Void .ctor(Iced.Intel.Code, Iced.Intel.Code, Iced.Intel.Code): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_Simple2Iw: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandler
    Void .ctor(Iced.Intel.Code, Iced.Intel.Code, Iced.Intel.Code): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_Simple3: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandler
    Void .ctor(Iced.Intel.Code, Iced.Intel.Code, Iced.Intel.Code): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_Simple5: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandler
    Void .ctor(Iced.Intel.Code, Iced.Intel.Code, Iced.Intel.Code): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_Simple5_a32: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandler
    Void .ctor(Iced.Intel.Code, Iced.Intel.Code, Iced.Intel.Code): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_Simple5_ModRM_as: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandlerModRM
    Void .ctor(Iced.Intel.Code, Iced.Intel.Code, Iced.Intel.Code): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_Simple4: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandler
    Void .ctor(Iced.Intel.Code, Iced.Intel.Code): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_PushSimpleReg: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandler
    Void .ctor(Int32, Iced.Intel.Code, Iced.Intel.Code, Iced.Intel.Code): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_SimpleReg: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandler
    Void .ctor(Iced.Intel.Code, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_Xchg_Reg_rAX: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandler
    Void .ctor(Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_Reg_Iz: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandler
    Void .ctor(Iced.Intel.Code, Iced.Intel.Code, Iced.Intel.Code): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_RegIb3: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandler
    Void .ctor(Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_RegIz2: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandler
    Void .ctor(Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_PushIb2: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandler
    Void .ctor(Iced.Intel.Code, Iced.Intel.Code, Iced.Intel.Code): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_PushIz: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandler
    Void .ctor(Iced.Intel.Code, Iced.Intel.Code, Iced.Intel.Code): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_Gv_Ma: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandlerModRM
    Void .ctor(Iced.Intel.Code, Iced.Intel.Code): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_RvMw_Gw: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandlerModRM
    Void .ctor(Iced.Intel.Code, Iced.Intel.Code): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_Gv_Ev_Ib: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandlerModRM
    Void .ctor(Iced.Intel.Code, Iced.Intel.Code, Iced.Intel.Code): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_Gv_Ev_Ib_REX: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandlerModRM
    Void .ctor(Iced.Intel.Code, Iced.Intel.Code): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_Gv_Ev_32_64: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandlerModRM
    Void .ctor(Iced.Intel.Code, Iced.Intel.Code, Boolean, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_Gv_Ev_Iz: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandlerModRM
    Void .ctor(Iced.Intel.Code, Iced.Intel.Code, Iced.Intel.Code): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_Yb_Reg: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandler
    Void .ctor(Iced.Intel.Code, Iced.Intel.Register): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_Yv_Reg: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandler
    Void .ctor(Iced.Intel.Code, Iced.Intel.Code, Iced.Intel.Code): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_Yv_Reg2: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandler
    Void .ctor(Iced.Intel.Code, Iced.Intel.Code): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_Reg_Xb: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandler
    Void .ctor(Iced.Intel.Code, Iced.Intel.Register): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_Reg_Xv: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandler
    Void .ctor(Iced.Intel.Code, Iced.Intel.Code, Iced.Intel.Code): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_Reg_Xv2: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandler
    Void .ctor(Iced.Intel.Code, Iced.Intel.Code): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_Reg_Yb: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandler
    Void .ctor(Iced.Intel.Code, Iced.Intel.Register): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_Reg_Yv: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandler
    Void .ctor(Iced.Intel.Code, Iced.Intel.Code, Iced.Intel.Code): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_Yb_Xb: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandler
    Void .ctor(Iced.Intel.Code): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_Yv_Xv: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandler
    Void .ctor(Iced.Intel.Code, Iced.Intel.Code, Iced.Intel.Code): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_Xb_Yb: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandler
    Void .ctor(Iced.Intel.Code): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_Xv_Yv: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandler
    Void .ctor(Iced.Intel.Code, Iced.Intel.Code, Iced.Intel.Code): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_Ev_Sw: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandlerModRM
    Void .ctor(Iced.Intel.Code, Iced.Intel.Code, Iced.Intel.Code): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_M_Sw: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandlerModRM
    Void .ctor(Iced.Intel.Code): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_Gv_M: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandlerModRM
    Void .ctor(Iced.Intel.Code, Iced.Intel.Code, Iced.Intel.Code): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_Sw_Ev: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandlerModRM
    Void .ctor(Iced.Intel.Code, Iced.Intel.Code, Iced.Intel.Code): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_Sw_M: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandlerModRM
    Void .ctor(Iced.Intel.Code): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_Ap: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandler
    Void .ctor(Iced.Intel.Code, Iced.Intel.Code): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_Reg_Ob: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandler
    Void .ctor(Iced.Intel.Code, Iced.Intel.Register): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_Ob_Reg: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandler
    Void .ctor(Iced.Intel.Code, Iced.Intel.Register): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_Reg_Ov: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandler
    Void .ctor(Iced.Intel.Code, Iced.Intel.Code, Iced.Intel.Code): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_Ov_Reg: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandler
    Void .ctor(Iced.Intel.Code, Iced.Intel.Code, Iced.Intel.Code): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_BranchIw: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandler
    Void .ctor(Iced.Intel.Code, Iced.Intel.Code, Iced.Intel.Code): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_BranchSimple: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandler
    Void .ctor(Iced.Intel.Code, Iced.Intel.Code, Iced.Intel.Code): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_Iw_Ib: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandler
    Void .ctor(Iced.Intel.Code, Iced.Intel.Code, Iced.Intel.Code): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_Reg_Ib2: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandler
    Void .ctor(Iced.Intel.Code, Iced.Intel.Code): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_IbReg2: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandler
    Void .ctor(Iced.Intel.Code, Iced.Intel.Code): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_eAX_DX: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandler
    Void .ctor(Iced.Intel.Code, Iced.Intel.Code): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_DX_eAX: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandler
    Void .ctor(Iced.Intel.Code, Iced.Intel.Code): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_Eb_Ib: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandlerModRM
    Void .ctor(Iced.Intel.Code): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Iced.Intel.Code, Iced.Intel.DecoderInternal.HandlerFlags): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_Eb_1: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandlerModRM
    Void .ctor(Iced.Intel.Code): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_Eb_CL: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandlerModRM
    Void .ctor(Iced.Intel.Code): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_Eb: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandlerModRM
    Void .ctor(Iced.Intel.Code): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Iced.Intel.Code, Iced.Intel.DecoderInternal.HandlerFlags): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_Eb_Gb: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandlerModRM
    Void .ctor(Iced.Intel.Code): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Iced.Intel.Code, Iced.Intel.DecoderInternal.HandlerFlags): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_Gb_Eb: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandlerModRM
    Void .ctor(Iced.Intel.Code): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_M: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandlerModRM
    Void .ctor(Iced.Intel.Code, Iced.Intel.Code): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Iced.Intel.Code): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_M_REXW: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandlerModRM
    Void .ctor(Iced.Intel.Code, Iced.Intel.Code): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Iced.Intel.Code, Iced.Intel.Code, Iced.Intel.DecoderInternal.HandlerFlags, Iced.Intel.DecoderInternal.HandlerFlags): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_MemBx: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandler
    Void .ctor(Iced.Intel.Code): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_VW: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandlerModRM
    Void .ctor(Iced.Intel.Code, Iced.Intel.Code): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Iced.Intel.Code): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_WV: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandlerModRM
    Void .ctor(Iced.Intel.Code): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_rDI_VX_RX: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandlerModRM
    Void .ctor(Iced.Intel.Code): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_rDI_P_N: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandlerModRM
    Void .ctor(Iced.Intel.Code): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_VM: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandlerModRM
    Void .ctor(Iced.Intel.Code): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_MV: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandlerModRM
    Void .ctor(Iced.Intel.Code): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_VQ: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandlerModRM
    Void .ctor(Iced.Intel.Code): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_P_Q: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandlerModRM
    Void .ctor(Iced.Intel.Code): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_Q_P: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandlerModRM
    Void .ctor(Iced.Intel.Code): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_MP: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandlerModRM
    Void .ctor(Iced.Intel.Code): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_P_Q_Ib: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandlerModRM
    Void .ctor(Iced.Intel.Code): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_P_W: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandlerModRM
    Void .ctor(Iced.Intel.Code): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_P_R: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandlerModRM
    Void .ctor(Iced.Intel.Code): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_P_Ev: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandlerModRM
    Void .ctor(Iced.Intel.Code, Iced.Intel.Code): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_P_Ev_Ib: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandlerModRM
    Void .ctor(Iced.Intel.Code, Iced.Intel.Code): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_Ev_P: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandlerModRM
    Void .ctor(Iced.Intel.Code, Iced.Intel.Code): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_Gv_W: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandlerModRM
    Void .ctor(Iced.Intel.Code, Iced.Intel.Code): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_V_Ev: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandlerModRM
    Void .ctor(Iced.Intel.Code, Iced.Intel.Code): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_VWIb: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandlerModRM
    Void .ctor(Iced.Intel.Code): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Iced.Intel.Code, Iced.Intel.Code): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_VRIbIb: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandlerModRM
    Void .ctor(Iced.Intel.Code): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_RIbIb: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandlerModRM
    Void .ctor(Iced.Intel.Code): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_RIb: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandlerModRM
    Void .ctor(Iced.Intel.Code): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_Ed_V_Ib: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandlerModRM
    Void .ctor(Iced.Intel.Code, Iced.Intel.Code): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_VX_Ev: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandlerModRM
    Void .ctor(Iced.Intel.Code, Iced.Intel.Code): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_Ev_VX: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandlerModRM
    Void .ctor(Iced.Intel.Code, Iced.Intel.Code): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_VX_E_Ib: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandlerModRM
    Void .ctor(Iced.Intel.Code, Iced.Intel.Code): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_Gv_RX: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandlerModRM
    Void .ctor(Iced.Intel.Code, Iced.Intel.Code): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_B_MIB: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandlerModRM
    Void .ctor(Iced.Intel.Code): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_MIB_B: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandlerModRM
    Void .ctor(Iced.Intel.Code): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_B_BM: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandlerModRM
    Void .ctor(Iced.Intel.Code, Iced.Intel.Code): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_BM_B: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandlerModRM
    Void .ctor(Iced.Intel.Code, Iced.Intel.Code): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_B_Ev: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandlerModRM
    Void .ctor(Iced.Intel.Code, Iced.Intel.Code, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_Mv_Gv_REXW: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandlerModRM
    Void .ctor(Iced.Intel.Code, Iced.Intel.Code): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_Gv_N_Ib_REX: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandlerModRM
    Void .ctor(Iced.Intel.Code, Iced.Intel.Code): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_Gv_N: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandlerModRM
    Void .ctor(Iced.Intel.Code, Iced.Intel.Code): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_VN: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandlerModRM
    Void .ctor(Iced.Intel.Code): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_Gv_Mv: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandlerModRM
    Void .ctor(Iced.Intel.Code, Iced.Intel.Code, Iced.Intel.Code): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_Mv_Gv: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandlerModRM
    Void .ctor(Iced.Intel.Code, Iced.Intel.Code, Iced.Intel.Code): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_Gv_Eb_REX: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandlerModRM
    Void .ctor(Iced.Intel.Code, Iced.Intel.Code): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_Gv_Ev_REX: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandlerModRM
    Void .ctor(Iced.Intel.Code, Iced.Intel.Code): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_Ev_Gv_REX: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandlerModRM
    Void .ctor(Iced.Intel.Code, Iced.Intel.Code): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_GvM_VX_Ib: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandlerModRM
    Void .ctor(Iced.Intel.Code, Iced.Intel.Code): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_Wbinvd: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandler
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_VectorLength_VEX: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandlerModRM
    Void .ctor(Iced.Intel.DecoderInternal.OpCodeHandler, Iced.Intel.DecoderInternal.OpCodeHandler): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_VectorLength_NoModRM_VEX: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandler
    Void .ctor(Iced.Intel.DecoderInternal.OpCodeHandler, Iced.Intel.DecoderInternal.OpCodeHandler): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_VEX_Simple: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandler
    Void .ctor(Iced.Intel.Code): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_VEX_VHEv: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandlerModRM
    Void .ctor(Iced.Intel.Register, Iced.Intel.Code, Iced.Intel.Code): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_VEX_VHEvIb: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandlerModRM
    Void .ctor(Iced.Intel.Register, Iced.Intel.Code, Iced.Intel.Code): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_VEX_VW: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandlerModRM
    Void .ctor(Iced.Intel.Register, Iced.Intel.Code): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Iced.Intel.Register, Iced.Intel.Register, Iced.Intel.Code): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_VEX_VX_Ev: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandlerModRM
    Void .ctor(Iced.Intel.Code, Iced.Intel.Code): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_VEX_Ev_VX: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandlerModRM
    Void .ctor(Iced.Intel.Code, Iced.Intel.Code): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_VEX_WV: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandlerModRM
    Void .ctor(Iced.Intel.Register, Iced.Intel.Code): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_VEX_VM: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandlerModRM
    Void .ctor(Iced.Intel.Register, Iced.Intel.Code): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_VEX_MV: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandlerModRM
    Void .ctor(Iced.Intel.Register, Iced.Intel.Code): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_VEX_M: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandlerModRM
    Void .ctor(Iced.Intel.Code): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_VEX_RdRq: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandlerModRM
    Void .ctor(Iced.Intel.Code, Iced.Intel.Code): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_VEX_rDI_VX_RX: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandlerModRM
    Void .ctor(Iced.Intel.Register, Iced.Intel.Code): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_VEX_VWIb: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandlerModRM
    Void .ctor(Iced.Intel.Register, Iced.Intel.Code): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Iced.Intel.Register, Iced.Intel.Code, Iced.Intel.Code): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_VEX_WVIb: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandlerModRM
    Void .ctor(Iced.Intel.Register, Iced.Intel.Register, Iced.Intel.Code): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_VEX_Ed_V_Ib: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandlerModRM
    Void .ctor(Iced.Intel.Register, Iced.Intel.Code, Iced.Intel.Code): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_VEX_VHW: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandlerModRM
    Void .ctor(Iced.Intel.Register, Iced.Intel.Code, Iced.Intel.Code): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Iced.Intel.Register, Iced.Intel.Code): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Iced.Intel.Register, Iced.Intel.Register, Iced.Intel.Register, Iced.Intel.Code): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_VEX_VWH: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandlerModRM
    Void .ctor(Iced.Intel.Register, Iced.Intel.Code): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_VEX_WHV: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandlerModRM
    Void .ctor(Iced.Intel.Register, Iced.Intel.Code): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_VEX_VHM: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandlerModRM
    Void .ctor(Iced.Intel.Register, Iced.Intel.Code): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_VEX_MHV: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandlerModRM
    Void .ctor(Iced.Intel.Register, Iced.Intel.Code): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_VEX_VHWIb: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandlerModRM
    Void .ctor(Iced.Intel.Register, Iced.Intel.Code): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Iced.Intel.Register, Iced.Intel.Register, Iced.Intel.Register, Iced.Intel.Code): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_VEX_HRIb: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandlerModRM
    Void .ctor(Iced.Intel.Register, Iced.Intel.Code): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_VEX_VHWIs4: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandlerModRM
    Void .ctor(Iced.Intel.Register, Iced.Intel.Code): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_VEX_VHIs4W: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandlerModRM
    Void .ctor(Iced.Intel.Register, Iced.Intel.Code): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_VEX_VHWIs5: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandlerModRM
    Void .ctor(Iced.Intel.Register, Iced.Intel.Code): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_VEX_VHIs5W: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandlerModRM
    Void .ctor(Iced.Intel.Register, Iced.Intel.Code): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_VEX_VK_HK_RK: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandlerModRM
    Void .ctor(Iced.Intel.Code): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_VEX_VK_RK: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandlerModRM
    Void .ctor(Iced.Intel.Code): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_VEX_VK_RK_Ib: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandlerModRM
    Void .ctor(Iced.Intel.Code): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_VEX_VK_WK: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandlerModRM
    Void .ctor(Iced.Intel.Code): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_VEX_M_VK: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandlerModRM
    Void .ctor(Iced.Intel.Code): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_VEX_VK_R: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandlerModRM
    Void .ctor(Iced.Intel.Code, Iced.Intel.Register): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_VEX_G_VK: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandlerModRM
    Void .ctor(Iced.Intel.Code, Iced.Intel.Register): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_VEX_Gv_W: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandlerModRM
    Void .ctor(Iced.Intel.Register, Iced.Intel.Code, Iced.Intel.Code): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_VEX_Gv_RX: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandlerModRM
    Void .ctor(Iced.Intel.Register, Iced.Intel.Code, Iced.Intel.Code): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_VEX_Gv_GPR_Ib: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandlerModRM
    Void .ctor(Iced.Intel.Register, Iced.Intel.Code, Iced.Intel.Code): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_VEX_VX_VSIB_HX: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandlerModRM
    Void .ctor(Iced.Intel.Register, Iced.Intel.Register, Iced.Intel.Register, Iced.Intel.Code): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_VEX_Gv_Gv_Ev: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandlerModRM
    Void .ctor(Iced.Intel.Code, Iced.Intel.Code): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_VEX_Gv_Ev_Gv: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandlerModRM
    Void .ctor(Iced.Intel.Code, Iced.Intel.Code): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_VEX_Hv_Ev: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandlerModRM
    Void .ctor(Iced.Intel.Code, Iced.Intel.Code): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_VEX_Hv_Ed_Id: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandlerModRM
    Void .ctor(Iced.Intel.Code, Iced.Intel.Code): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_VEX_GvM_VX_Ib: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandlerModRM
    Void .ctor(Iced.Intel.Register, Iced.Intel.Code, Iced.Intel.Code): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_VEX_Gv_Ev_Ib: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandlerModRM
    Void .ctor(Iced.Intel.Code, Iced.Intel.Code): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_VEX_Gv_Ev_Id: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandlerModRM
    Void .ctor(Iced.Intel.Code, Iced.Intel.Code): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_VEX_VT_SIBMEM: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandlerModRM
    Void .ctor(Iced.Intel.Code): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_VEX_SIBMEM_VT: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandlerModRM
    Void .ctor(Iced.Intel.Code): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_VEX_VT: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandlerModRM
    Void .ctor(Iced.Intel.Code): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_VEX_VT_RT_HT: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandlerModRM
    Void .ctor(Iced.Intel.Code): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_VEX_Gq_HK_RK: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandlerModRM
    Void .ctor(Iced.Intel.Code): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_VEX_VK_R_Ib: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandlerModRM
    Void .ctor(Iced.Intel.Code, Iced.Intel.Register): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_VEX_K_Jb: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandlerModRM
    Void .ctor(Iced.Intel.Code): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_VEX_K_Jz: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandlerModRM
    Void .ctor(Iced.Intel.Code): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_VEX_Gv_Ev: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandlerModRM
    Void .ctor(Iced.Intel.Code, Iced.Intel.Code): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.DecoderInternal.OpCodeHandler_VEX_Ev: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandlerModRM
    Void .ctor(Iced.Intel.Code, Iced.Intel.Code): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(Decoder, Instruction&): PrivateScope, Public, Virtual, HideBySig
Struct Iced.Intel.DecoderInternal.SerializedDataKind: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Byte value__ : Public, SpecialName, RTSpecialName
    Iced.Intel.DecoderInternal.SerializedDataKind HandlerReference = 0 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.SerializedDataKind ArrayReference = 1 : Public, Static, Literal, HasDefault
Class Iced.Intel.DecoderInternal.OpCodeHandlerReader: AutoLayout, AnsiClass, Class, Abstract, BeforeFieldInit
  Methods:
    ReadHandlers(TableDeserializer&, OpCodeHandler[], Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Struct Iced.Intel.DecoderInternal.HandlerInfo: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Iced.Intel.DecoderInternal.OpCodeHandler): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Iced.Intel.DecoderInternal.OpCodeHandler[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Iced.Intel.DecoderInternal.OpCodeHandler handler : Public, InitOnly
    Iced.Intel.DecoderInternal.OpCodeHandler[] handlers : Public, InitOnly
Struct Iced.Intel.DecoderInternal.TableDeserializer: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit (Obsolete)
  :System.ValueType
    Void .ctor(Iced.Intel.DecoderInternal.OpCodeHandlerReader, Int32, System.ReadOnlySpan`1[System.Byte]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Deserialize(): PrivateScope, Public, HideBySig
    ReadLegacyOpCodeHandlerKind(): PrivateScope, Public, HideBySig
    ReadVexOpCodeHandlerKind(): PrivateScope, Public, HideBySig
    ReadEvexOpCodeHandlerKind(): PrivateScope, Public, HideBySig
    ReadCode(): PrivateScope, Public, HideBySig
    ReadRegister(): PrivateScope, Public, HideBySig
    ReadDecoderOptions(): PrivateScope, Public, HideBySig
    ReadHandlerFlags(): PrivateScope, Public, HideBySig
    ReadLegacyHandlerFlags(): PrivateScope, Public, HideBySig
    ReadTupleType(): PrivateScope, Public, HideBySig
    ReadBoolean(): PrivateScope, Public, HideBySig
    ReadInt32(): PrivateScope, Public, HideBySig
    ReadHandler(): PrivateScope, Public, HideBySig
    ReadHandlerOrNull(): PrivateScope, Public, HideBySig
    ReadHandlers(Int32): PrivateScope, Public, HideBySig
    ReadHandlerReference(): PrivateScope, Public, HideBySig
    ReadArrayReference(UInt32): PrivateScope, Public, HideBySig
    GetTable(UInt32): PrivateScope, Public, HideBySig
Struct Iced.Intel.DecoderInternal.VexOpCodeHandlerKind: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Byte value__ : Public, SpecialName, RTSpecialName
    Iced.Intel.DecoderInternal.VexOpCodeHandlerKind Invalid = 0 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.VexOpCodeHandlerKind Invalid2 = 1 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.VexOpCodeHandlerKind Dup = 2 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.VexOpCodeHandlerKind Invalid_NoModRM = 3 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.VexOpCodeHandlerKind Bitness_DontReadModRM = 4 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.VexOpCodeHandlerKind HandlerReference = 5 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.VexOpCodeHandlerKind ArrayReference = 6 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.VexOpCodeHandlerKind RM = 7 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.VexOpCodeHandlerKind Group = 8 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.VexOpCodeHandlerKind W = 9 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.VexOpCodeHandlerKind MandatoryPrefix2_1 = 10 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.VexOpCodeHandlerKind MandatoryPrefix2_4 = 11 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.VexOpCodeHandlerKind MandatoryPrefix2_NoModRM = 12 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.VexOpCodeHandlerKind VectorLength_NoModRM = 13 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.VexOpCodeHandlerKind VectorLength = 14 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.VexOpCodeHandlerKind Ed_V_Ib = 15 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.VexOpCodeHandlerKind Ev_VX = 16 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.VexOpCodeHandlerKind G_VK = 17 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.VexOpCodeHandlerKind Gv_Ev_Gv = 18 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.VexOpCodeHandlerKind Gv_Ev_Ib = 19 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.VexOpCodeHandlerKind Gv_Ev_Id = 20 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.VexOpCodeHandlerKind Gv_GPR_Ib = 21 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.VexOpCodeHandlerKind Gv_Gv_Ev = 22 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.VexOpCodeHandlerKind Gv_RX = 23 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.VexOpCodeHandlerKind Gv_W = 24 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.VexOpCodeHandlerKind GvM_VX_Ib = 25 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.VexOpCodeHandlerKind HRIb = 26 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.VexOpCodeHandlerKind Hv_Ed_Id = 27 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.VexOpCodeHandlerKind Hv_Ev = 28 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.VexOpCodeHandlerKind M = 29 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.VexOpCodeHandlerKind MHV = 30 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.VexOpCodeHandlerKind M_VK = 31 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.VexOpCodeHandlerKind MV = 32 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.VexOpCodeHandlerKind rDI_VX_RX = 33 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.VexOpCodeHandlerKind RdRq = 34 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.VexOpCodeHandlerKind Simple = 35 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.VexOpCodeHandlerKind VHEv = 36 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.VexOpCodeHandlerKind VHEvIb = 37 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.VexOpCodeHandlerKind VHIs4W = 38 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.VexOpCodeHandlerKind VHIs5W = 39 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.VexOpCodeHandlerKind VHM = 40 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.VexOpCodeHandlerKind VHW_2 = 41 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.VexOpCodeHandlerKind VHW_3 = 42 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.VexOpCodeHandlerKind VHW_4 = 43 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.VexOpCodeHandlerKind VHWIb_2 = 44 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.VexOpCodeHandlerKind VHWIb_4 = 45 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.VexOpCodeHandlerKind VHWIs4 = 46 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.VexOpCodeHandlerKind VHWIs5 = 47 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.VexOpCodeHandlerKind VK_HK_RK = 48 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.VexOpCodeHandlerKind VK_R = 49 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.VexOpCodeHandlerKind VK_RK = 50 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.VexOpCodeHandlerKind VK_RK_Ib = 51 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.VexOpCodeHandlerKind VK_WK = 52 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.VexOpCodeHandlerKind VM = 53 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.VexOpCodeHandlerKind VW_2 = 54 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.VexOpCodeHandlerKind VW_3 = 55 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.VexOpCodeHandlerKind VWH = 56 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.VexOpCodeHandlerKind VWIb_2 = 57 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.VexOpCodeHandlerKind VWIb_3 = 58 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.VexOpCodeHandlerKind VX_Ev = 59 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.VexOpCodeHandlerKind VX_VSIB_HX = 60 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.VexOpCodeHandlerKind WHV = 61 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.VexOpCodeHandlerKind WV = 62 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.VexOpCodeHandlerKind WVIb = 63 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.VexOpCodeHandlerKind VT_SIBMEM = 64 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.VexOpCodeHandlerKind SIBMEM_VT = 65 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.VexOpCodeHandlerKind VT = 66 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.VexOpCodeHandlerKind VT_RT_HT = 67 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.VexOpCodeHandlerKind Group8x64 = 68 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.VexOpCodeHandlerKind Bitness = 69 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.VexOpCodeHandlerKind Null = 70 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.VexOpCodeHandlerKind Options_DontReadModRM = 71 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.VexOpCodeHandlerKind Gq_HK_RK = 72 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.VexOpCodeHandlerKind VK_R_Ib = 73 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.VexOpCodeHandlerKind Gv_Ev = 74 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.VexOpCodeHandlerKind Ev = 75 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.VexOpCodeHandlerKind K_Jb = 76 : Public, Static, Literal, HasDefault
    Iced.Intel.DecoderInternal.VexOpCodeHandlerKind K_Jz = 77 : Public, Static, Literal, HasDefault
Class Iced.Intel.DecoderInternal.VexOpCodeHandlerReader: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.DecoderInternal.OpCodeHandlerReader
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    ReadHandlers(TableDeserializer&, OpCodeHandler[], Int32): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.BlockEncoderInternal.Block: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
    Void .ctor(Iced.Intel.BlockEncoder, Iced.Intel.CodeWriter, UInt64, System.Collections.Generic.List`1[Iced.Intel.RelocInfo]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Iced.Intel.BlockEncoderInternal.CodeWriterImpl CodeWriter : Public, InitOnly
    UInt64 RIP : Public, InitOnly
    System.Collections.Generic.List`1[Iced.Intel.RelocInfo] relocInfos : Public, InitOnly
  Properties:
    Iced.Intel.BlockEncoderInternal.Instr[] Instructions 'get ' : 
    Boolean CanAddRelocInfos 'get ' : 
  Methods:
    get_Instructions(): PrivateScope, Public, HideBySig, SpecialName
    SetInstructions(Instr[]): PrivateScope, Assembly, HideBySig
    AllocPointerLocation(): PrivateScope, Public, HideBySig
    InitializeData(): PrivateScope, Public, HideBySig
    WriteData(): PrivateScope, Public, HideBySig
    get_CanAddRelocInfos(): PrivateScope, Public, HideBySig, SpecialName
    AddRelocInfo(RelocInfo): PrivateScope, Public, HideBySig
Class Iced.Intel.BlockEncoderInternal.BlockData: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    UInt64 __dont_use_address : Assembly
    Boolean __dont_use_address_initd : Assembly
    Boolean IsValid : Public
    UInt64 Data : Public
  Properties:
    UInt64 Address 'get ' : 
  Methods:
    get_Address(): PrivateScope, Public, HideBySig, SpecialName
Class Iced.Intel.BlockEncoderInternal.CallInstr: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.BlockEncoderInternal.Instr
    Void .ctor(Iced.Intel.BlockEncoder, Iced.Intel.BlockEncoderInternal.Block, Iced.Intel.Instruction ByRef): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Initialize(BlockEncoder): PrivateScope, Public, Virtual, HideBySig
    Optimize(UInt64): PrivateScope, Public, Virtual, HideBySig
    TryEncode(Encoder, ConstantOffsets&(Out), Boolean&(Out)): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.BlockEncoderInternal.CodeWriterImpl: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.CodeWriter
    Void .ctor(Iced.Intel.CodeWriter): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    UInt32 BytesWritten : Public
  Methods:
    WriteByte(Byte): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.BlockEncoderInternal.Instr: AutoLayout, AnsiClass, Class, Abstract, BeforeFieldInit
  Fields:
    Iced.Intel.BlockEncoderInternal.Block Block : Public, InitOnly
    UInt32 Size : Public
    UInt64 IP : Public
    UInt64 OrigIP : Public, InitOnly
    Boolean Done : Public
  Methods:
    Initialize(BlockEncoder): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Optimize(UInt64): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    TryEncode(Encoder, ConstantOffsets&(Out), Boolean&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Create(BlockEncoder, Block, Instruction&(In)): PrivateScope, Public, Static, HideBySig
Class Iced.Intel.BlockEncoderInternal.IpRelMemOpInstr: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.BlockEncoderInternal.Instr
    Void .ctor(Iced.Intel.BlockEncoder, Iced.Intel.BlockEncoderInternal.Block, Iced.Intel.Instruction ByRef): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Initialize(BlockEncoder): PrivateScope, Public, Virtual, HideBySig
    Optimize(UInt64): PrivateScope, Public, Virtual, HideBySig
    TryEncode(Encoder, ConstantOffsets&(Out), Boolean&(Out)): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.BlockEncoderInternal.JccInstr: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.BlockEncoderInternal.Instr
    Void .ctor(Iced.Intel.BlockEncoder, Iced.Intel.BlockEncoderInternal.Block, Iced.Intel.Instruction ByRef): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Initialize(BlockEncoder): PrivateScope, Public, Virtual, HideBySig
    Optimize(UInt64): PrivateScope, Public, Virtual, HideBySig
    TryEncode(Encoder, ConstantOffsets&(Out), Boolean&(Out)): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.BlockEncoderInternal.JmpInstr: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.BlockEncoderInternal.Instr
    Void .ctor(Iced.Intel.BlockEncoder, Iced.Intel.BlockEncoderInternal.Block, Iced.Intel.Instruction ByRef): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Initialize(BlockEncoder): PrivateScope, Public, Virtual, HideBySig
    Optimize(UInt64): PrivateScope, Public, Virtual, HideBySig
    TryEncode(Encoder, ConstantOffsets&(Out), Boolean&(Out)): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.BlockEncoderInternal.SimpleBranchInstr: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.BlockEncoderInternal.Instr
    Void .ctor(Iced.Intel.BlockEncoder, Iced.Intel.BlockEncoderInternal.Block, Iced.Intel.Instruction ByRef): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Initialize(BlockEncoder): PrivateScope, Public, Virtual, HideBySig
    Optimize(UInt64): PrivateScope, Public, Virtual, HideBySig
    TryEncode(Encoder, ConstantOffsets&(Out), Boolean&(Out)): PrivateScope, Public, Virtual, HideBySig
Class Iced.Intel.BlockEncoderInternal.SimpleInstr: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.BlockEncoderInternal.Instr
    Void .ctor(Iced.Intel.BlockEncoder, Iced.Intel.BlockEncoderInternal.Block, Iced.Intel.Instruction ByRef): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Initialize(BlockEncoder): PrivateScope, Public, Virtual, HideBySig
    Optimize(UInt64): PrivateScope, Public, Virtual, HideBySig
    TryEncode(Encoder, ConstantOffsets&(Out), Boolean&(Out)): PrivateScope, Public, Virtual, HideBySig
Struct Iced.Intel.BlockEncoderInternal.TargetInstr: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Iced.Intel.BlockEncoderInternal.Instr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(UInt64): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    IsInBlock(Block): PrivateScope, Public, HideBySig
    GetAddress(): PrivateScope, Public, HideBySig
Class Iced.Intel.BlockEncoderInternal.XbeginInstr: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Iced.Intel.BlockEncoderInternal.Instr
    Void .ctor(Iced.Intel.BlockEncoder, Iced.Intel.BlockEncoderInternal.Block, Iced.Intel.Instruction ByRef): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Initialize(BlockEncoder): PrivateScope, Public, Virtual, HideBySig
    Optimize(UInt64): PrivateScope, Public, Virtual, HideBySig
    TryEncode(Encoder, ConstantOffsets&(Out), Boolean&(Out)): PrivateScope, Public, Virtual, HideBySig
Class System.Array2: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Methods:
    Empty(): PrivateScope, Public, Static, HideBySig
Class System.string2: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Methods:
    IsNullOrEmpty(String): PrivateScope, Public, Static, HideBySig
Class System.Runtime.CompilerServices.<b2ffb5d6-6a81-4f20-8e75-7064682f7f7c>IsExternalInit: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
Class System.Diagnostics.Debug2: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Methods:
    Assert(Boolean): PrivateScope, Public, Static, HideBySig
Class System.Diagnostics.CodeAnalysis.<b2ffb5d6-6a81-4f20-8e75-7064682f7f7c>AllowNullAttribute: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :System.Attribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class System.Diagnostics.CodeAnalysis.<b2ffb5d6-6a81-4f20-8e75-7064682f7f7c>DisallowNullAttribute: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :System.Attribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class System.Diagnostics.CodeAnalysis.<b2ffb5d6-6a81-4f20-8e75-7064682f7f7c>DoesNotReturnAttribute: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :System.Attribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class System.Diagnostics.CodeAnalysis.<b2ffb5d6-6a81-4f20-8e75-7064682f7f7c>DoesNotReturnIfAttribute: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :System.Attribute
    Void .ctor(Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean ParameterValue 'get ' : 
  Methods:
    get_ParameterValue(): PrivateScope, Public, HideBySig, SpecialName
Class System.Diagnostics.CodeAnalysis.<b2ffb5d6-6a81-4f20-8e75-7064682f7f7c>MaybeNullAttribute: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :System.Attribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class System.Diagnostics.CodeAnalysis.<b2ffb5d6-6a81-4f20-8e75-7064682f7f7c>MaybeNullWhenAttribute: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :System.Attribute
    Void .ctor(Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean ReturnValue 'get ' : 
  Methods:
    get_ReturnValue(): PrivateScope, Public, HideBySig, SpecialName
Class System.Diagnostics.CodeAnalysis.<b2ffb5d6-6a81-4f20-8e75-7064682f7f7c>MemberNotNullAttribute: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :System.Attribute
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String[] Members 'get ' : 
  Methods:
    get_Members(): PrivateScope, Public, HideBySig, SpecialName
Class System.Diagnostics.CodeAnalysis.<b2ffb5d6-6a81-4f20-8e75-7064682f7f7c>MemberNotNullWhenAttribute: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :System.Attribute
    Void .ctor(Boolean, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Boolean, System.String[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean ReturnValue 'get ' : 
    System.String[] Members 'get ' : 
  Methods:
    get_ReturnValue(): PrivateScope, Public, HideBySig, SpecialName
    get_Members(): PrivateScope, Public, HideBySig, SpecialName
Class System.Diagnostics.CodeAnalysis.<b2ffb5d6-6a81-4f20-8e75-7064682f7f7c>NotNullAttribute: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :System.Attribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class System.Diagnostics.CodeAnalysis.<b2ffb5d6-6a81-4f20-8e75-7064682f7f7c>NotNullIfNotNullAttribute: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :System.Attribute
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String ParameterName 'get ' : 
  Methods:
    get_ParameterName(): PrivateScope, Public, HideBySig, SpecialName
Class System.Diagnostics.CodeAnalysis.<b2ffb5d6-6a81-4f20-8e75-7064682f7f7c>NotNullWhenAttribute: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :System.Attribute
    Void .ctor(Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean ReturnValue 'get ' : 
  Methods:
    get_ReturnValue(): PrivateScope, Public, HideBySig, SpecialName
Class System.Runtime.Versioning.NonVersionableAttribute: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :System.Attribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class MonoMod.ILHelpers: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Methods:
    TailCallDelegatePtr(IntPtr): PrivateScope, Public, Static, HideBySig
    TailCallFunc(Func`1): PrivateScope, Public, Static, HideBySig
    UnboxAnyUnsafe(Object&): PrivateScope, Public, Static, HideBySig
Class System.Runtime.CompilerServices.Unsafe: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Methods:
    Read(Void*): PrivateScope, Public, Static, HideBySig
    ReadUnaligned(Void*): PrivateScope, Public, Static, HideBySig
    ReadUnaligned(Byte&): PrivateScope, Public, Static, HideBySig
    Write(Void*, T): PrivateScope, Public, Static, HideBySig
    WriteUnaligned(Void*, T): PrivateScope, Public, Static, HideBySig
    WriteUnaligned(Byte&, T): PrivateScope, Public, Static, HideBySig
    Copy(Void*, T&): PrivateScope, Public, Static, HideBySig
    Copy(T&, Void*): PrivateScope, Public, Static, HideBySig
    AsPointer(T&): PrivateScope, Public, Static, HideBySig
    SkipInit(T&(Out)): PrivateScope, Public, Static, HideBySig
    SizeOf(): PrivateScope, Public, Static, HideBySig
    CopyBlock(Void*, Void*, UInt32): PrivateScope, Public, Static, HideBySig
    CopyBlock(Byte&, Byte&, UInt32): PrivateScope, Public, Static, HideBySig
    CopyBlockUnaligned(Void*, Void*, UInt32): PrivateScope, Public, Static, HideBySig
    CopyBlockUnaligned(Byte&, Byte&, UInt32): PrivateScope, Public, Static, HideBySig
    InitBlock(Void*, Byte, UInt32): PrivateScope, Public, Static, HideBySig
    InitBlock(Byte&, Byte, UInt32): PrivateScope, Public, Static, HideBySig
    InitBlockUnaligned(Void*, Byte, UInt32): PrivateScope, Public, Static, HideBySig
    InitBlockUnaligned(Byte&, Byte, UInt32): PrivateScope, Public, Static, HideBySig
    As(Object): PrivateScope, Public, Static, HideBySig
    AsRef(Void*): PrivateScope, Public, Static, HideBySig
    AsRef(T&): PrivateScope, Public, Static, HideBySig
    As(TFrom&): PrivateScope, Public, Static, HideBySig
    Unbox(Object): PrivateScope, Public, Static, HideBySig
    Add(T&, Int32): PrivateScope, Public, Static, HideBySig
    Add(Void*, Int32): PrivateScope, Public, Static, HideBySig
    Add(T&, IntPtr): PrivateScope, Public, Static, HideBySig
    Add(T&, UIntPtr): PrivateScope, Public, Static, HideBySig
    AddByteOffset(T&, IntPtr): PrivateScope, Public, Static, HideBySig
    AddByteOffset(T&, UIntPtr): PrivateScope, Public, Static, HideBySig
    Subtract(T&, Int32): PrivateScope, Public, Static, HideBySig
    Subtract(Void*, Int32): PrivateScope, Public, Static, HideBySig
    Subtract(T&, IntPtr): PrivateScope, Public, Static, HideBySig
    Subtract(T&, UIntPtr): PrivateScope, Public, Static, HideBySig
    SubtractByteOffset(T&, IntPtr): PrivateScope, Public, Static, HideBySig
    SubtractByteOffset(T&, UIntPtr): PrivateScope, Public, Static, HideBySig
    ByteOffset(T&, T&): PrivateScope, Public, Static, HideBySig
    AreSame(T&, T&): PrivateScope, Public, Static, HideBySig
    IsAddressGreaterThan(T&, T&): PrivateScope, Public, Static, HideBySig
    IsAddressLessThan(T&, T&): PrivateScope, Public, Static, HideBySig
    IsNullRef(T&): PrivateScope, Public, Static, HideBySig
    NullRef(): PrivateScope, Public, Static, HideBySig
Class MonoMod.Switches: AutoLayout, AnsiClass, Class, Abstract, Sealed
  Fields:
    System.String RunningOnWine = RunningOnWine : Public, Static, Literal, HasDefault
    System.String DebugClr = DebugClr : Public, Static, Literal, HasDefault
    System.String JitPath = JitPath : Public, Static, Literal, HasDefault
    System.String LogRecordHoles = LogRecordHoles : Public, Static, Literal, HasDefault
    System.String LogInMemory = LogInMemory : Public, Static, Literal, HasDefault
    System.String LogSpam = LogSpam : Public, Static, Literal, HasDefault
    System.String LogReplayQueueLength = LogReplayQueueLength : Public, Static, Literal, HasDefault
    System.String LogToFile = LogToFile : Public, Static, Literal, HasDefault
    System.String LogToFileFilter = LogToFileFilter : Public, Static, Literal, HasDefault
    System.String DMDType = DMDType : Public, Static, Literal, HasDefault
    System.String DMDDebug = DMDDebug : Public, Static, Literal, HasDefault
    System.String DMDDumpTo = DMDDumpTo : Public, Static, Literal, HasDefault
  Methods:
    SetSwitchValue(String, Object): PrivateScope, Public, Static, HideBySig
    ClearSwitchValue(String): PrivateScope, Public, Static, HideBySig
    TryGetSwitchValue(String, Object&(Out)): PrivateScope, Public, Static, HideBySig
    TryGetSwitchEnabled(String, Boolean&(Out)): PrivateScope, Public, Static, HideBySig
Class MonoMod.MMDbgLog: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Properties:
    Boolean IsWritingLog 'get ' : 
  Methods:
    get_IsWritingLog(): PrivateScope, Public, Static, HideBySig, SpecialName
    LogVersion(): PrivateScope, Assembly, Static, HideBySig
    Log(LogLevel, String): PrivateScope, Public, Static, HideBySig
    Log(LogLevel, DebugLogInterpolatedStringHandler&): PrivateScope, Public, Static, HideBySig
    Spam(String): PrivateScope, Public, Static, HideBySig
    Spam(DebugLogSpamStringHandler&): PrivateScope, Public, Static, HideBySig
    Trace(String): PrivateScope, Public, Static, HideBySig
    Trace(DebugLogTraceStringHandler&): PrivateScope, Public, Static, HideBySig
    Info(String): PrivateScope, Public, Static, HideBySig
    Info(DebugLogInfoStringHandler&): PrivateScope, Public, Static, HideBySig
    Warning(String): PrivateScope, Public, Static, HideBySig
    Warning(DebugLogWarningStringHandler&): PrivateScope, Public, Static, HideBySig
    Error(String): PrivateScope, Public, Static, HideBySig
    Error(DebugLogErrorStringHandler&): PrivateScope, Public, Static, HideBySig
Struct MonoMod.MMDbgLog+DebugLogSpamStringHandler: AutoLayout, AnsiClass, Class, NestedAssembly, SequentialLayout, Sealed, BeforeFieldInit (Obsolete)
  :System.ValueType
    Void .ctor(Int32, Int32, Boolean ByRef): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    MonoMod.Logs.DebugLogInterpolatedStringHandler handler : Assembly
  Methods:
    ToString(): PrivateScope, Public, Virtual, HideBySig
    ToStringAndClear(): PrivateScope, Public, HideBySig
    AppendLiteral(String): PrivateScope, Public, HideBySig
    AppendFormatted(String): PrivateScope, Public, HideBySig
    AppendFormatted(String, Int32(Optional, HasDefault), String(Optional, HasDefault)): PrivateScope, Public, HideBySig
    AppendFormatted(ReadOnlySpan`1): PrivateScope, Public, HideBySig
    AppendFormatted(ReadOnlySpan`1, Int32(Optional, HasDefault), String(Optional, HasDefault)): PrivateScope, Public, HideBySig
    AppendFormatted(T): PrivateScope, Public, HideBySig
    AppendFormatted(T, Int32): PrivateScope, Public, HideBySig
    AppendFormatted(T, String): PrivateScope, Public, HideBySig
    AppendFormatted(T, Int32, String): PrivateScope, Public, HideBySig
Struct MonoMod.MMDbgLog+DebugLogTraceStringHandler: AutoLayout, AnsiClass, Class, NestedAssembly, SequentialLayout, Sealed, BeforeFieldInit (Obsolete)
  :System.ValueType
    Void .ctor(Int32, Int32, Boolean ByRef): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    MonoMod.Logs.DebugLogInterpolatedStringHandler handler : Assembly
  Methods:
    ToString(): PrivateScope, Public, Virtual, HideBySig
    ToStringAndClear(): PrivateScope, Public, HideBySig
    AppendLiteral(String): PrivateScope, Public, HideBySig
    AppendFormatted(String): PrivateScope, Public, HideBySig
    AppendFormatted(String, Int32(Optional, HasDefault), String(Optional, HasDefault)): PrivateScope, Public, HideBySig
    AppendFormatted(ReadOnlySpan`1): PrivateScope, Public, HideBySig
    AppendFormatted(ReadOnlySpan`1, Int32(Optional, HasDefault), String(Optional, HasDefault)): PrivateScope, Public, HideBySig
    AppendFormatted(T): PrivateScope, Public, HideBySig
    AppendFormatted(T, Int32): PrivateScope, Public, HideBySig
    AppendFormatted(T, String): PrivateScope, Public, HideBySig
    AppendFormatted(T, Int32, String): PrivateScope, Public, HideBySig
Struct MonoMod.MMDbgLog+DebugLogInfoStringHandler: AutoLayout, AnsiClass, Class, NestedAssembly, SequentialLayout, Sealed, BeforeFieldInit (Obsolete)
  :System.ValueType
    Void .ctor(Int32, Int32, Boolean ByRef): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    MonoMod.Logs.DebugLogInterpolatedStringHandler handler : Assembly
  Methods:
    ToString(): PrivateScope, Public, Virtual, HideBySig
    ToStringAndClear(): PrivateScope, Public, HideBySig
    AppendLiteral(String): PrivateScope, Public, HideBySig
    AppendFormatted(String): PrivateScope, Public, HideBySig
    AppendFormatted(String, Int32(Optional, HasDefault), String(Optional, HasDefault)): PrivateScope, Public, HideBySig
    AppendFormatted(ReadOnlySpan`1): PrivateScope, Public, HideBySig
    AppendFormatted(ReadOnlySpan`1, Int32(Optional, HasDefault), String(Optional, HasDefault)): PrivateScope, Public, HideBySig
    AppendFormatted(T): PrivateScope, Public, HideBySig
    AppendFormatted(T, Int32): PrivateScope, Public, HideBySig
    AppendFormatted(T, String): PrivateScope, Public, HideBySig
    AppendFormatted(T, Int32, String): PrivateScope, Public, HideBySig
Struct MonoMod.MMDbgLog+DebugLogWarningStringHandler: AutoLayout, AnsiClass, Class, NestedAssembly, SequentialLayout, Sealed, BeforeFieldInit (Obsolete)
  :System.ValueType
    Void .ctor(Int32, Int32, Boolean ByRef): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    MonoMod.Logs.DebugLogInterpolatedStringHandler handler : Assembly
  Methods:
    ToString(): PrivateScope, Public, Virtual, HideBySig
    ToStringAndClear(): PrivateScope, Public, HideBySig
    AppendLiteral(String): PrivateScope, Public, HideBySig
    AppendFormatted(String): PrivateScope, Public, HideBySig
    AppendFormatted(String, Int32(Optional, HasDefault), String(Optional, HasDefault)): PrivateScope, Public, HideBySig
    AppendFormatted(ReadOnlySpan`1): PrivateScope, Public, HideBySig
    AppendFormatted(ReadOnlySpan`1, Int32(Optional, HasDefault), String(Optional, HasDefault)): PrivateScope, Public, HideBySig
    AppendFormatted(T): PrivateScope, Public, HideBySig
    AppendFormatted(T, Int32): PrivateScope, Public, HideBySig
    AppendFormatted(T, String): PrivateScope, Public, HideBySig
    AppendFormatted(T, Int32, String): PrivateScope, Public, HideBySig
Struct MonoMod.MMDbgLog+DebugLogErrorStringHandler: AutoLayout, AnsiClass, Class, NestedAssembly, SequentialLayout, Sealed, BeforeFieldInit (Obsolete)
  :System.ValueType
    Void .ctor(Int32, Int32, Boolean ByRef): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    MonoMod.Logs.DebugLogInterpolatedStringHandler handler : Assembly
  Methods:
    ToString(): PrivateScope, Public, Virtual, HideBySig
    ToStringAndClear(): PrivateScope, Public, HideBySig
    AppendLiteral(String): PrivateScope, Public, HideBySig
    AppendFormatted(String): PrivateScope, Public, HideBySig
    AppendFormatted(String, Int32(Optional, HasDefault), String(Optional, HasDefault)): PrivateScope, Public, HideBySig
    AppendFormatted(ReadOnlySpan`1): PrivateScope, Public, HideBySig
    AppendFormatted(ReadOnlySpan`1, Int32(Optional, HasDefault), String(Optional, HasDefault)): PrivateScope, Public, HideBySig
    AppendFormatted(T): PrivateScope, Public, HideBySig
    AppendFormatted(T, Int32): PrivateScope, Public, HideBySig
    AppendFormatted(T, String): PrivateScope, Public, HideBySig
    AppendFormatted(T, Int32, String): PrivateScope, Public, HideBySig
Class MonoMod.MultiTargetShims: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Methods:
    GetConstraintType(GenericParameterConstraint): PrivateScope, Public, Static, HideBySig
Class MonoMod.SourceGen.Attributes.EmitILOverloadsAttribute: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :System.Attribute
    Void .ctor(System.String, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class MonoMod.SourceGen.Attributes.ILOverloadKind: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Fields:
    System.String Cursor = ILCursor : Public, Static, Literal, HasDefault
    System.String Matcher = ILMatcher : Public, Static, Literal, HasDefault
Class MonoMod.ModInterop.ModExportNameAttribute: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :System.Attribute
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String Name 'get ' : 
  Methods:
    get_Name(): PrivateScope, Public, HideBySig, SpecialName
Class MonoMod.ModInterop.ModImportNameAttribute: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :System.Attribute
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String Name 'get ' : 
  Methods:
    get_Name(): PrivateScope, Public, HideBySig, SpecialName
Class MonoMod.ModInterop.ModInteropManager: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Methods:
    ModInterop(Type): PrivateScope, Public, Static, HideBySig
    RegisterModExport(MethodInfo, String(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
Class MonoMod.Logs.DebugFormatter: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Methods:
    CanDebugFormat(T&(In), Object&(Out)): PrivateScope, Public, Static, HideBySig
    TryFormatInto(T&(In), Object, Span`1, Int32&(Out)): PrivateScope, Public, Static, HideBySig
    Format(FormatInterpolatedStringHandler&): PrivateScope, Public, Static, HideBySig
    Into(Span`1, Int32&(Out), FormatIntoInterpolatedStringHandler&): PrivateScope, Public, Static, HideBySig
    <TryFormatInto>g__Transmute|1_0(T&(In)): PrivateScope, Assembly, Static, HideBySig
Struct MonoMod.Logs.FormatInterpolatedStringHandler: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit (Obsolete)
  :System.ValueType
    Void .ctor(Int32, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    ToString(): PrivateScope, Public, Virtual, HideBySig
    ToStringAndClear(): PrivateScope, Public, HideBySig
    AppendLiteral(String): PrivateScope, Public, HideBySig
    AppendFormatted(String): PrivateScope, Public, HideBySig
    AppendFormatted(String, Int32(Optional, HasDefault), String(Optional, HasDefault)): PrivateScope, Public, HideBySig
    AppendFormatted(ReadOnlySpan`1): PrivateScope, Public, HideBySig
    AppendFormatted(ReadOnlySpan`1, Int32(Optional, HasDefault), String(Optional, HasDefault)): PrivateScope, Public, HideBySig
    AppendFormatted(T): PrivateScope, Public, HideBySig
    AppendFormatted(T, Int32): PrivateScope, Public, HideBySig
    AppendFormatted(T, String): PrivateScope, Public, HideBySig
    AppendFormatted(T, Int32, String): PrivateScope, Public, HideBySig
Struct MonoMod.Logs.MessageHole: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Int32, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32, Int32, System.Object): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IEquatable`1[MonoMod.Logs.MessageHole]
  Properties:
    Int32 Start 'get ' : 
    Int32 End  'get ' : 
    System.Object Value 'get ' : 
    Boolean IsValueUnrepresentable 'get ' : 
  Methods:
    get_Start(): PrivateScope, Public, HideBySig, SpecialName
    get_End(): PrivateScope, Public, HideBySig, SpecialName
    get_Value(): PrivateScope, Public, HideBySig, SpecialName
    get_IsValueUnrepresentable(): PrivateScope, Public, HideBySig, SpecialName
    ToString(): PrivateScope, Public, Virtual, HideBySig
    op_Inequality(MessageHole, MessageHole): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Equality(MessageHole, MessageHole): PrivateScope, Public, Static, HideBySig, SpecialName
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    Equals(MessageHole): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class MonoMod.Logs.DebugLog: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  Fields:
    MonoMod.Logs.DebugLog Instance : Assembly, Static, InitOnly
  Properties:
    Boolean IsFinalizing 'get ' : 
    Boolean IsWritingLog 'get ' : 
    Boolean AlwaysLog 'get ' : 
    Boolean ShouldLog 'get ' : 
    Boolean RecordHoles 'get ' : 
  Events:
    OnLogMessage OnLog: 
  Methods:
    get_IsFinalizing(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_IsWritingLog(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_AlwaysLog(): PrivateScope, Assembly, HideBySig, SpecialName
    get_ShouldLog(): PrivateScope, Assembly, HideBySig, SpecialName
    get_RecordHoles(): PrivateScope, Assembly, HideBySig, SpecialName
    ShouldLogLevel(LogLevel): PrivateScope, Assembly, HideBySig
    ShouldLevelRecordHoles(LogLevel): PrivateScope, Assembly, HideBySig
    Write(String, DateTime, LogLevel, String): PrivateScope, Public, HideBySig
    Write(String, DateTime, LogLevel, DebugLogInterpolatedStringHandler&): PrivateScope, Public, HideBySig
    LogCore(String, LogLevel, String): PrivateScope, Assembly, HideBySig
    LogCore(String, LogLevel, DebugLogInterpolatedStringHandler&): PrivateScope, Assembly, HideBySig
    Log(String, LogLevel, String): PrivateScope, Public, Static, HideBySig
    Log(String, LogLevel, DebugLogInterpolatedStringHandler&): PrivateScope, Public, Static, HideBySig
    Subscribe(LogLevelFilter, OnLogMessage): PrivateScope, Public, Static, HideBySig
    Subscribe(LogLevelFilter, OnLogMessageDetailed): PrivateScope, Public, Static, HideBySig
    add_OnLog(OnLogMessage): PrivateScope, Public, Static, HideBySig, SpecialName
    remove_OnLog(OnLogMessage): PrivateScope, Public, Static, HideBySig, SpecialName
Class MonoMod.Logs.DebugLog+OnLogMessage: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(String, DateTime, LogLevel, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(String, DateTime, LogLevel, String, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class MonoMod.Logs.DebugLog+OnLogMessageDetailed: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(String, DateTime, LogLevel, String, ReadOnlyMemory`1): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(String, DateTime, LogLevel, String, ReadOnlyMemory`1, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Struct MonoMod.Logs.DebugLogInterpolatedStringHandler: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit (Obsolete)
  :System.ValueType
    Void .ctor(Int32, Int32, Boolean, Boolean, Boolean ByRef): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32, Int32, Boolean ByRef): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32, Int32, MonoMod.Logs.LogLevel, Boolean ByRef): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Boolean enabled : Assembly, InitOnly
  Properties:
    System.ReadOnlySpan`1[System.Char] Text 'get ' : 
  Methods:
    GetDefaultLength(Int32, Int32): PrivateScope, Assembly, Static, HideBySig
    get_Text(): PrivateScope, Assembly, HideBySig, SpecialName
    ToString(): PrivateScope, Public, Virtual, HideBySig
    ToStringAndClear(): PrivateScope, Public, HideBySig
    ToStringAndClear(ReadOnlyMemory`1&(Out)): PrivateScope, Assembly, HideBySig
    Clear(): PrivateScope, Assembly, HideBySig
    AppendLiteral(String): PrivateScope, Public, HideBySig
    AppendFormatted(String): PrivateScope, Public, HideBySig
    AppendFormatted(String, Int32(Optional, HasDefault), String(Optional, HasDefault)): PrivateScope, Public, HideBySig
    AppendFormatted(ReadOnlySpan`1): PrivateScope, Public, HideBySig
    AppendFormatted(ReadOnlySpan`1, Int32(Optional, HasDefault), String(Optional, HasDefault)): PrivateScope, Public, HideBySig
    AppendFormatted(T): PrivateScope, Public, HideBySig
    AppendFormatted(T, Int32): PrivateScope, Public, HideBySig
    AppendFormatted(T, String): PrivateScope, Public, HideBySig
    AppendFormatted(T, Int32, String): PrivateScope, Public, HideBySig
Struct MonoMod.Logs.FormatIntoInterpolatedStringHandler: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit (Obsolete)
  :System.ValueType
    Void .ctor(Int32, Int32, System.Span`1[System.Char], Boolean ByRef): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int32 pos : Assembly
    Boolean incomplete : Assembly
  Methods:
    AppendLiteral(String): PrivateScope, Public, HideBySig
    AppendFormatted(String): PrivateScope, Public, HideBySig
    AppendFormatted(String, Int32(Optional, HasDefault), String(Optional, HasDefault)): PrivateScope, Public, HideBySig
    AppendFormatted(ReadOnlySpan`1): PrivateScope, Public, HideBySig
    AppendFormatted(ReadOnlySpan`1, Int32(Optional, HasDefault), String(Optional, HasDefault)): PrivateScope, Public, HideBySig
    AppendFormatted(T): PrivateScope, Public, HideBySig
    AppendFormatted(T, Int32): PrivateScope, Public, HideBySig
    AppendFormatted(T, String): PrivateScope, Public, HideBySig
    AppendFormatted(T, Int32, String): PrivateScope, Public, HideBySig
Interface MonoMod.Logs.IDebugFormattable: AutoLayout, AnsiClass, Class, ClassSemanticsMask, Abstract, BeforeFieldInit
  Methods:
    TryFormatInto(Span`1, Int32&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Struct MonoMod.Logs.LogLevel: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    MonoMod.Logs.LogLevel Spam = 0 : Public, Static, Literal, HasDefault
    MonoMod.Logs.LogLevel Trace = 1 : Public, Static, Literal, HasDefault
    MonoMod.Logs.LogLevel Info = 2 : Public, Static, Literal, HasDefault
    MonoMod.Logs.LogLevel Warning = 3 : Public, Static, Literal, HasDefault
    MonoMod.Logs.LogLevel Error = 4 : Public, Static, Literal, HasDefault
    MonoMod.Logs.LogLevel Assert = 5 : Public, Static, Literal, HasDefault
Struct MonoMod.Logs.LogLevelFilter: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    MonoMod.Logs.LogLevelFilter None = 0 : Public, Static, Literal, HasDefault
    MonoMod.Logs.LogLevelFilter Spam = 1 : Public, Static, Literal, HasDefault
    MonoMod.Logs.LogLevelFilter Trace = 2 : Public, Static, Literal, HasDefault
    MonoMod.Logs.LogLevelFilter Info = 4 : Public, Static, Literal, HasDefault
    MonoMod.Logs.LogLevelFilter Warning = 8 : Public, Static, Literal, HasDefault
    MonoMod.Logs.LogLevelFilter Error = 16 : Public, Static, Literal, HasDefault
    MonoMod.Logs.LogLevelFilter Assert = 32 : Public, Static, Literal, HasDefault
    MonoMod.Logs.LogLevelFilter DefaultFilter = -2 : Public, Static, Literal, HasDefault
Class MonoMod.Logs.LogLevelExtensions: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Fields:
    MonoMod.Logs.LogLevel MaxLevel = 5 : Public, Static, Literal, HasDefault
  Methods:
    FastToString(LogLevel, IFormatProvider(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
Class MonoMod.Cil.GetFastDelegateInvokersArrayAttribute: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :System.Attribute
    Void .ctor(Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 MaxParams 'get ' : 
  Methods:
    get_MaxParams(): PrivateScope, Public, HideBySig, SpecialName
Class MonoMod.Cil.FastDelegateInvokers: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Methods:
    GetDelegateInvoker(Type): PrivateScope, Public, Static, HideBySig
Class MonoMod.Cil.ILContext: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(Mono.Cecil.MethodDefinition): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Fields:
    System.Collections.Generic.List`1[MonoMod.Cil.ILLabel] _Labels : Assembly
  Properties:
    Mono.Cecil.MethodDefinition Method 'get set' : 
    Mono.Cecil.Cil.ILProcessor IL 'get set' : 
    Mono.Cecil.Cil.MethodBody Body 'get ' : 
    Mono.Cecil.ModuleDefinition Module 'get ' : 
    Mono.Collections.Generic.Collection`1[Mono.Cecil.Cil.Instruction] Instrs 'get ' : 
    System.Collections.ObjectModel.ReadOnlyCollection`1[MonoMod.Cil.ILLabel] Labels 'get ' : 
    Boolean IsReadOnly 'get ' : 
  Events:
    System.Action OnDispose: 
  Methods:
    get_Method(): PrivateScope, Public, HideBySig, SpecialName
    get_IL(): PrivateScope, Public, HideBySig, SpecialName
    get_Body(): PrivateScope, Public, HideBySig, SpecialName
    get_Module(): PrivateScope, Public, HideBySig, SpecialName
    get_Instrs(): PrivateScope, Public, HideBySig, SpecialName
    get_Labels(): PrivateScope, Public, HideBySig, SpecialName
    get_IsReadOnly(): PrivateScope, Public, HideBySig, SpecialName
    add_OnDispose(Action): PrivateScope, Public, HideBySig, SpecialName
    remove_OnDispose(Action): PrivateScope, Public, HideBySig, SpecialName
    Invoke(Manipulator): PrivateScope, Public, HideBySig
    MakeReadOnly(): PrivateScope, Public, HideBySig
    At(Int32): PrivateScope, Public, HideBySig (Obsolete)
    At(ILLabel): PrivateScope, Public, HideBySig (Obsolete)
    At(Instruction): PrivateScope, Public, HideBySig (Obsolete)
    Import(FieldInfo): PrivateScope, Public, HideBySig
    Import(MethodBase): PrivateScope, Public, HideBySig
    Import(Type): PrivateScope, Public, HideBySig
    DefineLabel(): PrivateScope, Public, HideBySig
    DefineLabel(Instruction): PrivateScope, Public, HideBySig
    IndexOf(Instruction): PrivateScope, Public, HideBySig
    GetIncomingLabels(Instruction): PrivateScope, Public, HideBySig
    AddReference(T&(In)): PrivateScope, Public, HideBySig
    GetReference(Int32): PrivateScope, Public, HideBySig
    SetReference(Int32, T&(In)): PrivateScope, Public, HideBySig
    GetReferenceCell(Int32): PrivateScope, Public, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
    ToString(StringBuilder, Instruction): PrivateScope, Assembly, Static, HideBySig
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class MonoMod.Cil.ILContext+Manipulator: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(ILContext): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(ILContext, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Struct MonoMod.Cil.MoveType: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    MonoMod.Cil.MoveType Before = 0 : Public, Static, Literal, HasDefault
    MonoMod.Cil.MoveType AfterLabel = 1 : Public, Static, Literal, HasDefault
    MonoMod.Cil.MoveType After = 2 : Public, Static, Literal, HasDefault
Struct MonoMod.Cil.SearchTarget: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    MonoMod.Cil.SearchTarget None = 0 : Public, Static, Literal, HasDefault
    MonoMod.Cil.SearchTarget Next = 1 : Public, Static, Literal, HasDefault
    MonoMod.Cil.SearchTarget Prev = 2 : Public, Static, Literal, HasDefault
Class MonoMod.Cil.ILCursor: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
    Void .ctor(MonoMod.Cil.ILContext): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(MonoMod.Cil.ILCursor): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    MonoMod.Cil.ILContext Context 'get ' : 
    Mono.Cecil.Cil.Instruction Next 'get set' : 
    Mono.Cecil.Cil.Instruction Prev 'get set' : 
    Mono.Cecil.Cil.Instruction Previous 'get set' : 
    Int32 Index 'get set' : 
    MonoMod.Cil.SearchTarget SearchTarget 'get set' : 
    System.Collections.Generic.IEnumerable`1[MonoMod.Cil.ILLabel] IncomingLabels 'get ' : 
    Mono.Cecil.MethodDefinition Method 'get ' : 
    Mono.Cecil.Cil.ILProcessor IL 'get ' : 
    Mono.Cecil.Cil.MethodBody Body 'get ' : 
    Mono.Cecil.ModuleDefinition Module 'get ' : 
    Mono.Collections.Generic.Collection`1[Mono.Cecil.Cil.Instruction] Instrs 'get ' : 
  Methods:
    EmitNeg(): PrivateScope, Public, HideBySig
    EmitNewarr(TypeReference): PrivateScope, Public, HideBySig
    EmitNewarr(Type): PrivateScope, Public, HideBySig
    EmitNewobj(MethodReference): PrivateScope, Public, HideBySig
    EmitNewobj(MethodBase): PrivateScope, Public, HideBySig
    EmitNop(): PrivateScope, Public, HideBySig
    EmitNot(): PrivateScope, Public, HideBySig
    EmitOr(): PrivateScope, Public, HideBySig
    EmitPop(): PrivateScope, Public, HideBySig
    EmitReadonly(): PrivateScope, Public, HideBySig
    EmitRefanytype(): PrivateScope, Public, HideBySig
    EmitRefanyval(TypeReference): PrivateScope, Public, HideBySig
    EmitRefanyval(Type): PrivateScope, Public, HideBySig
    EmitRem(): PrivateScope, Public, HideBySig
    EmitRemUn(): PrivateScope, Public, HideBySig
    EmitRet(): PrivateScope, Public, HideBySig
    EmitRethrow(): PrivateScope, Public, HideBySig
    EmitShl(): PrivateScope, Public, HideBySig
    EmitShr(): PrivateScope, Public, HideBySig
    EmitShrUn(): PrivateScope, Public, HideBySig
    EmitSizeof(TypeReference): PrivateScope, Public, HideBySig
    EmitSizeof(Type): PrivateScope, Public, HideBySig
    EmitStarg(Int32): PrivateScope, Public, HideBySig
    EmitStarg(UInt32): PrivateScope, Public, HideBySig
    EmitStarg(ParameterReference): PrivateScope, Public, HideBySig
    EmitStelemAny(TypeReference): PrivateScope, Public, HideBySig
    EmitStelemAny(Type): PrivateScope, Public, HideBySig
    EmitStelemI(): PrivateScope, Public, HideBySig
    EmitStelemI1(): PrivateScope, Public, HideBySig
    EmitStelemI2(): PrivateScope, Public, HideBySig
    EmitStelemI4(): PrivateScope, Public, HideBySig
    EmitStelemI8(): PrivateScope, Public, HideBySig
    EmitStelemR4(): PrivateScope, Public, HideBySig
    EmitStelemR8(): PrivateScope, Public, HideBySig
    EmitStelemRef(): PrivateScope, Public, HideBySig
    EmitStfld(FieldReference): PrivateScope, Public, HideBySig
    EmitStfld(FieldInfo): PrivateScope, Public, HideBySig
    EmitStindI(): PrivateScope, Public, HideBySig
    EmitStindI1(): PrivateScope, Public, HideBySig
    EmitStindI2(): PrivateScope, Public, HideBySig
    EmitStindI4(): PrivateScope, Public, HideBySig
    EmitStindI8(): PrivateScope, Public, HideBySig
    EmitStindR4(): PrivateScope, Public, HideBySig
    EmitStindR8(): PrivateScope, Public, HideBySig
    EmitStindRef(): PrivateScope, Public, HideBySig
    EmitStloc0(): PrivateScope, Public, HideBySig
    EmitStloc1(): PrivateScope, Public, HideBySig
    EmitStloc2(): PrivateScope, Public, HideBySig
    EmitStloc3(): PrivateScope, Public, HideBySig
    EmitStloc(Int32): PrivateScope, Public, HideBySig
    EmitStloc(UInt32): PrivateScope, Public, HideBySig
    EmitStloc(VariableReference): PrivateScope, Public, HideBySig
    EmitStobj(TypeReference): PrivateScope, Public, HideBySig
    EmitStobj(Type): PrivateScope, Public, HideBySig
    EmitStsfld(FieldReference): PrivateScope, Public, HideBySig
    EmitStsfld(FieldInfo): PrivateScope, Public, HideBySig
    EmitSub(): PrivateScope, Public, HideBySig
    EmitSubOvf(): PrivateScope, Public, HideBySig
    EmitSubOvfUn(): PrivateScope, Public, HideBySig
    EmitSwitch(ILLabel[]): PrivateScope, Public, HideBySig
    EmitSwitch(Instruction[]): PrivateScope, Public, HideBySig
    EmitTail(): PrivateScope, Public, HideBySig
    EmitThrow(): PrivateScope, Public, HideBySig
    EmitUnaligned(Byte): PrivateScope, Public, HideBySig
    EmitUnbox(TypeReference): PrivateScope, Public, HideBySig
    EmitUnbox(Type): PrivateScope, Public, HideBySig
    EmitUnboxAny(TypeReference): PrivateScope, Public, HideBySig
    EmitUnboxAny(Type): PrivateScope, Public, HideBySig
    EmitVolatile(): PrivateScope, Public, HideBySig
    EmitXor(): PrivateScope, Public, HideBySig
    EmitConvI1(): PrivateScope, Public, HideBySig
    EmitConvI2(): PrivateScope, Public, HideBySig
    EmitConvI4(): PrivateScope, Public, HideBySig
    EmitConvI8(): PrivateScope, Public, HideBySig
    EmitConvOvfI(): PrivateScope, Public, HideBySig
    EmitConvOvfIUn(): PrivateScope, Public, HideBySig
    EmitConvOvfI1(): PrivateScope, Public, HideBySig
    EmitConvOvfI1Un(): PrivateScope, Public, HideBySig
    EmitConvOvfI2(): PrivateScope, Public, HideBySig
    EmitConvOvfI2Un(): PrivateScope, Public, HideBySig
    EmitConvOvfI4(): PrivateScope, Public, HideBySig
    EmitConvOvfI4Un(): PrivateScope, Public, HideBySig
    EmitConvOvfI8(): PrivateScope, Public, HideBySig
    EmitConvOvfI8Un(): PrivateScope, Public, HideBySig
    EmitConvOvfU(): PrivateScope, Public, HideBySig
    EmitConvOvfUUn(): PrivateScope, Public, HideBySig
    EmitConvOvfU1(): PrivateScope, Public, HideBySig
    EmitConvOvfU1Un(): PrivateScope, Public, HideBySig
    EmitConvOvfU2(): PrivateScope, Public, HideBySig
    EmitConvOvfU2Un(): PrivateScope, Public, HideBySig
    EmitConvOvfU4(): PrivateScope, Public, HideBySig
    EmitConvOvfU4Un(): PrivateScope, Public, HideBySig
    EmitConvOvfU8(): PrivateScope, Public, HideBySig
    EmitConvOvfU8Un(): PrivateScope, Public, HideBySig
    EmitConvRUn(): PrivateScope, Public, HideBySig
    EmitConvR4(): PrivateScope, Public, HideBySig
    EmitConvR8(): PrivateScope, Public, HideBySig
    EmitConvU(): PrivateScope, Public, HideBySig
    EmitConvU1(): PrivateScope, Public, HideBySig
    EmitConvU2(): PrivateScope, Public, HideBySig
    EmitConvU4(): PrivateScope, Public, HideBySig
    EmitConvU8(): PrivateScope, Public, HideBySig
    EmitCpblk(): PrivateScope, Public, HideBySig
    EmitCpobj(TypeReference): PrivateScope, Public, HideBySig
    EmitCpobj(Type): PrivateScope, Public, HideBySig
    EmitDiv(): PrivateScope, Public, HideBySig
    EmitDivUn(): PrivateScope, Public, HideBySig
    EmitDup(): PrivateScope, Public, HideBySig
    EmitEndfilter(): PrivateScope, Public, HideBySig
    EmitEndfinally(): PrivateScope, Public, HideBySig
    EmitInitblk(): PrivateScope, Public, HideBySig
    EmitInitobj(TypeReference): PrivateScope, Public, HideBySig
    EmitInitobj(Type): PrivateScope, Public, HideBySig
    EmitIsinst(TypeReference): PrivateScope, Public, HideBySig
    EmitIsinst(Type): PrivateScope, Public, HideBySig
    EmitJmp(MethodReference): PrivateScope, Public, HideBySig
    EmitJmp(MethodBase): PrivateScope, Public, HideBySig
    EmitLdarg0(): PrivateScope, Public, HideBySig
    EmitLdarg1(): PrivateScope, Public, HideBySig
    EmitLdarg2(): PrivateScope, Public, HideBySig
    EmitLdarg3(): PrivateScope, Public, HideBySig
    EmitLdarg(Int32): PrivateScope, Public, HideBySig
    EmitLdarg(UInt32): PrivateScope, Public, HideBySig
    EmitLdarg(ParameterReference): PrivateScope, Public, HideBySig
    EmitLdarga(Int32): PrivateScope, Public, HideBySig
    EmitLdarga(UInt32): PrivateScope, Public, HideBySig
    EmitLdarga(ParameterReference): PrivateScope, Public, HideBySig
    EmitLdcI4(Int32): PrivateScope, Public, HideBySig
    EmitLdcI4(UInt32): PrivateScope, Public, HideBySig
    EmitLdcI8(Int64): PrivateScope, Public, HideBySig
    EmitLdcI8(UInt64): PrivateScope, Public, HideBySig
    EmitLdcR4(Single): PrivateScope, Public, HideBySig
    EmitLdcR8(Double): PrivateScope, Public, HideBySig
    EmitLdelemAny(TypeReference): PrivateScope, Public, HideBySig
    EmitLdelemAny(Type): PrivateScope, Public, HideBySig
    EmitLdelemI(): PrivateScope, Public, HideBySig
    EmitLdelemI1(): PrivateScope, Public, HideBySig
    EmitLdelemI2(): PrivateScope, Public, HideBySig
    EmitLdelemI4(): PrivateScope, Public, HideBySig
    EmitLdelemI8(): PrivateScope, Public, HideBySig
    EmitLdelemR4(): PrivateScope, Public, HideBySig
    EmitLdelemR8(): PrivateScope, Public, HideBySig
    EmitLdelemRef(): PrivateScope, Public, HideBySig
    EmitLdelemU1(): PrivateScope, Public, HideBySig
    EmitLdelemU2(): PrivateScope, Public, HideBySig
    EmitLdelemU4(): PrivateScope, Public, HideBySig
    EmitLdelema(TypeReference): PrivateScope, Public, HideBySig
    EmitLdelema(Type): PrivateScope, Public, HideBySig
    EmitLdfld(FieldReference): PrivateScope, Public, HideBySig
    EmitLdfld(FieldInfo): PrivateScope, Public, HideBySig
    EmitLdflda(FieldReference): PrivateScope, Public, HideBySig
    EmitLdflda(FieldInfo): PrivateScope, Public, HideBySig
    EmitLdftn(MethodReference): PrivateScope, Public, HideBySig
    EmitLdftn(MethodBase): PrivateScope, Public, HideBySig
    EmitLdindI(): PrivateScope, Public, HideBySig
    EmitLdindI1(): PrivateScope, Public, HideBySig
    EmitLdindI2(): PrivateScope, Public, HideBySig
    EmitLdindI4(): PrivateScope, Public, HideBySig
    EmitLdindI8(): PrivateScope, Public, HideBySig
    EmitLdindR4(): PrivateScope, Public, HideBySig
    EmitLdindR8(): PrivateScope, Public, HideBySig
    EmitLdindRef(): PrivateScope, Public, HideBySig
    EmitLdindU1(): PrivateScope, Public, HideBySig
    EmitLdindU2(): PrivateScope, Public, HideBySig
    EmitLdindU4(): PrivateScope, Public, HideBySig
    EmitLdlen(): PrivateScope, Public, HideBySig
    EmitLdloc0(): PrivateScope, Public, HideBySig
    EmitLdloc1(): PrivateScope, Public, HideBySig
    EmitLdloc2(): PrivateScope, Public, HideBySig
    EmitLdloc3(): PrivateScope, Public, HideBySig
    EmitLdloc(Int32): PrivateScope, Public, HideBySig
    EmitLdloc(UInt32): PrivateScope, Public, HideBySig
    EmitLdloc(VariableReference): PrivateScope, Public, HideBySig
    EmitLdloca(Int32): PrivateScope, Public, HideBySig
    EmitLdloca(UInt32): PrivateScope, Public, HideBySig
    EmitLdloca(VariableReference): PrivateScope, Public, HideBySig
    EmitLdnull(): PrivateScope, Public, HideBySig
    EmitLdobj(TypeReference): PrivateScope, Public, HideBySig
    EmitLdobj(Type): PrivateScope, Public, HideBySig
    EmitLdsfld(FieldReference): PrivateScope, Public, HideBySig
    EmitLdsfld(FieldInfo): PrivateScope, Public, HideBySig
    EmitLdsflda(FieldReference): PrivateScope, Public, HideBySig
    EmitLdsflda(FieldInfo): PrivateScope, Public, HideBySig
    EmitLdstr(String): PrivateScope, Public, HideBySig
    EmitLdtoken(IMetadataTokenProvider): PrivateScope, Public, HideBySig
    EmitLdtoken(Type): PrivateScope, Public, HideBySig
    EmitLdtoken(FieldInfo): PrivateScope, Public, HideBySig
    EmitLdtoken(MethodBase): PrivateScope, Public, HideBySig
    EmitLdvirtftn(MethodReference): PrivateScope, Public, HideBySig
    EmitLdvirtftn(MethodBase): PrivateScope, Public, HideBySig
    EmitLeave(ILLabel): PrivateScope, Public, HideBySig
    EmitLeave(Instruction): PrivateScope, Public, HideBySig
    EmitLocalloc(): PrivateScope, Public, HideBySig
    EmitMkrefany(TypeReference): PrivateScope, Public, HideBySig
    EmitMkrefany(Type): PrivateScope, Public, HideBySig
    EmitMul(): PrivateScope, Public, HideBySig
    EmitMulOvf(): PrivateScope, Public, HideBySig
    EmitMulOvfUn(): PrivateScope, Public, HideBySig
    get_Context(): PrivateScope, Public, HideBySig, SpecialName
    get_Next(): PrivateScope, Public, HideBySig, SpecialName
    set_Next(Instruction): PrivateScope, Public, HideBySig, SpecialName
    get_Prev(): PrivateScope, Public, HideBySig, SpecialName
    set_Prev(Instruction): PrivateScope, Public, HideBySig, SpecialName
    get_Previous(): PrivateScope, Public, HideBySig, SpecialName
    set_Previous(Instruction): PrivateScope, Public, HideBySig, SpecialName
    get_Index(): PrivateScope, Public, HideBySig, SpecialName
    set_Index(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_SearchTarget(): PrivateScope, Public, HideBySig, SpecialName
    set_SearchTarget(SearchTarget): PrivateScope, Public, HideBySig, SpecialName
    get_IncomingLabels(): PrivateScope, Public, HideBySig, SpecialName
    get_Method(): PrivateScope, Public, HideBySig, SpecialName
    get_IL(): PrivateScope, Public, HideBySig, SpecialName
    get_Body(): PrivateScope, Public, HideBySig, SpecialName
    get_Module(): PrivateScope, Public, HideBySig, SpecialName
    get_Instrs(): PrivateScope, Public, HideBySig, SpecialName
    Clone(): PrivateScope, Public, HideBySig
    IsBefore(Instruction): PrivateScope, Public, HideBySig
    IsAfter(Instruction): PrivateScope, Public, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
    Goto(Instruction, MoveType(Optional, HasDefault), Boolean(Optional, HasDefault)): PrivateScope, Public, HideBySig
    MoveAfterLabels(): PrivateScope, Public, HideBySig
    MoveAfterLabels(Boolean): PrivateScope, Public, HideBySig
    MoveBeforeLabels(): PrivateScope, Public, HideBySig
    Goto(Int32, MoveType(Optional, HasDefault), Boolean(Optional, HasDefault)): PrivateScope, Public, HideBySig
    GotoLabel(ILLabel, MoveType(Optional, HasDefault), Boolean(Optional, HasDefault)): PrivateScope, Public, HideBySig
    GotoNext(MoveType(Optional, HasDefault), Func`2[]): PrivateScope, Public, HideBySig
    TryGotoNext(MoveType(Optional, HasDefault), Func`2[]): PrivateScope, Public, HideBySig
    GotoPrev(MoveType(Optional, HasDefault), Func`2[]): PrivateScope, Public, HideBySig
    TryGotoPrev(MoveType(Optional, HasDefault), Func`2[]): PrivateScope, Public, HideBySig
    GotoNext(Func`2[]): PrivateScope, Public, HideBySig
    TryGotoNext(Func`2[]): PrivateScope, Public, HideBySig
    GotoPrev(Func`2[]): PrivateScope, Public, HideBySig
    TryGotoPrev(Func`2[]): PrivateScope, Public, HideBySig
    FindNext(ILCursor[]&(Out), Func`2[]): PrivateScope, Public, HideBySig
    TryFindNext(ILCursor[]&(Out), Func`2[]): PrivateScope, Public, HideBySig
    FindPrev(ILCursor[]&(Out), Func`2[]): PrivateScope, Public, HideBySig
    TryFindPrev(ILCursor[]&(Out), Func`2[]): PrivateScope, Public, HideBySig
    MarkLabel(ILLabel): PrivateScope, Public, HideBySig
    MarkLabel(Instruction): PrivateScope, Public, HideBySig
    MarkLabel(): PrivateScope, Public, HideBySig
    DefineLabel(): PrivateScope, Public, HideBySig
    Remove(): PrivateScope, Public, HideBySig
    RemoveRange(Int32): PrivateScope, Public, HideBySig
    Emit(OpCode, ParameterDefinition): PrivateScope, Public, HideBySig
    Emit(OpCode, VariableDefinition): PrivateScope, Public, HideBySig
    Emit(OpCode, Instruction[]): PrivateScope, Public, HideBySig
    Emit(OpCode, Instruction): PrivateScope, Public, HideBySig
    Emit(OpCode, Double): PrivateScope, Public, HideBySig
    Emit(OpCode, Single): PrivateScope, Public, HideBySig
    Emit(OpCode, Int64): PrivateScope, Public, HideBySig
    Emit(OpCode, SByte): PrivateScope, Public, HideBySig
    Emit(OpCode, Byte): PrivateScope, Public, HideBySig
    Emit(OpCode, String): PrivateScope, Public, HideBySig
    Emit(OpCode, FieldReference): PrivateScope, Public, HideBySig
    Emit(OpCode, CallSite): PrivateScope, Public, HideBySig
    Emit(OpCode, TypeReference): PrivateScope, Public, HideBySig
    Emit(OpCode): PrivateScope, Public, HideBySig
    Emit(OpCode, Int32): PrivateScope, Public, HideBySig
    Emit(OpCode, MethodReference): PrivateScope, Public, HideBySig
    Emit(OpCode, FieldInfo): PrivateScope, Public, HideBySig
    Emit(OpCode, MethodBase): PrivateScope, Public, HideBySig
    Emit(OpCode, Type): PrivateScope, Public, HideBySig
    Emit(OpCode, Object): PrivateScope, Public, HideBySig
    Emit(OpCode, String): PrivateScope, Public, HideBySig
    AddReference(T&(In)): PrivateScope, Public, HideBySig
    EmitGetReference(Int32): PrivateScope, Public, HideBySig
    EmitReference(T&(In)): PrivateScope, Public, HideBySig
    EmitDelegate(T): PrivateScope, Public, HideBySig
    EmitAdd(): PrivateScope, Public, HideBySig
    EmitAddOvf(): PrivateScope, Public, HideBySig
    EmitAddOvfUn(): PrivateScope, Public, HideBySig
    EmitAnd(): PrivateScope, Public, HideBySig
    EmitArglist(): PrivateScope, Public, HideBySig
    EmitBeq(ILLabel): PrivateScope, Public, HideBySig
    EmitBeq(Instruction): PrivateScope, Public, HideBySig
    EmitBge(ILLabel): PrivateScope, Public, HideBySig
    EmitBge(Instruction): PrivateScope, Public, HideBySig
    EmitBgeUn(ILLabel): PrivateScope, Public, HideBySig
    EmitBgeUn(Instruction): PrivateScope, Public, HideBySig
    EmitBgt(ILLabel): PrivateScope, Public, HideBySig
    EmitBgt(Instruction): PrivateScope, Public, HideBySig
    EmitBgtUn(ILLabel): PrivateScope, Public, HideBySig
    EmitBgtUn(Instruction): PrivateScope, Public, HideBySig
    EmitBle(ILLabel): PrivateScope, Public, HideBySig
    EmitBle(Instruction): PrivateScope, Public, HideBySig
    EmitBleUn(ILLabel): PrivateScope, Public, HideBySig
    EmitBleUn(Instruction): PrivateScope, Public, HideBySig
    EmitBlt(ILLabel): PrivateScope, Public, HideBySig
    EmitBlt(Instruction): PrivateScope, Public, HideBySig
    EmitBltUn(ILLabel): PrivateScope, Public, HideBySig
    EmitBltUn(Instruction): PrivateScope, Public, HideBySig
    EmitBneUn(ILLabel): PrivateScope, Public, HideBySig
    EmitBneUn(Instruction): PrivateScope, Public, HideBySig
    EmitBox(TypeReference): PrivateScope, Public, HideBySig
    EmitBox(Type): PrivateScope, Public, HideBySig
    EmitBr(ILLabel): PrivateScope, Public, HideBySig
    EmitBr(Instruction): PrivateScope, Public, HideBySig
    EmitBreak(): PrivateScope, Public, HideBySig
    EmitBrfalse(ILLabel): PrivateScope, Public, HideBySig
    EmitBrfalse(Instruction): PrivateScope, Public, HideBySig
    EmitBrtrue(ILLabel): PrivateScope, Public, HideBySig
    EmitBrtrue(Instruction): PrivateScope, Public, HideBySig
    EmitCall(MethodReference): PrivateScope, Public, HideBySig
    EmitCall(MethodBase): PrivateScope, Public, HideBySig
    EmitCalli(IMethodSignature): PrivateScope, Public, HideBySig
    EmitCallvirt(MethodReference): PrivateScope, Public, HideBySig
    EmitCallvirt(MethodBase): PrivateScope, Public, HideBySig
    EmitCastclass(TypeReference): PrivateScope, Public, HideBySig
    EmitCastclass(Type): PrivateScope, Public, HideBySig
    EmitCeq(): PrivateScope, Public, HideBySig
    EmitCgt(): PrivateScope, Public, HideBySig
    EmitCgtUn(): PrivateScope, Public, HideBySig
    EmitCkfinite(): PrivateScope, Public, HideBySig
    EmitClt(): PrivateScope, Public, HideBySig
    EmitCltUn(): PrivateScope, Public, HideBySig
    EmitConstrained(TypeReference): PrivateScope, Public, HideBySig
    EmitConstrained(Type): PrivateScope, Public, HideBySig
    EmitConvI(): PrivateScope, Public, HideBySig
Class MonoMod.Cil.ILLabel: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
    Void .ctor(MonoMod.Cil.ILContext): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(MonoMod.Cil.ILContext, Mono.Cecil.Cil.Instruction): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    Mono.Cecil.Cil.Instruction Target 'get set' : 
    System.Collections.Generic.IEnumerable`1[Mono.Cecil.Cil.Instruction] Branches 'get ' : 
  Methods:
    get_Target(): PrivateScope, Public, HideBySig, SpecialName
    set_Target(Instruction): PrivateScope, Public, HideBySig, SpecialName
    get_Branches(): PrivateScope, Public, HideBySig, SpecialName
Class MonoMod.Cil.ILPatternMatchingExt: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Methods:
    MatchStelemR4(Instruction): PrivateScope, Public, Static, HideBySig
    MatchStelemR8(Instruction): PrivateScope, Public, Static, HideBySig
    MatchStelemRef(Instruction): PrivateScope, Public, Static, HideBySig
    MatchStfld(Instruction, FieldReference&(Out)): PrivateScope, Public, Static, HideBySig
    MatchStfld(Instruction, FieldReference): PrivateScope, Public, Static, HideBySig
    MatchStfld(Instruction, FieldInfo): PrivateScope, Public, Static, HideBySig
    MatchStfld(Instruction, Type, String): PrivateScope, Public, Static, HideBySig
    MatchStfld(Instruction, String): PrivateScope, Public, Static, HideBySig
    MatchStfld(Instruction, String, String): PrivateScope, Public, Static, HideBySig
    MatchStindI(Instruction): PrivateScope, Public, Static, HideBySig
    MatchStindI1(Instruction): PrivateScope, Public, Static, HideBySig
    MatchStindI2(Instruction): PrivateScope, Public, Static, HideBySig
    MatchStindI4(Instruction): PrivateScope, Public, Static, HideBySig
    MatchStindI8(Instruction): PrivateScope, Public, Static, HideBySig
    MatchStindR4(Instruction): PrivateScope, Public, Static, HideBySig
    MatchStindR8(Instruction): PrivateScope, Public, Static, HideBySig
    MatchStindRef(Instruction): PrivateScope, Public, Static, HideBySig
    MatchStloc0(Instruction): PrivateScope, Public, Static, HideBySig
    MatchStloc1(Instruction): PrivateScope, Public, Static, HideBySig
    MatchStloc2(Instruction): PrivateScope, Public, Static, HideBySig
    MatchStloc3(Instruction): PrivateScope, Public, Static, HideBySig
    MatchStloc(Instruction, Int32): PrivateScope, Public, Static, HideBySig
    MatchStloc(Instruction, UInt32): PrivateScope, Public, Static, HideBySig
    MatchStobj(Instruction, TypeReference&(Out)): PrivateScope, Public, Static, HideBySig
    MatchStobj(Instruction, TypeReference): PrivateScope, Public, Static, HideBySig
    MatchStobj(Instruction, Type): PrivateScope, Public, Static, HideBySig
    MatchStobj(Instruction): PrivateScope, Public, Static, HideBySig
    MatchStobj(Instruction, String): PrivateScope, Public, Static, HideBySig
    MatchStsfld(Instruction, FieldReference&(Out)): PrivateScope, Public, Static, HideBySig
    MatchStsfld(Instruction, FieldReference): PrivateScope, Public, Static, HideBySig
    MatchStsfld(Instruction, FieldInfo): PrivateScope, Public, Static, HideBySig
    MatchStsfld(Instruction, Type, String): PrivateScope, Public, Static, HideBySig
    MatchStsfld(Instruction, String): PrivateScope, Public, Static, HideBySig
    MatchStsfld(Instruction, String, String): PrivateScope, Public, Static, HideBySig
    MatchSub(Instruction): PrivateScope, Public, Static, HideBySig
    MatchSubOvf(Instruction): PrivateScope, Public, Static, HideBySig
    MatchSubOvfUn(Instruction): PrivateScope, Public, Static, HideBySig
    MatchSwitch(Instruction, ILLabel[]&(Out)): PrivateScope, Public, Static, HideBySig
    MatchSwitch(Instruction, ILLabel[]): PrivateScope, Public, Static, HideBySig
    MatchSwitch(Instruction, Instruction[]): PrivateScope, Public, Static, HideBySig
    MatchTail(Instruction): PrivateScope, Public, Static, HideBySig
    MatchThrow(Instruction): PrivateScope, Public, Static, HideBySig
    MatchUnaligned(Instruction, Byte&(Out)): PrivateScope, Public, Static, HideBySig
    MatchUnaligned(Instruction, Byte): PrivateScope, Public, Static, HideBySig
    MatchUnbox(Instruction, TypeReference&(Out)): PrivateScope, Public, Static, HideBySig
    MatchUnbox(Instruction, TypeReference): PrivateScope, Public, Static, HideBySig
    MatchUnbox(Instruction, Type): PrivateScope, Public, Static, HideBySig
    MatchUnbox(Instruction): PrivateScope, Public, Static, HideBySig
    MatchUnbox(Instruction, String): PrivateScope, Public, Static, HideBySig
    MatchUnboxAny(Instruction, TypeReference&(Out)): PrivateScope, Public, Static, HideBySig
    MatchUnboxAny(Instruction, TypeReference): PrivateScope, Public, Static, HideBySig
    MatchUnboxAny(Instruction, Type): PrivateScope, Public, Static, HideBySig
    MatchUnboxAny(Instruction): PrivateScope, Public, Static, HideBySig
    MatchUnboxAny(Instruction, String): PrivateScope, Public, Static, HideBySig
    MatchVolatile(Instruction): PrivateScope, Public, Static, HideBySig
    MatchXor(Instruction): PrivateScope, Public, Static, HideBySig
    MatchLdftn(Instruction, MethodReference): PrivateScope, Public, Static, HideBySig
    MatchLdftn(Instruction, MethodBase): PrivateScope, Public, Static, HideBySig
    MatchLdftn(Instruction, Type, String): PrivateScope, Public, Static, HideBySig
    MatchLdftn(Instruction, String): PrivateScope, Public, Static, HideBySig
    MatchLdftn(Instruction, String, String): PrivateScope, Public, Static, HideBySig
    MatchLdindI(Instruction): PrivateScope, Public, Static, HideBySig
    MatchLdindI1(Instruction): PrivateScope, Public, Static, HideBySig
    MatchLdindI2(Instruction): PrivateScope, Public, Static, HideBySig
    MatchLdindI4(Instruction): PrivateScope, Public, Static, HideBySig
    MatchLdindI8(Instruction): PrivateScope, Public, Static, HideBySig
    MatchLdindR4(Instruction): PrivateScope, Public, Static, HideBySig
    MatchLdindR8(Instruction): PrivateScope, Public, Static, HideBySig
    MatchLdindRef(Instruction): PrivateScope, Public, Static, HideBySig
    MatchLdindU1(Instruction): PrivateScope, Public, Static, HideBySig
    MatchLdindU2(Instruction): PrivateScope, Public, Static, HideBySig
    MatchLdindU4(Instruction): PrivateScope, Public, Static, HideBySig
    MatchLdlen(Instruction): PrivateScope, Public, Static, HideBySig
    MatchLdloc0(Instruction): PrivateScope, Public, Static, HideBySig
    MatchLdloc1(Instruction): PrivateScope, Public, Static, HideBySig
    MatchLdloc2(Instruction): PrivateScope, Public, Static, HideBySig
    MatchLdloc3(Instruction): PrivateScope, Public, Static, HideBySig
    MatchLdloc(Instruction, Int32): PrivateScope, Public, Static, HideBySig
    MatchLdloc(Instruction, UInt32): PrivateScope, Public, Static, HideBySig
    MatchLdloca(Instruction, Int32): PrivateScope, Public, Static, HideBySig
    MatchLdloca(Instruction, UInt32): PrivateScope, Public, Static, HideBySig
    MatchLdnull(Instruction): PrivateScope, Public, Static, HideBySig
    MatchLdobj(Instruction, TypeReference&(Out)): PrivateScope, Public, Static, HideBySig
    MatchLdobj(Instruction, TypeReference): PrivateScope, Public, Static, HideBySig
    MatchLdobj(Instruction, Type): PrivateScope, Public, Static, HideBySig
    MatchLdobj(Instruction): PrivateScope, Public, Static, HideBySig
    MatchLdobj(Instruction, String): PrivateScope, Public, Static, HideBySig
    MatchLdsfld(Instruction, FieldReference&(Out)): PrivateScope, Public, Static, HideBySig
    MatchLdsfld(Instruction, FieldReference): PrivateScope, Public, Static, HideBySig
    MatchLdsfld(Instruction, FieldInfo): PrivateScope, Public, Static, HideBySig
    MatchLdsfld(Instruction, Type, String): PrivateScope, Public, Static, HideBySig
    MatchLdsfld(Instruction, String): PrivateScope, Public, Static, HideBySig
    MatchLdsfld(Instruction, String, String): PrivateScope, Public, Static, HideBySig
    MatchLdsflda(Instruction, FieldReference&(Out)): PrivateScope, Public, Static, HideBySig
    MatchLdsflda(Instruction, FieldReference): PrivateScope, Public, Static, HideBySig
    MatchLdsflda(Instruction, FieldInfo): PrivateScope, Public, Static, HideBySig
    MatchLdsflda(Instruction, Type, String): PrivateScope, Public, Static, HideBySig
    MatchLdsflda(Instruction, String): PrivateScope, Public, Static, HideBySig
    MatchLdsflda(Instruction, String, String): PrivateScope, Public, Static, HideBySig
    MatchLdstr(Instruction, String&(Out)): PrivateScope, Public, Static, HideBySig
    MatchLdstr(Instruction, String): PrivateScope, Public, Static, HideBySig
    MatchLdtoken(Instruction, IMetadataTokenProvider&(Out)): PrivateScope, Public, Static, HideBySig
    MatchLdtoken(Instruction, IMetadataTokenProvider): PrivateScope, Public, Static, HideBySig
    MatchLdtoken(Instruction, Type): PrivateScope, Public, Static, HideBySig
    MatchLdtoken(Instruction): PrivateScope, Public, Static, HideBySig
    MatchLdtoken(Instruction, FieldInfo): PrivateScope, Public, Static, HideBySig
    MatchLdtoken(Instruction, MethodBase): PrivateScope, Public, Static, HideBySig
    MatchLdvirtftn(Instruction, MethodReference&(Out)): PrivateScope, Public, Static, HideBySig
    MatchLdvirtftn(Instruction, MethodReference): PrivateScope, Public, Static, HideBySig
    MatchLdvirtftn(Instruction, MethodBase): PrivateScope, Public, Static, HideBySig
    MatchLdvirtftn(Instruction, Type, String): PrivateScope, Public, Static, HideBySig
    MatchLdvirtftn(Instruction, String): PrivateScope, Public, Static, HideBySig
    MatchLdvirtftn(Instruction, String, String): PrivateScope, Public, Static, HideBySig
    MatchLeave(Instruction, ILLabel&(Out)): PrivateScope, Public, Static, HideBySig
    MatchLeave(Instruction, ILLabel): PrivateScope, Public, Static, HideBySig
    MatchLeave(Instruction, Instruction): PrivateScope, Public, Static, HideBySig
    MatchLocalloc(Instruction): PrivateScope, Public, Static, HideBySig
    MatchMkrefany(Instruction, TypeReference&(Out)): PrivateScope, Public, Static, HideBySig
    MatchMkrefany(Instruction, TypeReference): PrivateScope, Public, Static, HideBySig
    MatchMkrefany(Instruction, Type): PrivateScope, Public, Static, HideBySig
    MatchMkrefany(Instruction): PrivateScope, Public, Static, HideBySig
    MatchMkrefany(Instruction, String): PrivateScope, Public, Static, HideBySig
    MatchMul(Instruction): PrivateScope, Public, Static, HideBySig
    MatchMulOvf(Instruction): PrivateScope, Public, Static, HideBySig
    MatchMulOvfUn(Instruction): PrivateScope, Public, Static, HideBySig
    MatchNeg(Instruction): PrivateScope, Public, Static, HideBySig
    MatchNewarr(Instruction, TypeReference&(Out)): PrivateScope, Public, Static, HideBySig
    MatchNewarr(Instruction, TypeReference): PrivateScope, Public, Static, HideBySig
    MatchNewarr(Instruction, Type): PrivateScope, Public, Static, HideBySig
    MatchNewarr(Instruction): PrivateScope, Public, Static, HideBySig
    MatchNewarr(Instruction, String): PrivateScope, Public, Static, HideBySig
    MatchNewobj(Instruction, MethodReference&(Out)): PrivateScope, Public, Static, HideBySig
    MatchNewobj(Instruction, MethodReference): PrivateScope, Public, Static, HideBySig
    MatchNewobj(Instruction, MethodBase): PrivateScope, Public, Static, HideBySig
    MatchNewobj(Instruction, Type, String): PrivateScope, Public, Static, HideBySig
    MatchNewobj(Instruction, String): PrivateScope, Public, Static, HideBySig
    MatchNewobj(Instruction, String, String): PrivateScope, Public, Static, HideBySig
    MatchNop(Instruction): PrivateScope, Public, Static, HideBySig
    MatchNot(Instruction): PrivateScope, Public, Static, HideBySig
    MatchOr(Instruction): PrivateScope, Public, Static, HideBySig
    MatchPop(Instruction): PrivateScope, Public, Static, HideBySig
    MatchReadonly(Instruction): PrivateScope, Public, Static, HideBySig
    MatchRefanytype(Instruction): PrivateScope, Public, Static, HideBySig
    MatchRefanyval(Instruction, TypeReference&(Out)): PrivateScope, Public, Static, HideBySig
    MatchRefanyval(Instruction, TypeReference): PrivateScope, Public, Static, HideBySig
    MatchRefanyval(Instruction, Type): PrivateScope, Public, Static, HideBySig
    MatchRefanyval(Instruction): PrivateScope, Public, Static, HideBySig
    MatchRefanyval(Instruction, String): PrivateScope, Public, Static, HideBySig
    MatchRem(Instruction): PrivateScope, Public, Static, HideBySig
    MatchRemUn(Instruction): PrivateScope, Public, Static, HideBySig
    MatchRet(Instruction): PrivateScope, Public, Static, HideBySig
    MatchRethrow(Instruction): PrivateScope, Public, Static, HideBySig
    MatchShl(Instruction): PrivateScope, Public, Static, HideBySig
    MatchShr(Instruction): PrivateScope, Public, Static, HideBySig
    MatchShrUn(Instruction): PrivateScope, Public, Static, HideBySig
    MatchSizeof(Instruction, TypeReference&(Out)): PrivateScope, Public, Static, HideBySig
    MatchSizeof(Instruction, TypeReference): PrivateScope, Public, Static, HideBySig
    MatchSizeof(Instruction, Type): PrivateScope, Public, Static, HideBySig
    MatchSizeof(Instruction): PrivateScope, Public, Static, HideBySig
    MatchSizeof(Instruction, String): PrivateScope, Public, Static, HideBySig
    MatchStarg(Instruction, Int32): PrivateScope, Public, Static, HideBySig
    MatchStarg(Instruction, UInt32): PrivateScope, Public, Static, HideBySig
    MatchStelemAny(Instruction, TypeReference&(Out)): PrivateScope, Public, Static, HideBySig
    MatchStelemAny(Instruction, TypeReference): PrivateScope, Public, Static, HideBySig
    MatchStelemAny(Instruction, Type): PrivateScope, Public, Static, HideBySig
    MatchStelemAny(Instruction): PrivateScope, Public, Static, HideBySig
    MatchStelemAny(Instruction, String): PrivateScope, Public, Static, HideBySig
    MatchStelemI(Instruction): PrivateScope, Public, Static, HideBySig
    MatchStelemI1(Instruction): PrivateScope, Public, Static, HideBySig
    MatchStelemI2(Instruction): PrivateScope, Public, Static, HideBySig
    MatchStelemI4(Instruction): PrivateScope, Public, Static, HideBySig
    MatchStelemI8(Instruction): PrivateScope, Public, Static, HideBySig
    MatchClt(Instruction): PrivateScope, Public, Static, HideBySig
    MatchCltUn(Instruction): PrivateScope, Public, Static, HideBySig
    MatchConstrained(Instruction, TypeReference&(Out)): PrivateScope, Public, Static, HideBySig
    MatchConstrained(Instruction, TypeReference): PrivateScope, Public, Static, HideBySig
    MatchConstrained(Instruction, Type): PrivateScope, Public, Static, HideBySig
    MatchConstrained(Instruction): PrivateScope, Public, Static, HideBySig
    MatchConstrained(Instruction, String): PrivateScope, Public, Static, HideBySig
    MatchConvI(Instruction): PrivateScope, Public, Static, HideBySig
    MatchConvI1(Instruction): PrivateScope, Public, Static, HideBySig
    MatchConvI2(Instruction): PrivateScope, Public, Static, HideBySig
    MatchConvI4(Instruction): PrivateScope, Public, Static, HideBySig
    MatchConvI8(Instruction): PrivateScope, Public, Static, HideBySig
    MatchConvOvfI(Instruction): PrivateScope, Public, Static, HideBySig
    MatchConvOvfIUn(Instruction): PrivateScope, Public, Static, HideBySig
    MatchConvOvfI1(Instruction): PrivateScope, Public, Static, HideBySig
    MatchConvOvfI1Un(Instruction): PrivateScope, Public, Static, HideBySig
    MatchConvOvfI2(Instruction): PrivateScope, Public, Static, HideBySig
    MatchConvOvfI2Un(Instruction): PrivateScope, Public, Static, HideBySig
    MatchConvOvfI4(Instruction): PrivateScope, Public, Static, HideBySig
    MatchConvOvfI4Un(Instruction): PrivateScope, Public, Static, HideBySig
    MatchConvOvfI8(Instruction): PrivateScope, Public, Static, HideBySig
    MatchConvOvfI8Un(Instruction): PrivateScope, Public, Static, HideBySig
    MatchConvOvfU(Instruction): PrivateScope, Public, Static, HideBySig
    MatchConvOvfUUn(Instruction): PrivateScope, Public, Static, HideBySig
    MatchConvOvfU1(Instruction): PrivateScope, Public, Static, HideBySig
    MatchConvOvfU1Un(Instruction): PrivateScope, Public, Static, HideBySig
    MatchConvOvfU2(Instruction): PrivateScope, Public, Static, HideBySig
    MatchConvOvfU2Un(Instruction): PrivateScope, Public, Static, HideBySig
    MatchConvOvfU4(Instruction): PrivateScope, Public, Static, HideBySig
    MatchConvOvfU4Un(Instruction): PrivateScope, Public, Static, HideBySig
    MatchConvOvfU8(Instruction): PrivateScope, Public, Static, HideBySig
    MatchConvOvfU8Un(Instruction): PrivateScope, Public, Static, HideBySig
    MatchConvRUn(Instruction): PrivateScope, Public, Static, HideBySig
    MatchConvR4(Instruction): PrivateScope, Public, Static, HideBySig
    MatchConvR8(Instruction): PrivateScope, Public, Static, HideBySig
    MatchConvU(Instruction): PrivateScope, Public, Static, HideBySig
    MatchConvU1(Instruction): PrivateScope, Public, Static, HideBySig
    MatchConvU2(Instruction): PrivateScope, Public, Static, HideBySig
    MatchConvU4(Instruction): PrivateScope, Public, Static, HideBySig
    MatchConvU8(Instruction): PrivateScope, Public, Static, HideBySig
    MatchCpblk(Instruction): PrivateScope, Public, Static, HideBySig
    MatchCpobj(Instruction, TypeReference&(Out)): PrivateScope, Public, Static, HideBySig
    MatchCpobj(Instruction, TypeReference): PrivateScope, Public, Static, HideBySig
    MatchCpobj(Instruction, Type): PrivateScope, Public, Static, HideBySig
    MatchCpobj(Instruction): PrivateScope, Public, Static, HideBySig
    MatchCpobj(Instruction, String): PrivateScope, Public, Static, HideBySig
    MatchDiv(Instruction): PrivateScope, Public, Static, HideBySig
    MatchDivUn(Instruction): PrivateScope, Public, Static, HideBySig
    MatchDup(Instruction): PrivateScope, Public, Static, HideBySig
    MatchEndfilter(Instruction): PrivateScope, Public, Static, HideBySig
    MatchEndfinally(Instruction): PrivateScope, Public, Static, HideBySig
    MatchInitblk(Instruction): PrivateScope, Public, Static, HideBySig
    MatchInitobj(Instruction, TypeReference&(Out)): PrivateScope, Public, Static, HideBySig
    MatchInitobj(Instruction, TypeReference): PrivateScope, Public, Static, HideBySig
    MatchInitobj(Instruction, Type): PrivateScope, Public, Static, HideBySig
    MatchInitobj(Instruction): PrivateScope, Public, Static, HideBySig
    MatchInitobj(Instruction, String): PrivateScope, Public, Static, HideBySig
    MatchIsinst(Instruction, TypeReference&(Out)): PrivateScope, Public, Static, HideBySig
    MatchIsinst(Instruction, TypeReference): PrivateScope, Public, Static, HideBySig
    MatchIsinst(Instruction, Type): PrivateScope, Public, Static, HideBySig
    MatchIsinst(Instruction): PrivateScope, Public, Static, HideBySig
    MatchIsinst(Instruction, String): PrivateScope, Public, Static, HideBySig
    MatchJmp(Instruction, MethodReference&(Out)): PrivateScope, Public, Static, HideBySig
    MatchJmp(Instruction, MethodReference): PrivateScope, Public, Static, HideBySig
    MatchJmp(Instruction, MethodBase): PrivateScope, Public, Static, HideBySig
    MatchJmp(Instruction, Type, String): PrivateScope, Public, Static, HideBySig
    MatchJmp(Instruction, String): PrivateScope, Public, Static, HideBySig
    MatchJmp(Instruction, String, String): PrivateScope, Public, Static, HideBySig
    MatchLdarg0(Instruction): PrivateScope, Public, Static, HideBySig
    MatchLdarg1(Instruction): PrivateScope, Public, Static, HideBySig
    MatchLdarg2(Instruction): PrivateScope, Public, Static, HideBySig
    MatchLdarg3(Instruction): PrivateScope, Public, Static, HideBySig
    MatchLdarg(Instruction, Int32): PrivateScope, Public, Static, HideBySig
    MatchLdarg(Instruction, UInt32): PrivateScope, Public, Static, HideBySig
    MatchLdarga(Instruction, Int32): PrivateScope, Public, Static, HideBySig
    MatchLdarga(Instruction, UInt32): PrivateScope, Public, Static, HideBySig
    MatchLdcI4(Instruction, Int32): PrivateScope, Public, Static, HideBySig
    MatchLdcI4(Instruction, UInt32): PrivateScope, Public, Static, HideBySig
    MatchLdcI8(Instruction, Int64&(Out)): PrivateScope, Public, Static, HideBySig
    MatchLdcI8(Instruction, Int64): PrivateScope, Public, Static, HideBySig
    MatchLdcI8(Instruction, UInt64): PrivateScope, Public, Static, HideBySig
    MatchLdcR4(Instruction, Single&(Out)): PrivateScope, Public, Static, HideBySig
    MatchLdcR4(Instruction, Single): PrivateScope, Public, Static, HideBySig
    MatchLdcR8(Instruction, Double&(Out)): PrivateScope, Public, Static, HideBySig
    MatchLdcR8(Instruction, Double): PrivateScope, Public, Static, HideBySig
    MatchLdelemAny(Instruction, TypeReference&(Out)): PrivateScope, Public, Static, HideBySig
    MatchLdelemAny(Instruction, TypeReference): PrivateScope, Public, Static, HideBySig
    MatchLdelemAny(Instruction, Type): PrivateScope, Public, Static, HideBySig
    MatchLdelemAny(Instruction): PrivateScope, Public, Static, HideBySig
    MatchLdelemAny(Instruction, String): PrivateScope, Public, Static, HideBySig
    MatchLdelemI(Instruction): PrivateScope, Public, Static, HideBySig
    MatchLdelemI1(Instruction): PrivateScope, Public, Static, HideBySig
    MatchLdelemI2(Instruction): PrivateScope, Public, Static, HideBySig
    MatchLdelemI4(Instruction): PrivateScope, Public, Static, HideBySig
    MatchLdelemI8(Instruction): PrivateScope, Public, Static, HideBySig
    MatchLdelemR4(Instruction): PrivateScope, Public, Static, HideBySig
    MatchLdelemR8(Instruction): PrivateScope, Public, Static, HideBySig
    MatchLdelemRef(Instruction): PrivateScope, Public, Static, HideBySig
    MatchLdelemU1(Instruction): PrivateScope, Public, Static, HideBySig
    MatchLdelemU2(Instruction): PrivateScope, Public, Static, HideBySig
    MatchLdelemU4(Instruction): PrivateScope, Public, Static, HideBySig
    MatchLdelema(Instruction, TypeReference&(Out)): PrivateScope, Public, Static, HideBySig
    MatchLdelema(Instruction, TypeReference): PrivateScope, Public, Static, HideBySig
    MatchLdelema(Instruction, Type): PrivateScope, Public, Static, HideBySig
    MatchLdelema(Instruction): PrivateScope, Public, Static, HideBySig
    MatchLdelema(Instruction, String): PrivateScope, Public, Static, HideBySig
    MatchLdfld(Instruction, FieldReference&(Out)): PrivateScope, Public, Static, HideBySig
    MatchLdfld(Instruction, FieldReference): PrivateScope, Public, Static, HideBySig
    MatchLdfld(Instruction, FieldInfo): PrivateScope, Public, Static, HideBySig
    MatchLdfld(Instruction, Type, String): PrivateScope, Public, Static, HideBySig
    MatchLdfld(Instruction, String): PrivateScope, Public, Static, HideBySig
    MatchLdfld(Instruction, String, String): PrivateScope, Public, Static, HideBySig
    MatchLdflda(Instruction, FieldReference&(Out)): PrivateScope, Public, Static, HideBySig
    MatchLdflda(Instruction, FieldReference): PrivateScope, Public, Static, HideBySig
    MatchLdflda(Instruction, FieldInfo): PrivateScope, Public, Static, HideBySig
    MatchLdflda(Instruction, Type, String): PrivateScope, Public, Static, HideBySig
    MatchLdflda(Instruction, String): PrivateScope, Public, Static, HideBySig
    MatchLdflda(Instruction, String, String): PrivateScope, Public, Static, HideBySig
    MatchLdftn(Instruction, MethodReference&(Out)): PrivateScope, Public, Static, HideBySig
    Match(Instruction, OpCode): PrivateScope, Public, Static, HideBySig
    Match(Instruction, OpCode, T): PrivateScope, Public, Static, HideBySig
    Match(Instruction, OpCode, T&(Out)): PrivateScope, Public, Static, HideBySig
    MatchLeaveS(Instruction, ILLabel): PrivateScope, Public, Static, HideBySig (Obsolete)
    MatchLeaveS(Instruction, ILLabel&(Out)): PrivateScope, Public, Static, HideBySig (Obsolete)
    MatchLdarg(Instruction, Int32&(Out)): PrivateScope, Public, Static, HideBySig
    MatchStarg(Instruction, Int32&(Out)): PrivateScope, Public, Static, HideBySig
    MatchLdarga(Instruction, Int32&(Out)): PrivateScope, Public, Static, HideBySig
    MatchLdloc(Instruction, Int32&(Out)): PrivateScope, Public, Static, HideBySig
    MatchStloc(Instruction, Int32&(Out)): PrivateScope, Public, Static, HideBySig
    MatchLdloca(Instruction, Int32&(Out)): PrivateScope, Public, Static, HideBySig
    MatchLdcI4(Instruction, Int32&(Out)): PrivateScope, Public, Static, HideBySig
    MatchCallOrCallvirt(Instruction, MethodReference&(Out)): PrivateScope, Public, Static, HideBySig
    MatchNewobj(Instruction, Type): PrivateScope, Public, Static, HideBySig
    MatchNewobj(Instruction): PrivateScope, Public, Static, HideBySig
    MatchNewobj(Instruction, String): PrivateScope, Public, Static, HideBySig
    MatchAdd(Instruction): PrivateScope, Public, Static, HideBySig
    MatchAddOvf(Instruction): PrivateScope, Public, Static, HideBySig
    MatchAddOvfUn(Instruction): PrivateScope, Public, Static, HideBySig
    MatchAnd(Instruction): PrivateScope, Public, Static, HideBySig
    MatchArglist(Instruction): PrivateScope, Public, Static, HideBySig
    MatchBeq(Instruction, ILLabel&(Out)): PrivateScope, Public, Static, HideBySig
    MatchBeq(Instruction, ILLabel): PrivateScope, Public, Static, HideBySig
    MatchBeq(Instruction, Instruction): PrivateScope, Public, Static, HideBySig
    MatchBge(Instruction, ILLabel&(Out)): PrivateScope, Public, Static, HideBySig
    MatchBge(Instruction, ILLabel): PrivateScope, Public, Static, HideBySig
    MatchBge(Instruction, Instruction): PrivateScope, Public, Static, HideBySig
    MatchBgeUn(Instruction, ILLabel&(Out)): PrivateScope, Public, Static, HideBySig
    MatchBgeUn(Instruction, ILLabel): PrivateScope, Public, Static, HideBySig
    MatchBgeUn(Instruction, Instruction): PrivateScope, Public, Static, HideBySig
    MatchBgt(Instruction, ILLabel&(Out)): PrivateScope, Public, Static, HideBySig
    MatchBgt(Instruction, ILLabel): PrivateScope, Public, Static, HideBySig
    MatchBgt(Instruction, Instruction): PrivateScope, Public, Static, HideBySig
    MatchBgtUn(Instruction, ILLabel&(Out)): PrivateScope, Public, Static, HideBySig
    MatchBgtUn(Instruction, ILLabel): PrivateScope, Public, Static, HideBySig
    MatchBgtUn(Instruction, Instruction): PrivateScope, Public, Static, HideBySig
    MatchBle(Instruction, ILLabel&(Out)): PrivateScope, Public, Static, HideBySig
    MatchBle(Instruction, ILLabel): PrivateScope, Public, Static, HideBySig
    MatchBle(Instruction, Instruction): PrivateScope, Public, Static, HideBySig
    MatchBleUn(Instruction, ILLabel&(Out)): PrivateScope, Public, Static, HideBySig
    MatchBleUn(Instruction, ILLabel): PrivateScope, Public, Static, HideBySig
    MatchBleUn(Instruction, Instruction): PrivateScope, Public, Static, HideBySig
    MatchBlt(Instruction, ILLabel&(Out)): PrivateScope, Public, Static, HideBySig
    MatchBlt(Instruction, ILLabel): PrivateScope, Public, Static, HideBySig
    MatchBlt(Instruction, Instruction): PrivateScope, Public, Static, HideBySig
    MatchBltUn(Instruction, ILLabel&(Out)): PrivateScope, Public, Static, HideBySig
    MatchBltUn(Instruction, ILLabel): PrivateScope, Public, Static, HideBySig
    MatchBltUn(Instruction, Instruction): PrivateScope, Public, Static, HideBySig
    MatchBneUn(Instruction, ILLabel&(Out)): PrivateScope, Public, Static, HideBySig
    MatchBneUn(Instruction, ILLabel): PrivateScope, Public, Static, HideBySig
    MatchBneUn(Instruction, Instruction): PrivateScope, Public, Static, HideBySig
    MatchBox(Instruction, TypeReference&(Out)): PrivateScope, Public, Static, HideBySig
    MatchBox(Instruction, TypeReference): PrivateScope, Public, Static, HideBySig
    MatchBox(Instruction, Type): PrivateScope, Public, Static, HideBySig
    MatchBox(Instruction): PrivateScope, Public, Static, HideBySig
    MatchBox(Instruction, String): PrivateScope, Public, Static, HideBySig
    MatchBr(Instruction, ILLabel&(Out)): PrivateScope, Public, Static, HideBySig
    MatchBr(Instruction, ILLabel): PrivateScope, Public, Static, HideBySig
    MatchBr(Instruction, Instruction): PrivateScope, Public, Static, HideBySig
    MatchBreak(Instruction): PrivateScope, Public, Static, HideBySig
    MatchBrfalse(Instruction, ILLabel&(Out)): PrivateScope, Public, Static, HideBySig
    MatchBrfalse(Instruction, ILLabel): PrivateScope, Public, Static, HideBySig
    MatchBrfalse(Instruction, Instruction): PrivateScope, Public, Static, HideBySig
    MatchBrtrue(Instruction, ILLabel&(Out)): PrivateScope, Public, Static, HideBySig
    MatchBrtrue(Instruction, ILLabel): PrivateScope, Public, Static, HideBySig
    MatchBrtrue(Instruction, Instruction): PrivateScope, Public, Static, HideBySig
    MatchCall(Instruction, MethodReference&(Out)): PrivateScope, Public, Static, HideBySig
    MatchCall(Instruction, MethodReference): PrivateScope, Public, Static, HideBySig
    MatchCall(Instruction, MethodBase): PrivateScope, Public, Static, HideBySig
    MatchCall(Instruction, Type, String): PrivateScope, Public, Static, HideBySig
    MatchCall(Instruction, String): PrivateScope, Public, Static, HideBySig
    MatchCall(Instruction, String, String): PrivateScope, Public, Static, HideBySig
    MatchCalli(Instruction, IMethodSignature&(Out)): PrivateScope, Public, Static, HideBySig
    MatchCalli(Instruction, IMethodSignature): PrivateScope, Public, Static, HideBySig
    MatchCallvirt(Instruction, MethodReference&(Out)): PrivateScope, Public, Static, HideBySig
    MatchCallvirt(Instruction, MethodReference): PrivateScope, Public, Static, HideBySig
    MatchCallvirt(Instruction, MethodBase): PrivateScope, Public, Static, HideBySig
    MatchCallvirt(Instruction, Type, String): PrivateScope, Public, Static, HideBySig
    MatchCallvirt(Instruction, String): PrivateScope, Public, Static, HideBySig
    MatchCallvirt(Instruction, String, String): PrivateScope, Public, Static, HideBySig
    MatchCallOrCallvirt(Instruction, MethodReference): PrivateScope, Public, Static, HideBySig
    MatchCallOrCallvirt(Instruction, MethodBase): PrivateScope, Public, Static, HideBySig
    MatchCallOrCallvirt(Instruction, Type, String): PrivateScope, Public, Static, HideBySig
    MatchCallOrCallvirt(Instruction, String): PrivateScope, Public, Static, HideBySig
    MatchCallOrCallvirt(Instruction, String, String): PrivateScope, Public, Static, HideBySig
    MatchCastclass(Instruction, TypeReference&(Out)): PrivateScope, Public, Static, HideBySig
    MatchCastclass(Instruction, TypeReference): PrivateScope, Public, Static, HideBySig
    MatchCastclass(Instruction, Type): PrivateScope, Public, Static, HideBySig
    MatchCastclass(Instruction): PrivateScope, Public, Static, HideBySig
    MatchCastclass(Instruction, String): PrivateScope, Public, Static, HideBySig
    MatchCeq(Instruction): PrivateScope, Public, Static, HideBySig
    MatchCgt(Instruction): PrivateScope, Public, Static, HideBySig
    MatchCgtUn(Instruction): PrivateScope, Public, Static, HideBySig
    MatchCkfinite(Instruction): PrivateScope, Public, Static, HideBySig
Struct MonoMod.Utils.ArchitectureKind: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    MonoMod.Utils.ArchitectureKind Unknown = 0 : Public, Static, Literal, HasDefault
    MonoMod.Utils.ArchitectureKind Bits64 = 1 : Public, Static, Literal, HasDefault
    MonoMod.Utils.ArchitectureKind x86 = 2 : Public, Static, Literal, HasDefault
    MonoMod.Utils.ArchitectureKind x86_64 = 3 : Public, Static, Literal, HasDefault
    MonoMod.Utils.ArchitectureKind Arm = 4 : Public, Static, Literal, HasDefault
    MonoMod.Utils.ArchitectureKind Arm64 = 5 : Public, Static, Literal, HasDefault
Class MonoMod.Utils.AssertionFailedException: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :System.Exception
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Exception): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String Expression 'get ' : 
    System.String Message 'get ' : 
  Methods:
    get_Expression(): PrivateScope, Public, HideBySig, SpecialName
    get_Message(): PrivateScope, Public, HideBySig, SpecialName
Class MonoMod.Utils.ScopeHandlerBase: AutoLayout, AnsiClass, Class, Abstract, BeforeFieldInit
  Methods:
    EndScope(Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Struct MonoMod.Utils.DataScope: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(MonoMod.Utils.ScopeHandlerBase, System.Object): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Properties:
    System.Object Data 'get ' : 
  Methods:
    get_Data(): PrivateScope, Public, HideBySig, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class MonoMod.Utils.ScopeHandlerBase`1[T]: AutoLayout, AnsiClass, Class, Abstract, BeforeFieldInit
  Type parameter: T
  :MonoMod.Utils.ScopeHandlerBase
  Methods:
    EndScope(Object): PrivateScope, Public, Final, Virtual, HideBySig
    EndScope(T): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Struct MonoMod.Utils.DataScope`1[T]: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  Type parameter: T
  :System.ValueType
    Void .ctor(MonoMod.Utils.ScopeHandlerBase`1[T], T): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Properties:
    T Data     'get ' : 
  Methods:
    get_Data(): PrivateScope, Public, HideBySig, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Interface MonoMod.Utils.IDMDGenerator: AutoLayout, AnsiClass, Class, ClassSemanticsMask, Abstract, BeforeFieldInit
  Methods:
    Generate(DynamicMethodDefinition, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class MonoMod.Utils.DMDGenerator`1[TSelf]: AutoLayout, AnsiClass, Class, Abstract, BeforeFieldInit
  Type parameter: TSelf, MonoMod.Utils.DMDGenerator`1[TSelf],  DefaultConstructor
  Interfaces:
    MonoMod.Utils.IDMDGenerator
  Methods:
    Generate(DynamicMethodDefinition, Object(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    Postbuild(MethodInfo): PrivateScope, Assembly, Static, HideBySig
Class MonoMod.Utils.DMDCecilGenerator: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :MonoMod.Utils.DMDGenerator`1[MonoMod.Utils.DMDCecilGenerator]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class MonoMod.Utils._DMDEmit: AutoLayout, AnsiClass, Class, Abstract, Sealed
  Methods:
    Generate(DynamicMethodDefinition, MethodBase, ILGenerator): PrivateScope, Public, Static, HideBySig
    ResolveWithModifiers(TypeReference, Type&(Out), Type[]&(Out), Type[]&(Out), List`1(Optional, HasDefault), List`1(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    _EmitCallSite(DynamicMethod, ILGenerator, OpCode, CallSite): PrivateScope, Assembly, Static, HideBySig
    <_EmitCallSite>g___GetTokenForType|17_0(Type, <>c__DisplayClass17_0&): PrivateScope, Assembly, Static, HideBySig
    <_EmitCallSite>g___GetTokenForSig|17_1(Byte[], <>c__DisplayClass17_0&): PrivateScope, Assembly, Static, HideBySig
    <_EmitCallSite>g__GetTokenForType|17_2(Type, <>c__DisplayClass17_0&): PrivateScope, Assembly, Static, HideBySig
    <_EmitCallSite>g__GetTokenForSig|17_3(Byte[], <>c__DisplayClass17_0&): PrivateScope, Assembly, Static, HideBySig
    <_EmitCallSite>g__AddArgument|17_4(Type, Type[], Type[], <>c__DisplayClass17_0&): PrivateScope, Assembly, Static, HideBySig
    <_EmitCallSite>g__AddData|17_5(Int32, <>c__DisplayClass17_0&): PrivateScope, Assembly, Static, HideBySig
    <_EmitCallSite>g__ExpandArray|17_6(Byte[], Int32(Optional, HasDefault)): PrivateScope, Assembly, Static, HideBySig
    <_EmitCallSite>g__AddElementType|17_7(Byte, <>c__DisplayClass17_0&): PrivateScope, Assembly, Static, HideBySig
    <_EmitCallSite>g__AddToken|17_8(Int32, <>c__DisplayClass17_0&): PrivateScope, Assembly, Static, HideBySig
    <_EmitCallSite>g__InternalAddTypeToken|17_9(Int32, Byte, <>c__DisplayClass17_0&): PrivateScope, Assembly, Static, HideBySig
    <_EmitCallSite>g__AddOneArgTypeHelper|17_10(Type, <>c__DisplayClass17_0&): PrivateScope, Assembly, Static, HideBySig
    <_EmitCallSite>g__AddOneArgTypeHelperWorker|17_11(Type, Boolean, <>c__DisplayClass17_0&): PrivateScope, Assembly, Static, HideBySig
Class MonoMod.Utils.DMDEmitDynamicMethodGenerator: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :MonoMod.Utils.DMDGenerator`1[MonoMod.Utils.DMDEmitDynamicMethodGenerator]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class MonoMod.Utils.DMDEmitMethodBuilderGenerator: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :MonoMod.Utils.DMDGenerator`1[MonoMod.Utils.DMDEmitMethodBuilderGenerator]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    GenerateMethodBuilder(DynamicMethodDefinition, TypeBuilder): PrivateScope, Public, Static, HideBySig
Class MonoMod.Utils.DynamicData: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :System.Dynamic.DynamicObject
    Void .ctor(System.Type): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Object): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Type, System.Object): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Type, System.Object, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
    System.Collections.Generic.IEnumerable`1[System.Collections.Generic.KeyValuePair`2[System.String,System.Object]]
    System.Collections.IEnumerable
  Properties:
    System.Collections.Generic.Dictionary`2[System.String,System.Func`2[System.Object,System.Object]] Getters 'get ' : 
    System.Collections.Generic.Dictionary`2[System.String,System.Action`2[System.Object,System.Object]] Setters 'get ' : 
    System.Collections.Generic.Dictionary`2[System.String,System.Func`3[System.Object,System.Object[],System.Object]] Methods 'get ' : 
    System.Collections.Generic.Dictionary`2[System.String,System.Object] Data 'get ' : 
    Boolean IsAlive 'get ' : 
    System.Object Target 'get ' : 
    System.Type TargetType 'get set' : 
  Events:
    System.Action`3[MonoMod.Utils.DynamicData,System.Type,System.Object] OnInitialize: 
  Methods:
    add_OnInitialize(Action`3): PrivateScope, Public, Static, HideBySig, SpecialName
    remove_OnInitialize(Action`3): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Getters(): PrivateScope, Public, HideBySig, SpecialName
    get_Setters(): PrivateScope, Public, HideBySig, SpecialName
    get_Methods(): PrivateScope, Public, HideBySig, SpecialName
    get_Data(): PrivateScope, Public, HideBySig, SpecialName
    get_IsAlive(): PrivateScope, Public, HideBySig, SpecialName
    get_Target(): PrivateScope, Public, HideBySig, SpecialName
    get_TargetType(): PrivateScope, Public, HideBySig, SpecialName
    For(Object): PrivateScope, Public, Static, HideBySig
    New(Object[]): PrivateScope, Public, Static, HideBySig
    New(Type, Object[]): PrivateScope, Public, Static, HideBySig
    NewWrap(Object[]): PrivateScope, Public, Static, HideBySig
    NewWrap(Type, Object[]): PrivateScope, Public, Static, HideBySig
    Wrap(Object, Object(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    Set(T, Object(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    Set(Object, Object(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    RegisterProperty(String, Func`2, Action`2): PrivateScope, Public, HideBySig
    UnregisterProperty(String): PrivateScope, Public, HideBySig
    RegisterMethod(String, Func`3): PrivateScope, Public, HideBySig
    UnregisterMethod(String): PrivateScope, Public, HideBySig
    CopyFrom(Object): PrivateScope, Public, HideBySig
    Get(String): PrivateScope, Public, HideBySig
    TryGet(String, Object&(Out)): PrivateScope, Public, HideBySig
    Get(String): PrivateScope, Public, HideBySig
    TryGet(String, T&(Out)): PrivateScope, Public, HideBySig
    Set(String, Object): PrivateScope, Public, HideBySig
    Add(KeyValuePair`2): PrivateScope, Public, HideBySig
    Add(String, Object): PrivateScope, Public, HideBySig
    Invoke(String, Object[]): PrivateScope, Public, HideBySig
    TryInvoke(String, Object[], Object&(Out)): PrivateScope, Public, HideBySig
    Invoke(String, Object[]): PrivateScope, Public, HideBySig
    TryInvoke(String, Object[], T&(Out)): PrivateScope, Public, HideBySig
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetDynamicMemberNames(): PrivateScope, Public, Virtual, HideBySig
    TryConvert(ConvertBinder, Object&(Out)): PrivateScope, Public, Virtual, HideBySig
    TryGetMember(GetMemberBinder, Object&(Out)): PrivateScope, Public, Virtual, HideBySig
    TrySetMember(SetMemberBinder, Object): PrivateScope, Public, Virtual, HideBySig
    TryInvokeMember(InvokeMemberBinder, Object[], Object&(Out)): PrivateScope, Public, Virtual, HideBySig
    GetEnumerator(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class MonoMod.Utils.DynamicMethodDefinition: AutoLayout, AnsiClass, Class, Sealed
    Void .ctor(System.Reflection.MethodBase): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Type, System.Type[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Fields:
    Boolean _IsNewMonoSRE : Assembly, Static, InitOnly
    Boolean _IsOldMonoSRE : Assembly, Static, InitOnly
    System.Reflection.ConstructorInfo c_DebuggableAttribute : Assembly, Static, InitOnly
    System.Reflection.ConstructorInfo c_UnverifiableCodeAttribute : Assembly, Static, InitOnly
    System.Reflection.ConstructorInfo c_IgnoresAccessChecksToAttribute : Assembly, Static, InitOnly
    System.Type t__IDMDGenerator : Assembly, Static, InitOnly
    System.Collections.Concurrent.ConcurrentDictionary`2[System.String,MonoMod.Utils.IDMDGenerator] _DMDGeneratorCache : Assembly, Static, InitOnly
  Properties:
    Boolean IsDynamicILAvailable 'get ' : 
    System.Reflection.MethodBase OriginalMethod 'get ' : 
    Mono.Cecil.MethodDefinition Definition 'get ' : 
    Mono.Cecil.ModuleDefinition Module 'get ' : 
    System.String Name 'get ' : 
    Boolean Debug 'get set' : 
  Methods:
    get_IsDynamicILAvailable(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_OriginalMethod(): PrivateScope, Public, HideBySig, SpecialName
    get_Definition(): PrivateScope, Public, HideBySig, SpecialName
    get_Module(): PrivateScope, Public, HideBySig, SpecialName
    get_Name(): PrivateScope, Public, HideBySig, SpecialName
    get_Debug(): PrivateScope, Public, HideBySig, SpecialName
    set_Debug(Boolean): PrivateScope, Public, HideBySig, SpecialName
    GetILProcessor(): PrivateScope, Public, HideBySig
    GetILGenerator(): PrivateScope, Public, HideBySig
    Generate(): PrivateScope, Public, HideBySig
    Generate(Object): PrivateScope, Public, HideBySig
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetDumpName(String): PrivateScope, Public, HideBySig
Class MonoMod.Utils.DynamicMethodReference: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :Mono.Cecil.MethodReference
    Void .ctor(Mono.Cecil.ModuleDefinition, System.Reflection.MethodInfo): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Reflection.MethodInfo DynamicMethod 'get ' : 
  Methods:
    get_DynamicMethod(): PrivateScope, Public, HideBySig, SpecialName
Struct MonoMod.Utils.DynamicReferenceCell: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Int32, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IEquatable`1[MonoMod.Utils.DynamicReferenceCell]
  Properties:
    Int32 Index 'get set' : 
    Int32 Hash 'get set' : 
  Methods:
    get_Index(): PrivateScope, Public, HideBySig, SpecialName
    set_Index(Int32): PrivateScope, Assembly, HideBySig, SpecialName
    get_Hash(): PrivateScope, Public, HideBySig, SpecialName
    set_Hash(Int32): PrivateScope, Assembly, HideBySig, SpecialName
    ToString(): PrivateScope, Public, Virtual, HideBySig
    op_Inequality(DynamicReferenceCell, DynamicReferenceCell): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Equality(DynamicReferenceCell, DynamicReferenceCell): PrivateScope, Public, Static, HideBySig, SpecialName
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    Equals(DynamicReferenceCell): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class MonoMod.Utils.DynamicReferenceManager: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Methods:
    AllocReference(T&(In), DynamicReferenceCell&(Out)): PrivateScope, Public, Static, HideBySig
    GetValue(DynamicReferenceCell): PrivateScope, Public, Static, HideBySig
    GetValue(DynamicReferenceCell): PrivateScope, Public, Static, HideBySig
    GetValue(Int32, Int32): PrivateScope, Assembly, Static, HideBySig
    GetValueT(Int32, Int32): PrivateScope, Assembly, Static, HideBySig
    GetValueTUnsafe(Int32, Int32): PrivateScope, Assembly, Static, HideBySig
    SetValue(DynamicReferenceCell, T&(In)): PrivateScope, Public, Static, HideBySig
    EmitLoadReference(ILProcessor, DynamicReferenceCell): PrivateScope, Public, Static, HideBySig
    EmitLoadReference(ILCursor, DynamicReferenceCell): PrivateScope, Public, Static, HideBySig
    EmitLoadReference(ILGenerator, DynamicReferenceCell): PrivateScope, Public, Static, HideBySig
    EmitLoadTypedReference(ILProcessor, DynamicReferenceCell, Type): PrivateScope, Public, Static, HideBySig
    EmitLoadTypedReference(ILCursor, DynamicReferenceCell, Type): PrivateScope, Public, Static, HideBySig
    EmitLoadTypedReference(ILGenerator, DynamicReferenceCell, Type): PrivateScope, Public, Static, HideBySig
    EmitLoadTypedReferenceUnsafe(ILProcessor, DynamicReferenceCell, Type): PrivateScope, Assembly, Static, HideBySig
    EmitLoadTypedReferenceUnsafe(ILCursor, DynamicReferenceCell, Type): PrivateScope, Assembly, Static, HideBySig
    EmitLoadTypedReferenceUnsafe(ILGenerator, DynamicReferenceCell, Type): PrivateScope, Assembly, Static, HideBySig
    EmitNewReference(ILProcessor, Object, DynamicReferenceCell&(Out)): PrivateScope, Public, Static, HideBySig
    EmitNewReference(ILCursor, Object, DynamicReferenceCell&(Out)): PrivateScope, Public, Static, HideBySig
    EmitNewReference(ILGenerator, Object, DynamicReferenceCell&(Out)): PrivateScope, Public, Static, HideBySig
    EmitNewTypedReference(ILProcessor, T, DynamicReferenceCell&(Out)): PrivateScope, Public, Static, HideBySig
    EmitNewTypedReference(ILCursor, T, DynamicReferenceCell&(Out)): PrivateScope, Public, Static, HideBySig
    EmitNewTypedReference(ILGenerator, T, DynamicReferenceCell&(Out)): PrivateScope, Public, Static, HideBySig
Class MonoMod.Utils.DynData`1[TTarget]: AutoLayout, AnsiClass, Class, Sealed
  Type parameter: TTarget,  ReferenceType
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(TTarget): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(TTarget, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Properties:
    System.Collections.Generic.Dictionary`2[System.String,System.Func`2[TTarget,System.Object]] Getters 'get ' : 
    System.Collections.Generic.Dictionary`2[System.String,System.Action`2[TTarget,System.Object]] Setters 'get ' : 
    System.Collections.Generic.Dictionary`2[System.String,System.Object] Data 'get ' : 
    Boolean IsAlive 'get ' : 
    TTarget Target 'get ' : 
    System.Object Item [System.String] 'get set' : 
  Events:
    System.Action`2[MonoMod.Utils.DynData`1[TTarget],TTarget] OnInitialize: 
  Methods:
    add_OnInitialize(Action`2): PrivateScope, Public, Static, HideBySig, SpecialName
    remove_OnInitialize(Action`2): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Getters(): PrivateScope, Public, HideBySig, SpecialName
    get_Setters(): PrivateScope, Public, HideBySig, SpecialName
    get_Data(): PrivateScope, Public, HideBySig, SpecialName
    get_IsAlive(): PrivateScope, Public, HideBySig, SpecialName
    get_Target(): PrivateScope, Public, HideBySig, SpecialName
    get_Item(String): PrivateScope, Public, HideBySig, SpecialName
    set_Item(String, Object): PrivateScope, Public, HideBySig, SpecialName
    Get(String): PrivateScope, Public, HideBySig
    Set(String, T): PrivateScope, Public, HideBySig
    RegisterProperty(String, Func`2, Action`2): PrivateScope, Public, HideBySig
    UnregisterProperty(String): PrivateScope, Public, HideBySig
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class MonoMod.Utils.DynDll: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Methods:
    OpenLibrary(String): PrivateScope, Public, Static, HideBySig
    TryOpenLibrary(String, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig
    CloseLibrary(IntPtr): PrivateScope, Public, Static, HideBySig
    TryCloseLibrary(IntPtr): PrivateScope, Public, Static, HideBySig
    GetExport(IntPtr, String): PrivateScope, Public, Static, HideBySig
    TryGetExport(IntPtr, String, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig
Class MonoMod.Utils.Extensions: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Methods:
    SafeResolve(TypeReference): PrivateScope, Public, Static, HideBySig
    SafeResolve(FieldReference): PrivateScope, Public, Static, HideBySig
    SafeResolve(MethodReference): PrivateScope, Public, Static, HideBySig
    SafeResolve(PropertyReference): PrivateScope, Public, Static, HideBySig
    GetCustomAttribute(ICustomAttributeProvider, String): PrivateScope, Public, Static, HideBySig
    HasCustomAttribute(ICustomAttributeProvider, String): PrivateScope, Public, Static, HideBySig
    GetInt(Instruction): PrivateScope, Public, Static, HideBySig
    GetIntOrNull(Instruction): PrivateScope, Public, Static, HideBySig
    IsBaseMethodCall(MethodBody, MethodReference): PrivateScope, Public, Static, HideBySig
    IsCallvirt(MethodReference): PrivateScope, Public, Static, HideBySig
    IsStruct(TypeReference): PrivateScope, Public, Static, HideBySig
    ToLongOp(OpCode): PrivateScope, Public, Static, HideBySig
    ToShortOp(OpCode): PrivateScope, Public, Static, HideBySig
    RecalculateILOffsets(MethodDefinition): PrivateScope, Public, Static, HideBySig
    FixShortLongOps(MethodDefinition): PrivateScope, Public, Static, HideBySig
    Is(MemberInfo, MemberReference): PrivateScope, Public, Static, HideBySig
    Is(MemberReference, MemberInfo): PrivateScope, Public, Static, HideBySig
    ImportReference(ModuleDefinition, IMetadataTokenProvider): PrivateScope, Public, Static, HideBySig
    AddRange(Collection`1, IEnumerable`1): PrivateScope, Public, Static, HideBySig
    AddRange(IDictionary, IDictionary): PrivateScope, Public, Static, HideBySig
    AddRange(IDictionary`2, IDictionary`2): PrivateScope, Public, Static, HideBySig
    AddRange(Dictionary`2, Dictionary`2): PrivateScope, Public, Static, HideBySig
    InsertRange(Collection`1, Int32, IEnumerable`1): PrivateScope, Public, Static, HideBySig
    IsCompatible(Type, Type): PrivateScope, Public, Static, HideBySig
    GetDeclaredMember(T): PrivateScope, Public, Static, HideBySig
    SetMonoCorlibInternal(Assembly, Boolean): PrivateScope, Public, Static, HideBySig
    IsDynamicMethod(MethodBase): PrivateScope, Public, Static, HideBySig
    SafeGetTarget(WeakReference): PrivateScope, Public, Static, HideBySig
    SafeGetIsAlive(WeakReference): PrivateScope, Public, Static, HideBySig
    CreateDelegate(MethodBase): PrivateScope, Public, Static, HideBySig
    CreateDelegate(MethodBase, Object): PrivateScope, Public, Static, HideBySig
    CreateDelegate(MethodBase, Type): PrivateScope, Public, Static, HideBySig
    CreateDelegate(MethodBase, Type, Object): PrivateScope, Public, Static, HideBySig
    TryCreateDelegate(MethodInfo): PrivateScope, Public, Static, HideBySig
    FindMethod(TypeDefinition, String, Boolean(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    FindMethodDeep(TypeDefinition, String, Boolean(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    FindMethod(Type, String, Boolean(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    FindMethodDeep(Type, String, Boolean(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    FindProperty(TypeDefinition, String): PrivateScope, Public, Static, HideBySig
    FindPropertyDeep(TypeDefinition, String): PrivateScope, Public, Static, HideBySig
    FindField(TypeDefinition, String): PrivateScope, Public, Static, HideBySig
    FindFieldDeep(TypeDefinition, String): PrivateScope, Public, Static, HideBySig
    FindEvent(TypeDefinition, String): PrivateScope, Public, Static, HideBySig
    FindEventDeep(TypeDefinition, String): PrivateScope, Public, Static, HideBySig
    GetID(MethodReference, String(Optional, HasDefault), String(Optional, HasDefault), Boolean(Optional, HasDefault), Boolean(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    GetID(CallSite): PrivateScope, Public, Static, HideBySig
    GetID(MethodBase, String(Optional, HasDefault), String(Optional, HasDefault), Boolean(Optional, HasDefault), Boolean(Optional, HasDefault), Boolean(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    GetPatchName(MemberReference): PrivateScope, Public, Static, HideBySig
    GetPatchFullName(MemberReference): PrivateScope, Public, Static, HideBySig
    Clone(MethodDefinition, MethodDefinition(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    Clone(MethodBody, MethodDefinition): PrivateScope, Public, Static, HideBySig
    Update(GenericParameter, Int32, GenericParameterType): PrivateScope, Public, Static, HideBySig
    ResolveGenericParameter(IGenericParameterProvider, GenericParameter): PrivateScope, Public, Static, HideBySig
    Relink(IMetadataTokenProvider, Relinker, IGenericParameterProvider): PrivateScope, Public, Static, HideBySig
    Relink(TypeReference, Relinker, IGenericParameterProvider): PrivateScope, Public, Static, HideBySig
    Relink(GenericParameterConstraint, Relinker, IGenericParameterProvider): PrivateScope, Public, Static, HideBySig
    Relink(MethodReference, Relinker, IGenericParameterProvider): PrivateScope, Public, Static, HideBySig
    Relink(CallSite, Relinker, IGenericParameterProvider): PrivateScope, Public, Static, HideBySig
    Relink(FieldReference, Relinker, IGenericParameterProvider): PrivateScope, Public, Static, HideBySig
    Relink(ParameterDefinition, Relinker, IGenericParameterProvider): PrivateScope, Public, Static, HideBySig
    Clone(ParameterDefinition): PrivateScope, Public, Static, HideBySig
    Relink(CustomAttribute, Relinker, IGenericParameterProvider): PrivateScope, Public, Static, HideBySig
    Clone(CustomAttribute): PrivateScope, Public, Static, HideBySig
    Relink(GenericParameter, Relinker, IGenericParameterProvider): PrivateScope, Public, Static, HideBySig
    Clone(GenericParameter): PrivateScope, Public, Static, HideBySig
    GetManagedSize(Type): PrivateScope, Public, Static, HideBySig
    GetThisParamType(MethodBase): PrivateScope, Public, Static, HideBySig
    GetLdftnPointer(MethodBase): PrivateScope, Public, Static, HideBySig
    ToHexadecimalString(Byte[]): PrivateScope, Public, Static, HideBySig
    InvokePassing(MulticastDelegate, T, Object[]): PrivateScope, Public, Static, HideBySig
    InvokeWhileTrue(MulticastDelegate, Object[]): PrivateScope, Public, Static, HideBySig
    InvokeWhileFalse(MulticastDelegate, Object[]): PrivateScope, Public, Static, HideBySig
    InvokeWhileNull(MulticastDelegate, Object[]): PrivateScope, Public, Static, HideBySig
    SpacedPascalCase(String): PrivateScope, Public, Static, HideBySig
    ReadNullTerminatedString(BinaryReader): PrivateScope, Public, Static, HideBySig
    WriteNullTerminatedString(BinaryWriter, String): PrivateScope, Public, Static, HideBySig
    CastDelegate(Delegate): PrivateScope, Public, Static, HideBySig
    CastDelegate(Delegate, Type): PrivateScope, Public, Static, HideBySig
    TryCastDelegate(Delegate, T&(Out)): PrivateScope, Public, Static, HideBySig
    TryCastDelegate(Delegate, Type, Delegate&(Out)): PrivateScope, Public, Static, HideBySig
    GetStateMachineTarget(MethodInfo): PrivateScope, Public, Static, HideBySig
    GetActualGenericMethodDefinition(MethodInfo): PrivateScope, Public, Static, HideBySig
    GetUnfilledMethodOnGenericType(MethodBase): PrivateScope, Public, Static, HideBySig
    Is(MemberReference, String): PrivateScope, Public, Static, HideBySig
    Is(MemberReference, String, String): PrivateScope, Public, Static, HideBySig
    Is(MemberReference, Type, String): PrivateScope, Public, Static, HideBySig
    Is(MethodReference, String): PrivateScope, Public, Static, HideBySig
    Is(MethodReference, String, String): PrivateScope, Public, Static, HideBySig
    Is(MethodReference, Type, String): PrivateScope, Public, Static, HideBySig
    ReplaceOperands(ILProcessor, Object, Object): PrivateScope, Public, Static, HideBySig
    Import(ILProcessor, FieldInfo): PrivateScope, Public, Static, HideBySig
    Import(ILProcessor, MethodBase): PrivateScope, Public, Static, HideBySig
    Import(ILProcessor, Type): PrivateScope, Public, Static, HideBySig
    Import(ILProcessor, MemberInfo): PrivateScope, Public, Static, HideBySig
    Create(ILProcessor, OpCode, FieldInfo): PrivateScope, Public, Static, HideBySig
    Create(ILProcessor, OpCode, MethodBase): PrivateScope, Public, Static, HideBySig
    Create(ILProcessor, OpCode, Type): PrivateScope, Public, Static, HideBySig
    Create(ILProcessor, OpCode, Object): PrivateScope, Public, Static, HideBySig
    Create(ILProcessor, OpCode, MemberInfo): PrivateScope, Public, Static, HideBySig
    Emit(ILProcessor, OpCode, FieldInfo): PrivateScope, Public, Static, HideBySig
    Emit(ILProcessor, OpCode, MethodBase): PrivateScope, Public, Static, HideBySig
    Emit(ILProcessor, OpCode, Type): PrivateScope, Public, Static, HideBySig
    Emit(ILProcessor, OpCode, MemberInfo): PrivateScope, Public, Static, HideBySig
    Emit(ILProcessor, OpCode, Object): PrivateScope, Public, Static, HideBySig
Class MonoMod.Utils.Relinker: AutoLayout, AnsiClass, Class, Sealed
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(IMetadataTokenProvider, IGenericParameterProvider): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(IMetadataTokenProvider, IGenericParameterProvider, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class MonoMod.Utils.WeakBox: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    System.Object Value : Public
Class MonoMod.Utils.FastReflectionHelper: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Methods:
    GetFastStructInvoker(MethodBase): PrivateScope, Public, Static, HideBySig
    GetFastStructInvoker(FieldInfo): PrivateScope, Public, Static, HideBySig
    GetFastStructInvoker(MemberInfo): PrivateScope, Public, Static, HideBySig
    GetFastInvoker(MethodBase): PrivateScope, Public, Static, HideBySig
    GetFastInvoker(FieldInfo): PrivateScope, Public, Static, HideBySig
    GetFastInvoker(MemberInfo): PrivateScope, Public, Static, HideBySig
    <CheckArgs>g__ThrowArgumentOutOfRange|28_0(): PrivateScope, Assembly, Static, HideBySig
Class MonoMod.Utils.FastReflectionHelper+FastInvoker: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(Object, Object[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(Object, Object[], AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class MonoMod.Utils.FastReflectionHelper+FastStructInvoker: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(Object, Object, Object[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(Object, Object, Object[], AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class MonoMod.Utils.GenericMethodInstantiationComparer: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Collections.Generic.IEqualityComparer`1[System.Type]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Collections.Generic.IEqualityComparer`1[System.Reflection.MethodBase]
  Fields:
    System.Type CannonicalFillType : Assembly, Static
  Methods:
    Equals(MethodBase, MethodBase): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetHashCode(MethodBase): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class MonoMod.Utils.GenericTypeInstantiationComparer: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Collections.Generic.IEqualityComparer`1[System.Type]
  Methods:
    Equals(Type, Type): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetHashCode(Type): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class MonoMod.Utils.Helpers: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Methods:
    Swap(T&, T&): PrivateScope, Public, Static, HideBySig
    Has(T, T): PrivateScope, Public, Static, HideBySig
    ThrowIfArgumentNull(T, String(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    ThrowIfNull(T, String(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    EventAdd(T&, T): PrivateScope, Public, Static, HideBySig
    EventRemove(T&, T): PrivateScope, Public, Static, HideBySig
    Assert(Boolean, String(Optional, HasDefault), String(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    DAssert(Boolean, String(Optional, HasDefault), String(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    Assert(Boolean, AssertionInterpolatedStringHandler&, String(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    DAssert(Boolean, AssertionInterpolatedStringHandler&, String(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    GetOrInit(T&, Func`1): PrivateScope, Public, Static, HideBySig
    GetOrInitWithLock(T&, Object, Func`1): PrivateScope, Public, Static, HideBySig
    GetOrInit(T&, IntPtr): PrivateScope, Public, Static, HideBySig
    GetOrInitWithLock(T&, Object, IntPtr): PrivateScope, Public, Static, HideBySig
    GetOrInit(T&, IntPtr, TParam): PrivateScope, Public, Static, HideBySig
    GetOrInitWithLock(T&, Object, IntPtr, TParam): PrivateScope, Public, Static, HideBySig
    MaskedSequenceEqual(ReadOnlySpan`1, ReadOnlySpan`1, ReadOnlySpan`1): PrivateScope, Public, Static, HideBySig
    ReadAllBytes(String): PrivateScope, Public, Static, HideBySig
Struct MonoMod.Utils.AssertionInterpolatedStringHandler: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit (Obsolete)
  :System.ValueType
    Void .ctor(Int32, Int32, Boolean, Boolean ByRef): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    ToString(): PrivateScope, Public, Virtual, HideBySig
    ToStringAndClear(): PrivateScope, Public, HideBySig
    AppendLiteral(String): PrivateScope, Public, HideBySig
    AppendFormatted(String): PrivateScope, Public, HideBySig
    AppendFormatted(String, Int32(Optional, HasDefault), String(Optional, HasDefault)): PrivateScope, Public, HideBySig
    AppendFormatted(ReadOnlySpan`1): PrivateScope, Public, HideBySig
    AppendFormatted(ReadOnlySpan`1, Int32(Optional, HasDefault), String(Optional, HasDefault)): PrivateScope, Public, HideBySig
    AppendFormatted(T): PrivateScope, Public, HideBySig
    AppendFormatted(T, Int32): PrivateScope, Public, HideBySig
    AppendFormatted(T, String): PrivateScope, Public, HideBySig
    AppendFormatted(T, Int32, String): PrivateScope, Public, HideBySig
Interface MonoMod.Utils.ICallSiteGenerator: AutoLayout, AnsiClass, Class, ClassSemanticsMask, Abstract, BeforeFieldInit
  Methods:
    ToCallSite(ModuleDefinition): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class MonoMod.Utils.LazyDisposable: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Action): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Events:
    System.Action OnDispose: 
  Methods:
    add_OnDispose(Action): PrivateScope, Public, HideBySig, SpecialName
    remove_OnDispose(Action): PrivateScope, Public, HideBySig, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class MonoMod.Utils.LazyDisposable`1[T]: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  Type parameter: T
    Void .ctor(T): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(T, System.Action`1[T]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Events:
    System.Action`1[T] OnDispose: 
  Methods:
    add_OnDispose(Action`1): PrivateScope, Public, HideBySig, SpecialName
    remove_OnDispose(Action`1): PrivateScope, Public, HideBySig, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class MonoMod.Utils.MethodSignature: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
    Void .ctor(System.Type, System.Type[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Type, System.Collections.Generic.IEnumerable`1[System.Type]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Reflection.MethodBase): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Reflection.MethodBase, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IEquatable`1[MonoMod.Utils.MethodSignature]
    MonoMod.Logs.IDebugFormattable
  Properties:
    System.Type ReturnType 'get ' : 
    Int32 ParameterCount 'get ' : 
    System.Collections.Generic.IEnumerable`1[System.Type] Parameters 'get ' : 
    System.Type FirstParameter 'get ' : 
  Methods:
    get_ReturnType(): PrivateScope, Public, HideBySig, SpecialName
    get_ParameterCount(): PrivateScope, Public, HideBySig, SpecialName
    get_Parameters(): PrivateScope, Public, HideBySig, SpecialName
    get_FirstParameter(): PrivateScope, Public, HideBySig, SpecialName
    ForMethod(MethodBase): PrivateScope, Public, Static, HideBySig
    ForMethod(MethodBase, Boolean): PrivateScope, Public, Static, HideBySig
    IsCompatibleWith(MethodSignature): PrivateScope, Public, HideBySig
    CreateDmd(String): PrivateScope, Public, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
    Equals(MethodSignature): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
Class MonoMod.Utils.MMReflectionImporter: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
    Void .ctor(Mono.Cecil.ModuleDefinition): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Mono.Cecil.IReflectionImporter
  Fields:
    Mono.Cecil.IReflectionImporterProvider Provider : Public, Static, InitOnly
    Mono.Cecil.IReflectionImporterProvider ProviderNoDefault : Public, Static, InitOnly
  Properties:
    Boolean UseDefault 'get set' : 
  Methods:
    get_UseDefault(): PrivateScope, Public, HideBySig, SpecialName
    set_UseDefault(Boolean): PrivateScope, Public, HideBySig, SpecialName
    ImportReference(AssemblyName): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask (Obsolete)
    ImportReference(Assembly): PrivateScope, Public, HideBySig
    ImportModuleType(Module, IGenericParameterProvider): PrivateScope, Public, HideBySig
    ImportReference(Type, IGenericParameterProvider): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ImportReference(FieldInfo, IGenericParameterProvider): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ImportReference(MethodBase, IGenericParameterProvider): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Struct MonoMod.Utils.OSKind: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    MonoMod.Utils.OSKind Unknown = 0 : Public, Static, Literal, HasDefault
    MonoMod.Utils.OSKind Posix = 1 : Public, Static, Literal, HasDefault
    MonoMod.Utils.OSKind Linux = 9 : Public, Static, Literal, HasDefault
    MonoMod.Utils.OSKind Android = 41 : Public, Static, Literal, HasDefault
    MonoMod.Utils.OSKind OSX = 5 : Public, Static, Literal, HasDefault
    MonoMod.Utils.OSKind IOS = 37 : Public, Static, Literal, HasDefault
    MonoMod.Utils.OSKind BSD = 17 : Public, Static, Literal, HasDefault
    MonoMod.Utils.OSKind Windows = 2 : Public, Static, Literal, HasDefault
    MonoMod.Utils.OSKind Wine = 34 : Public, Static, Literal, HasDefault
Class MonoMod.Utils.OSKindExtensions: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Methods:
    Is(OSKind, OSKind): PrivateScope, Public, Static, HideBySig
    GetKernel(OSKind): PrivateScope, Public, Static, HideBySig
    GetSubtypeId(OSKind): PrivateScope, Public, Static, HideBySig
Class MonoMod.Utils.PlatformDetection: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Properties:
    MonoMod.Utils.OSKind OS 'get ' : 
    MonoMod.Utils.ArchitectureKind Architecture 'get ' : 
    MonoMod.Utils.RuntimeKind Runtime 'get ' : 
    System.Version RuntimeVersion 'get ' : 
  Methods:
    get_OS(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Architecture(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Runtime(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_RuntimeVersion(): PrivateScope, Public, Static, HideBySig, SpecialName
    <PosixUname>g__Libc|9_0(Byte*): PrivateScope, Assembly, Static, HideBySig
    <PosixUname>g__Osx|9_1(Byte*): PrivateScope, Assembly, Static, HideBySig
Class MonoMod.Utils.ReflectionHelper: AutoLayout, AnsiClass, Class, Abstract, Sealed
  Fields:
    Boolean IsCoreBCL : Assembly, Static, InitOnly
    System.Collections.Generic.Dictionary`2[System.String,System.WeakReference] AssemblyCache : Assembly, Static, InitOnly
    System.Collections.Generic.Dictionary`2[System.String,System.WeakReference[]] AssembliesCache : Assembly, Static, InitOnly
    System.Collections.Generic.Dictionary`2[System.String,System.WeakReference] ResolveReflectionCache : Assembly, Static, InitOnly
    Byte[] AssemblyHashPrefix : Public, Static, InitOnly
    System.String AssemblyHashNameTag : Public, Static, InitOnly
  Methods:
    Load(ModuleDefinition): PrivateScope, Public, Static, HideBySig
    Load(Stream): PrivateScope, Public, Static, HideBySig
    GetType(String): PrivateScope, Public, Static, HideBySig
    ApplyRuntimeHash(AssemblyNameReference, Assembly): PrivateScope, Public, Static, HideBySig
    GetRuntimeHashedFullName(Assembly): PrivateScope, Public, Static, HideBySig
    GetRuntimeHashedFullName(AssemblyNameReference): PrivateScope, Public, Static, HideBySig
    ResolveReflection(TypeReference): PrivateScope, Public, Static, HideBySig
    ResolveReflection(MethodReference): PrivateScope, Public, Static, HideBySig
    ResolveReflection(FieldReference): PrivateScope, Public, Static, HideBySig
    ResolveReflection(PropertyReference): PrivateScope, Public, Static, HideBySig
    ResolveReflection(EventReference): PrivateScope, Public, Static, HideBySig
    ResolveReflection(MemberReference): PrivateScope, Public, Static, HideBySig
    ResolveReflection(CallSite, Module): PrivateScope, Public, Static, HideBySig
    ResolveReflectionSignature(IMethodSignature, Module): PrivateScope, Public, Static, HideBySig
    FixReflectionCacheAuto(Type): PrivateScope, Public, Static, HideBySig
    FixReflectionCache(Type): PrivateScope, Public, Static, HideBySig
    GetModuleType(Module): PrivateScope, Public, Static, HideBySig
    GetRealDeclaringType(MemberInfo): PrivateScope, Public, Static, HideBySig
    ImportCallSite(ModuleDefinition, ICallSiteGenerator): PrivateScope, Public, Static, HideBySig
    ImportCallSite(ModuleDefinition, SignatureHelper): PrivateScope, Public, Static, HideBySig
    ImportCallSite(ModuleDefinition, Module, Int32): PrivateScope, Public, Static, HideBySig
    ImportCallSite(ModuleDefinition, Module, Byte[]): PrivateScope, Public, Static, HideBySig
    <ImportCallSite>g__ReadMethodSignature|50_0(IMethodSignature, <>c__DisplayClass50_0&, <>c__DisplayClass50_1&): PrivateScope, Assembly, Static, HideBySig
    <ImportCallSite>g__ReadCompressedUInt32|50_1(<>c__DisplayClass50_1&): PrivateScope, Assembly, Static, HideBySig
    <ImportCallSite>g__ReadCompressedInt32|50_2(<>c__DisplayClass50_1&): PrivateScope, Assembly, Static, HideBySig
    <ImportCallSite>g__GetTypeDefOrRef|50_3(<>c__DisplayClass50_0&, <>c__DisplayClass50_1&): PrivateScope, Assembly, Static, HideBySig
    <ImportCallSite>g__ReadTypeSignature|50_4(<>c__DisplayClass50_0&, <>c__DisplayClass50_1&): PrivateScope, Assembly, Static, HideBySig
Class MonoMod.Utils.RelinkFailedException: AutoLayout, AnsiClass, Class, Serializable, BeforeFieldInit
  :System.Exception
    Void .ctor(Mono.Cecil.IMetadataTokenProvider, Mono.Cecil.IMetadataTokenProvider): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, Mono.Cecil.IMetadataTokenProvider, Mono.Cecil.IMetadataTokenProvider): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Exception, Mono.Cecil.IMetadataTokenProvider, Mono.Cecil.IMetadataTokenProvider): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    System.String DefaultMessage = MonoMod failed relinking : Public, Static, Literal, HasDefault
  Properties:
    Mono.Cecil.IMetadataTokenProvider MTP 'get ' : 
    Mono.Cecil.IMetadataTokenProvider Context 'get ' : 
  Methods:
    get_MTP(): PrivateScope, Public, HideBySig, SpecialName
    get_Context(): PrivateScope, Public, HideBySig, SpecialName
Class MonoMod.Utils.RelinkTargetNotFoundException: AutoLayout, AnsiClass, Class, Serializable, BeforeFieldInit
  :MonoMod.Utils.RelinkFailedException
    Void .ctor(Mono.Cecil.IMetadataTokenProvider, Mono.Cecil.IMetadataTokenProvider): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, Mono.Cecil.IMetadataTokenProvider, Mono.Cecil.IMetadataTokenProvider): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Exception, Mono.Cecil.IMetadataTokenProvider, Mono.Cecil.IMetadataTokenProvider): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    System.String DefaultMessage = MonoMod relinker failed finding : Public, Static, Literal, HasDefault
Struct MonoMod.Utils.RuntimeKind: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    MonoMod.Utils.RuntimeKind Unknown = 0 : Public, Static, Literal, HasDefault
    MonoMod.Utils.RuntimeKind Framework = 1 : Public, Static, Literal, HasDefault
    MonoMod.Utils.RuntimeKind CoreCLR = 2 : Public, Static, Literal, HasDefault
    MonoMod.Utils.RuntimeKind Mono = 3 : Public, Static, Literal, HasDefault
Class MonoMod.Utils.WeakReferenceComparer: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :System.Collections.Generic.EqualityComparer`1[System.WeakReference]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Equals(WeakReference, WeakReference): PrivateScope, Public, Virtual, HideBySig
    GetHashCode(WeakReference): PrivateScope, Public, Virtual, HideBySig
Class MonoMod.Utils.AssemblyInfo: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Fields:
    System.String AssemblyName = MonoMod.Utils : Public, Static, Literal, HasDefault
    System.String AssemblyVersion = 25.0.4 : Public, Static, Literal, HasDefault
Class MonoMod.Utils.Interop.OSX: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Fields:
    System.String LibSystem = libSystem : Public, Static, Literal, HasDefault
  Methods:
    Uname(Byte*): PrivateScope, Public, Static, HideBySig, PinvokeImpl
Class MonoMod.Utils.Interop.Unix: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Fields:
    System.String LibC = libc : Public, Static, Literal, HasDefault
    System.String DL1 = dl : Public, Static, Literal, HasDefault
    System.String DL2 = libdl.so.2 : Public, Static, Literal, HasDefault
    Int32 AT_PLATFORM = 15 : Public, Static, Literal, HasDefault
  Methods:
    Uname(Byte*): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    MarshalToUtf8(String): PrivateScope, Assembly, Static, HideBySig
    FreeMarshalledArray(Byte[]): PrivateScope, Assembly, Static, HideBySig
    DlOpen(String, DlopenFlags): PrivateScope, Public, Static, HideBySig
    DlClose(IntPtr): PrivateScope, Public, Static, HideBySig
    DlSym(IntPtr, String): PrivateScope, Public, Static, HideBySig
    DlError(): PrivateScope, Public, Static, HideBySig
Struct MonoMod.Utils.Interop.Unix+LinuxAuxvEntry: AutoLayout, AnsiClass, Class, NestedPublic, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    IntPtr Key : Public
    IntPtr Value : Public
Struct MonoMod.Utils.Interop.Unix+DlopenFlags: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    DlopenFlags RTLD_LAZY = 1 : Public, Static, Literal, HasDefault
    DlopenFlags RTLD_NOW = 2 : Public, Static, Literal, HasDefault
    DlopenFlags RTLD_LOCAL = 0 : Public, Static, Literal, HasDefault
    DlopenFlags RTLD_GLOBAL = 256 : Public, Static, Literal, HasDefault
Class MonoMod.Utils.Interop.Windows: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Fields:
    Int32 PROCESSOR_ARCHITECTURE_INTEL = 0 : Public, Static, Literal, HasDefault
    Int32 PROCESSOR_ARCHITECTURE_MIPS = 1 : Public, Static, Literal, HasDefault
    Int32 PROCESSOR_ARCHITECTURE_ALPHA = 2 : Public, Static, Literal, HasDefault
    Int32 PROCESSOR_ARCHITECTURE_PPC = 3 : Public, Static, Literal, HasDefault
    Int32 PROCESSOR_ARCHITECTURE_SHX = 4 : Public, Static, Literal, HasDefault
    Int32 PROCESSOR_ARCHITECTURE_ARM = 5 : Public, Static, Literal, HasDefault
    Int32 PROCESSOR_ARCHITECTURE_IA64 = 6 : Public, Static, Literal, HasDefault
    Int32 PROCESSOR_ARCHITECTURE_ALPHA64 = 7 : Public, Static, Literal, HasDefault
    Int32 PROCESSOR_ARCHITECTURE_MSIL = 8 : Public, Static, Literal, HasDefault
    Int32 PROCESSOR_ARCHITECTURE_AMD64 = 9 : Public, Static, Literal, HasDefault
    Int32 PROCESSOR_ARCHITECTURE_IA32_ON_WIN64 = 10 : Public, Static, Literal, HasDefault
    Int32 PROCESSOR_ARCHITECTURE_NEUTRAL = 11 : Public, Static, Literal, HasDefault
    Int32 PROCESSOR_ARCHITECTURE_ARM64 = 12 : Public, Static, Literal, HasDefault
    Int32 PROCESSOR_ARCHITECTURE_ARM32_ON_WIN64 = 13 : Public, Static, Literal, HasDefault
    Int32 PROCESSOR_ARCHITECTURE_IA32_ON_ARM64 = 14 : Public, Static, Literal, HasDefault
    Int32 PROCESSOR_ARCHITECTURE_UNKNOWN = 65535 : Public, Static, Literal, HasDefault
  Methods:
    GetSystemInfo(SYSTEM_INFO*): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    GetModuleHandleW(UInt16*): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    GetProcAddress(HMODULE, SByte*): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    LoadLibraryW(UInt16*): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    FreeLibrary(HMODULE): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    GetLastError(): PrivateScope, Public, Static, HideBySig, PinvokeImpl
Struct MonoMod.Utils.Interop.Windows+SYSTEM_INFO: AutoLayout, AnsiClass, Class, NestedPublic, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    _Anonymous_e__Union Anonymous : Public
    UInt32 dwPageSize : Public
    Void* lpMinimumApplicationAddress : Public
    Void* lpMaximumApplicationAddress : Public
    UIntPtr dwActiveProcessorMask : Public
    UInt32 dwNumberOfProcessors : Public
    UInt32 dwProcessorType : Public
    UInt32 dwAllocationGranularity : Public
    UInt16 wProcessorLevel : Public
    UInt16 wProcessorRevision : Public
  Properties:
    UInt32& dwOemId 'get ' : 
    UInt16& wProcessorArchitecture 'get ' : 
    UInt16& wReserved 'get ' : 
  Methods:
    get_dwOemId(): PrivateScope, Public, HideBySig, SpecialName
    get_wProcessorArchitecture(): PrivateScope, Public, HideBySig, SpecialName
    get_wReserved(): PrivateScope, Public, HideBySig, SpecialName
Struct MonoMod.Utils.Interop.Windows+SYSTEM_INFO+_Anonymous_e__Union: AutoLayout, AnsiClass, Class, NestedPublic, ExplicitLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    UInt32 dwOemId : Public
    _Anonymous_e__Struct Anonymous : Public
Struct MonoMod.Utils.Interop.Windows+SYSTEM_INFO+_Anonymous_e__Union+_Anonymous_e__Struct: AutoLayout, AnsiClass, Class, NestedPublic, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    UInt16 wProcessorArchitecture : Public
    UInt16 wReserved : Public
Struct MonoMod.Utils.Interop.Windows+BOOL: AutoLayout, AnsiClass, Class, NestedPublic, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IComparable
    System.IComparable`1[MonoMod.Utils.Interop.Windows+BOOL]
    System.IEquatable`1[MonoMod.Utils.Interop.Windows+BOOL]
    System.IFormattable
  Fields:
    Int32 Value : Public, InitOnly
  Properties:
    BOOL FALSE 'get ' : 
    BOOL TRUE  'get ' : 
  Methods:
    get_FALSE(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_TRUE(): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Equality(BOOL, BOOL): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Inequality(BOOL, BOOL): PrivateScope, Public, Static, HideBySig, SpecialName
    op_LessThan(BOOL, BOOL): PrivateScope, Public, Static, HideBySig, SpecialName
    op_LessThanOrEqual(BOOL, BOOL): PrivateScope, Public, Static, HideBySig, SpecialName
    op_GreaterThan(BOOL, BOOL): PrivateScope, Public, Static, HideBySig, SpecialName
    op_GreaterThanOrEqual(BOOL, BOOL): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Implicit(BOOL): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Implicit(Boolean): PrivateScope, Public, Static, HideBySig, SpecialName
    op_False(BOOL): PrivateScope, Public, Static, HideBySig, SpecialName
    op_True(BOOL): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Implicit(Byte): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Explicit(BOOL): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Implicit(Int16): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Explicit(BOOL): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Implicit(Int32): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Implicit(BOOL): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Explicit(Int64): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Implicit(BOOL): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Explicit(IntPtr): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Implicit(BOOL): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Implicit(SByte): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Explicit(BOOL): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Implicit(UInt16): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Explicit(BOOL): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Explicit(UInt32): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Explicit(BOOL): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Explicit(UInt64): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Explicit(BOOL): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Explicit(UIntPtr): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Explicit(BOOL): PrivateScope, Public, Static, HideBySig, SpecialName
    CompareTo(Object): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CompareTo(BOOL): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    Equals(BOOL): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
    ToString(String, IFormatProvider): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Struct MonoMod.Utils.Interop.Windows+HANDLE: AutoLayout, AnsiClass, Class, NestedPublic, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Void*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IComparable
    System.IComparable`1[MonoMod.Utils.Interop.Windows+HANDLE]
    System.IEquatable`1[MonoMod.Utils.Interop.Windows+HANDLE]
    System.IFormattable
  Fields:
    Void* Value : Public, InitOnly
  Properties:
    HANDLE INVALID_VALUE 'get ' : 
    HANDLE NULL 'get ' : 
  Methods:
    get_INVALID_VALUE(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_NULL(): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Equality(HANDLE, HANDLE): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Inequality(HANDLE, HANDLE): PrivateScope, Public, Static, HideBySig, SpecialName
    op_LessThan(HANDLE, HANDLE): PrivateScope, Public, Static, HideBySig, SpecialName
    op_LessThanOrEqual(HANDLE, HANDLE): PrivateScope, Public, Static, HideBySig, SpecialName
    op_GreaterThan(HANDLE, HANDLE): PrivateScope, Public, Static, HideBySig, SpecialName
    op_GreaterThanOrEqual(HANDLE, HANDLE): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Explicit(Void*): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Implicit(HANDLE): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Explicit(Byte): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Explicit(HANDLE): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Explicit(Int16): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Explicit(HANDLE): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Explicit(Int32): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Explicit(HANDLE): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Explicit(Int64): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Explicit(HANDLE): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Explicit(IntPtr): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Implicit(HANDLE): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Explicit(SByte): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Explicit(HANDLE): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Explicit(UInt16): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Explicit(HANDLE): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Explicit(UInt32): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Explicit(HANDLE): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Explicit(UInt64): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Explicit(HANDLE): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Explicit(UIntPtr): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Implicit(HANDLE): PrivateScope, Public, Static, HideBySig, SpecialName
    CompareTo(Object): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CompareTo(HANDLE): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    Equals(HANDLE): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
    ToString(String, IFormatProvider): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Struct MonoMod.Utils.Interop.Windows+HMODULE: AutoLayout, AnsiClass, Class, NestedPublic, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Void*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IComparable
    System.IComparable`1[MonoMod.Utils.Interop.Windows+HMODULE]
    System.IEquatable`1[MonoMod.Utils.Interop.Windows+HMODULE]
    System.IFormattable
  Fields:
    Void* Value : Public, InitOnly
  Properties:
    HMODULE INVALID_VALUE 'get ' : 
    HMODULE NULL 'get ' : 
  Methods:
    get_INVALID_VALUE(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_NULL(): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Equality(HMODULE, HMODULE): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Inequality(HMODULE, HMODULE): PrivateScope, Public, Static, HideBySig, SpecialName
    op_LessThan(HMODULE, HMODULE): PrivateScope, Public, Static, HideBySig, SpecialName
    op_LessThanOrEqual(HMODULE, HMODULE): PrivateScope, Public, Static, HideBySig, SpecialName
    op_GreaterThan(HMODULE, HMODULE): PrivateScope, Public, Static, HideBySig, SpecialName
    op_GreaterThanOrEqual(HMODULE, HMODULE): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Explicit(Void*): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Implicit(HMODULE): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Explicit(HANDLE): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Implicit(HMODULE): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Explicit(Byte): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Explicit(HMODULE): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Explicit(Int16): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Explicit(HMODULE): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Explicit(Int32): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Explicit(HMODULE): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Explicit(Int64): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Explicit(HMODULE): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Explicit(IntPtr): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Implicit(HMODULE): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Explicit(SByte): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Explicit(HMODULE): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Explicit(UInt16): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Explicit(HMODULE): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Explicit(UInt32): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Explicit(HMODULE): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Explicit(UInt64): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Explicit(HMODULE): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Explicit(UIntPtr): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Implicit(HMODULE): PrivateScope, Public, Static, HideBySig, SpecialName
    CompareTo(Object): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CompareTo(HMODULE): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    Equals(HMODULE): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
    ToString(String, IFormatProvider): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class MonoMod.Utils.Cil.CecilILGenerator: AutoLayout, AnsiClass, Class, Sealed
  :MonoMod.Utils.Cil.ILGeneratorShim
    Void .ctor(Mono.Cecil.Cil.ILProcessor): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Mono.Cecil.Cil.ILProcessor IL 'get ' : 
    Int32 ILOffset 'get ' : 
  Methods:
    get_IL(): PrivateScope, Public, HideBySig, SpecialName
    get_ILOffset(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    DefineLabel(): PrivateScope, Public, Virtual, HideBySig
    MarkLabel(Label): PrivateScope, Public, Virtual, HideBySig
    DeclareLocal(Type): PrivateScope, Public, Virtual, HideBySig
    DeclareLocal(Type, Boolean): PrivateScope, Public, Virtual, HideBySig
    Emit(OpCode): PrivateScope, Public, Virtual, HideBySig
    Emit(OpCode, Byte): PrivateScope, Public, Virtual, HideBySig
    Emit(OpCode, SByte): PrivateScope, Public, Virtual, HideBySig
    Emit(OpCode, Int16): PrivateScope, Public, Virtual, HideBySig
    Emit(OpCode, Int32): PrivateScope, Public, Virtual, HideBySig
    Emit(OpCode, Int64): PrivateScope, Public, Virtual, HideBySig
    Emit(OpCode, Single): PrivateScope, Public, Virtual, HideBySig
    Emit(OpCode, Double): PrivateScope, Public, Virtual, HideBySig
    Emit(OpCode, String): PrivateScope, Public, Virtual, HideBySig
    Emit(OpCode, Type): PrivateScope, Public, Virtual, HideBySig
    Emit(OpCode, FieldInfo): PrivateScope, Public, Virtual, HideBySig
    Emit(OpCode, ConstructorInfo): PrivateScope, Public, Virtual, HideBySig
    Emit(OpCode, MethodInfo): PrivateScope, Public, Virtual, HideBySig
    Emit(OpCode, Label): PrivateScope, Public, Virtual, HideBySig
    Emit(OpCode, Label[]): PrivateScope, Public, Virtual, HideBySig
    Emit(OpCode, LocalBuilder): PrivateScope, Public, Virtual, HideBySig
    Emit(OpCode, SignatureHelper): PrivateScope, Public, Virtual, HideBySig
    Emit(OpCode, ICallSiteGenerator): PrivateScope, Public, HideBySig
    EmitCall(OpCode, MethodInfo, Type[]): PrivateScope, Public, Virtual, HideBySig
    EmitCalli(OpCode, CallingConventions, Type, Type[], Type[]): PrivateScope, Public, Virtual, HideBySig
    EmitCalli(OpCode, CallingConvention, Type, Type[]): PrivateScope, Public, Virtual, HideBySig
    EmitWriteLine(FieldInfo): PrivateScope, Public, Virtual, HideBySig
    EmitWriteLine(LocalBuilder): PrivateScope, Public, Virtual, HideBySig
    EmitWriteLine(String): PrivateScope, Public, Virtual, HideBySig
    ThrowException(Type): PrivateScope, Public, Virtual, HideBySig
    BeginExceptionBlock(): PrivateScope, Public, Virtual, HideBySig
    BeginCatchBlock(Type): PrivateScope, Public, Virtual, HideBySig
    BeginExceptFilterBlock(): PrivateScope, Public, Virtual, HideBySig
    BeginFaultBlock(): PrivateScope, Public, Virtual, HideBySig
    BeginFinallyBlock(): PrivateScope, Public, Virtual, HideBySig
    EndExceptionBlock(): PrivateScope, Public, Virtual, HideBySig
    BeginScope(): PrivateScope, Public, Virtual, HideBySig
    EndScope(): PrivateScope, Public, Virtual, HideBySig
    UsingNamespace(String): PrivateScope, Public, Virtual, HideBySig
Class MonoMod.Utils.Cil.ILGeneratorShim: AutoLayout, AnsiClass, Class, Abstract, BeforeFieldInit
  Properties:
    Int32 ILOffset 'get ' : 
    System.Type GenericProxyType 'get ' : 
  Methods:
    get_ILOffset(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    BeginCatchBlock(Type): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    BeginExceptFilterBlock(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    BeginExceptionBlock(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    BeginFaultBlock(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    BeginFinallyBlock(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    BeginScope(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    DeclareLocal(Type): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    DeclareLocal(Type, Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    DefineLabel(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Emit(OpCode): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Emit(OpCode, Byte): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Emit(OpCode, Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Emit(OpCode, Int16): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Emit(OpCode, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Emit(OpCode, Int64): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Emit(OpCode, ConstructorInfo): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Emit(OpCode, Label): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Emit(OpCode, Label[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Emit(OpCode, LocalBuilder): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Emit(OpCode, SignatureHelper): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Emit(OpCode, FieldInfo): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Emit(OpCode, MethodInfo): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Emit(OpCode, SByte): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Emit(OpCode, Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Emit(OpCode, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Emit(OpCode, Type): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    EmitCall(OpCode, MethodInfo, Type[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    EmitCalli(OpCode, CallingConventions, Type, Type[], Type[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    EmitCalli(OpCode, CallingConvention, Type, Type[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    EmitWriteLine(LocalBuilder): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    EmitWriteLine(FieldInfo): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    EmitWriteLine(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    EndExceptionBlock(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    EndScope(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    MarkLabel(Label): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    ThrowException(Type): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    UsingNamespace(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetProxy(): PrivateScope, Public, HideBySig
    GetProxyType(): PrivateScope, Public, Static, HideBySig
    GetProxyType(Type): PrivateScope, Public, Static, HideBySig
    get_GenericProxyType(): PrivateScope, Public, Static, HideBySig, SpecialName
Class MonoMod.Utils.Cil.ILGeneratorShim+ILGeneratorBuilder: AutoLayout, AnsiClass, Class, NestedAssembly, Abstract, Sealed, BeforeFieldInit
  Fields:
    System.String Namespace = MonoMod.Utils.Cil : Public, Static, Literal, HasDefault
    System.String Name = ILGeneratorProxy : Public, Static, Literal, HasDefault
    System.String FullName = MonoMod.Utils.Cil.ILGeneratorProxy : Public, Static, Literal, HasDefault
    System.String TargetName = Target : Public, Static, Literal, HasDefault
  Methods:
    GenerateProxy(): PrivateScope, Public, Static, HideBySig
Class MonoMod.Utils.Cil.ILGeneratorShimExt: AutoLayout, AnsiClass, Class, Abstract, Sealed
  Methods:
    GetProxiedShim(ILGenerator): PrivateScope, Public, Static, HideBySig
    GetProxiedShim(ILGenerator): PrivateScope, Public, Static, HideBySig
    DynEmit(ILGenerator, OpCode, Object): PrivateScope, Public, Static, HideBySig
    DynEmit(ILGenerator, Object[]): PrivateScope, Public, Static, HideBySig
Class System.Runtime.CompilerServices.IsExternalInit: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
Class System.Runtime.CompilerServices.IgnoresAccessChecksToAttribute: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :System.Attribute
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String AssemblyName 'get ' : 
  Methods:
    get_AssemblyName(): PrivateScope, Public, HideBySig, SpecialName
Class System.Diagnostics.CodeAnalysis.AllowNullAttribute: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :System.Attribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class System.Diagnostics.CodeAnalysis.DisallowNullAttribute: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :System.Attribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class System.Diagnostics.CodeAnalysis.DoesNotReturnAttribute: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :System.Attribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class System.Diagnostics.CodeAnalysis.DoesNotReturnIfAttribute: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :System.Attribute
    Void .ctor(Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean ParameterValue 'get ' : 
  Methods:
    get_ParameterValue(): PrivateScope, Public, HideBySig, SpecialName
Class System.Diagnostics.CodeAnalysis.MaybeNullAttribute: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :System.Attribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class System.Diagnostics.CodeAnalysis.MaybeNullWhenAttribute: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :System.Attribute
    Void .ctor(Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean ReturnValue 'get ' : 
  Methods:
    get_ReturnValue(): PrivateScope, Public, HideBySig, SpecialName
Class System.Diagnostics.CodeAnalysis.MemberNotNullAttribute: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :System.Attribute
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String[] Members 'get ' : 
  Methods:
    get_Members(): PrivateScope, Public, HideBySig, SpecialName
Class System.Diagnostics.CodeAnalysis.MemberNotNullWhenAttribute: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :System.Attribute
    Void .ctor(Boolean, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Boolean, System.String[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean ReturnValue 'get ' : 
    System.String[] Members 'get ' : 
  Methods:
    get_ReturnValue(): PrivateScope, Public, HideBySig, SpecialName
    get_Members(): PrivateScope, Public, HideBySig, SpecialName
Class System.Diagnostics.CodeAnalysis.NotNullAttribute: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :System.Attribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class System.Diagnostics.CodeAnalysis.NotNullIfNotNullAttribute: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :System.Attribute
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String ParameterName 'get ' : 
  Methods:
    get_ParameterName(): PrivateScope, Public, HideBySig, SpecialName
Class System.Diagnostics.CodeAnalysis.NotNullWhenAttribute: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :System.Attribute
    Void .ctor(Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean ReturnValue 'get ' : 
  Methods:
    get_ReturnValue(): PrivateScope, Public, HideBySig, SpecialName
Class FxResources.System.ValueTuple.SR: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
Class System.SR: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Properties:
    System.Type ResourceType 'get ' : 
    System.String ArgumentException_ValueTupleIncorrectType 'get ' : 
    System.String ArgumentException_ValueTupleLastArgumentNotAValueTuple 'get ' : 
  Methods:
    GetResourceString(String, String): PrivateScope, Assembly, Static, HideBySig
    Format(String, Object[]): PrivateScope, Assembly, Static, HideBySig
    Format(String, Object): PrivateScope, Assembly, Static, HideBySig
    Format(String, Object, Object): PrivateScope, Assembly, Static, HideBySig
    Format(String, Object, Object, Object): PrivateScope, Assembly, Static, HideBySig
    get_ResourceType(): PrivateScope, Assembly, Static, HideBySig, SpecialName
    get_ArgumentException_ValueTupleIncorrectType(): PrivateScope, Assembly, Static, HideBySig, SpecialName
    get_ArgumentException_ValueTupleLastArgumentNotAValueTuple(): PrivateScope, Assembly, Static, HideBySig, SpecialName
